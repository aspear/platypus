
{
  "swagger": "2.0",
  "info": {
    "version": "2",
    "title": "Swagger API",
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "docs.apteligent.com",
  "basePath": "/api/swagger",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/base": {
      "get": {
        "description": "Get available actions for the v2 API",
        "summary": "getActions",
        "tags": [
          "BaseInfo"
        ],
        "operationId": "getActions",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/allyourbase": {
      "get": {
        "description": "Get available API versions",
        "summary": "allYourBase",
        "tags": [
          "allYourBase"
        ],
        "operationId": "allYourBase",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/app": {
      "post": {
        "description": "Create a new app",
        "summary": "createApp",
        "tags": [
          "app"
        ],
        "operationId": "createApp",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AppCreationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AppCreationResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/app/crash/counts/{appId}": {
      "get": {
        "description": "Get crash counts for an app",
        "summary": "getAppCrashCounts",
        "tags": [
          "app"
        ],
        "operationId": "getAppCrashCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "default": "2.0",
            "type": "string",
            "description": "specific version of the app (Acceptable values are: \"2.0\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppCrashCountResponse"
              }
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/app/crash/summaries/{appId}": {
      "get": {
        "description": "Get crash summaries for an app",
        "summary": "getAppCrashSummaries",
        "tags": [
          "app"
        ],
        "operationId": "getAppCrashSummaries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "specific version of the app"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "known",
              "resolved",
              "unresolved"
            ],
            "type": "string",
            "description": "Crash status"
          },
          {
            "name": "firstOccurredStart",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "beginning date range of first occurrence of the crash (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "firstOccurredEnd",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ending date range of first occurrence of the crash (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "lastOccurredStart",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "beginning date range of last occurrence of the crash (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "lastOccurredEnd",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ending date range of last occurrence of the crash (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "enum": [
              "name",
              "reason",
              "sessionCount",
              "uniqueSessionCount"
            ],
            "type": "string",
            "description": "Crash summary field to sort results by"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort results in ascending or descending order"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppCrashSummaryResponse"
              }
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/app/exception/counts/{appId}": {
      "get": {
        "description": "Get exception counts for an app",
        "summary": "getAppExceptionCounts",
        "tags": [
          "app"
        ],
        "operationId": "getAppExceptionCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "default": "2.0",
            "type": "string",
            "description": "specific version of the app (Acceptable values are: \"2.0\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppExceptionCountResponse"
              }
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/app/exception/summaries/{appId}": {
      "get": {
        "description": "Get exception summaries for an app",
        "summary": "getAppExceptionSummaries",
        "tags": [
          "app"
        ],
        "operationId": "getAppExceptionSummaries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "specific version of the app"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "known",
              "resolved",
              "unresolved"
            ],
            "type": "string",
            "description": "Exception status"
          },
          {
            "name": "firstOccurredStart",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "beginning date range of first occurrence of the exception (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "firstOccurredEnd",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ending date range of first occurrence of the exception (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "lastOccurredStart",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "beginning date range of last occurrence of the exception (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "lastOccurredEnd",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ending date range of last occurrence of the exception (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "enum": [
              "name",
              "reason",
              "sessionCount",
              "uniqueSessionCount"
            ],
            "type": "string",
            "description": "Exception summary field to sort results by"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort results in ascending or descending order"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppExceptionSummaryResponse"
              }
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/apps": {
      "get": {
        "description": "Get properties about your apps",
        "summary": "getAppSummary",
        "tags": [
          "apps"
        ],
        "operationId": "getAppSummary",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attributes",
            "in": "query",
            "required": true,
            "enum": [
              "appName",
              "appType",
              "appVersions",
              "appBenchmarkCategory",
              "crashPercent",
              "dau",
              "latency",
              "latestAppStoreReleaseDate",
              "latestVersionString",
              "linkToAppStore",
              "iconURL",
              "mau",
              "rating",
              "role"
            ],
            "type": "string",
            "description": "The attributes about your apps that you would like to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AppSummaryResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "403": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/apps/crash/counts": {
      "get": {
        "description": "Get crash counts for one or more apps",
        "summary": "getAppsCrashCounts",
        "tags": [
          "apps"
        ],
        "operationId": "getAppsCrashCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CrashCountResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/apps/crash/summaries": {
      "get": {
        "description": "Get up to 100 crash summaries for one or more apps",
        "summary": "getAppsCrashSummaries",
        "tags": [
          "apps"
        ],
        "operationId": "getAppsCrashSummaries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "known",
              "resolved",
              "unresolved"
            ],
            "type": "string",
            "description": "Crash status"
          },
          {
            "name": "firstOccurredStart",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "beginning date range of first occurrence of the crash (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "firstOccurredEnd",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ending date range of first occurrence of the crash (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "lastOccurredStart",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "beginning date range of last occurrence of the crash (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "lastOccurredEnd",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ending date range of last occurrence of the crash (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "enum": [
              "name",
              "reason",
              "sessionCount",
              "uniqueSessionCount"
            ],
            "type": "string",
            "description": "Crash summary field to sort results by"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort results in ascending or descending order"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CrashSummaryResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/apps/exception/counts": {
      "get": {
        "description": "Get exception counts for one or more apps",
        "summary": "getAppsExceptionCounts",
        "tags": [
          "apps"
        ],
        "operationId": "getAppsExceptionCounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExceptionCountResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/apps/exception/summaries": {
      "get": {
        "description": "Get up to 100 exception summaries for one or more apps",
        "summary": "getAppsExceptionSummaries",
        "tags": [
          "apps"
        ],
        "operationId": "getAppsExceptionSummaries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "known",
              "resolved",
              "unresolved"
            ],
            "type": "string",
            "description": "Exception status"
          },
          {
            "name": "firstOccurredStart",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "beginning date range of first occurrence of the exception (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "firstOccurredEnd",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ending date range of first occurrence of the exception (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "lastOccurredStart",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "beginning date range of last occurrence of the exception (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "lastOccurredEnd",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ending date range of last occurrence of the exception (ISO 8601 datetime format: \"YYYY-MM-DDThh:mm:ssTZD\" where TZD is time zone designator \"Z\" or \"+hh:mm\" or \"-hh:mm\")"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "enum": [
              "name",
              "reason",
              "sessionCount",
              "uniqueSessionCount"
            ],
            "type": "string",
            "description": "Exception summary field to sort results by"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort results in ascending or descending order"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExceptionSummaryResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/crash/paginatedtable/{appId}": {
      "get": {
        "description": "Paginated crash summaries",
        "summary": "paginatedCrashTable",
        "tags": [
          "crash"
        ],
        "operationId": "paginatedCrashTable",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": true,
            "enum": [
              "lastOccurred",
              "firstOccurred"
            ],
            "type": "string",
            "description": "Sort results by either last occurred or first occurred"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "(Acceptable values are: \"descending\", \"ascending\")"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "default": "all",
            "type": "string",
            "description": "A valid app version string or 'all' for all versions"
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "description": "Period of time in days to query. The API will return the requested number of days plus the currently accruing day. If startDate and endDate are not provided, this parameter defaults to 1"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "ISO date string representing start date of query. FIXME was incorrect type"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "ISO date string representing end date of query. FIXME was incorrect type"
          },
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Retrieve a specific page by page number"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of results to return per page, up to a maximum of 100"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "known",
              "resolved",
              "unresolved"
            ],
            "type": "string",
            "description": "Crash status"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedTableResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth2 token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/crash/{appId}/{hash}": {
      "get": {
        "description": "Get crash details",
        "summary": "getCrash",
        "tags": [
          "crash"
        ],
        "operationId": "getCrash",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id"
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique hash assigned to a crash"
          },
          {
            "name": "diagnostics",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "when true, the response will include detailed diagnostics information for crash"
          },
          {
            "name": "get_other_crashes",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "when true, the response will include other crashes and legacy crash groups now part of this group"
          },
          {
            "name": "dailyOccurrences",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "when true, the response will include daily occurrences by version for each crash"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CrashResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Update crash status and fix version",
        "summary": "updateCrash",
        "tags": [
          "crash"
        ],
        "operationId": "updateCrash",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id"
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique hash assigned to a crash"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Updated crash status and fix version",
            "schema": {
              "$ref": "#/definitions/UpdateCrashBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CrashResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/crashRateBySegment/{platform}/{segment}": {
      "get": {
        "description": "Get crash rate by market segment",
        "summary": "getCrashBySegment",
        "tags": [
          "crash"
        ],
        "operationId": "getCrashBySegment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A mobile platform, e.g. android (all lower case)"
          },
          {
            "name": "segment",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "App store category, e.g. business. For a complete list, see Apteligent's benchmarks for <a href='https://data.apteligent.com/ios/benchmarks/global'>iOS</a> and <a href='https://data.apteligent.com/android/benchmarks/global'>Android</a>"
          },
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "App ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CrashRateBySegmentResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/crash/userData/{appId}/{hash}": {
      "get": {
        "description": "Get data about users affected by a crash",
        "summary": "getuserData",
        "tags": [
          "crash"
        ],
        "operationId": "getuserData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "crash unique hash value"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDataResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth2 token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/errorMonitoring/graph": {
      "get": {
        "description": "Retrieves time series data organized into buckets of one day",
        "summary": "graph",
        "tags": [
          "errorMonitoring"
        ],
        "operationId": "graph",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The app to retrieve data about"
          },
          {
            "name": "graph",
            "in": "query",
            "required": true,
            "enum": [
              "dau",
              "mau",
              "rating",
              "crashes",
              "crashPercent",
              "appLoads",
              "affectedUsers",
              "affectedUserPercent"
            ],
            "type": "string",
            "description": "which graph data to retrieve"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "How far back the API queries for data, in minutes. Must be a multiple of 1440 (one day) between 1440 and 43200. Optional if 'start' and 'end' specified"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ISO Date, start of the date range in the result"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ISO Date, end of the date range in the result"
          },
          {
            "name": "deviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only show data for the specified device e.g. iPhone5,1"
          },
          {
            "name": "osFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only show data for exact operating system version, e.g. iOS 5"
          },
          {
            "name": "carrierFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only show data for the specified mobile operator e.g. AT&T"
          },
          {
            "name": "appVersionFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only show data for the specified app version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorMonitorGraphResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Required parameter was missing",
            "schema": {}
          },
          "403": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/errorMonitoring/pie": {
      "get": {
        "description": "Retrieves absolute populations for certain slices of data",
        "summary": "pie",
        "tags": [
          "errorMonitoring"
        ],
        "operationId": "pie",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The app to retrieve data about"
          },
          {
            "name": "graph",
            "in": "query",
            "required": true,
            "enum": [
              "dau",
              "mau",
              "rating",
              "crashes",
              "crashPercent",
              "appLoads",
              "affectedUsers",
              "affectedUserPercent"
            ],
            "type": "string",
            "description": "which graph data to retrieve"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": true,
            "enum": [
              "appVersion",
              "os",
              "carrier",
              "device",
              "appId"
            ],
            "type": "string",
            "description": "A filter used to group the results"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "How far back the API queries for data, in minutes. Must be a multiple of 1440 (one day) between 1440 and 43200. Optional if 'start' and 'end' specified"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ISO Date, start of the date range in the result"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ISO Date, end of the date range in the result"
          },
          {
            "name": "deviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only show data for the specified device e.g. iPhone5,1"
          },
          {
            "name": "osFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only show data for exact operating system version, e.g. iOS 5"
          },
          {
            "name": "carrierFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only show data for the specified mobile operator e.g. AT&T"
          },
          {
            "name": "appVersionFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only show data for the specified app version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {}
          },
          "400": {
            "description": "Required parameter was missing",
            "schema": {}
          },
          "403": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/errorMonitoring/sparklines": {
      "get": {
        "description": "Retrieves several time series, each based on the value of a filter",
        "summary": "sparkline",
        "tags": [
          "errorMonitoring"
        ],
        "operationId": "sparkline",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The app to retrieve data about"
          },
          {
            "name": "graph",
            "in": "query",
            "required": true,
            "enum": [
              "dau",
              "mau",
              "rating",
              "crashes",
              "crashPercent",
              "appLoads",
              "affectedUsers",
              "affectedUserPercent"
            ],
            "type": "string",
            "description": "which graph data to retrieve"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": true,
            "enum": [
              "appVersion",
              "os",
              "carrier",
              "device",
              "appId"
            ],
            "type": "string",
            "description": "A filter used to group the results"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "How far back the API queries for data, in minutes. Must be a multiple of 1440 (one day) between 1440 and 43200. Optional if 'start' and 'end' specified"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ISO Date, start of the date range in the result"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ISO Date, end of the date range in the result"
          },
          {
            "name": "deviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only show data for the specified device e.g. iPhone5,1"
          },
          {
            "name": "osFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only show data for exact operating system version, e.g. iOS 5"
          },
          {
            "name": "carrierFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only show data for the specified mobile operator e.g. AT&T"
          },
          {
            "name": "appVersionFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only show data for the specified app version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SparklineResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Required parameter was missing",
            "schema": {}
          },
          "403": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/exception/paginatedtable/{appId}": {
      "get": {
        "description": "Paginated exception summaries",
        "summary": "paginatedExceptionTable",
        "tags": [
          "exception"
        ],
        "operationId": "paginatedExceptionTable",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "default": "all",
            "type": "string",
            "description": "A valid app version string or 'all' for all versions"
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "description": "Period of time in days to query. The API will return the requested number of days plus the currently accruing day. If startDate and endDate are not provided, this parameter defaults to 1"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "ISO date string representing start date of query. FIXME was incorrect type"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "ISO date string representing end date of query. FIXME was incorrect type"
          },
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Retrieve a specific page by page number"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of results to return per page, up to a maximum of 100"
          },
          {
            "name": "dailyOccurrences",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "If dailyOccurrences is 'true', the response will include an array in which the first item is the latest date in the series (in YYYYMMDD format), the second item is a list of point values associated with each date in chronological order"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "known",
              "resolved",
              "unresolved"
            ],
            "type": "string",
            "description": "Exception status"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedTableResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/exception/{appId}/{hash}": {
      "get": {
        "description": "Get exception details",
        "summary": "getException",
        "tags": [
          "exception"
        ],
        "operationId": "getException",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id"
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique hash assigned to the exception"
          },
          {
            "name": "diagnostics",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "include detailed diagnostics information for exception"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/exception/userData/{appId}/{hash}": {
      "get": {
        "description": "Get data about users affected by a handled exception",
        "summary": "getUserData",
        "tags": [
          "exception"
        ],
        "operationId": "getUserData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id"
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique hash assigned to the exception"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDataResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/liveStats/{appId}/{isoDuration}": {
      "get": {
        "description": "Get live stats",
        "summary": "getLiveStats",
        "tags": [
          "liveStats"
        ],
        "operationId": "getLiveStats",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id"
          },
          {
            "name": "isoDuration",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Valid and supported ISO 8601 duration.  Allowed values: [PT10S, PT5M, P1D]"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "App version string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LiveStatsResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/performanceManagement/endpoints": {
      "get": {
        "description": "Endpoint details for an app",
        "summary": "endpoints",
        "tags": [
          "performanceManagement"
        ],
        "operationId": "endpoints",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "enum": [
              "latency",
              "data",
              "dataIn",
              "dataOut",
              "volume",
              "errors"
            ],
            "type": "string",
            "description": "metric to be returned, default 'latency'"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "enum": [
              "15",
              "60",
              "240",
              "480",
              "720",
              "1440",
              "2880"
            ],
            "type": "string",
            "description": "duration in minutes"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "number of endpoints to return, default 10"
          },
          {
            "name": "appVersionFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified app version. Version strings are treated as opaque specifiers by Crittercism; supplying a string here will search the list of application versions seen by the Crittercism platform, and return a response if any matches are found."
          },
          {
            "name": "countryFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified country, e.g. MX for Mexico"
          },
          {
            "name": "osFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified OS"
          },
          {
            "name": "deviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified device"
          },
          {
            "name": "carrierFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified carrier"
          },
          {
            "name": "serviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified cloud service, e.g. Facebook"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EndpointResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Expected JSON input was malformed or unparseable",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth2 token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/performanceManagement/errordetail": {
      "get": {
        "description": "Error details",
        "summary": "error details",
        "tags": [
          "performanceManagement"
        ],
        "operationId": "error details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "enum": [
              "latency",
              "data",
              "dataIn",
              "dataOut",
              "volume",
              "errors"
            ],
            "type": "string",
            "description": "metric to be returned, default 'latency'"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "enum": [
              "15",
              "60",
              "240",
              "480",
              "720",
              "1440",
              "2880"
            ],
            "type": "string",
            "description": "duration in minutes"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "number of endpoints to return, default 10"
          },
          {
            "name": "appVersionFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified app version. Version strings are treated as opaque specifiers by Crittercism; supplying a string here will search the list of application versions seen by the Crittercism platform, and return a response if any matches are found."
          },
          {
            "name": "countryFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified country, e.g. MX for Mexico"
          },
          {
            "name": "osFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified OS"
          },
          {
            "name": "deviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified device"
          },
          {
            "name": "carrierFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified carrier"
          },
          {
            "name": "serviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified cloud service, e.g. Facebook"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorDetailResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Expected JSON input was malformed or unparseable",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth2 token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/performanceManagement/geo": {
      "get": {
        "description": "Geographical data",
        "summary": "geo",
        "tags": [
          "performanceManagement"
        ],
        "operationId": "geo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "graph",
            "in": "query",
            "required": true,
            "enum": [
              "latency",
              "data",
              "dataIn",
              "dataOut",
              "volume",
              "errors"
            ],
            "type": "string",
            "description": "metric to be returned, default 'latency'"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "enum": [
              "15",
              "60",
              "240",
              "480",
              "720",
              "1440",
              "2880"
            ],
            "type": "string",
            "description": "duration in minutes"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "number of endpoints to return, default 10"
          },
          {
            "name": "appVersionFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified app version. Version strings are treated as opaque specifiers by Crittercism; supplying a string here will search the list of application versions seen by the Crittercism platform, and return a response if any matches are found."
          },
          {
            "name": "countryFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified country, e.g. MX for Mexico"
          },
          {
            "name": "stateFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified state, e.g. 'USA-3521' for California"
          },
          {
            "name": "serviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified cloud service, e.g. Facebook"
          },
          {
            "name": "domainFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified domain"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GeoResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Expected JSON input was malformed or unparseable",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth2 token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/performanceManagement/graph": {
      "get": {
        "description": "Data for one graph",
        "summary": "graph",
        "tags": [
          "performanceManagement"
        ],
        "operationId": "graph1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "graph",
            "in": "query",
            "required": true,
            "enum": [
              "latency",
              "dataIn",
              "dataOut",
              "volume",
              "errors"
            ],
            "type": "string",
            "description": "metric to be returned, default 'latency'"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "enum": [
              "15",
              "60",
              "240",
              "480",
              "720",
              "1440",
              "2880"
            ],
            "type": "string",
            "description": "duration in minutes"
          },
          {
            "name": "appVersionFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified app version. Version strings are treated as opaque specifiers by Crittercism; supplying a string here will search the list of application versions seen by the Crittercism platform, and return a response if any matches are found."
          },
          {
            "name": "serviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified cloud service, e.g. Facebook"
          },
          {
            "name": "domainFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified domain"
          },
          {
            "name": "endpointFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified endpoint"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GraphResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Expected JSON input was malformed or unparseable",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth2 token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/performanceManagement/graphdetail": {
      "get": {
        "description": "Graph with subseries",
        "summary": "graph details",
        "tags": [
          "performanceManagement"
        ],
        "operationId": "graph details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "graph",
            "in": "query",
            "required": true,
            "enum": [
              "latency",
              "dataIn",
              "dataOut",
              "volume",
              "errors"
            ],
            "type": "string",
            "description": "metric to be returned, default 'latency'"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "enum": [
              "15",
              "60",
              "240",
              "480",
              "720",
              "1440",
              "2880"
            ],
            "type": "string",
            "description": "duration in minutes"
          },
          {
            "name": "appVersionFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified app version. Version strings are treated as opaque specifiers by Crittercism; supplying a string here will search the list of application versions seen by the Crittercism platform, and return a response if any matches are found."
          },
          {
            "name": "serviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified service"
          },
          {
            "name": "domainFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified domain"
          },
          {
            "name": "endpointFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified endpoint"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GraphDetailResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Expected JSON input was malformed or unparseable",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth2 token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/performanceManagement/locations": {
      "get": {
        "description": "Data grouped by location",
        "summary": "locations",
        "tags": [
          "performanceManagement"
        ],
        "operationId": "locations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "enum": [
              "latency",
              "dataIn",
              "dataOut",
              "volume",
              "errors"
            ],
            "type": "string",
            "description": "metric to be returned, default 'latency'"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "enum": [
              "15",
              "60",
              "240",
              "480",
              "720",
              "1440",
              "2880"
            ],
            "type": "string",
            "description": "duration in minutes"
          },
          {
            "name": "appVersionFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified app version. Version strings are treated as opaque specifiers by Crittercism; supplying a string here will search the list of application versions seen by the Crittercism platform, and return a response if any matches are found."
          },
          {
            "name": "countryFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified country, e.g. MX for Mexico, e.g. MX for Mexico"
          },
          {
            "name": "stateFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified state, e.g. 'USA-3521' for California"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocationsResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Expected JSON input was malformed or unparseable",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth2 token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/performanceManagement/pie": {
      "get": {
        "description": "Retrieves absolute populations for certain slices of data",
        "summary": "pie",
        "tags": [
          "performanceManagement"
        ],
        "operationId": "pie1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "graph",
            "in": "query",
            "required": true,
            "enum": [
              "latency",
              "dataIn",
              "dataOut",
              "volume",
              "errors"
            ],
            "type": "string",
            "description": "metric to be returned, default 'latency'"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "enum": [
              "15",
              "60",
              "240",
              "480",
              "720",
              "1440",
              "2880"
            ],
            "type": "string",
            "description": "duration in minutes"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "enum": [
              "appId",
              "appVersion",
              "os",
              "carrier",
              "device",
              "service"
            ],
            "type": "string",
            "description": "used to group the data"
          },
          {
            "name": "appVersionFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified app version. Version strings are treated as opaque specifiers by Crittercism; supplying a string here will search the list of application versions seen by the Crittercism platform, and return a response if any matches are found."
          },
          {
            "name": "osFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified OS, e.g. iOS 5"
          },
          {
            "name": "deviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified device"
          },
          {
            "name": "carrierFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified carrier"
          },
          {
            "name": "serviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified cloud service, e.g. Facebook"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PieResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Required parameter was missing",
            "schema": {}
          },
          "403": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/performanceManagement/services": {
      "get": {
        "description": "List services used by an app",
        "summary": "services",
        "tags": [
          "performanceManagement"
        ],
        "operationId": "services",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "enum": [
              "latency",
              "dataIn",
              "dataOut",
              "volume",
              "errors"
            ],
            "type": "string",
            "description": "metric to be returned, default 'latency'"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "enum": [
              "15",
              "60",
              "240",
              "480",
              "720",
              "1440",
              "2880"
            ],
            "type": "string",
            "description": "duration in minutes"
          },
          {
            "name": "appVersionFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified app version. Version strings are treated as opaque specifiers by Crittercism; supplying a string here will search the list of application versions seen by the Crittercism platform, and return a response if any matches are found."
          },
          {
            "name": "serviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified service"
          },
          {
            "name": "domainFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified domain"
          },
          {
            "name": "endpointFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified endpoint"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServicesResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Expected JSON input was malformed or unparseable",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth2 token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/performanceManagement/trends": {
      "get": {
        "description": "Crash and app load time series",
        "summary": "trends",
        "tags": [
          "performanceManagement"
        ],
        "operationId": "trends",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\", \"fcb024ae2c2b4b95883461637ca2241f00555300\")"
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "enum": [
              "latency",
              "volume",
              "errors"
            ],
            "type": "string",
            "description": "metric to be returned, default 'latency'"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "enum": [
              "15",
              "60",
              "240",
              "480",
              "720",
              "1440",
              "2880"
            ],
            "type": "string",
            "description": "duration in minutes"
          },
          {
            "name": "appVersionFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified app version. Version strings are treated as opaque specifiers by Crittercism; supplying a string here will search the list of application versions seen by the Crittercism platform, and return a response if any matches are found."
          },
          {
            "name": "osFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified OS"
          },
          {
            "name": "deviceFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified device"
          },
          {
            "name": "carrierFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "only show data for the specified carrier"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TrendsResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Expected JSON input was malformed or unparseable",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth2 token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/trends/{appId}": {
      "get": {
        "description": "Get app load counts",
        "summary": "getTrends",
        "tags": [
          "trends"
        ],
        "operationId": "getTrends",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id"
          },
          {
            "name": "maxKeys",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of keys to return. If no value is provided, or if no starDateInclusive is provided, the default is 5"
          },
          {
            "name": "startDateInclusive",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start date for query.  ISO 8601 timestamp: YYYY-MM-DDTHH:MM:SSZ"
          },
          {
            "name": "endDateInclusive",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End date for query.  ISO 8601 timestamp: YYYY-MM-DDTHH:MM:SSZ"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TrendsResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "403": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/trends/dau/{appId}": {
      "get": {
        "description": "Get unique daily users for an app",
        "summary": "getDauTrends",
        "tags": [
          "trends"
        ],
        "operationId": "getDauTrends",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id"
          },
          {
            "name": "startDateInclusive",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start date for query.  ISO 8601 timestamp: YYYY-MM-DDTHH:MM:SSZ"
          },
          {
            "name": "endDateInclusive",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End date for query.  ISO 8601 timestamp: YYYY-MM-DDTHH:MM:SSZ"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TrendsDauResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "403": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/trends/mau/{appId}": {
      "get": {
        "description": "Get unique monthly users for an app",
        "summary": "getDauTrends1",
        "tags": [
          "trends"
        ],
        "operationId": "getDauTrends1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id"
          },
          {
            "name": "startDateInclusive",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start date for query.  ISO 8601 timestamp: YYYY-MM-DDTHH:MM:SSZ"
          },
          {
            "name": "endDateInclusive",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End date for query.  ISO 8601 timestamp: YYYY-MM-DDTHH:MM:SSZ"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TrendsMauResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "403": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{appId}": {
      "get": {
        "description": "Endpoint discovery endpoint",
        "summary": "transactionsDiscovery",
        "tags": [
          "transactions"
        ],
        "operationId": "transactionsDiscovery",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransactionsDiscoveryResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{appId}/summary/{period}": {
      "get": {
        "description": "Returns a summary of all transactions for a given period",
        "summary": "transactionsSummary",
        "tags": [
          "transactions"
        ],
        "operationId": "transactionsSummary",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "enum": [
              "PT4H",
              "P1D",
              "P7D"
            ],
            "type": "string",
            "description": "time period (if not provided, defaults to P7D)"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "default": "1.0.1",
            "type": "string",
            "description": "specific version of the app (Acceptable values are: \"1.0.1\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransactionsSummaryResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{appId}/details/change/{period}": {
      "get": {
        "description": "Display transactions alongside prior period data",
        "summary": "transactionsChange",
        "tags": [
          "transactions"
        ],
        "operationId": "transactionsChange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "enum": [
              "PT4H",
              "P1D",
              "P7D"
            ],
            "type": "string",
            "description": "time period (if not provided, defaults to P30D)"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "default": "1.0.1",
            "type": "string",
            "description": "specific version of the app (Acceptable values are: \"1.0.1\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransactionsChangeResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{appId}/ranked/{category}/{period}": {
      "get": {
        "description": "Data for a transaction aggregated by time period",
        "summary": "transactionsRanked",
        "tags": [
          "transactions"
        ],
        "operationId": "transactionsRanked",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          },
          {
            "name": "category",
            "in": "path",
            "required": true,
            "enum": [
              "failed"
            ],
            "type": "string",
            "description": "transaction category"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "enum": [
              "PT4H",
              "P1D",
              "P7D"
            ],
            "type": "string",
            "description": "time period (if not provided, defaults to P7D)"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "default": "1.0.1",
            "type": "string",
            "description": "specific version of the app (Acceptable values are: \"1.0.1\")"
          },
          {
            "name": "transactionsCount",
            "in": "query",
            "required": false,
            "default": 5,
            "type": "integer",
            "format": "int32",
            "description": "number of transactions group to return, default 5"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransactionsRankedResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{appId}/group/{groupName}/{period}": {
      "get": {
        "description": "Returns statistics about a given transaction group",
        "summary": "transactionsGroup",
        "tags": [
          "transactions"
        ],
        "operationId": "transactionsGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "enum": [
              "Cart",
              "Login",
              "Coupon"
            ],
            "type": "string",
            "description": "groupName"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "enum": [
              "PT4H",
              "P1D",
              "P7D"
            ],
            "type": "string",
            "description": "time period  (if not provided, defaults to P7D)"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "default": "1.0.1",
            "type": "string",
            "description": "specific version of the app (Acceptable values are: \"1.0.1\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransactionsGroupResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{appId}/group/{groupName}/trends/{period}": {
      "get": {
        "description": "Transaction trends for a single transaction group",
        "summary": "transactionsGroupTrends",
        "tags": [
          "transactions"
        ],
        "operationId": "transactionsGroupTrends",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "enum": [
              "Cart",
              "Login",
              "Coupon"
            ],
            "type": "string",
            "description": "groupName"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "enum": [
              "P1D",
              "P7D"
            ],
            "type": "string",
            "description": "time period (if not provided, defaults to P7D)"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "default": "1.0.1",
            "type": "string",
            "description": "specific version of the app (Acceptable values are: \"1.0.1\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransactionTrendsResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{appId}/group/{groupName}/crashes/{period}": {
      "get": {
        "description": "Root Cause Analysis",
        "summary": "transactionsGroupCrashes",
        "tags": [
          "transactions"
        ],
        "operationId": "transactionsGroupCrashes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "enum": [
              "PT4H",
              "P1D",
              "P7D"
            ],
            "type": "string",
            "description": "time period (if not provided, defaults to P7D)"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "enum": [
              "Cart",
              "Login",
              "Coupon"
            ],
            "type": "string",
            "description": "groupName"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "default": "1.0.1",
            "type": "string",
            "description": "specific version of the app (Acceptable values are: \"1.0.1\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransactionsCrashesResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{appId}/group/{groupName}/details": {
      "get": {
        "description": "Transaction details for a single transaction group",
        "summary": "transactionGroupDetails",
        "tags": [
          "transactions"
        ],
        "operationId": "transactionGroupDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "SO8601 formatted date parameter, specifies start time of the range"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "formatted date parameter, specifies end time of the range"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "enum": [
              "Cart",
              "Login",
              "Coupon"
            ],
            "type": "string",
            "description": "groupName"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransactionGroupDetailsResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{appId}/summary/trends": {
      "get": {
        "description": "Daily transactions data grouped by app version",
        "summary": "transactionsSummaryTrends",
        "tags": [
          "transactions"
        ],
        "operationId": "transactionsSummaryTrends",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          },
          {
            "name": "startDateInclusive",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "SO8601 formatted date parameter, specifies start time of the range"
          },
          {
            "name": "endDateInclusive",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "formatted date parameter, specifies end time of the range"
          },
          {
            "name": "maxVersions",
            "in": "query",
            "required": false,
            "default": 5,
            "type": "integer",
            "format": "int32",
            "description": "maximum number of versions to retrieve, defaults 5"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{appId}/group/{groupName}/traces/{period}": {
      "get": {
        "description": "Transaction traces",
        "summary": "transactionsGroupTraces",
        "tags": [
          "transactions"
        ],
        "operationId": "transactionsGroupTraces",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "enum": [
              "Cart",
              "Login",
              "Coupon"
            ],
            "type": "string",
            "description": "groupName"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "enum": [
              "PT4H",
              "P1D",
              "P7D",
              "P30D"
            ],
            "type": "string",
            "description": "time period (if not provided, defaults to P30D)"
          },
          {
            "name": "appVersion",
            "in": "query",
            "required": false,
            "default": "1.0.1",
            "type": "string",
            "description": "specific version of the app (Acceptable values are: \"1.0.1\")"
          },
          {
            "name": "completionState",
            "in": "query",
            "required": false,
            "enum": [
              "failed",
              "timedOut",
              "crashed",
              "allFailed"
            ],
            "type": "string",
            "description": "filters by how the transaction ended. Transaction traces can only be filtered by failure states. 'allFailed' covers all failure states"
          },
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Request a specific page"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Set max size of pages"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Set sort order 'ascending' or 'descending'"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "enum": [
              "username",
              "valueAtRisk",
              "foregroundSeconds",
              "completionState",
              "breadcrumbCount",
              "traceTs"
            ],
            "type": "string",
            "description": "Parameter by which results will be ordered"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransactionsTrace"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/trace/{traceId}": {
      "get": {
        "description": "Get a trace by ID",
        "summary": "transactionsTrace",
        "tags": [
          "transactions"
        ],
        "operationId": "transactionsTrace",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "traceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A single trace ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {}
          },
          "400": {
            "description": "Request parameters were invalid/malformed",
            "schema": {}
          },
          "401": {
            "description": "Invalid oauth token",
            "schema": {}
          },
          "429": {
            "description": "API rate limit exceeded",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/v2/benchmarks/{platform}/{category}": {
      "get": {
        "description": "Performance benchmarks across a market segment",
        "summary": "getBenchmarks",
        "tags": [
          "benchmarks"
        ],
        "operationId": "getBenchmarks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "app Id (Acceptable values are: \"519d53101386202089000007\")"
          },
          {
            "name": "platform",
            "in": "path",
            "required": true,
            "enum": [
              "ios"
            ],
            "type": "string",
            "description": "The platform on which an app runs, e.g. android"
          },
          {
            "name": "category",
            "in": "path",
            "required": true,
            "enum": [
              "business"
            ],
            "type": "string",
            "description": "The business category of an app, e.g. games (to find your app's category, see the /apps endpoint)"
          },
          {
            "name": "graph_type",
            "in": "query",
            "required": true,
            "enum": [
              "apploadDistribution",
              "crashRateDistribution",
              "crashRateByOs",
              "topServiceAverages"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BenchmarkResponse"
            },
            "examples": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "Status": {
      "title": "status",
      "example": "known",
      "type": "string",
      "enum": [
        "known",
        "resolved",
        "unresolved"
      ]
    },
    "SortBy": {
      "title": "sortBy",
      "example": "name",
      "type": "string",
      "enum": [
        "name",
        "reason",
        "sessionCount",
        "uniqueSessionCount"
      ]
    },
    "SortOrder": {
      "title": "sortOrder",
      "example": "asc",
      "type": "string",
      "enum": [
        "asc",
        "desc"
      ]
    },
    "Attributes": {
      "title": "attributes",
      "example": "appName",
      "type": "string",
      "enum": [
        "appName",
        "appType",
        "appVersions",
        "appBenchmarkCategory",
        "crashPercent",
        "dau",
        "latency",
        "latestAppStoreReleaseDate",
        "latestVersionString",
        "linkToAppStore",
        "iconURL",
        "mau",
        "rating",
        "role"
      ]
    },
    "SortBy4": {
      "title": "sortBy4",
      "example": "lastOccurred",
      "type": "string",
      "enum": [
        "lastOccurred",
        "firstOccurred"
      ]
    },
    "Graph": {
      "title": "graph",
      "example": "dau",
      "type": "string",
      "enum": [
        "dau",
        "mau",
        "rating",
        "crashes",
        "crashPercent",
        "appLoads",
        "affectedUsers",
        "affectedUserPercent"
      ]
    },
    "GroupBy": {
      "title": "groupBy",
      "example": "appVersion",
      "type": "string",
      "enum": [
        "appVersion",
        "os",
        "carrier",
        "device",
        "appId"
      ]
    },
    "Sort": {
      "title": "sort",
      "example": "latency",
      "type": "string",
      "enum": [
        "latency",
        "data",
        "dataIn",
        "dataOut",
        "volume",
        "errors"
      ]
    },
    "Duration": {
      "title": "duration",
      "example": 15,
      "type": "integer",
      "format": "int32",
      "enum": [
        "15",
        "60",
        "240",
        "480",
        "720",
        "1440",
        "2880"
      ]
    },
    "Graph9": {
      "title": "graph9",
      "example": "latency",
      "type": "string",
      "enum": [
        "latency",
        "data",
        "dataIn",
        "dataOut",
        "volume",
        "errors"
      ]
    },
    "Graph10": {
      "title": "graph10",
      "example": "latency",
      "type": "string",
      "enum": [
        "latency",
        "dataIn",
        "dataOut",
        "volume",
        "errors"
      ]
    },
    "Graph11": {
      "title": "graph11",
      "example": "latency",
      "type": "string",
      "enum": [
        "latency",
        "dataIn",
        "dataOut",
        "volume",
        "errors"
      ]
    },
    "Sort12": {
      "title": "sort12",
      "example": "latency",
      "type": "string",
      "enum": [
        "latency",
        "dataIn",
        "dataOut",
        "volume",
        "errors"
      ]
    },
    "Graph13": {
      "title": "graph13",
      "example": "latency",
      "type": "string",
      "enum": [
        "latency",
        "dataIn",
        "dataOut",
        "volume",
        "errors"
      ]
    },
    "GroupBy14": {
      "title": "groupBy14",
      "example": "appId",
      "type": "string",
      "enum": [
        "appId",
        "appVersion",
        "os",
        "carrier",
        "device",
        "service"
      ]
    },
    "Sort15": {
      "title": "sort15",
      "example": "latency",
      "type": "string",
      "enum": [
        "latency",
        "dataIn",
        "dataOut",
        "volume",
        "errors"
      ]
    },
    "Sort16": {
      "title": "sort16",
      "example": "latency",
      "type": "string",
      "enum": [
        "latency",
        "volume",
        "errors"
      ]
    },
    "Period": {
      "title": "period",
      "example": "PT4H",
      "type": "string",
      "enum": [
        "PT4H",
        "P1D",
        "P7D"
      ]
    },
    "Category": {
      "title": "category",
      "example": "failed",
      "type": "string",
      "enum": [
        "failed"
      ]
    },
    "GroupName": {
      "title": "groupName",
      "example": "Cart",
      "type": "string",
      "enum": [
        "Cart",
        "Login",
        "Coupon"
      ]
    },
    "Period20": {
      "title": "period20",
      "example": "P1D",
      "type": "string",
      "enum": [
        "P1D",
        "P7D"
      ]
    },
    "CompletionState": {
      "title": "completionState",
      "example": "failed",
      "type": "string",
      "enum": [
        "failed",
        "timedOut",
        "crashed",
        "allFailed"
      ]
    },
    "SortBy22": {
      "title": "sortBy22",
      "example": "username",
      "type": "string",
      "enum": [
        "username",
        "valueAtRisk",
        "foregroundSeconds",
        "completionState",
        "breadcrumbCount",
        "traceTs"
      ]
    },
    "Period23": {
      "title": "period23",
      "example": "PT4H",
      "type": "string",
      "enum": [
        "PT4H",
        "P1D",
        "P7D",
        "P30D"
      ]
    },
    "Platform": {
      "title": "platform",
      "example": "ios",
      "type": "string",
      "enum": [
        "ios"
      ]
    },
    "Category25": {
      "title": "category25",
      "example": "business",
      "type": "string",
      "enum": [
        "business"
      ]
    },
    "GraphType": {
      "title": "graph_type",
      "example": "apploadDistribution",
      "type": "string",
      "enum": [
        "apploadDistribution",
        "crashRateDistribution",
        "crashRateByOs",
        "topServiceAverages"
      ]
    },
    "BaseResponse": {
      "title": "BaseResponse",
      "type": "object",
      "properties": {
        "meta": {
          "description": "A status object",
          "type": "object"
        },
        "links": {
          "description": "An array of links objects in which the key is the name of the link and the value is a URL",
          "type": "object"
        }
      },
      "required": [
        "meta",
        "links"
      ]
    },
    "AppCrashSummaryResponse": {
      "title": "AppCrashSummaryResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/AppCrashSummary"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "AppExceptionCountResponse": {
      "title": "AppExceptionCountResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/AppExceptionCount"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "AppExceptionSummaryResponse": {
      "title": "AppExceptionSummaryResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/AppExceptionSummary"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "Links": {
      "title": "Links",
      "type": "object",
      "properties": {
        "links": {
          "description": "An object in which keys are descriptions of links (e.g. 'self') and values are a string containing the link's URL.",
          "type": "object"
        }
      },
      "required": [
        "links"
      ]
    },
    "AppCrashSummary": {
      "title": "AppCrashSummary",
      "type": "object",
      "properties": {
        "status": {
          "description": "Crash status \"unresolved\" or \"resolved\"",
          "type": "string"
        },
        "displayReason": {
          "description": "Friendly reason for crash",
          "type": "string"
        },
        "hash": {
          "description": "Unique crash identifier",
          "type": "string"
        },
        "name": {
          "description": "Friendly name for crash",
          "type": "string"
        },
        "firstOccurred": {
          "description": "Date crash first occurred",
          "type": "string"
        },
        "lastOccurred": {
          "description": "Date crash last occurred",
          "type": "string"
        },
        "uniqueSessionCount": {
          "description": "Unique number of users experiencing crash",
          "type": "string"
        },
        "sessionCount": {
          "description": "Total number of user sessions experiencing crash",
          "type": "string"
        },
        "reason": {
          "description": "Reason for crash",
          "type": "string"
        },
        "isSymbolized": {
          "description": "Is the crash stack trace symbolized",
          "type": "string"
        }
      },
      "required": [
        "status",
        "displayReason",
        "hash",
        "name",
        "firstOccurred",
        "lastOccurred",
        "uniqueSessionCount",
        "sessionCount",
        "reason",
        "isSymbolized"
      ]
    },
    "AppCreationRequest": {
      "title": "AppCreationRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the app to be created",
          "type": "string"
        },
        "appType": {
          "description": "Type of app to be created. If not provided, defaults to 'ios'",
          "type": "string"
        },
        "accountUuid": {
          "description": "The UUID of an existing account",
          "type": "string"
        },
        "accountName": {
          "description": "The name of a new account",
          "type": "string"
        },
        "itunes": {
          "description": "ID of the app in the iTunes store",
          "type": "string"
        },
        "appSubtype": {
          "description": "Subtype of app, e.g. Phonegap or Xamarin",
          "type": "string"
        }
      }
    },
    "AppCreationResponseInternal": {
      "title": "AppCreationResponseInternal",
      "type": "object",
      "properties": {
        "appId": {
          "description": "ID of the new app",
          "type": "string"
        },
        "accountUuid": {
          "description": "UUID of the account associated with the new app",
          "type": "string"
        }
      }
    },
    "AppExceptionSummary": {
      "title": "AppExceptionSummary",
      "type": "object",
      "properties": {
        "status": {
          "description": "Exception status \"unresolved\" or \"resolved\"",
          "type": "string"
        },
        "displayReason": {
          "description": "Friendly reason for exception",
          "type": "string"
        },
        "hash": {
          "description": "Unique exception identifier",
          "type": "string"
        },
        "name": {
          "description": "Friendly name for exception",
          "type": "string"
        },
        "firstOccurred": {
          "description": "Date exception first occurred",
          "type": "string"
        },
        "lastOccurred": {
          "description": "Date exception last occurred",
          "type": "string"
        },
        "uniqueSessionCount": {
          "description": "Unique number of users experiencing exception",
          "type": "string"
        },
        "sessionCount": {
          "description": "Total number of user sessions experiencing exception",
          "type": "string"
        },
        "reason": {
          "description": "Reason for exception",
          "type": "string"
        },
        "isSymbolized": {
          "description": "Is the exception stack trace symbolized",
          "type": "string"
        }
      },
      "required": [
        "status",
        "displayReason",
        "hash",
        "name",
        "firstOccurred",
        "lastOccurred",
        "uniqueSessionCount",
        "sessionCount",
        "reason",
        "isSymbolized"
      ]
    },
    "AppExceptionCount": {
      "title": "AppExceptionCount",
      "type": "object",
      "properties": {
        "date": {
          "description": "Date exceptions occurred.  FIXME was incorrect type",
          "type": "string",
          "format": "date"
        },
        "value": {
          "description": "Count of exceptions on that date",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "date",
        "value"
      ]
    },
    "AppCrashCount": {
      "title": "AppCrashCount",
      "type": "object",
      "properties": {
        "date": {
          "description": "Date crashes occurred.  FIXME was incorrect type",
          "type": "string",
          "format": "date"
        },
        "value": {
          "description": "Count of crashes on that date",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "date",
        "value"
      ]
    },
    "AppCreationResponse": {
      "title": "AppCreationResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/AppCreationResponseInternal"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "AppCrashCountResponse": {
      "title": "AppCrashCountResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/AppCrashCount"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "CrashCountResponseData": {
      "title": "CrashCountResponseData",
      "type": "object",
      "properties": {
        "appId-appVersion": {
          "description": "Crash counts for a specific version of appId. Note: \"appId-appVersion\" key is replaced with actual app ID and version such as 519d53101386202089000007-1.0",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorCount"
          }
        },
        "appId": {
          "description": "Crash counts for all versions of appId. Note: \"appId\" key is replaced with actual app ID such as 519d53101386202089000007",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorCount"
          }
        }
      }
    },
    "ExceptionCountData": {
      "title": "ExceptionCountData",
      "type": "object",
      "properties": {
        "appId": {
          "description": "Exception counts for all versions of appId. Note: \"appId\" key is replaced with actual app ID such as 519d53101386202089000007",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorCount"
          }
        },
        "appId-appVersion": {
          "description": "Exception counts for a specific version of appId. Note: \"appId-appVersion\" key is replaced with actual app ID and version such as 519d53101386202089000007-1.0",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorCount"
          }
        }
      },
      "required": [
        "appId"
      ]
    },
    "CrashCountResponse": {
      "title": "CrashCountResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/CrashCountResponseData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "ErrorSummary": {
      "title": "ErrorSummary",
      "type": "object",
      "properties": {
        "status": {
          "description": "Crash status \"unresolved\" or \"resolved\"",
          "type": "string"
        },
        "displayReason": {
          "description": "Friendly reason for crash",
          "type": "string"
        },
        "hash": {
          "description": "Unique crash identifier",
          "type": "string"
        },
        "name": {
          "description": "Friendly name for crash",
          "type": "string"
        },
        "firstOccurred": {
          "description": "Date crash first occurred",
          "type": "string"
        },
        "lastOccurred": {
          "description": "Date crash last occurred",
          "type": "string"
        },
        "uniqueSessionCount": {
          "description": "Unique number of users experiencing crash",
          "type": "string"
        },
        "sessionCount": {
          "description": "Total number of user sessions experiencing crash",
          "type": "string"
        },
        "reason": {
          "description": "Reason for crash",
          "type": "string"
        },
        "isSymbolized": {
          "description": "Is the crash stack trace symbolized",
          "type": "string"
        }
      },
      "required": [
        "status",
        "displayReason",
        "hash",
        "name",
        "firstOccurred",
        "lastOccurred",
        "uniqueSessionCount",
        "sessionCount",
        "reason",
        "isSymbolized"
      ]
    },
    "ExceptionSummaryResponse": {
      "title": "ExceptionSummaryResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ErrorSummaryData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "ErrorSummaryData": {
      "title": "ErrorSummaryData",
      "type": "object",
      "properties": {
        "appId": {
          "description": "Error summaries for all versions of appId. Note: \"appId\" key is replaced with actual app ID such as 519d53101386202089000007",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorSummary"
          }
        },
        "appId-appVersion": {
          "description": "Error summaries for a specific version of appId. Note: \"appId-appVersion\" key is replaced with actual app ID and version such as 519d53101386202089000007-1.0",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorSummary"
          }
        }
      },
      "required": [
        "appId"
      ]
    },
    "ErrorCount": {
      "title": "ErrorCount",
      "type": "object",
      "properties": {
        "date": {
          "description": "Date the errors occurred",
          "type": "string",
          "format": "date"
        },
        "value": {
          "description": "Count of errors on that date",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "date",
        "value"
      ]
    },
    "CrashSummaryResponse": {
      "title": "CrashSummaryResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ErrorSummaryData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "AppSummaryResponse": {
      "title": "AppSummaryResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/AppSummaryData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "AppSummaryData": {
      "title": "AppSummaryData",
      "type": "object",
      "properties": {
        "$_app_id_1": {
          "$ref": "#/definitions/AppSummary"
        },
        "$_app_id_n": {
          "$ref": "#/definitions/AppSummary"
        }
      },
      "required": [
        "$_app_id_1"
      ]
    },
    "ExceptionCountResponse": {
      "title": "ExceptionCountResponse",
      "type": "object",
      "properties": {
        "data": {
          "description": "FIXME this is supposed to be ErrorCountData type which is undefined",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "AppType": {
      "title": "appType",
      "example": "android",
      "type": "string",
      "enum": [
        "android",
        "ios",
        "wp",
        "html5"
      ]
    },
    "AppSummary": {
      "title": "AppSummary",
      "type": "object",
      "properties": {
        "links": {
          "description": "An dictionary where they keys are available endpoints and the values describe metrics and filters available for that endpoint",
          "type": "object"
        },
        "latency": {
          "description": "Average latency for this app's cloud services for most recent complete day (seconds). Default: 0",
          "type": "integer",
          "format": "int32"
        },
        "iconURL": {
          "description": "URL to the app store's icon for this app. Default: \"None\"",
          "type": "string"
        },
        "mau": {
          "description": "Most recent completed calendar month's Monthly Active Users (MAU) count for all versions of this app. Default: 0",
          "type": "integer",
          "format": "int32"
        },
        "appType": {
          "$ref": "#/definitions/AppType"
        },
        "appName": {
          "description": "Name of the app according to Crittercism.",
          "type": "string"
        },
        "rating": {
          "description": "Current average star rating for the app over all versions. Default: 0",
          "type": "integer",
          "format": "int32"
        },
        "latestAppStoreReleaseDate": {
          "description": "ISO 8601 date when the last version of this app became available on the app store. Default: \"None\"",
          "type": "string"
        },
        "appVersions": {
          "description": "Versions of the app which have reported app loads or errors to Crittercism",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "linkToAppStore": {
          "description": "URL of the app's listing in the app store. Default: \"None\"",
          "type": "string"
        },
        "dau": {
          "description": "Most recent completed calendar day's Daily Active Users (DAU) count for all versions of this app.",
          "type": "integer",
          "format": "int32"
        },
        "role": {
          "description": "Role of the token owner in this app",
          "type": "string"
        },
        "latestVersionString": {
          "description": "Version string of most recently released version of this app, according to the app store. Default: \"None\"",
          "type": "string"
        },
        "crashPercent": {
          "description": "(all app loads, most recent complete day, for this app, ending in crash) / (all app loads, most recent complete day, for this app) * 100. Default: 0.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "links"
      ]
    },
    "PaginatedTableResponse": {
      "title": "PaginatedTableResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/PaginatedTableData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "DailyCountsByVersion": {
      "title": "DailyCountsByVersion",
      "type": "object",
      "properties": {
        "total": {
          "description": "Counts for all versions of app",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DayCounts"
          }
        },
        "appVersion": {
          "description": "Counts for specific version of app",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DayCounts"
          }
        }
      },
      "required": [
        "total",
        "appVersion"
      ]
    },
    "CrashRateBySegmentData": {
      "title": "CrashRateBySegmentData",
      "type": "object",
      "properties": {
        "start": {
          "description": "Start of crash percentage segment",
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "description": "End of crash percentage segment",
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "description": "Number of apps with a crash rate percentage in this range.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "start",
        "end",
        "value"
      ]
    },
    "ParsedBreadcrumb": {
      "title": "ParsedBreadcrumb",
      "type": "object",
      "properties": {
        "deviceOccurredTs": {
          "description": "ISO datetime string recording the time the breadcrumb was recorded",
          "type": "string"
        },
        "type": {
          "description": "Type of breadcrumb, e.g. 'network' or 'crash'",
          "type": "string"
        },
        "payload": {
          "description": "Breadcrumb payload data",
          "type": "object"
        },
        "typeCode": {
          "description": "A value from 1-7 that stands for (in order from 1 to 7): NORMAL, NETWORK_CALL, FOREGROUND_BACKGROUND, NETWORK_CONNECTION_CHANGE, VIEW_CHANGE, HANDLED_EXCEPTION, CRASH",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ConnectionAndLinks": {
      "title": "ConnectionAndLinks",
      "type": "object",
      "properties": {
        "activatedConnections": {
          "description": "List of active bug tracking integrations",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "JIRA": {
          "$ref": "#/definitions/IntegrationObject"
        },
        "GITHUB": {
          "$ref": "#/definitions/IntegrationObject"
        },
        "PIVOTAL": {
          "$ref": "#/definitions/IntegrationObject"
        }
      }
    },
    "CountsByVersion": {
      "title": "CountsByVersion",
      "type": "object",
      "properties": {
        "total": {
          "description": "Counts for all versions of app",
          "type": "integer",
          "format": "int32"
        },
        "appVersion": {
          "description": "Counts for specific version of app",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "total",
        "appVersion"
      ]
    },
    "UserData": {
      "title": "UserData",
      "type": "object",
      "properties": {
        "username": {
          "description": "username",
          "type": "string"
        },
        "app_version": {
          "description": "app version",
          "type": "string"
        },
        "last_login_time": {
          "description": "Date and time of last login",
          "type": "string"
        },
        "crash_last_occurred_iso": {
          "description": "Date and time of last crash occurrence in ISO format",
          "type": "string",
          "format": "date-time"
        },
        "locale": {
          "description": "locale of user",
          "type": "string"
        },
        "system": {
          "description": "Operating system",
          "type": "string"
        },
        "crash_last_occurred": {
          "description": "Date and time of last crash occurrence",
          "type": "string"
        },
        "carrier": {
          "description": "User's mobile carrier",
          "type": "string"
        },
        "model": {
          "description": "Device model",
          "type": "string"
        },
        "last_login_time_iso": {
          "description": "Date and time of last login in ISO format",
          "type": "string",
          "format": "date-time"
        },
        "system_version": {
          "description": "system version",
          "type": "string"
        }
      },
      "required": [
        "username",
        "app_version",
        "last_login_time",
        "crash_last_occurred_iso",
        "locale",
        "system",
        "crash_last_occurred",
        "carrier",
        "model",
        "last_login_time_iso",
        "system_version"
      ]
    },
    "UserDataResponse": {
      "title": "UserDataResponse",
      "type": "object",
      "properties": {
        "data": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserData"
          }
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "BreadcrumbTrace": {
      "title": "BreadcrumbTrace",
      "type": "object",
      "properties": {
        "username": {
          "description": "Unique ID for a single user, as defined by the app",
          "type": "string"
        },
        "traceTs": {
          "description": "Timestamp of this trace in ISO format: YYYY-MM-DDTHH:MM:SS.SSS+hh:mm",
          "type": "string"
        },
        "parsedBreadcrumbs": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParsedBreadcrumb"
          }
        },
        "appVersion": {
          "description": "App version string",
          "type": "string"
        },
        "deviceId": {
          "description": "UUID for a single installation of an app on a single device",
          "type": "string"
        },
        "device": {
          "description": "Device model number",
          "type": "string"
        },
        "os": {
          "description": "Operating system name and version",
          "type": "string"
        }
      }
    },
    "StacktraceObject": {
      "title": "StacktraceObject",
      "type": "object",
      "properties": {
        "line_number": {
          "description": "Line number of stack trace",
          "type": "integer",
          "format": "int32"
        },
        "suspect": {
          "description": "Line of stacktrace suspected to have caused the crash",
          "type": "integer",
          "format": "int32"
        },
        "trace": {
          "description": "Name and location of the code",
          "type": "string"
        }
      },
      "required": [
        "line_number",
        "suspect",
        "trace"
      ]
    },
    "DayCounts": {
      "title": "DayCounts",
      "type": "object",
      "properties": {
        "YYYY-MM-DD": {
          "description": "Array of counts",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "YYYY-MM-DD"
      ]
    },
    "IntegrationObject": {
      "title": "IntegrationObject",
      "type": "object",
      "properties": {
        "url": {
          "description": "URL link to the issue",
          "type": "string"
        },
        "issue_service_type": {
          "description": "Name of bug tracking service (e.g. GITHUB)",
          "type": "string"
        },
        "issue_service_issue_id": {
          "description": "Issue ID",
          "type": "string"
        }
      },
      "required": [
        "url",
        "issue_service_type",
        "issue_service_issue_id"
      ]
    },
    "DailyOccurrences": {
      "title": "DailyOccurrences",
      "type": "object",
      "properties": {
        "version-string": {
          "description": "NOTE: the \"version string\" key is replaced by the actual version(s) of the app that have crashes. The first item is the latest date in the series (in YYYY-MM-DD format), the second item is a list of point values associated with each date in chronological order",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PaginatedTableData": {
      "title": "PaginatedTableData",
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/PaginatedTablePagination"
        },
        "errors": {
          "description": "An array of error objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaginatedTableErrors"
          }
        }
      },
      "required": [
        "pagination",
        "errors"
      ]
    },
    "Status68": {
      "title": "status68",
      "example": "unresolved",
      "type": "string",
      "enum": [
        "unresolved",
        "resolved"
      ]
    },
    "UpdateCrashBody": {
      "title": "UpdateCrashBody",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status68"
        },
        "fixVersion": {
          "description": "Crash fix version",
          "type": "string"
        }
      },
      "required": [
        "status",
        "fixVersion"
      ]
    },
    "CrashResponseData": {
      "title": "CrashResponseData",
      "type": "object",
      "properties": {
        "stacktrace": {
          "description": "Call stack from this crash",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StacktraceObject"
          }
        },
        "displayReason": {
          "description": "Friendly reason for crash",
          "type": "string"
        },
        "sessionCountsByVersion": {
          "$ref": "#/definitions/CountsByVersion"
        },
        "breadcrumbTraces": {
          "$ref": "#/definitions/BreadcrumbTrace"
        },
        "lastOccurred": {
          "description": "Date crash last occurred",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "Crash status: \"known\", \"unresolved\" or \"resolved\"",
          "type": "string"
        },
        "hash": {
          "description": "Unique crash identifier",
          "type": "string"
        },
        "firstOccurred": {
          "description": "Date crash first occurred",
          "type": "string",
          "format": "date-time"
        },
        "dailyOccurrencesByVersion": {
          "$ref": "#/definitions/DailyOccurrences"
        },
        "reason": {
          "description": "Reason for crash",
          "type": "string"
        },
        "appId": {
          "description": "app that crashed",
          "type": "string"
        },
        "name": {
          "description": "Friendly name for crash",
          "type": "string"
        },
        "ConnectionAndLinks": {
          "$ref": "#/definitions/ConnectionAndLinks"
        },
        "uniqueSessionCountsByVersion": {
          "description": "A dictionary in which the keys are version strings and the values are integers, the unique session counts for that version",
          "type": "object"
        },
        "totalAffectedUsers": {
          "description": "Total number of users affected by this crash",
          "type": "integer",
          "format": "int32"
        },
        "dSymUuid": {
          "description": "UUID of the dSym file required to symbolicate this crash (iOS only)",
          "type": "string"
        },
        "appVersion": {
          "description": "Version string or 'total'",
          "type": "string"
        },
        "platform": {
          "description": "A mobile platform, e.g. android (all lower case)",
          "type": "string"
        },
        "appTimeZoneOffset": {
          "description": "Time zone offset in hours from UTC",
          "type": "integer",
          "format": "int32"
        },
        "statusVersion": {
          "description": "If the status of this crash has changed (e.g. from unresolved to resolved), this field will be the current version of the app when that change was made",
          "type": "string"
        },
        "logcatResponse": {
          "description": "For Android apps, the output of the logcat tool",
          "type": "string"
        },
        "otherCrashes": {
          "description": "A sample of crashes that are in this group",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "threads": {
          "description": "List of stacktraces of all threads running inside the app when it crashed",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numOccurrences": {
          "description": "Total occurrences of this crash",
          "type": "integer",
          "format": "int32"
        },
        "customName": {
          "description": "User-created custom name for this crash",
          "type": "string"
        },
        "diagnostics": {
          "description": "Low level diagnostic crash data",
          "type": "object"
        },
        "suspectLine": {
          "description": "Line of code suspected to have caused this crash",
          "type": "string"
        }
      },
      "required": [
        "stacktrace",
        "displayReason",
        "sessionCountsByVersion",
        "breadcrumbTraces",
        "lastOccurred",
        "status",
        "hash",
        "firstOccurred",
        "dailyOccurrencesByVersion",
        "reason",
        "appId",
        "name"
      ]
    },
    "PaginatedTableErrors": {
      "title": "PaginatedTableErrors",
      "type": "object",
      "properties": {
        "app_timezone_offset": {
          "description": "Time zone offset for an app",
          "type": "integer",
          "format": "int32"
        },
        "num_sessions_unsymbolized": {
          "description": "Number of unsymbolized sessions",
          "type": "integer",
          "format": "int32"
        },
        "crash_hashing_strategy_name": {
          "description": "Name of the hashing strategy used for this crash",
          "type": "string"
        },
        "class_name": {
          "description": "This crash's class name",
          "type": "string"
        },
        "is_symbolized": {
          "description": "Has this crash been symbolized",
          "type": "boolean"
        },
        "display_reason": {
          "description": "Human-friendly reason",
          "type": "string"
        },
        "num_unique_sessions": {
          "description": "Number of unique sessions affected by this crash",
          "type": "integer",
          "format": "int32"
        },
        "num_session": {
          "description": "Number of affected sessions",
          "type": "integer",
          "format": "int32"
        },
        "daily_occurrences": {
          "description": "The first item is the latest date in the series (in YYYYMMDD format), the second item is a list of point values associated with each date in chronological order",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "last_occurred_time": {
          "description": "Date and time of last occurrence",
          "type": "string",
          "format": "date-time"
        },
        "isJavaCrash": {
          "description": "Is the crash a Java crash",
          "type": "boolean"
        },
        "status": {
          "description": "Status of this crash, e.g. 'resolved'",
          "type": "string"
        },
        "all_time_counts": {
          "description": "Total number of occurrences of this crash within the requested period",
          "type": "integer",
          "format": "int32"
        },
        "hash": {
          "description": "Crash hash",
          "type": "string"
        },
        "last_occurred_id": {
          "description": "ID of the most recent occurrence of this crash",
          "type": "string"
        },
        "reason": {
          "description": "Reason for the crash",
          "type": "string"
        },
        "first_occurred_time": {
          "description": "Date and time of the most recent occurrence of this crash",
          "type": "string",
          "format": "date-time"
        },
        "first_occurred_id": {
          "description": "ID of the first occurrence of this crash",
          "type": "string"
        },
        "total_occurrences": {
          "description": "Total occurrences of this crash",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of the affected app",
          "type": "string"
        },
        "custom_name": {
          "description": "User-supplied custom name for this crash",
          "type": "string"
        },
        "suspect_line": {
          "description": "Line of code suspected to have caused this crash",
          "type": "string"
        },
        "status_version": {
          "description": "Version at which the status was marked",
          "type": "string"
        }
      }
    },
    "CrashRateBySegmentResponse": {
      "title": "CrashRateBySegmentResponse",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CrashRateBySegmentData"
          }
        }
      },
      "required": [
        "links"
      ]
    },
    "CrashResponse": {
      "title": "CrashResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/CrashResponseData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "PaginatedTablePagination": {
      "title": "PaginatedTablePagination",
      "type": "object",
      "properties": {
        "totalPages": {
          "description": "Total number of pages returned by this query",
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "description": "Total number of elements returned by this query",
          "type": "integer",
          "format": "int32"
        },
        "pageNum": {
          "description": "Current page",
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "description": "Number of elements per page",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "totalPages",
        "totalElements",
        "pageNum",
        "pageSize"
      ]
    },
    "ErrorMonitorGraphRequestInternal": {
      "title": "ErrorMonitorGraphRequestInternal",
      "type": "object",
      "properties": {
        "graph": {
          "$ref": "#/definitions/Graph"
        },
        "duration": {
          "description": "How far back the API queries for data, in minutes. Must be a multiple of 1440 (one day) between 1440 and 43200.  Optional if 'start' and 'end' specified",
          "type": "integer",
          "format": "int32"
        },
        "appIds": {
          "description": "A list of apps to retrieve data about",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "end": {
          "description": "ISO Date, end of the date range",
          "type": "string"
        },
        "start": {
          "description": "ISO Date, start of the date range in the result",
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/Filter"
        },
        "appId": {
          "description": "The app to retrieve data about",
          "type": "string"
        }
      },
      "required": [
        "graph",
        "duration"
      ]
    },
    "ErrorMonitorGraphResponse": {
      "title": "ErrorMonitorGraphResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ErrorMonitorGraphRequestInternal"
        },
        "data": {
          "$ref": "#/definitions/SeriesCollection"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "Graph77": {
      "title": "graph77",
      "example": "dau",
      "type": "string",
      "enum": [
        "dau",
        "mau",
        "crashes",
        "crashPercent",
        "appLoads",
        "affectedUsers",
        "affectedUserPercent"
      ]
    },
    "GroupBy78": {
      "title": "groupBy78",
      "example": "appId",
      "type": "string",
      "enum": [
        "appId"
      ]
    },
    "SparklineRequestInternal": {
      "title": "SparklineRequestInternal",
      "type": "object",
      "properties": {
        "graph": {
          "$ref": "#/definitions/Graph77"
        },
        "duration": {
          "description": "How far back the API queries for data, in minutes. Must be a multiple of 1440 (one day) between 1440 and 43200.  Optional if 'start' and 'end' specified",
          "type": "integer",
          "format": "int32"
        },
        "groupBy": {
          "$ref": "#/definitions/GroupBy78"
        },
        "appIds": {
          "description": "A list of apps to retrieve data about",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "end": {
          "description": "ISO Date, end of the date range",
          "type": "string"
        },
        "start": {
          "description": "ISO Date, start of the date range in the result",
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/Filter"
        },
        "appId": {
          "description": "The app to retrieve data about",
          "type": "string"
        }
      },
      "required": [
        "graph",
        "duration",
        "groupBy"
      ]
    },
    "SparklineRequest": {
      "title": "SparklineRequest",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/SparklineRequestInternal"
        }
      },
      "required": [
        "meta"
      ]
    },
    "SeriesData": {
      "title": "SeriesData",
      "type": "object",
      "properties": {
        "points": {
          "description": "Array of numbers containing series data",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "name": {
          "description": "Metric for the series, corresponds to graph parameter from request",
          "type": "string"
        },
        "label": {
          "description": "Human readable version of the grouping",
          "type": "string"
        }
      },
      "required": [
        "points",
        "name"
      ]
    },
    "Interval": {
      "title": "interval",
      "example": 86400,
      "type": "integer",
      "format": "int32",
      "enum": [
        "86400"
      ]
    },
    "SlicesCollection": {
      "title": "SlicesCollection",
      "type": "object",
      "properties": {
        "start": {
          "description": "ISO Date, start of the date range in the result",
          "type": "string"
        },
        "interval": {
          "$ref": "#/definitions/Interval"
        },
        "end": {
          "description": "ISO Date, end of the date range",
          "type": "string"
        },
        "slices": {
          "description": "The requested slices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SliceData"
          }
        }
      },
      "required": [
        "start",
        "interval",
        "end",
        "slices"
      ]
    },
    "SparklineResponse": {
      "title": "SparklineResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/SparklineRequestInternal"
        },
        "data": {
          "$ref": "#/definitions/SeriesCollection"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "Filter": {
      "title": "Filter",
      "type": "object",
      "properties": {
        "device": {
          "description": "A mobile device e.g. iPhone5,1. Supported metrics: [\"crashes\", \"crashPercent\", \"appLoads\"]",
          "type": "string"
        },
        "carrier": {
          "description": "A mobile operator e.g. AT&T. Supported metrics: [\"crashes\", \"crashPercent\", \"appLoads\"]",
          "type": "string"
        },
        "os": {
          "description": "An exact operating system version, e.g. iOS 5. Supported metrics: [\"crashes\", \"crashPercent\", \"appLoads\"]",
          "type": "string"
        },
        "appVersion": {
          "description": "Filters data to events with this version string. Version strings are treated as opaque specifiers by Crittercism; supplying a string here will search the list of application versions seen by the Crittercism platform, and return a response if any matches are found. Supported metrics: [\"dau\", \"crashes\", \"crashPercent\", \"appLoads\", \"affectedUsers\", \"affectedUserPercent\"]",
          "type": "string"
        }
      }
    },
    "SeriesCollection": {
      "title": "SeriesCollection",
      "type": "object",
      "properties": {
        "start": {
          "description": "ISO Date, start of the date range in the result",
          "type": "string"
        },
        "interval": {
          "$ref": "#/definitions/Interval"
        },
        "end": {
          "description": "ISO Date, end of the date range",
          "type": "string"
        },
        "series": {
          "description": "The requested series",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeriesData"
          }
        }
      },
      "required": [
        "start",
        "interval",
        "end",
        "series"
      ]
    },
    "PieResponse": {
      "title": "PieResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ErrorMonitorPieRequestInternal"
        },
        "data": {
          "$ref": "#/definitions/SlicesCollection"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "ErrorMonitorGraphRequest": {
      "title": "ErrorMonitorGraphRequest",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ErrorMonitorGraphRequestInternal"
        }
      },
      "required": [
        "meta"
      ]
    },
    "ErrorMonitorPieRequestInternal": {
      "title": "ErrorMonitorPieRequestInternal",
      "type": "object",
      "properties": {
        "graph": {
          "$ref": "#/definitions/Graph"
        },
        "duration": {
          "description": "How far back the API queries for data, in minutes. Must be a multiple of 1440 (one day) between 1440 and 43200.  Optional if 'start' and 'end' specified",
          "type": "integer",
          "format": "int32"
        },
        "groupBy": {
          "$ref": "#/definitions/GroupBy"
        },
        "appIds": {
          "description": "A list of apps to retrieve data about",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "end": {
          "description": "ISO Date, end of the date range",
          "type": "string"
        },
        "start": {
          "description": "ISO Date, start of the date range in the result",
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/Filter"
        },
        "appId": {
          "description": "The app to retrieve data about",
          "type": "string"
        }
      },
      "required": [
        "graph",
        "duration",
        "groupBy"
      ]
    },
    "ErrorMonitorPieRequest": {
      "title": "ErrorMonitorPieRequest",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ErrorMonitorPieRequestInternal"
        }
      },
      "required": [
        "meta"
      ]
    },
    "SliceData": {
      "title": "SliceData",
      "type": "object",
      "properties": {
        "name": {
          "description": "Metric for the slices, corresponds to graph parameter from request",
          "type": "string"
        },
        "value": {
          "description": "Size of data in this group",
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "Human readable version of the grouping",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "ExceptionResponseData": {
      "title": "ExceptionResponseData",
      "type": "object",
      "properties": {
        "status": {
          "description": "Exception status \"unresolved\" or \"resolved\"",
          "type": "string"
        },
        "stacktrace": {
          "description": "Call stack from this exception",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayReason": {
          "description": "Friendly reason for exception",
          "type": "string"
        },
        "hash": {
          "description": "Unique exception identifier",
          "type": "string"
        },
        "firstOccurred": {
          "description": "Date exception first occurred",
          "type": "string",
          "format": "date-time"
        },
        "dailyOccurrencesByVersion": {
          "$ref": "#/definitions/DailyCountsByVersion"
        },
        "uniqueSessionCountsByVersion": {
          "$ref": "#/definitions/CountsByVersion"
        },
        "breadcrumbs": {
          "description": "Breadcrumbs set before exception",
          "type": "object"
        },
        "appId": {
          "description": "app that raised exception",
          "type": "string"
        },
        "symbolizedStacktrace": {
          "description": "Call stack from this exception with symbols if available",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unsymbolizedHash": {
          "description": "Exception hash before symbolizing stack",
          "type": "string"
        },
        "reason": {
          "description": "Reason for exception",
          "type": "string"
        },
        "sessionCountsByVersion": {
          "$ref": "#/definitions/CountsByVersion"
        },
        "class": {
          "description": "Type of exception log",
          "type": "string"
        },
        "lastOccurred": {
          "description": "Date exception last occurred",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Friendly name for exception",
          "type": "string"
        },
        "diagnostics": {
          "description": "Low level diagnostic exception data",
          "type": "object"
        }
      },
      "required": [
        "status",
        "stacktrace",
        "displayReason",
        "hash",
        "firstOccurred",
        "dailyOccurrencesByVersion",
        "uniqueSessionCountsByVersion",
        "breadcrumbs",
        "appId",
        "symbolizedStacktrace",
        "unsymbolizedHash",
        "reason",
        "sessionCountsByVersion",
        "class",
        "lastOccurred",
        "name"
      ]
    },
    "ExceptionResponse": {
      "title": "ExceptionResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ExceptionResponseData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "LiveStatsResponse": {
      "title": "LiveStatsResponse",
      "type": "object",
      "properties": {
        "meta": {
          "description": "A status object",
          "type": "object"
        },
        "links": {
          "description": "An array of links objects in which the key is the name of the link and the value is a URL",
          "type": "object"
        }
      }
    },
    "TrendsResponse": {
      "title": "TrendsResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/SortRequest"
        },
        "data": {
          "$ref": "#/definitions/TrendsResponseInternal"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "TrendsResponseInternal": {
      "title": "TrendsResponseInternal",
      "type": "object",
      "properties": {
        "interval": {
          "description": "Duration of the series in minutes",
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "description": "ISO date and time at the end of the series",
          "type": "string",
          "format": "date"
        },
        "series": {
          "description": "A dictionary where keys are available metrics and values are arrays of integer data points. Returns milliseconds for latency, percentage for errors, number of requests per minute for volume, and bytes for data",
          "type": "object"
        },
        "labels": {
          "description": "Array of filter labels",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "start": {
          "description": "ISO date and time at the beginning of the series",
          "type": "string",
          "format": "date"
        },
        "names": {
          "description": "Array of filter names",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SortRequest": {
      "title": "SortRequest",
      "type": "object",
      "properties": {
        "sort": {
          "description": "sort metric",
          "type": "string"
        },
        "duration": {
          "description": "duration requested by the query",
          "type": "integer",
          "format": "int32"
        },
        "appIds": {
          "description": "array of appIds",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "description": "dictionary of filter names and values",
          "type": "object"
        }
      },
      "required": [
        "sort",
        "duration",
        "appIds"
      ]
    },
    "LocationsData": {
      "title": "LocationsData",
      "type": "object",
      "properties": {
        "locationName": {
          "description": "Human-friendly location name",
          "type": "string"
        },
        "sort": {
          "description": "Single data point. Measured in milliseconds for latency, percentage for errors, number of requests per minute for volume, and bytes for data",
          "type": "integer",
          "format": "int32"
        },
        "administrativeRegionCode": {
          "description": "Administrative Region Code, e.g. MX for Mexico or MEX-2719 for Jalisco",
          "type": "string"
        }
      }
    },
    "ErrorDetailResponseData": {
      "title": "ErrorDetailResponseData",
      "type": "object",
      "properties": {
        "start": {
          "description": "ISO date and time at the beginning of the series",
          "type": "string",
          "format": "date"
        },
        "errorTables": {
          "description": "Mapping of error types (e.g. http) to error codes (e.g. 404) and human-friendly error messages (e.g. Not Found)",
          "type": "object"
        },
        "interval": {
          "description": "Duration of the series in minutes",
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "description": "ISO date and time at the end of the series",
          "type": "string",
          "format": "date"
        },
        "data": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetailSeries"
          }
        }
      },
      "required": [
        "start",
        "errorTables",
        "interval",
        "end",
        "data"
      ]
    },
    "GraphDetailSubseries": {
      "title": "GraphDetailSubseries",
      "type": "object",
      "properties": {
        "volume": {
          "description": "Array of volume data points as integers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "points": {
          "description": "Array of averages as integers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name of subseries row",
          "type": "string"
        },
        "label": {
          "description": "Description of subseries row",
          "type": "string"
        }
      }
    },
    "ErrorDetailSeries": {
      "title": "ErrorDetailSeries",
      "type": "object",
      "properties": {
        "name": {
          "description": "A combination of the error table name (e.g. h:0) and error code (e.g. 404), e.g. h:0:404",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "GraphDetailSeries": {
      "title": "GraphDetailSeries",
      "type": "object",
      "properties": {
        "subseries": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphDetailSubseries"
          }
        },
        "points": {
          "description": "Array of weighted averages as data points measured in milliseconds for latency, percentage for errors, number of requests per minute for volume, and bytes for data",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name of the row of data points",
          "type": "string"
        }
      }
    },
    "LocationsResponse": {
      "title": "LocationsResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/SortRequest"
        },
        "data": {
          "$ref": "#/definitions/LocationsResponseInternal"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "PieSlicesCollection": {
      "title": "PieSlicesCollection",
      "type": "object",
      "properties": {
        "start": {
          "description": "ISO Date, start of the date range in the result",
          "type": "string"
        },
        "interval": {
          "description": "Bucket size in seconds",
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "description": "ISO Date, end of the date range",
          "type": "string"
        },
        "slices": {
          "description": "The requested slices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PieSliceData"
          }
        }
      },
      "required": [
        "start",
        "interval",
        "end",
        "slices"
      ]
    },
    "PieSliceData": {
      "title": "PieSliceData",
      "type": "object",
      "properties": {
        "name": {
          "description": "Metric for the slices, corresponds to graph parameter from request",
          "type": "string"
        },
        "value": {
          "description": "Data for this slice. Measured in milliseconds for latency, percentage for errors, number of requests per minute for volume, and bytes for data",
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "Human readable version of the grouping",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "ServicesResponseData": {
      "title": "ServicesResponseData",
      "type": "object",
      "properties": {
        "services": {
          "$ref": "#/definitions/ServiceInternal"
        },
        "start": {
          "description": "ISO date and time at the beginning of series",
          "type": "string",
          "format": "date"
        },
        "interval": {
          "description": "Time elapsed between points in minutes",
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "description": "ISO date and time at the end of series",
          "type": "string",
          "format": "date"
        },
        "allServices": {
          "$ref": "#/definitions/AllServiceInternal"
        }
      },
      "required": [
        "services",
        "start",
        "interval",
        "end",
        "allServices"
      ]
    },
    "GeoResponse": {
      "title": "GeoResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/SortRequest"
        },
        "data": {
          "$ref": "#/definitions/GeoResponseInternal"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "GraphDetailResponse": {
      "title": "GraphDetailResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/GraphRequest"
        },
        "data": {
          "$ref": "#/definitions/GraphDetailResponseInternal"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "GraphDetailResponseInternal": {
      "title": "GraphDetailResponseInternal",
      "type": "object",
      "properties": {
        "start": {
          "description": "ISO date and time at the beginning of the series",
          "type": "string",
          "format": "date"
        },
        "interval": {
          "description": "Duration of the series in minutes",
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "description": "ISO date and time at the end of the series",
          "type": "string",
          "format": "date"
        },
        "series": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphDetailSeries"
          }
        }
      }
    },
    "GraphResponse": {
      "title": "GraphResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/GraphRequest"
        },
        "data": {
          "$ref": "#/definitions/GraphData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "GraphData": {
      "title": "GraphData",
      "type": "object",
      "properties": {
        "start": {
          "description": "ISO date and time at the beginning of the time series",
          "type": "string",
          "format": "date"
        },
        "interval": {
          "description": "Time elapsed between points in minutes",
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "description": "ISO date and time at the end of the time series",
          "type": "string",
          "format": "date"
        },
        "series": {
          "$ref": "#/definitions/GraphSeries"
        }
      }
    },
    "LocationsResponseInternal": {
      "title": "LocationsResponseInternal",
      "type": "object",
      "properties": {
        "start": {
          "description": "ISO date and time at the beginning of the series",
          "type": "string",
          "format": "date"
        },
        "interval": {
          "description": "Duration of the series in minutes",
          "type": "integer",
          "format": "int32"
        },
        "locations": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationsData"
          }
        }
      }
    },
    "Endpoints": {
      "title": "Endpoints",
      "type": "object",
      "properties": {
        "sort": {
          "description": "Single data point. Measured in milliseconds for latency, percentage for errors, number of requests per minute for volume, and bytes for data",
          "type": "integer",
          "format": "int32"
        },
        "domain": {
          "description": "Endpoint domain",
          "type": "string"
        },
        "uri": {
          "description": "Endpoint URI",
          "type": "string"
        },
        "service": {
          "description": "The name of the endpoint service, e.g. 'apple' or 'twitter'",
          "type": "string"
        }
      },
      "required": [
        "sort",
        "domain",
        "uri",
        "service"
      ]
    },
    "EndpointResponse": {
      "title": "EndpointResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/SortRequest"
        },
        "data": {
          "$ref": "#/definitions/EndpointResponseData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "ErrorDetailResponse": {
      "title": "ErrorDetailResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/SortRequest"
        },
        "data": {
          "$ref": "#/definitions/ErrorDetailResponseData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "EndpointResponseData": {
      "title": "EndpointResponseData",
      "type": "object",
      "properties": {
        "start": {
          "description": "ISO date and time at the start of the series",
          "type": "string",
          "format": "date"
        },
        "interval": {
          "description": "Interval between points in minutes",
          "type": "integer",
          "format": "int32"
        },
        "endpoints": {
          "$ref": "#/definitions/Endpoints"
        }
      },
      "required": [
        "start",
        "interval",
        "endpoints"
      ]
    },
    "AllServiceInternal": {
      "title": "AllServiceInternal",
      "type": "object",
      "properties": {
        "sort": {
          "description": "Data point. Measured in milliseconds for latency, percentage for errors, number of requests per minute for volume, and bytes for data",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Names of selected services",
          "type": "string"
        }
      }
    },
    "GraphSeries": {
      "title": "GraphSeries",
      "type": "object",
      "properties": {
        "points": {
          "description": "Array of data points",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name of the requested metric",
          "type": "string"
        }
      }
    },
    "GeoSeries": {
      "title": "GeoSeries",
      "type": "object",
      "properties": {
        "geo": {
          "description": "Dictionary where keys are geographical regions and values are data points. Returns milliseconds for latency, percentage for errors, number of requests per minute for volume, and bytes for data",
          "type": "object"
        },
        "name": {
          "description": "Name of selected data filter",
          "type": "string"
        }
      }
    },
    "GraphRequest": {
      "title": "GraphRequest",
      "type": "object",
      "properties": {
        "duration": {
          "description": "duration requested by the query",
          "type": "integer",
          "format": "int32"
        },
        "graph": {
          "description": "graph metric requested",
          "type": "string"
        },
        "appIds": {
          "description": "array of appIds",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "description": "dictionary of filter names and values",
          "type": "object"
        }
      },
      "required": [
        "duration",
        "graph",
        "appIds"
      ]
    },
    "ServicesResponse": {
      "title": "ServicesResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/SortRequest"
        },
        "data": {
          "$ref": "#/definitions/ServicesResponseData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "ServiceInternal": {
      "title": "ServiceInternal",
      "type": "object",
      "properties": {
        "sort": {
          "description": "Data point. Measured in milliseconds for latency, percentage for errors, number of requests per minute for volume, and bytes for data",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of a particular service, e.g. Facebook, Twitter",
          "type": "string"
        }
      }
    },
    "GeoResponseInternal": {
      "title": "GeoResponseInternal",
      "type": "object",
      "properties": {
        "start": {
          "description": "ISO date and time at the beginning of the series",
          "type": "string",
          "format": "date"
        },
        "interval": {
          "description": "Duration of the series in minutes",
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "description": "ISO date and time at the end of the series",
          "type": "string",
          "format": "date"
        },
        "series": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoSeries"
          }
        }
      }
    },
    "TrendsResponseSeries": {
      "title": "TrendsResponseSeries",
      "type": "object",
      "properties": {
        "appLoadsByDevice": {
          "$ref": "#/definitions/TrendsResponseInternal"
        },
        "mau": {
          "$ref": "#/definitions/TrendsResponseInternal"
        },
        "crashRatioByDevice": {
          "$ref": "#/definitions/TrendsResponseInternal"
        },
        "crashesByVersion": {
          "$ref": "#/definitions/TrendsResponseInternal"
        },
        "dau": {
          "$ref": "#/definitions/TrendsResponseInternal"
        },
        "crashesByDevice": {
          "$ref": "#/definitions/TrendsResponseInternal"
        },
        "appLoadsByOs": {
          "$ref": "#/definitions/TrendsResponseInternal"
        },
        "affectedUsersRatio": {
          "$ref": "#/definitions/TrendsResponseInternal"
        },
        "dauByVersion": {
          "$ref": "#/definitions/TrendsResponseInternal"
        },
        "crashRatioByVersion": {
          "$ref": "#/definitions/TrendsResponseInternal"
        },
        "crashesByOs": {
          "$ref": "#/definitions/TrendsResponseInternal"
        },
        "appLoadsByVersion": {
          "$ref": "#/definitions/TrendsResponseInternal"
        }
      },
      "required": [
        "appLoadsByDevice",
        "mau",
        "crashRatioByDevice",
        "crashesByVersion",
        "dau",
        "crashesByDevice",
        "appLoadsByOs",
        "affectedUsersRatio",
        "dauByVersion",
        "crashRatioByVersion",
        "crashesByOs",
        "appLoadsByVersion"
      ]
    },
    "TrendsMauInternal": {
      "title": "TrendsMauInternal",
      "type": "object",
      "properties": {
        "todayValue": {
          "description": "Number of unique monthly users for today",
          "type": "integer",
          "format": "int32"
        },
        "buckets": {
          "description": "Objects containing start times, durations, and data points",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrendsBucket"
          }
        },
        "unit": {
          "description": "An object with two keys, 'of' and 'type', where 'of' maps to the metric being returned (e.g. users) and 'type' maps to the kind of data being returned (e.g. count)",
          "type": "object"
        }
      },
      "required": [
        "todayValue",
        "buckets",
        "unit"
      ]
    },
    "TrendsBucket": {
      "title": "TrendsBucket",
      "type": "object",
      "properties": {
        "duration": {
          "description": "ISO period",
          "type": "string"
        },
        "start": {
          "description": "ISO date of the beginning of the period",
          "type": "string",
          "format": "date"
        },
        "value": {
          "description": "Data point",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "duration",
        "start",
        "value"
      ]
    },
    "TrendsDauResponse": {
      "title": "TrendsDauResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/TrendsDauData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "TrendsResponseData": {
      "title": "TrendsResponseData",
      "type": "object",
      "properties": {
        "series": {
          "$ref": "#/definitions/TrendsResponseSeries"
        }
      },
      "required": [
        "series"
      ]
    },
    "TrendsMauResponse": {
      "title": "TrendsMauResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/TrendsMauData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "TrendsDauInternal": {
      "title": "TrendsDauInternal",
      "type": "object",
      "properties": {
        "todayValue": {
          "description": "Number of unique daily users for today",
          "type": "integer",
          "format": "int32"
        },
        "buckets": {
          "description": "Objects containing start times, durations, and data points",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrendsBucket"
          }
        },
        "unit": {
          "description": "An object with two keys, 'of' and 'type', where 'of' maps to the metric being returned (e.g. users) and 'type' maps to the kind of data being returned (e.g. count)",
          "type": "object"
        }
      },
      "required": [
        "todayValue",
        "buckets",
        "unit"
      ]
    },
    "TrendsMauData": {
      "title": "TrendsMauData",
      "type": "object",
      "properties": {
        "series": {
          "$ref": "#/definitions/TrendsMauInternal"
        }
      },
      "required": [
        "series"
      ]
    },
    "TrendsDauData": {
      "title": "TrendsDauData",
      "type": "object",
      "properties": {
        "series": {
          "$ref": "#/definitions/TrendsDauInternal"
        }
      },
      "required": [
        "series"
      ]
    },
    "TransactionsChangeResponse": {
      "title": "TransactionsChangeResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "data": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionsGroup"
          }
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "TransactionsRankedResponse": {
      "title": "TransactionsRankedResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "data": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionsGroup"
          }
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "TransactionsTraceIdData": {
      "title": "TransactionsTraceIdData",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Trace"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "TransactionsDiscoveryResponse": {
      "title": "TransactionsDiscoveryResponse",
      "type": "object",
      "properties": {
        "meta": {
          "description": "An object in which the key is 'appVersions' and the value is a list of app version strings",
          "type": "object"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "links"
      ]
    },
    "TransactionDetailsByAppVersion": {
      "title": "TransactionDetailsByAppVersion",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Human-friendly name of the transaction",
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/TransactionDetails"
        }
      }
    },
    "TransactionsCrashesData": {
      "title": "TransactionsCrashesData",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Human-friendly name for this transaction",
          "type": "string"
        },
        "groups": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionsGroup"
          }
        }
      }
    },
    "TransactionDetails": {
      "title": "TransactionDetails",
      "type": "object",
      "properties": {
        "meanForegroundTimeSeries": {
          "$ref": "#/definitions/Series"
        },
        "startedCountSeries": {
          "$ref": "#/definitions/Series"
        },
        "succeededCountSeries": {
          "$ref": "#/definitions/Series"
        },
        "failedCountSeries": {
          "$ref": "#/definitions/Series"
        },
        "failRateSeries": {
          "$ref": "#/definitions/Series"
        },
        "startedMoneyValueSeries": {
          "$ref": "#/definitions/Series"
        },
        "succeededMoneyValueSeries": {
          "$ref": "#/definitions/Series"
        },
        "failedMoneyValueSeries": {
          "$ref": "#/definitions/Series"
        }
      }
    },
    "TransactionsTracesData": {
      "title": "TransactionsTracesData",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "data": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionsTrace"
          }
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "TransactionsCrashesResponse": {
      "title": "TransactionsCrashesResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "data": {
          "$ref": "#/definitions/TransactionsCrashesData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "Pagination": {
      "title": "Pagination",
      "type": "object",
      "properties": {
        "totalPages": {
          "description": "Total number of pages",
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "description": "Total number of elements",
          "type": "integer",
          "format": "int32"
        },
        "prevPage": {
          "description": "The previous page number",
          "type": "integer",
          "format": "int32"
        },
        "pageNum": {
          "description": "Page number being returned. First page is 1, default is 1",
          "type": "integer",
          "format": "int32"
        },
        "nextPage": {
          "description": "The next page number",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "totalPages",
        "totalElements",
        "prevPage",
        "pageNum",
        "nextPage"
      ]
    },
    "TransactionsSummaryTrendsData": {
      "title": "TransactionsSummaryTrendsData",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/TransactionsVersion"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "TransactionsGroupResponse": {
      "title": "TransactionsGroupResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "data": {
          "$ref": "#/definitions/TransactionsGroupSeries"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "TransactionGroupDetailsResponse": {
      "title": "TransactionGroupDetailsResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/TransactionDetailsByAppVersion"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "TransactionsGroupSeries": {
      "title": "TransactionsGroupSeries",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Human-friendly name for this transaction",
          "type": "string"
        },
        "series": {
          "$ref": "#/definitions/Metric"
        }
      },
      "required": [
        "friendlyName",
        "series"
      ]
    },
    "Trace": {
      "title": "Trace",
      "type": "object",
      "properties": {
        "username": {
          "description": "Apteligent ID of the user (part of the user's metadata, set on client)",
          "type": "string"
        },
        "traceTimeStamp": {
          "description": "ISO datetime when the trace ended",
          "type": "string"
        },
        "breadcrumbs": {
          "description": "Apteligent breadcrumbs collected during the transaction",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeStamp": {
          "description": "ISO datetime of the trace insertions into database",
          "type": "string"
        },
        "appVersion": {
          "description": "Version name or number of the app",
          "type": "string"
        },
        "cpuTime": {
          "description": "Foreground CPU time consumed by the transaction",
          "type": "integer",
          "format": "int32"
        },
        "txnName": {
          "description": "Name of the transaction group",
          "type": "string"
        },
        "state": {
          "description": "Numerical indicator of the transaction's ending state",
          "type": "integer",
          "format": "int32"
        },
        "deviceId": {
          "description": "Apteligent internal ID of the specific device on which the trace was captured",
          "type": "string"
        },
        "appId": {
          "description": "ID of the app",
          "type": "string"
        },
        "device": {
          "description": "Device name and version",
          "type": "string"
        },
        "valueCents": {
          "description": "Monetary value of the transaction, in cents",
          "type": "integer",
          "format": "int32"
        },
        "osVersion": {
          "description": "Operating system name and version",
          "type": "string"
        },
        "numBreadcrumbs": {
          "description": "Number of breadcrumbs collected",
          "type": "integer",
          "format": "int32"
        },
        "metadata": {
          "description": "App metadata collected during the transaction",
          "type": "object"
        }
      }
    },
    "TransactionsTrace": {
      "title": "TransactionsTrace",
      "type": "object",
      "properties": {
        "username": {
          "description": "Apteligent ID of the user (part of the user's metadata, set on client)",
          "type": "string"
        },
        "traceTs": {
          "description": "ISO datetime of trace",
          "type": "string"
        },
        "breadcrumbCount": {
          "description": "Number of breadcrumbs for transaction trace",
          "type": "integer",
          "format": "int32"
        },
        "foregroundSeconds": {
          "description": "Number of seconds the app spent in the foreground",
          "type": "integer",
          "format": "int32"
        },
        "appVersion": {
          "description": "Version name or number of the app",
          "type": "string"
        },
        "valueAtRisk": {
          "description": "Monetary value of all failed transactions",
          "type": "integer",
          "format": "int32"
        },
        "deviceId": {
          "description": "Unique Device ID",
          "type": "string"
        },
        "device": {
          "description": "Device name and version",
          "type": "string"
        },
        "os": {
          "description": "Operating system name and version",
          "type": "string"
        },
        "id": {
          "description": "Internal Apteligent trace ID",
          "type": "string"
        },
        "completionState": {
          "description": "Indicator of the transaction ended",
          "type": "string"
        }
      }
    },
    "TransactionsGroup": {
      "title": "TransactionsGroup",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the transaction",
          "type": "string"
        },
        "link": {
          "description": "A URL for an API call about this transaction specifically",
          "type": "string"
        },
        "friendlyName": {
          "description": "Human-friendly name of the transaction",
          "type": "string"
        },
        "default": {
          "description": "",
          "type": "boolean"
        },
        "series": {
          "$ref": "#/definitions/Metric"
        },
        "buckets": {
          "$ref": "#/definitions/TransactionsBucket"
        },
        "failureRate": {
          "description": "Failure rate as a percentage",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "name",
        "link",
        "friendlyName"
      ]
    },
    "TransactionsVersion": {
      "title": "TransactionsVersion",
      "type": "object",
      "properties": {
        "[version]": {
          "$ref": "#/definitions/Metric"
        }
      }
    },
    "TransactionsBucket": {
      "title": "TransactionsBucket",
      "type": "object",
      "properties": {
        "duration": {
          "description": "Length of the sample of the aggregate of this group, e.g. PT4H for a group that was sampled over 4 hrs",
          "type": "string"
        },
        "start": {
          "description": "ISO 8601 datetime timestamp for the start of this group sample",
          "type": "string"
        },
        "value": {
          "description": "sum of all the data points, in the specified unit",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "duration",
        "start",
        "value"
      ]
    },
    "TransactionsSummaryResponse": {
      "title": "TransactionsSummaryResponse",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "data": {
          "$ref": "#/definitions/Metric"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "meta",
        "data",
        "links"
      ]
    },
    "Meta": {
      "title": "Meta",
      "type": "object",
      "properties": {
        "start": {
          "description": "ISO 8601 datetime for the beginning of the series",
          "type": "string"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        },
        "end": {
          "description": "ISO 8601 datetime for the end of the series",
          "type": "string"
        }
      }
    },
    "Series": {
      "title": "Series",
      "type": "object",
      "properties": {
        "buckets": {
          "$ref": "#/definitions/TransactionsBucket"
        },
        "unit": {
          "description": "An object in which the key 'type' maps to the kind of data returned in the series, and the key 'of' or 'currency' is what the metric describes",
          "type": "object"
        }
      }
    },
    "TransactionTrendsResponse": {
      "title": "TransactionTrendsResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/TransactionsGroupSeries"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "Metric": {
      "title": "Metric",
      "type": "object",
      "properties": {
        "unit": {
          "description": "An object in which the key 'type' maps to the kind of data returned in the series, and the key 'of' or 'currency' is what the metric describes",
          "type": "object"
        },
        "points": {
          "description": "",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "changePct": {
          "description": "Percentage change from last period",
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "description": "The current value of this metric",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "unit"
      ]
    },
    "BenchmarkGraph": {
      "title": "BenchmarkGraph",
      "type": "object",
      "properties": {
        "crashRateDistribution": {
          "description": "An array of benchmark data points",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CrashRateDistribution"
          }
        },
        "topServiceAverages": {
          "description": "An array of benchmark data points",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopServiceAverages"
          }
        },
        "crashRateByOs": {
          "description": "An array of benchmark data points",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CrashRateByOs"
          }
        },
        "apploadDistribution": {
          "description": "An array of benchmark data points",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApploadDistribution"
          }
        }
      }
    },
    "BenchmarkResponse": {
      "title": "BenchmarkResponse",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/BenchmarkGraph"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "required": [
        "data",
        "links"
      ]
    },
    "CrashRateByOs": {
      "title": "crashRateByOs",
      "type": "object",
      "properties": {
        "startDate": {
          "description": "ISO datetime string: YYYY-MM-DDTHH:MM:SS",
          "type": "string"
        },
        "endDate": {
          "description": "ISO datetime string: YYYY-MM-DDTHH:MM:SS",
          "type": "string"
        },
        "name": {
          "description": "Name of an operating system, e.g. ios_8",
          "type": "string"
        },
        "value": {
          "description": "Crash rate percentage for apps on this platform during this time period",
          "type": "number",
          "format": "double"
        }
      }
    },
    "CrashRateDistribution": {
      "title": "crashRateDistribution",
      "type": "object",
      "properties": {
        "start": {
          "description": "Beginning of crash rate segment",
          "type": "string"
        },
        "end": {
          "description": "End of crash rate segment",
          "type": "string"
        },
        "value": {
          "description": "Percentage of apps with a crash percentage that falls within this segment",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ApploadDistribution": {
      "title": "apploadDistribution",
      "type": "object",
      "properties": {
        "start": {
          "description": "Beginning of app load segment",
          "type": "string"
        },
        "end": {
          "description": "End of app load segment",
          "type": "string"
        },
        "value": {
          "description": "Percentage of apps with an app load rate that falls within this segment",
          "type": "number",
          "format": "double"
        }
      }
    },
    "TopServiceAverages": {
      "title": "topServiceAverages",
      "type": "object",
      "properties": {
        "latency": {
          "description": "Latency for a service",
          "type": "number",
          "format": "double"
        },
        "errorRate": {
          "description": "Error rate for a service",
          "type": "number",
          "format": "double"
        },
        "service": {
          "description": "Name of a service, e.g. facebook",
          "type": "string"
        }
      }
    }
  }
}