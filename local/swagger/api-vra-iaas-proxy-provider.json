{
  "swagger" : "2.0",
  "info" : {
    "description" : "# IaaS Proxy Service API Specification\n\n## What is the IaaS Proxy Service REST API?\n\n**Note**: The  IaaS proxy service APIs are deprecated. If you do use them it is at your own risk, as they will no longer be supported in the future.\n\nThe IaaS proxy provider service acts as a bridge between the service catalog and the IaaS provider. The IaaS proxy provide service calls:\n\n* The catalog service to register resource types, catalog item types,catalog items, and component icons.\n\n* The composition service to register a machine component type.\n\nIt then calls the catalog service to register resource actions. Subsequently, the Iaas proxy provider service calls:\n\n* The reservation service to register reservation type categories, reservation types, and reservation policy types.\n\n* The event broker service to register IaaS event types.\n\n### Downstream Provider Services\n\nThe IaaS proxy provider service interacts with the following downstream provider services:\n\n* IAAS\n* vRO\n\n### Downstream Services for IaaS Registration\n\nThe IaaS proxy provider services interacts with the following services to register IaaS:\n\n* Composition service\n* Catalog service\n* Network service\n* Reservation service\n* Event broker service",
    "version" : "7.3.0-SNAPSHOT",
    "title" : "IaaS Proxy Provider Service API"
  },
  "basePath" : "/iaas-proxy-provider",
  "tags" : [ {
    "name" : "allocations"
  }, {
    "name" : "amazon-images"
  }, {
    "name" : "amazon-request-data"
  }, {
    "name" : "blueprint"
  }, {
    "name" : "blueprint-migration"
  }, {
    "name" : "build-profile-migration"
  }, {
    "name" : "business-groups"
  }, {
    "name" : "callback-endpoint-registry"
  }, {
    "name" : "capacity"
  }, {
    "name" : "chargeback"
  }, {
    "name" : "currency"
  }, {
    "name" : "data"
  }, {
    "name" : "data-center-location"
  }, {
    "name" : "endpoint-configuration"
  }, {
    "name" : "endpoint-migration"
  }, {
    "name" : "entitlements"
  }, {
    "name" : "flag"
  }, {
    "name" : "form"
  }, {
    "name" : "forms"
  }, {
    "name" : "group-and-tenant"
  }, {
    "name" : "groups"
  }, {
    "name" : "hardware-profile"
  }, {
    "name" : "instance-type"
  }, {
    "name" : "internal"
  }, {
    "name" : "ipam-request"
  }, {
    "name" : "iso"
  }, {
    "name" : "key-pair"
  }, {
    "name" : "load-balancer"
  }, {
    "name" : "machine-action"
  }, {
    "name" : "machine-prefix"
  }, {
    "name" : "nat-rule-components"
  }, {
    "name" : "network"
  }, {
    "name" : "network-profile"
  }, {
    "name" : "network-request"
  }, {
    "name" : "openstack-flavors"
  }, {
    "name" : "openstack-images"
  }, {
    "name" : "openstack-security-group"
  }, {
    "name" : "property-definition-migration"
  }, {
    "name" : "provisioning-workflow"
  }, {
    "name" : "reclamation"
  }, {
    "name" : "report"
  }, {
    "name" : "requests"
  }, {
    "name" : "reservation"
  }, {
    "name" : "reservation-policy"
  }, {
    "name" : "schema"
  }, {
    "name" : "scvmm-virtual-hard-disk"
  }, {
    "name" : "security"
  }, {
    "name" : "security-group"
  }, {
    "name" : "security-policy"
  }, {
    "name" : "security-tag"
  }, {
    "name" : "solution-user"
  }, {
    "name" : "transport-zone"
  }, {
    "name" : "upgrade"
  }, {
    "name" : "usage"
  }, {
    "name" : "vm-snapshots"
  }, {
    "name" : "vm-templates"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/api/amazon/images" : {
      "get" : {
        "tags" : [ "amazon-images" ],
        "summary" : "Retrieves the list of available Amazon images",
        "description" : "Retrieves the list of available Amazon images",
        "operationId" : "listAmazonImage",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AmazonImage"
              }
            }
          }
        }
      }
    },
    "/api/amazon/instance-types" : {
      "get" : {
        "tags" : [ "internal", "instance-type" ],
        "summary" : "Retrieves the list of available Instance types",
        "description" : "Retrieves the list of available Instance types",
        "operationId" : "listInstanceType",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InstanceType"
              }
            }
          }
        }
      }
    },
    "/api/amazon/instance-types/{instanceTypeId}" : {
      "get" : {
        "tags" : [ "internal", "instance-type" ],
        "summary" : "Returns an InstanceType.",
        "description" : "Returns the InstanceType associated with the given id.",
        "operationId" : "getInstanceType",
        "parameters" : [ {
          "name" : "instanceTypeId",
          "in" : "path",
          "description" : "The id of the InstanceType.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The instance type is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/InstanceType"
            }
          }
        }
      }
    },
    "/api/amazon/request-data" : {
      "get" : {
        "tags" : [ "amazon-request-data" ],
        "summary" : "Retrieves Amazon request form data.",
        "description" : "Retrieves Amazon request form data.",
        "operationId" : "listAmazonRequestData",
        "parameters" : [ {
          "name" : "businessGroupId",
          "in" : "query",
          "description" : "The business group id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AmazonRequestData"
              }
            }
          }
        }
      }
    },
    "/api/business-groups/allocations" : {
      "get" : {
        "tags" : [ "allocations", "report", "business-groups" ],
        "summary" : "List of the allocations data for business groups.",
        "description" : "Retrieve a paginated list of the allocations data for business groups in the current tenant.",
        "operationId" : "getAllocationsDataRpt",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BusinessGroupAllocationsData"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "allocations", "report", "business-groups" ],
        "summary" : "Accumulated Allocations data for business groups.",
        "description" : "Accumulated Allocations data for selected business groups in the current tenant.",
        "operationId" : "getAllocationsDataTotalsFilteredRpt",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The list of business group ids",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BusinessGroupAllocationsData"
              }
            }
          }
        }
      }
    },
    "/api/business-groups/allocations/totals" : {
      "get" : {
        "tags" : [ "allocations", "report", "business-groups" ],
        "summary" : "Accumulated Allocations data for business groups.",
        "description" : "Accumulated Allocations data for all business groups in the current tenant.",
        "operationId" : "getAllocationsDataTotalsRpt",
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BusinessGroupAllocationsData"
              }
            }
          }
        }
      }
    },
    "/api/business-groups/{groupId}/machines" : {
      "get" : {
        "tags" : [ "allocations", "report", "business-groups" ],
        "summary" : "List of the IaaS Machines for a specific business group.",
        "description" : "List of the IaaS Machines for a specific business group.",
        "operationId" : "getIaaSMachinesRpt",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "the specific busines group id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/IaaSMachine"
              }
            }
          }
        }
      }
    },
    "/api/business-groups/{groupId}/reservations" : {
      "get" : {
        "tags" : [ "allocations", "report", "business-groups" ],
        "summary" : "List of the reservations for a specific business group.",
        "description" : "List of the reservations for a specific business group.",
        "operationId" : "getReservationsRpt",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "the specific busines group id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/IaaSReservation"
              }
            }
          }
        }
      }
    },
    "/api/currency" : {
      "delete" : {
        "tags" : [ "currency" ],
        "summary" : "Invalidates currency symbol cache",
        "description" : "Invalidates currency symbol cache",
        "operationId" : "deleteCurrencyService",
        "responses" : {
          "204" : {
            "description" : "The currency symbol cache is invalidated."
          }
        }
      }
    },
    "/api/data-center-locations" : {
      "get" : {
        "tags" : [ "data-center-location" ],
        "summary" : "Retrieves a page of location properties.",
        "description" : "Retrieves a page of location properties.",
        "operationId" : "listHostProperty",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "query",
          "description" : "The business group id.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "platformTypeId",
          "in" : "query",
          "description" : "The platform type id.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "reservationPolicyName",
          "in" : "query",
          "description" : "The reservation policy name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HostProperty"
              }
            }
          }
        }
      }
    },
    "/api/endpoint-configuration/endpointoperations/candelete" : {
      "post" : {
        "tags" : [ "endpoint-configuration" ],
        "summary" : "Can delete an existing endpoint",
        "description" : "The API checks an existing endpoint to see if it can be deleted. The API returns falseendpoint with the specified id cannot be deleted. It returns true otherwise.",
        "operationId" : "Can delete an existing endpoint",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Request of the endpoint to be deleted.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/endpointDeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "boolean"
            }
          },
          "403" : {
            "description" : "Unauthorized."
          }
        }
      }
    },
    "/api/endpoint-configuration/endpointoperations/canedit" : {
      "post" : {
        "tags" : [ "endpoint-configuration" ],
        "summary" : "Can edit an existing endpoint",
        "description" : "The API checks an existing endpoint to see if it can be edited. The API returns falseendpoint with the specified id cannot be edited. It returns true otherwise.",
        "operationId" : "Can edit an existing endpoint",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Request of the endpoint to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/endpointUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "boolean"
            }
          },
          "403" : {
            "description" : "Unauthorized."
          }
        }
      }
    },
    "/api/endpoint-configuration/endpointoperations/create" : {
      "post" : {
        "tags" : [ "endpoint-configuration" ],
        "summary" : "Creates an endpoint",
        "description" : "The API creates a new endpoint. ",
        "operationId" : "Create a new endpoint",
        "parameters" : [ {
          "in" : "body",
          "name" : "endpointRequest",
          "description" : "Request of endpoint to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/endpointCreateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/endpoint"
            }
          },
          "403" : {
            "description" : "Unauthorized."
          }
        }
      }
    },
    "/api/endpoint-configuration/endpointoperations/delete" : {
      "post" : {
        "tags" : [ "endpoint-configuration" ],
        "summary" : "Deletes an existing endpoint",
        "description" : "The API deletes an existing endpoint. The API returns an error, ifendpoint with the specified id does not exist.",
        "operationId" : "Delete an existing endpoint",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Request of the endpoint to be deleted.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/endpointDeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : ""
          },
          "403" : {
            "description" : "Unauthorized."
          },
          "404" : {
            "description" : "Endpoint with the specified id does not exist."
          }
        }
      }
    },
    "/api/endpoint-configuration/endpointoperations/update" : {
      "post" : {
        "tags" : [ "endpoint-configuration" ],
        "summary" : "Updates an existing endpoint",
        "description" : "The API updates an existing endpoint.",
        "operationId" : "Update an existing endpoint",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Request of the endpoint to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/endpointUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/endpoint"
            }
          },
          "403" : {
            "description" : "Unauthorized."
          }
        }
      }
    },
    "/api/endpoint-configuration/endpointoperations/validate" : {
      "post" : {
        "tags" : [ "endpoint-configuration" ],
        "summary" : "Validates an existing endpoint",
        "description" : "The API validates an existing endpoint.",
        "operationId" : "Validates an existing endpoint",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Request of the endpoint to be validated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/endpointValidateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/endpointValidationResult"
            }
          },
          "403" : {
            "description" : "Unauthorized."
          }
        }
      }
    },
    "/api/endpoint-configuration/endpointtypeoperations/create" : {
      "post" : {
        "tags" : [ "endpoint-configuration" ],
        "summary" : "Creates an endpoint type",
        "description" : "The API creates a new endpoint type. ",
        "operationId" : "Create a new endpoint type",
        "parameters" : [ {
          "in" : "body",
          "name" : "endpointRequest",
          "description" : "Request of endpoint type to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/endpointTypeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/endpointType"
            }
          },
          "403" : {
            "description" : "Unauthorized."
          }
        }
      }
    },
    "/api/endpoint-configuration/endpointtypeoperations/delete" : {
      "post" : {
        "tags" : [ "endpoint-configuration" ],
        "summary" : "Deletes an existing endpoint type",
        "description" : "The API deletes an existing endpoint type. The API returns an error, ifendpoint type with the specified id does not exist.",
        "operationId" : "Delete an existing endpoint type",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Request of the endpoint type to be deleted.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/endpointTypeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : ""
          },
          "403" : {
            "description" : "Unauthorized."
          },
          "404" : {
            "description" : "Endpoint type with the specified id does not exist."
          }
        }
      }
    },
    "/api/endpoint-configuration/endpointtypeoperations/update" : {
      "post" : {
        "tags" : [ "endpoint-configuration" ],
        "summary" : "Updates an existing endpoint type",
        "description" : "The API updates an existing endpoint type.",
        "operationId" : "Update an existing endpoint type",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Request of the endpoint type to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/endpointTypeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/endpointType"
            }
          },
          "403" : {
            "description" : "Unauthorized."
          }
        }
      }
    },
    "/api/isoes" : {
      "get" : {
        "tags" : [ "internal", "iso" ],
        "summary" : "Retrieves the list of available isos",
        "description" : "Retrieves the list of available isos",
        "operationId" : "listISOs",
        "parameters" : [ {
          "name" : "platformTypeId",
          "in" : "query",
          "description" : "The platform type id.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The isos are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Iso"
              }
            }
          }
        }
      }
    },
    "/api/keyPairs" : {
      "get" : {
        "tags" : [ "key-pair" ],
        "summary" : "Returns a page of the key pairs.",
        "description" : "Returns a page of the key pairs.",
        "operationId" : "listKeyPair",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/KeyPair"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "key-pair" ],
        "summary" : "Create a new KeyPair",
        "description" : "Create a new KeyPair",
        "operationId" : "createKeyPair",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The key pair to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/KeyPair"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KeyPair"
            }
          },
          "201" : {
            "description" : "The key pair is created.",
            "schema" : {
              "$ref" : "#/definitions/KeyPair"
            }
          }
        }
      }
    },
    "/api/keyPairs/{id}" : {
      "get" : {
        "tags" : [ "key-pair" ],
        "summary" : "Returns a key pair.",
        "description" : "Returns the key pair associated with the given id.",
        "operationId" : "getKeyPair",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the key pair.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "The key pair is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/KeyPair"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "key-pair" ],
        "summary" : "Updates an existing KeyPair",
        "description" : "Updates an existing KeyPair.",
        "operationId" : "updateKeyPair",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The unique identifier for the key pair.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The key pair to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/KeyPair"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The key pair is updated."
          }
        }
      },
      "delete" : {
        "tags" : [ "key-pair" ],
        "summary" : "Deletes a key pair corresponding to its unique Id",
        "description" : "Deletes a key pair corresponding to its unique Id",
        "operationId" : "deleteKeyPair",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the key pair to be deleted.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "204" : {
            "description" : "The key pair is deleted."
          }
        }
      }
    },
    "/api/machine-actions" : {
      "get" : {
        "tags" : [ "internal", "machine-action" ],
        "summary" : "Retrieves the list of available machine actions.",
        "description" : "Retrieves the list of available machine actions.",
        "operationId" : "listCustomMachineAction",
        "parameters" : [ {
          "name" : "platformTypeId",
          "in" : "query",
          "description" : "The platform type id.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomMachineAction"
              }
            }
          }
        }
      }
    },
    "/api/machine-prefixes" : {
      "get" : {
        "tags" : [ "machine-prefix" ],
        "summary" : "Retrieves the list of available machine prefixes.",
        "description" : "Retrieves the list of available machine prefixes.",
        "operationId" : "listMachinePrefix",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The machine prefixes are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MachinePrefix"
              }
            }
          }
        }
      }
    },
    "/api/machines/register" : {
      "post" : {
        "tags" : [ "internal" ],
        "summary" : "Registers an unmanaged machine.",
        "description" : "Registers an unmanaged machine.",
        "operationId" : "registerMachine",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/registerMachineInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful registration."
          }
        }
      }
    },
    "/api/management-endpoints" : {
      "get" : {
        "tags" : [ "internal" ],
        "summary" : "Returns a page of management endpoints from iaas provider.",
        "description" : "Returns a page of management endpoints with support for OData filtering, sorting and paging.",
        "operationId" : "Get Management Endpoints",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ManagementEndpoint"
            }
          }
        }
      }
    },
    "/api/network/nat-rule-components/{id}" : {
      "get" : {
        "tags" : [ "nat-rule-components" ],
        "summary" : "Retrieves the list of NatRuleComponents.",
        "description" : "Retrieves the list of NatRuleComponents.",
        "operationId" : "listNatRuleComponents",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NatRuleComponent"
              }
            }
          }
        }
      }
    },
    "/api/network/profiles" : {
      "get" : {
        "tags" : [ "network-profile" ],
        "summary" : "Returns a page of the network profiles.",
        "description" : "Returns a page of the network profiles.",
        "operationId" : "listNetworkProfile",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NetworkProfile"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "network-profile" ],
        "summary" : "Create a new NetworkProfile",
        "description" : "Create a new NetworkProfile",
        "operationId" : "createNetworkProfile",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The network profile to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NetworkProfile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/NetworkProfile"
            }
          },
          "201" : {
            "description" : "The network profile is created.",
            "schema" : {
              "$ref" : "#/definitions/NetworkProfile"
            }
          }
        }
      }
    },
    "/api/network/profiles/addresses/{id}" : {
      "get" : {
        "tags" : [ "network-profile" ],
        "summary" : "Returns a list of IP addresses within the network profile.",
        "description" : "Returns a list of IP addresses within the network profile.",
        "operationId" : "getNetworkProfileAddresses",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the network profile.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The addresses for the network profile are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StaticIPv4Address"
              }
            }
          }
        }
      }
    },
    "/api/network/profiles/range-summaries/{id}" : {
      "get" : {
        "tags" : [ "network-profile" ],
        "summary" : "Returns a list of range summaries within the network profile.",
        "description" : "Returns a list of range summaries within the network profile.",
        "operationId" : "getNetworkProfileRangeSummaries",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the network profile.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of range summaries for the network profile are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StaticIPv4RangeSummary"
              }
            }
          }
        }
      }
    },
    "/api/network/profiles/tenant" : {
      "get" : {
        "tags" : [ "network-profile" ],
        "summary" : "Returns a page of the network profiles within the current tenant.",
        "description" : "Returns a page of the network profiles within the current tenant.",
        "operationId" : "listNetworkProfileForTenant",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NetworkProfile"
              }
            }
          }
        }
      }
    },
    "/api/network/profiles/{id}" : {
      "get" : {
        "tags" : [ "network-profile" ],
        "summary" : "Returns the network profile.",
        "description" : "Returns the network profile associated with the given id.",
        "operationId" : "getNetworkProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the network profile.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The network profile is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/NetworkProfile"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "network-profile" ],
        "summary" : "Updates an existing NetworkProfile.",
        "description" : "Updates an existing NetworkProfile.",
        "operationId" : "updateOrCreateNetworkProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The unique identifier for the network profile.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The network profile to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NetworkProfile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/NetworkProfile"
            }
          },
          "204" : {
            "description" : "The network profile is updated.",
            "schema" : {
              "$ref" : "#/definitions/NetworkProfile"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "network-profile" ],
        "summary" : "Deletes a network profile corresponding to its unique Id.",
        "description" : "Deletes a network profile corresponding to its unique Id.",
        "operationId" : "deleteNetworkProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the network profile to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "The network profile is deleted."
          }
        }
      }
    },
    "/api/openstack/flavors" : {
      "get" : {
        "tags" : [ "internal", "openstack-flavors" ],
        "summary" : "Retrieves the list of available Openstack flavors",
        "description" : "Retrieves the list of available Openstack flavors",
        "operationId" : "listFlavor",
        "parameters" : [ {
          "name" : "regionId",
          "in" : "query",
          "description" : "The region id.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Openstack flavors are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Flavor"
              }
            }
          }
        }
      }
    },
    "/api/openstack/images" : {
      "get" : {
        "tags" : [ "internal", "openstack-images" ],
        "summary" : "Retrieves the list of available Openstack images.",
        "description" : "Retrieves the list of available Openstack images.",
        "operationId" : "listOpenstackImage",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Openstack images are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OpenstackImage"
              }
            }
          }
        }
      }
    },
    "/api/openstack/security-groups/businessgroup/{id}" : {
      "get" : {
        "tags" : [ "internal", "openstack-security-group" ],
        "summary" : "Retrieves the available openstack security groups.",
        "description" : "Retrieves the available openstack security groups based on business group.",
        "operationId" : "listOpenstackSecurityGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The business group id.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Openstack security groups are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OpenstackSecurityGroup"
              }
            }
          }
        }
      }
    },
    "/api/provisioning-workflows" : {
      "get" : {
        "tags" : [ "internal", "provisioning-workflow" ],
        "summary" : "Retrieves a page of provisioning workflows.",
        "description" : "Retrieves a page of provisioning workflows based on action and platform type.",
        "operationId" : "getProvisioningWorkflow",
        "parameters" : [ {
          "name" : "platformTypeId",
          "in" : "query",
          "description" : "The platform type id.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actionId",
          "in" : "query",
          "description" : "The action id.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The provisioning workflows are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProvisioningWorkflow"
              }
            }
          }
        }
      }
    },
    "/api/reports/capacityUsageReport/blueprints" : {
      "get" : {
        "tags" : [ "usage", "report", "capacity" ],
        "summary" : "Collection of blueprint names.",
        "description" : "Collection of blueprint names.",
        "operationId" : "getBlueprintsRpt",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/api/reports/capacityUsageReport/byBlueprint" : {
      "get" : {
        "tags" : [ "usage", "report", "capacity" ],
        "summary" : "Retrieve a capacity usage report keyed by the blueprint.",
        "description" : "Retrieve a capacity usage report keyed by the blueprint.",
        "operationId" : "getCapacityUsageByBlueprintRpt",
        "parameters" : [ {
          "name" : "blueprintName",
          "in" : "query",
          "description" : "the name of the blueprint to show machines for, or null to include all machines.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "machineType",
          "in" : "query",
          "description" : "the type of machine to show, or null to include all types of machines.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CapacityUsageByBlueprintViewModel"
              }
            }
          }
        }
      }
    },
    "/api/reports/capacityUsageReport/byComputeResource" : {
      "get" : {
        "tags" : [ "usage", "report", "capacity" ],
        "summary" : "Retrieve a capacity usage report keyed by the compute resource.",
        "description" : "Retrieve a capacity usage report keyed by the compute resource.",
        "operationId" : "getCapacityUsageByComputeResourceRpt",
        "parameters" : [ {
          "name" : "computeResourceName",
          "in" : "query",
          "description" : "the name of the compute resource to show machines for, or null to include all machines",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "machineType",
          "in" : "query",
          "description" : "the type of machine to show, or null to include all types of machines.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CapacityUsageByComputeResourceViewModel"
              }
            }
          }
        }
      }
    },
    "/api/reports/capacityUsageReport/byGroup" : {
      "get" : {
        "tags" : [ "usage", "report", "capacity" ],
        "summary" : "Retrieve a capacity usage report keyed by the group.",
        "description" : "Retrieve a capacity usage report keyed by the group.",
        "operationId" : "getCapacityUsageByGroupRpt",
        "parameters" : [ {
          "name" : "groupName",
          "in" : "query",
          "description" : "the name of the group to show machines for, or null to include all machines.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "machineType",
          "in" : "query",
          "description" : "the type of machine to show, or null to include all types of machines.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CapacityUsageByGroupViewModel"
              }
            }
          }
        }
      }
    },
    "/api/reports/capacityUsageReport/byOwner" : {
      "get" : {
        "tags" : [ "usage", "report", "capacity" ],
        "summary" : "Retrieve a capacity usage report keyed by the machine owner.",
        "description" : "Retrieve a capacity usage report keyed by the machine owner.",
        "operationId" : "getCapacityUsageByOwnerRpt",
        "parameters" : [ {
          "name" : "ownerName",
          "in" : "query",
          "description" : "the name of the owner to show machines for, or null to include all machines.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "machineType",
          "in" : "query",
          "description" : "the type of machine to show, or null to include all types of machines.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CapacityUsageByOwnerViewModel"
              }
            }
          }
        }
      }
    },
    "/api/reports/capacityUsageReport/computeResources" : {
      "get" : {
        "tags" : [ "usage", "report", "capacity" ],
        "summary" : "Collection of compute resource names.",
        "description" : "Collection of compute resource names.",
        "operationId" : "getComputeResourcesRpt",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/api/reports/capacityUsageReport/groups" : {
      "get" : {
        "tags" : [ "usage", "report", "capacity" ],
        "summary" : "Collection of group names.",
        "description" : "Collection of group names.",
        "operationId" : "getGroupsRpt",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/api/reports/capacityUsageReport/owners" : {
      "get" : {
        "tags" : [ "usage", "report", "capacity" ],
        "summary" : "Collection of user names",
        "description" : "Collection of user names, one for each user that is listed as the owner of at least one machine.",
        "operationId" : "getMachineOwnersRpt",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/api/reports/chargebackReport/byOwner" : {
      "get" : {
        "tags" : [ "chargeback", "report", "groups" ],
        "summary" : "Retrieve a chargeback report keyed by the machine owner.",
        "description" : "Retrieve a chargeback report keyed by the machine owner.",
        "operationId" : "getChargebackByOwnerRpt",
        "parameters" : [ {
          "name" : "groupName",
          "in" : "query",
          "description" : "the name of the group to show machines for, or null to include all groups",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "machineType",
          "in" : "query",
          "description" : "the type of machine to show, or null to include all types of machines",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "the start of the report, null is beginning of time",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "the end of the report, null is end of time",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ChargebackByGroupViewModel"
              }
            }
          }
        }
      }
    },
    "/api/reports/chargebackReport/groups" : {
      "get" : {
        "tags" : [ "chargeback", "report", "groups" ],
        "summary" : "Collection of group names.",
        "description" : "Collection of group names.",
        "operationId" : "getGroupsRptChargebacks",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/api/reports/reclamationSavingsReport/byGroup" : {
      "get" : {
        "tags" : [ "report", "groups", "reclamation" ],
        "summary" : "Retrieve a reclamation cost savings report keyed by the group.",
        "description" : "Retrieve a reclamation cost savings report keyed by the group.",
        "operationId" : "getReclamationSavingsByGroupRpt",
        "parameters" : [ {
          "name" : "groupName",
          "in" : "query",
          "description" : "the name of the group to show savings for, or null to include all machines.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "machineType",
          "in" : "query",
          "description" : "the type of machine to show, or null to include all types of machines.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beginDate",
          "in" : "query",
          "description" : "the start of the report.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReclamationSavingsByGroupViewModel"
              }
            }
          }
        }
      }
    },
    "/api/reports/reclamationSavingsReport/byOwner" : {
      "get" : {
        "tags" : [ "report", "groups", "reclamation" ],
        "summary" : "Retrieve a reclamation cost savings report keyed by the machine owner.",
        "description" : "Retrieve a reclamation cost savings report keyed by the machine owner.",
        "operationId" : "getReclamationSavingsByOwnerRpt",
        "parameters" : [ {
          "name" : "ownerName",
          "in" : "query",
          "description" : "the name of the owner to show savings for, or null to include all machines.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "machineType",
          "in" : "query",
          "description" : "the type of machine to show, or null to include all types of machines.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beginDate",
          "in" : "query",
          "description" : "the start of the report.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReclamationSavingsByOwnerViewModel"
              }
            }
          }
        }
      }
    },
    "/api/reports/reclamationSavingsReport/groups" : {
      "get" : {
        "tags" : [ "report", "groups", "reclamation" ],
        "summary" : "Collection of group names.",
        "description" : "Collection of group names.",
        "operationId" : "getGroupsRptReclamation",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/api/reports/reclamationSavingsReport/owners" : {
      "get" : {
        "tags" : [ "report", "groups", "reclamation" ],
        "summary" : "Collection of user names",
        "description" : "Collection of user names, one for each user that is listed as the owner of at least one machine.",
        "operationId" : "getMachineOwnersRptReclamation",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The report is retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/api/scvmm/hardware-profiles" : {
      "get" : {
        "tags" : [ "internal", "hardware-profile" ],
        "summary" : "Retrieves the list of available hardware profiles.",
        "description" : "Retrieves the list of available hardware profiles.",
        "operationId" : "listHardwareProfiles",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The hardware profiles are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HardwareProfile"
              }
            }
          }
        }
      }
    },
    "/api/scvmm/virtual-hard-disks" : {
      "get" : {
        "tags" : [ "scvmm-virtual-hard-disk", "internal" ],
        "summary" : "Retrieves the list of virtual hard disks",
        "description" : "Retrieves the list of virtual hard disks",
        "operationId" : "listVirtualHardDisks",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The virtual hard disks are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VirtualHardDisk"
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}" : {
      "post" : {
        "tags" : [ "callback-endpoint-registry" ],
        "summary" : "Asynchronous call to find IaaS services",
        "description" : "Asynchronous call to find IaaS services by serviceId and add service catalog callback endpoint type UpdateCatalogItemType and ResourceType registrations for Iaas Service.",
        "operationId" : "registerServiceCallbacks",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The instance id of a ServiceInfo registration with Component Registry.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "task",
          "in" : "query",
          "description" : "task",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "The request is submitted."
          }
        }
      }
    },
    "/api/services/{serviceId}/data-service/data/{classId}/{id}" : {
      "post" : {
        "tags" : [ "schema", "data" ],
        "summary" : "Retrieve the instance data.",
        "description" : "Retrieve the instance data for service and class",
        "operationId" : "getInstanceData",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "classId",
          "in" : "path",
          "description" : "The class id of object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The instance id.",
          "required" : true,
          "type" : "string",
          "pattern" : ".+$"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The dynamic data request object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DynamicDataRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The specific instance data is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/DynamicDataResponse"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/data-service/schema/{classId}/default" : {
      "get" : {
        "tags" : [ "schema", "data" ],
        "summary" : "Retrieve the default schema.",
        "description" : "Retrieve the default schema for service and class",
        "operationId" : "getDefaultSchema",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "classId",
          "in" : "path",
          "description" : "The class id of object.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The default schema is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/Schema"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/data-service/schema/{classId}/default/{fieldId}/values" : {
      "post" : {
        "tags" : [ "schema", "data" ],
        "summary" : "Get the permissible values.",
        "description" : "Get the permissible values of a field in the specified schema.",
        "operationId" : "getDefaultSchemaFields",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "classId",
          "in" : "path",
          "description" : "The class id of object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fieldId",
          "in" : "path",
          "description" : "The id of a field on the schema of the specified object class.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The element values request object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/elementValuesRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permissible values of the specified schema are retrieved.",
            "schema" : {
              "$ref" : "#/definitions/elementValues"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/data-service/schema/{classId}/instances/{id}" : {
      "get" : {
        "tags" : [ "schema", "data" ],
        "summary" : "Retrieve the instance schema.",
        "description" : "Retrieve the instance schema for service and class",
        "operationId" : "getInstanceSchema",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "classId",
          "in" : "path",
          "description" : "The class id of object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The instance id.",
          "required" : true,
          "type" : "string",
          "pattern" : ".+$"
        } ],
        "responses" : {
          "200" : {
            "description" : "The specific instance schema is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/Schema"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/data-service/schema/{classId}/types/{typeFilter}" : {
      "get" : {
        "tags" : [ "schema", "data" ],
        "summary" : "Retrieve the specified schema.",
        "description" : "Retrieve the specified schema for service and class",
        "operationId" : "getSpecifiedSchema",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "classId",
          "in" : "path",
          "description" : "The class id of object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "typeFilter",
          "in" : "path",
          "description" : "The specified type of schema.",
          "required" : true,
          "type" : "string",
          "pattern" : ".+$"
        } ],
        "responses" : {
          "200" : {
            "description" : "The specified type of schema is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/Schema"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values" : {
      "post" : {
        "tags" : [ "schema", "data" ],
        "summary" : "Get the permissible values.",
        "description" : "Get the permissible values of a field in the type specific schema.",
        "operationId" : "getTypeSchemaFields",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "classId",
          "in" : "path",
          "description" : "The class id of object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "typeFilter",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".+$"
        }, {
          "name" : "fieldId",
          "in" : "path",
          "description" : "The id of a field on the schema of the specified object class.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The element values request object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/elementValuesRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permissible values of the specified field are retrieved.",
            "schema" : {
              "$ref" : "#/definitions/elementValues"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/ipam/{bindingId}/complete" : {
      "post" : {
        "tags" : [ "ipam-request" ],
        "summary" : "Method to be called by ipam service to notify the iaas proxy service that a previously submitted request has been completed",
        "description" : "Callback called by the ipam service",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Provider ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "bindingId",
          "in" : "path",
          "description" : "Binding ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Status object returned from the provider",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ipamRequestStatus"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Indicate completion of a request"
          }
        }
      }
    },
    "/api/services/{serviceId}/network/load-balancers" : {
      "get" : {
        "tags" : [ "load-balancer" ],
        "summary" : "Returns a page of the LoadBalancer.",
        "description" : "Returns a page of the LoadBalancer from the iaas provider.",
        "operationId" : "listLoadBalancer",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/loadBalancer"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "load-balancer" ],
        "summary" : "Create and save a LoadBalancer",
        "description" : "Create and save a LoadBalancer",
        "operationId" : "createLoadBalancer",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The Load Balancer to be created and saved.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/loadBalancer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/loadBalancer"
            }
          },
          "201" : {
            "description" : "The load balancer is created.",
            "schema" : {
              "$ref" : "#/definitions/loadBalancer"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/load-balancers-allocation-constraints" : {
      "post" : {
        "tags" : [ "load-balancer" ],
        "summary" : "Get allocation constraint",
        "description" : "Get allocation constraint for load balancer",
        "operationId" : "getAllocationConstraint",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The load balancer.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/loadBalancer"
          }
        }, {
          "name" : "relatedCompTypeId",
          "in" : "query",
          "description" : "The related CompTypeId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "allocation constraint retrieved.",
            "schema" : {
              "$ref" : "#/definitions/allocationConstraint"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/load-balancers-allocator" : {
      "post" : {
        "tags" : [ "load-balancer" ],
        "summary" : "Allocate Load Balancer Component",
        "description" : "Allocate Load Balancer Component for a NetworkProviderRequest object",
        "operationId" : "allocateLoadBalancer",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The NetworkProviderRequest object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/networkProviderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Component allocation request sent."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/load-balancers-deallocator" : {
      "post" : {
        "tags" : [ "load-balancer" ],
        "summary" : "Deallocate Component",
        "description" : "Deallocate Component for a NetworkProviderRequest object",
        "operationId" : "deallocateComponent",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The NetworkProviderRequest object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/networkProviderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Component Deallocated."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/load-balancers/{id}" : {
      "get" : {
        "tags" : [ "load-balancer" ],
        "summary" : "Returns a LoadBalancer.",
        "description" : "Returns the LoadBalancer associated with the given id.",
        "operationId" : "getLoadBalancer",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the LoadBalancer",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The load balancer is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/loadBalancer"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "load-balancer" ],
        "summary" : "Updates an existing managed LoadBalancer",
        "description" : "Updates an existing managed LoadBalancer",
        "operationId" : "updateLoadBalancer",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the LoadBalancer to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the LoadBalancer to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/loadBalancer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The load balancer is updated.",
            "schema" : {
              "$ref" : "#/definitions/loadBalancer"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/networks" : {
      "get" : {
        "tags" : [ "network" ],
        "summary" : "Returns a page of the Network.",
        "description" : "Returns a page of the Network from the iaas provider.",
        "operationId" : "listNetwork",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/network"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "network" ],
        "summary" : "Create and save a Network",
        "description" : "Create and save a Network upon validation on Network fields",
        "operationId" : "createNetwork",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The Network to be created and saved.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/network"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/network"
            }
          },
          "201" : {
            "description" : "The network is created.",
            "schema" : {
              "$ref" : "#/definitions/network"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/networks-allocation-constraints" : {
      "post" : {
        "tags" : [ "network" ],
        "summary" : "Get allocation constraint",
        "description" : "Get allocation constraint for the network",
        "operationId" : "getNetworkAllocationConstraint",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The network containing the allocation constraint",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/network"
          }
        }, {
          "name" : "relatedCompTypeId",
          "in" : "query",
          "description" : "The related CompTypeId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "$ref" : "#/definitions/allocationConstraint"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/networks-allocator" : {
      "post" : {
        "tags" : [ "network" ],
        "summary" : "Allocate Network Component",
        "description" : "Allocate Network Component for a NetworkProviderRequest object",
        "operationId" : "allocateNetworkComponent",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The NetworkProviderRequest object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/networkProviderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Component allocation request sent."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/networks-deallocator" : {
      "post" : {
        "tags" : [ "network" ],
        "summary" : "Deallocate Component",
        "description" : "Deallocate Component for a NetworkProviderRequest object",
        "operationId" : "deallocateNetworkComponent",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The NetworkProviderRequest object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/networkProviderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Component Deallocated."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/networks/{id}" : {
      "get" : {
        "tags" : [ "network" ],
        "summary" : "Returns the Network.",
        "description" : "Returns the Network associated with the given id.",
        "operationId" : "getNetwork",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the Network.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The network is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/network"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "network" ],
        "summary" : "Deletes a Network",
        "description" : "Deletes a Network corresponding to its unique Id.",
        "operationId" : "deleteNetwork",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of a Network.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "The Network is deleted."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/requests" : {
      "post" : {
        "tags" : [ "network-request", "network" ],
        "summary" : "Submit request from network service.",
        "description" : "Submit request from network service to the IaaS proxy provider service",
        "operationId" : "submitRequest",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Network Service representation of a request.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/networkProviderRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The request is submitted.",
            "schema" : {
              "$ref" : "#/definitions/ResponseEntity"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-groups" : {
      "get" : {
        "tags" : [ "security", "security-group" ],
        "summary" : "Returns a page of the SecurityGroup.",
        "description" : "Returns a page of the SecurityGroup from the iaas provider.",
        "operationId" : "listSecurityGroup",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Endpoint name for filtering the security groups",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/securityGroup"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "security", "security-group" ],
        "summary" : "Create and save a SecurityGroup",
        "description" : "Create and save a SecurityGroup upon validation on SecurityGroup fields",
        "operationId" : "createSecurityGroup",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The SecurityGroup to be created and saved.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/securityGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/securityGroup"
            }
          },
          "201" : {
            "description" : "The security group is created.",
            "schema" : {
              "$ref" : "#/definitions/securityGroup"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-groups-allocation-constraints" : {
      "post" : {
        "tags" : [ "security", "security-group" ],
        "summary" : "Get allocation constraint",
        "description" : "Get allocation constraint for security group",
        "operationId" : "getSecurityGroupAllocationConstraint",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The security group.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/securityGroup"
          }
        }, {
          "name" : "relatedCompTypeId",
          "in" : "query",
          "description" : "The related CompTypeId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "$ref" : "#/definitions/allocationConstraint"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-groups-allocator" : {
      "post" : {
        "tags" : [ "security", "security-group" ],
        "summary" : "Allocate Security Group Component",
        "description" : "Allocate Security Group Component for a NetworkProviderRequest object",
        "operationId" : "allocateSecurityGroup",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The NetworkProviderRequest object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/networkProviderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Component allocation request sent."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-groups-deallocator" : {
      "post" : {
        "tags" : [ "security", "security-group" ],
        "summary" : "Deallocate Component",
        "description" : "Deallocate Component for a NetworkProviderRequest object",
        "operationId" : "deallocateComponent",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The NetworkProviderRequest object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/networkProviderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Component Deallocated."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-groups/{id}" : {
      "get" : {
        "tags" : [ "security", "security-group" ],
        "summary" : "Returns the SecurityGroup.",
        "description" : "Returns the SecurityGroup associated with the given id.",
        "operationId" : "getSecurityGroupPolicy",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the SecurityGroup to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The security group policy is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/securityGroup"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "security", "security-group" ],
        "summary" : "Updates an existing managed SecurityGroup",
        "description" : "Updates an existing managed SecurityGroup upon validation on SecurityGroup fields.Returns the updated SecurityGroup or RestEntity which wraps the newly created SecurityGroup.",
        "operationId" : "updateSecurityGroup",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the SecurityGroup to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the SecurityGroup to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/securityGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The security group is updated.",
            "schema" : {
              "$ref" : "#/definitions/securityGroup"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "security", "security-group" ],
        "summary" : "Deletes a SecurityGroup",
        "description" : "Deletes a SecurityGroup corresponding to its unique Id.",
        "operationId" : "deleteSecurityGroup",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the SecurityGroup to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "The security group is deleted."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-groups/{id}/machines" : {
      "post" : {
        "tags" : [ "security", "security-group" ],
        "summary" : "Add a list of machines to a security group",
        "description" : "Add a list of machines to a security group",
        "operationId" : "assignMachinesToSecurityGroup",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id that identifies the Security Group to add machine(s) to.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The list of virtualMachineIds to be assigned to the security group.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The machines are successfully assigned to the security group."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-groups/{id}/security-policies" : {
      "post" : {
        "tags" : [ "security", "security-group" ],
        "summary" : "Add a list of security policies",
        "description" : "Add a list of security policies to a security group",
        "operationId" : "assignSecurityPolicesToSecurityGroup",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id that identifies the Security Group to add security policies to",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The list of security policy ids to be assigned to the security group.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The machines are assigned to the security group."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-policies" : {
      "get" : {
        "tags" : [ "security", "security-policy" ],
        "summary" : "Returns a page of the SecurityPolicy.",
        "description" : "Returns a page of the SecurityPolicy from the iaas provider.",
        "operationId" : "listSecurityPolicyList",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/securityPolicy"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "security", "security-policy" ],
        "summary" : "Create and save a SecurityPolicy",
        "description" : "Create and save a SecurityPolicy upon validation on SecurityPolicy fields",
        "operationId" : "createSecurityPolicy",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The security policy object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/securityPolicy"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/securityPolicy"
            }
          },
          "201" : {
            "description" : "The security policy is created.",
            "schema" : {
              "$ref" : "#/definitions/securityPolicy"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-policies/{id}" : {
      "get" : {
        "tags" : [ "security", "security-policy" ],
        "summary" : "Returns a SecurityPolicy.",
        "description" : "Returns the SecurityPolicy associated with the given id.",
        "operationId" : "getSecurityPolicy",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the SecurityPolicy",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The security policy is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/securityPolicy"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-policy-load" : {
      "post" : {
        "tags" : [ "security", "security-policy" ],
        "summary" : "Load a security policy",
        "description" : "Load a security policy",
        "operationId" : "loadSecurityPolicy",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The SecurityPolicy to be loaded.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/securityPolicy"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/securityPolicy"
            }
          },
          "201" : {
            "description" : "The security policy is loaded.",
            "schema" : {
              "$ref" : "#/definitions/securityPolicy"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-tag-load" : {
      "post" : {
        "tags" : [ "security", "security-tag" ],
        "summary" : "Load a security tag",
        "description" : "Load a security tag",
        "operationId" : "loadSecurityTag",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The security tag object to be loaded.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/securityTag"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/securityTag"
            }
          },
          "201" : {
            "description" : "The security tag is loaded.",
            "schema" : {
              "$ref" : "#/definitions/securityTag"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-tags" : {
      "get" : {
        "tags" : [ "security", "security-tag" ],
        "summary" : "Returns a page of the SecurityTag.",
        "description" : "Returns a page of the SecurityTag from the iaas provider.",
        "operationId" : "listSecurityTag",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Endpoint name for filtering the security tags",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/securityTag"
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-tags-allocation-constraints" : {
      "post" : {
        "tags" : [ "security", "security-tag" ],
        "summary" : "Get allocation constraint",
        "description" : "Get allocation constraint for security tag",
        "operationId" : "getSecurityTagAllocationConstraint",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The security tag.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/securityTag"
          }
        }, {
          "name" : "relatedCompTypeId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "$ref" : "#/definitions/allocationConstraint"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-tags-allocator" : {
      "post" : {
        "tags" : [ "security", "security-tag" ],
        "summary" : "Allocate Security Tag Component",
        "description" : "Allocate Security Tag Component for a NetworkProviderRequest object",
        "operationId" : "allocateSecurityTag",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The NetworkProviderRequest object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/networkProviderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Component allocation request sent."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-tags-deallocator" : {
      "post" : {
        "tags" : [ "security", "security-tag" ],
        "summary" : "Deallocate Component",
        "description" : "Deallocate Component for a NetworkProviderRequest object",
        "operationId" : "deallocateComponent",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The NetworkProviderRequest object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/networkProviderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Component Deallocated."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-tags/applyToMachine/{machineId}" : {
      "post" : {
        "tags" : [ "security", "security-tag" ],
        "summary" : "Add a list of security tags to a machine",
        "description" : "Add a list of security tags to a machine",
        "operationId" : "aApplySecurityTagsToMachine",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "machineId",
          "in" : "path",
          "description" : "The id that identifies the machine to which to add the Security Tags.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The list of Security Tags to be assigned to the machine.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The security tags applied to the machine."
          }
        }
      }
    },
    "/api/services/{serviceId}/network/security-tags/{id}" : {
      "get" : {
        "tags" : [ "security", "security-tag" ],
        "summary" : "Returns a SecurityTag.",
        "description" : "Returns the SecurityTag associated with the given id.",
        "operationId" : "getSecurityTag",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the SecurityTag",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The security tag is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/securityTag"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/post-submission-extension" : {
      "post" : {
        "tags" : [ "internal", "requests" ],
        "summary" : "Perform post request submission actions.",
        "description" : "Perform post request submission actions. Retrieves the complete set of custom properties associated with a request for a blueprint.",
        "operationId" : "Perform Post Submission Action",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Service Catalog representation of a blueprint request.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/providerRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "$ref" : "#/definitions/ProviderRequestExtension"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/requestValidations" : {
      "post" : {
        "tags" : [ "internal", "requests" ],
        "summary" : "Validate catalog request.",
        "description" : "Validates un-submitted catalog request and gets the quotes for the request.The request could be a machine request or resource action request.",
        "operationId" : "Validate Request",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Service Catalog representation of a blueprint request.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/providerRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : ""
          }
        }
      }
    },
    "/api/services/{serviceId}/requests" : {
      "post" : {
        "tags" : [ "internal", "requests" ],
        "summary" : "Submit request from service catalog.",
        "description" : "Submit catalog request to iaas proxy provider service.",
        "operationId" : "Submit Request",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Service catalog representation of a blueprint request.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/providerRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The request is submitted.",
            "schema" : {
              "$ref" : "#/definitions/ResponseEntity"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/requests/{requestId}/complete" : {
      "post" : {
        "tags" : [ "solution-user", "internal" ],
        "summary" : "Signal catalog request completion.",
        "description" : "Updates the server catalog from IaaS service for request completion.It does not perform resource updating.",
        "operationId" : "Complete Request",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "requestId",
          "in" : "path",
          "description" : "Unique idenfier for the request.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callbackServiceId",
          "in" : "query",
          "description" : "Callback service identifier.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "resourceAction",
          "in" : "query",
          "description" : "Resource action.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Request completion details such as request state, resource identifiers and completion text.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/requestCompletion"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful operation."
          }
        }
      }
    },
    "/api/services/{serviceId}/requests/{requestId}/rollback" : {
      "post" : {
        "tags" : [ "internal", "requests" ],
        "summary" : "Rollback a rejected catalog request.",
        "description" : "Rolls back a rejected request from the service catalog to IaaS.",
        "operationId" : "Rollback Request",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "requestId",
          "in" : "path",
          "description" : "Unique identifier for the request.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Rollback request data such as resource identifiers etc.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/providerRollbackRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful operation."
          }
        }
      }
    },
    "/api/services/{serviceId}/reservations" : {
      "get" : {
        "tags" : [ "reservation" ],
        "summary" : "Returns a page of the reservations from iaas provider.",
        "description" : "Returns a page of the reservations, with different content in extensionData depending on the parameter specified in expandMode.",
        "operationId" : "Get Reservations",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "IaaS reservation type e.g. Virtual, Cloud, Physical, Machine",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expandMode",
          "in" : "query",
          "description" : "Expand reservation on its extended data. e.g. reservation, reservationInfo, reservationId",
          "required" : false,
          "type" : "string",
          "default" : "reservation"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/reservation"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "reservation" ],
        "summary" : "Create and save a reservation in iaas provider.",
        "description" : "Create and save a reservation upon validation on Reservation fields.",
        "operationId" : "Create Reservation",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The reservation object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/reservation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/reservation"
            }
          },
          "201" : {
            "description" : "The reservation is created.",
            "schema" : {
              "$ref" : "#/definitions/reservation"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/reservations/policies" : {
      "get" : {
        "tags" : [ "reservation", "reservation-policy" ],
        "summary" : "Returns a page of the reservation policy.",
        "description" : "Returns a page of the reservation policy from iaas provider.",
        "operationId" : "Get Reservation Policies",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/reservationPolicy"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "reservation", "reservation-policy" ],
        "summary" : "Create and save a reservation policy.",
        "description" : "Create and save a reservation policy upon validation on reservation policy fields.",
        "operationId" : "Create Reservation Policy",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The reservation policy object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/reservationPolicy"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/reservationPolicy"
            }
          },
          "201" : {
            "description" : "The reservation policy is created.",
            "schema" : {
              "$ref" : "#/definitions/reservationPolicy"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/reservations/policies/{id}" : {
      "get" : {
        "tags" : [ "reservation", "reservation-policy" ],
        "summary" : "Returns the reservation policy.",
        "description" : "Returns the reservation policy associated with the given id.",
        "operationId" : "Get Reservation Policy",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the reservation policy to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "$ref" : "#/definitions/reservationPolicy"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "reservation", "reservation-policy" ],
        "summary" : "Updates or creates a reservation policy.",
        "description" : "Updates or creates a reservation policy upon validation on reservation policy fields.Returns the updated ReservationPolicy or RestEntity which wraps the newly created ReservationPolicy.",
        "operationId" : "Update or create Reservation Policy",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the reservation policy to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The reservation policy object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/reservationPolicy"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/reservationPolicy"
            }
          },
          "204" : {
            "description" : "The reservation policy is updated.",
            "schema" : {
              "$ref" : "#/definitions/reservationPolicy"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "reservation", "reservation-policy" ],
        "summary" : "Deletes a reservation policy.",
        "description" : "Deletes a reservation policy corresponding to its unique Id.",
        "operationId" : "Delete Reservation Policy",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the reservation policy to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "The reservation policy is updated.",
            "schema" : {
              "$ref" : "#/definitions/reservationPolicy"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/reservations/{id}" : {
      "get" : {
        "tags" : [ "reservation" ],
        "summary" : "Returns the reservation",
        "description" : "Returns the reservation associated with the given id.",
        "operationId" : "Get Reservation",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the reservation to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The reservation is found.",
            "schema" : {
              "$ref" : "#/definitions/reservation"
            }
          },
          "404" : {
            "description" : "The reservation is not found."
          }
        }
      },
      "put" : {
        "tags" : [ "reservation" ],
        "summary" : "Updates or creates a reservation.",
        "description" : "Returns the updated reservation or RestEntity which wraps the newly created reservation.",
        "operationId" : "Update or create Reservation",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the reservation to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The id of the reservation to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/reservation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          },
          "204" : {
            "description" : "Reservation is updated.",
            "schema" : {
              "$ref" : "#/definitions/reservation"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "reservation" ],
        "summary" : "Deletes a Reservation.",
        "description" : "Deletes a Reservation corresponding to its unique Id.",
        "operationId" : "Delete Reservation",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the component registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the reservation to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Reservation is deleted."
          }
        }
      }
    },
    "/api/services/{serviceId}/resource-actions" : {
      "post" : {
        "tags" : [ "callback-endpoint-registry" ],
        "summary" : "Submit request from network service.",
        "description" : "Submit request from network service to the IaaS proxy provider service",
        "operationId" : "registerRequest",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The instance id of a ServiceInfo registration with Component Registry.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "The request is submitted."
          }
        }
      }
    },
    "/api/services/{serviceId}/status/{taskId}" : {
      "get" : {
        "tags" : [ "callback-endpoint-registry" ],
        "summary" : "Retrieves the list of status updates.",
        "description" : "Retrieves the list of status updates",
        "operationId" : "listStatusUpdates",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "The instance id of a ServiceInfo registration with Component Registry.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task id returned by register().",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The status updates are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/IaasRegistrationTaskStatus"
              }
            }
          }
        }
      }
    },
    "/api/source-machine-snapshots" : {
      "get" : {
        "tags" : [ "vm-snapshots", "internal" ],
        "summary" : "Retrieves the list of snapshots for a machine.",
        "description" : "Retrieves the list of snapshots for a machine.",
        "operationId" : "listVMSnapshots",
        "parameters" : [ {
          "name" : "machineId",
          "in" : "query",
          "description" : "The machine id.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The VM snapshots are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MachineSnapshot"
              }
            }
          }
        }
      }
    },
    "/api/source-machines" : {
      "get" : {
        "tags" : [ "internal", "vm-templates" ],
        "summary" : "Retrieves the list of VM templates.",
        "description" : "Retrieves the list of VM templates.",
        "operationId" : "listVirtualMachines",
        "parameters" : [ {
          "name" : "platformTypeId",
          "in" : "query",
          "description" : "The platform type id.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actionId",
          "in" : "query",
          "description" : "The action id.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "loadTemplates",
          "in" : "query",
          "description" : "Flag to include \"isTemplate\" in request filter.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The virtual machine are retrieved.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Machine"
              }
            }
          }
        }
      }
    },
    "/api/source-machines/{id}" : {
      "get" : {
        "tags" : [ "internal", "vm-templates" ],
        "summary" : "Retrieves a VM template by id with disks.",
        "description" : "Retrieves a VM template by id with disks.",
        "operationId" : "getVirtualMachine",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the IaaS service as registered in the Component Registry service.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "platformTypeId",
          "in" : "query",
          "description" : "The platform type id.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The virtual machine is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/Machine"
            }
          }
        }
      }
    },
    "/api/transport-zones" : {
      "get" : {
        "tags" : [ "transport-zone" ],
        "summary" : "Retrieves the list of available transport zones.",
        "description" : "Retrieves the list of available transport zones.",
        "operationId" : "listTransportZone",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page Number",
          "required" : false,
          "type" : "integer",
          "default" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of entries per page",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Multiple comma-separated properties sorted in ascending or descending order",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Sets the number of returned entries from the top of the response (total number per page in relation to skip)",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Sets how many entries you would like to skip",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Boolean expression for whether a particular entry should be included in the response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TransportZone"
              }
            }
          }
        }
      }
    },
    "/api/upgrade/administrators" : {
      "post" : {
        "tags" : [ "internal", "group-and-tenant", "upgrade" ],
        "summary" : "Initiates the migration of business group and tenant administrators",
        "description" : "Initiates the migration of business group and tenant administrators",
        "operationId" : "initiateAdminMigration",
        "responses" : {
          "201" : {
            "description" : "Business group and tenant admins migrated."
          }
        }
      }
    },
    "/api/upgrade/buildProfile/{id}" : {
      "post" : {
        "tags" : [ "internal", "upgrade", "build-profile-migration" ],
        "summary" : "Initiates the migration of a IaaS build profile",
        "description" : "Initiates the migration of a IaaS build profile",
        "operationId" : "initiateIaasBuildProfileMigration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the IaaS build profile.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "IaaS build profile migrated."
          }
        }
      }
    },
    "/api/upgrade/complete" : {
      "post" : {
        "tags" : [ "internal", "flag", "upgrade" ],
        "summary" : "Clean up the upgrade flag",
        "description" : "Clean up the upgrade flag in ConfigurationData(enabled features)",
        "operationId" : "cleanUpgradeFlag",
        "responses" : {
          "201" : {
            "description" : "Upgrade flag removed."
          }
        }
      }
    },
    "/api/upgrade/governance" : {
      "post" : {
        "tags" : [ "entitlements", "internal", "upgrade" ],
        "summary" : "Migrates affected governance content",
        "description" : "Migrates affected governance content",
        "operationId" : "upgradeGovernance",
        "responses" : {
          "201" : {
            "description" : "Governance content migrated."
          }
        }
      }
    },
    "/api/upgrade/property-definition/{id}" : {
      "post" : {
        "tags" : [ "internal", "upgrade", "property-definition-migration" ],
        "summary" : "Initiates the migration of a IaaS property definition",
        "description" : "Initiates the migration of a IaaS property definition",
        "operationId" : "initiateIaasPropertyMigration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the IaaS property definition.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "IaaS property definition migrated."
          }
        }
      }
    }
  },
  "definitions" : {
    "AmazonImage" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "amazonImageId" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "imageState" : {
          "type" : "string"
        },
        "amazonOwnerId" : {
          "type" : "string"
        },
        "isPublic" : {
          "type" : "boolean",
          "default" : false
        },
        "imageType" : {
          "type" : "string"
        },
        "amazonKernelId" : {
          "type" : "string"
        },
        "amazonRamdiskId" : {
          "type" : "string"
        },
        "ownerAlias" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "rootDeviceType" : {
          "type" : "string"
        },
        "rootDeviceName" : {
          "type" : "string"
        },
        "platformName" : {
          "type" : "string"
        },
        "architectureName" : {
          "type" : "string"
        },
        "regionName" : {
          "type" : "string"
        }
      }
    },
    "AmazonRequestData" : {
      "type" : "object",
      "properties" : {
        "availabilityZones" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/AvailabilityZone"
          }
        },
        "subnets" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/AmazonSubnet"
          }
        },
        "securityGroups" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/AmazonSecurityGroup"
          }
        }
      }
    },
    "AmazonSecurityGroup" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "amazonOwnerId" : {
          "type" : "string"
        },
        "vpc" : {
          "$ref" : "#/definitions/VirtualPrivateCloud"
        },
        "amazonSecurityGroupId" : {
          "type" : "string"
        },
        "reservationIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "AmazonSubnet" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "availableIpAddresses" : {
          "type" : "number"
        },
        "cidrBlock" : {
          "type" : "string"
        },
        "amazonSubnetId" : {
          "type" : "string"
        },
        "subnetState" : {
          "type" : "string"
        },
        "vpc" : {
          "$ref" : "#/definitions/VirtualPrivateCloud"
        },
        "availabilityZone" : {
          "$ref" : "#/definitions/AvailabilityZone"
        },
        "reservationIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "AndClause" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "subClauses" : {
            "type" : "array",
            "xml" : {
              "name" : "clause"
            },
            "items" : {
              "$ref" : "#/definitions/Clause"
            }
          }
        }
      } ]
    },
    "ApplicationProfile" : {
      "allOf" : [ {
        "$ref" : "#/definitions/networkObject"
      }, {
        "type" : "object",
        "properties" : {
          "insertXForwardedFor" : {
            "type" : "boolean",
            "default" : false
          },
          "sslPassthrough" : {
            "type" : "boolean",
            "default" : false
          },
          "template" : {
            "type" : "string"
          },
          "serverSslEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "cookieMode" : {
            "type" : "string"
          },
          "cookieName" : {
            "type" : "string"
          },
          "method" : {
            "type" : "string"
          },
          "Expiry" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "networkObject"
        }
      } ]
    },
    "AvailabilityZone" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "availabilityZoneState" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "regionName" : {
          "type" : "string"
        },
        "reservationIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "BooleanLiteral" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "description" : "Wraps a boolean value.",
        "xml" : {
          "name" : "booleanLiteral"
        }
      } ]
    },
    "BusinessGroupAllocationsData" : {
      "type" : "object",
      "properties" : {
        "subtenantId" : {
          "type" : "string"
        },
        "subtenantName" : {
          "type" : "string"
        },
        "subtenantDescription" : {
          "type" : "string"
        },
        "allocatedMemory" : {
          "type" : "number",
          "format" : "float"
        },
        "allocatedStorage" : {
          "type" : "number",
          "format" : "float"
        },
        "totalMachines" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalMemory" : {
          "type" : "number",
          "format" : "float"
        },
        "totalQuota" : {
          "type" : "number",
          "format" : "float"
        },
        "totalStorage" : {
          "type" : "number",
          "format" : "float"
        },
        "tenantId" : {
          "type" : "string"
        },
        "cloudQuotaAllocated" : {
          "type" : "number",
          "format" : "float"
        },
        "cloudQuotaPercentage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cloudQuotaTotalAvailable" : {
          "type" : "number",
          "format" : "float"
        },
        "memoryPercentage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "physicalQuotaAllocated" : {
          "type" : "number",
          "format" : "float"
        },
        "physicalQuotaPercentage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "physicalQuotaTotalAvailable" : {
          "type" : "number",
          "format" : "float"
        },
        "storagePercentage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "storageSavings" : {
          "type" : "number",
          "format" : "float"
        },
        "storageSavingsPercentage" : {
          "type" : "number",
          "format" : "float"
        },
        "storageUsed" : {
          "type" : "number",
          "format" : "float"
        },
        "storageUsedPercentage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalCmAvailable" : {
          "type" : "number",
          "format" : "float"
        },
        "totalPercentage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPmAvailable" : {
          "type" : "number",
          "format" : "float"
        },
        "totalQuotaAllocated" : {
          "type" : "number",
          "format" : "float"
        },
        "totalQuotaAvailable" : {
          "type" : "number",
          "format" : "float"
        },
        "totalQuotaPercentage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalVmsAvailable" : {
          "type" : "number",
          "format" : "float"
        },
        "virtualQuotaAllocated" : {
          "type" : "number",
          "format" : "float"
        },
        "virtualQuotaTotalAvailable" : {
          "type" : "number",
          "format" : "float"
        },
        "virtualQuotaPercentage" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CallbackEvaluator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object"
      } ]
    },
    "CapacityUsageByBlueprintViewModel" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string"
        },
        "machinesTotal" : {
          "type" : "integer",
          "format" : "int32"
        },
        "machineType" : {
          "type" : "string",
          "format" : "byte"
        },
        "machinesAllocated" : {
          "type" : "integer",
          "format" : "int32"
        },
        "memoryAllocatedMBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "storageAllocatedGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "storageUsedGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "groupName" : {
          "type" : "string"
        },
        "blueprintName" : {
          "type" : "string"
        }
      }
    },
    "CapacityUsageByComputeResourceViewModel" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string"
        },
        "hostName" : {
          "type" : "string"
        },
        "machinesTotal" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cpus" : {
          "type" : "integer",
          "format" : "int32"
        },
        "machineType" : {
          "type" : "string",
          "format" : "byte"
        },
        "machinesAllocated" : {
          "type" : "integer",
          "format" : "int32"
        },
        "memoryReservedMBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "memoryAllocatedMBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "memoryAllocatedPercent" : {
          "type" : "integer",
          "format" : "int32"
        },
        "memoryPhysicalMBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "memoryReservedPercent" : {
          "type" : "integer",
          "format" : "int32"
        },
        "storagePhysicalGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "storageReservedPercent" : {
          "type" : "integer",
          "format" : "int32"
        },
        "storageReservedGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "storageAllocatedGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "storageAllocatedPercent" : {
          "type" : "integer",
          "format" : "int32"
        },
        "storageUsedGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CapacityUsageByGroupViewModel" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string"
        },
        "machinesTotal" : {
          "type" : "integer",
          "format" : "int32"
        },
        "machineType" : {
          "type" : "string",
          "format" : "byte"
        },
        "machinesAllocated" : {
          "type" : "integer",
          "format" : "int32"
        },
        "machinesAllocatedPercent" : {
          "type" : "integer",
          "format" : "int32"
        },
        "memoryReservedMBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "memoryAllocatedMBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "memoryAllocatedPercent" : {
          "type" : "integer",
          "format" : "int32"
        },
        "storageReservedGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "storageAllocatedGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "storageAllocatedPercent" : {
          "type" : "integer",
          "format" : "int32"
        },
        "storageUsedGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "groupName" : {
          "type" : "string"
        }
      }
    },
    "CapacityUsageByOwnerViewModel" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string"
        },
        "machinesTotal" : {
          "type" : "integer",
          "format" : "int32"
        },
        "machineType" : {
          "type" : "string",
          "format" : "byte"
        },
        "machinesAllocated" : {
          "type" : "integer",
          "format" : "int32"
        },
        "memoryAllocatedMBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "machineOwner" : {
          "type" : "string"
        },
        "storageAllocatedGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "storageUsedGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "groupName" : {
          "type" : "string"
        }
      }
    },
    "CertificateInfo" : {
      "type" : "object",
      "properties" : {
        "identityCertificateExists" : {
          "type" : "boolean",
          "default" : false
        },
        "issuerName" : {
          "type" : "string"
        },
        "principalName" : {
          "type" : "string"
        },
        "notValidBefore" : {
          "type" : "string",
          "format" : "date-time"
        },
        "notValidAfter" : {
          "type" : "string",
          "format" : "date-time"
        },
        "thumbprint" : {
          "type" : "string"
        }
      }
    },
    "ChargebackByGroupViewModel" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string"
        },
        "totalCost" : {
          "type" : "number",
          "format" : "double"
        },
        "memory" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userName" : {
          "type" : "string"
        },
        "machineName" : {
          "type" : "string"
        },
        "memoryCost" : {
          "type" : "number",
          "format" : "double"
        },
        "storage" : {
          "type" : "integer",
          "format" : "int64"
        },
        "storageCost" : {
          "type" : "number",
          "format" : "double"
        },
        "machineTemplateName" : {
          "type" : "string"
        },
        "blueprintCost" : {
          "type" : "number",
          "format" : "double"
        },
        "cpuCost" : {
          "type" : "number",
          "format" : "double"
        },
        "cpus" : {
          "type" : "integer",
          "format" : "int32"
        },
        "chargedDays" : {
          "type" : "integer",
          "format" : "int64"
        },
        "groupId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "parentId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "parentName" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "machineType" : {
          "type" : "string",
          "format" : "byte"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "groupName" : {
          "type" : "string"
        },
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "resultsPerPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortByColumn" : {
          "type" : "string"
        }
      }
    },
    "Clause" : {
      "type" : "object",
      "discriminator" : "type"
    },
    "CoalesceEvaluator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "arguments" : {
            "type" : "array",
            "xml" : {
              "name" : "argument",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/definitions/Evaluator"
            }
          }
        }
      } ]
    },
    "ComplexDataType" : {
      "allOf" : [ {
        "$ref" : "#/definitions/DataType"
      }, {
        "type" : "object",
        "properties" : {
          "schema" : {
            "$ref" : "#/definitions/Schema"
          }
        }
      } ]
    },
    "ComplexEvaluator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "componentTypeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "componentId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "classId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "typeFilter" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "values" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/Evaluator"
            }
          }
        }
      } ]
    },
    "ConditionalEvaluator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "cases" : {
            "type" : "array",
            "xml" : {
              "name" : "case"
            },
            "items" : {
              "$ref" : "#/definitions/ConditionalEvaluatorCase"
            }
          },
          "defaulValue" : {
            "$ref" : "#/definitions/Evaluator"
          }
        }
      } ]
    },
    "ConditionalEvaluatorCase" : {
      "type" : "object",
      "properties" : {
        "condition" : {
          "$ref" : "#/definitions/Clause"
        },
        "value" : {
          "$ref" : "#/definitions/Evaluator"
        }
      }
    },
    "ConstantClause" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/definitions/booleanLiteral"
          }
        }
      } ]
    },
    "ConstantValue" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/definitions/literal"
          }
        }
      } ]
    },
    "Constraint" : {
      "type" : "object",
      "required" : [ "value" ],
      "discriminator" : "type",
      "properties" : {
        "value" : {
          "$ref" : "#/definitions/Evaluator"
        }
      }
    },
    "ContainsOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "ContextPermissibleValueList" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PermissibleValueList"
      }, {
        "type" : "object"
      } ]
    },
    "CriteriaOperator" : {
      "type" : "object",
      "discriminator" : "type"
    },
    "CustomMachineAction" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 128
        },
        "displayName" : {
          "type" : "string"
        },
        "iconUri" : {
          "type" : "string"
        },
        "taskName" : {
          "type" : "string"
        },
        "menuOrder" : {
          "type" : "string"
        },
        "displayState" : {
          "type" : "string"
        },
        "uriTemplate" : {
          "type" : "string"
        }
      }
    },
    "CustomPropertyDefinitionMetadata" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object",
        "required" : [ "field" ],
        "properties" : {
          "field" : {
            "$ref" : "#/definitions/Field"
          }
        }
      } ]
    },
    "CustomValidationConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "DataType" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "typeId" : {
          "type" : "string",
          "enum" : [ "STRING", "INTEGER", "DECIMAL", "MONEY", "MONEY_RANGE", "MONEY_TIME_RATE", "BOOLEAN", "ENTITY_REFERENCE", "DATE_TIME", "TIME_SPAN", "SECURE_STRING", "COMPLEX" ]
        }
      }
    },
    "DefaultValueBehavior" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "DhcpConfig" : {
      "type" : "object",
      "properties" : {
        "dhcpStartIPAddress" : {
          "type" : "string"
        },
        "dhcpEndIPAddress" : {
          "type" : "string"
        },
        "dhcpLeaseTimeInSeconds" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0.0
        }
      }
    },
    "DisplayTextBehavior" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "DnsInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/dnsInfo"
      }, {
        "type" : "object",
        "xml" : {
          "name" : "dnsInfo"
        }
      } ]
    },
    "DynamicDataRequest" : {
      "type" : "object",
      "properties" : {
        "tenantId" : {
          "type" : "string"
        },
        "ignoreUnknownFields" : {
          "type" : "boolean",
          "default" : false
        },
        "ids" : {
          "type" : "array",
          "xml" : {
            "name" : "id"
          },
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DynamicDataResponse" : {
      "type" : "object",
      "properties" : {
        "values" : {
          "$ref" : "#/definitions/literalMap"
        }
      }
    },
    "DynamicPermissibleValueList" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PermissibleValueList"
      }, {
        "type" : "object",
        "properties" : {
          "context" : {
            "$ref" : "#/definitions/DynamicValueContext"
          },
          "dependencies" : {
            "type" : "array",
            "xml" : {
              "name" : "dependency",
              "wrapped" : true
            },
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      } ]
    },
    "DynamicValueContext" : {
      "type" : "object",
      "required" : [ "parameterMappings" ],
      "properties" : {
        "providerEntityId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "parameterMappings" : {
          "$ref" : "#/definitions/ParameterMappingCollection"
        }
      }
    },
    "EditableBehavior" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "ElementState" : {
      "type" : "object",
      "properties" : {
        "dependencies" : {
          "type" : "array",
          "xml" : {
            "name" : "dependency",
            "wrapped" : true
          },
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "facets" : {
          "type" : "array",
          "xml" : {
            "name" : "facet",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/Constraint"
          }
        }
      }
    },
    "ElementValuesPagingInfo" : {
      "type" : "object",
      "properties" : {
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "EncryptedBehavior" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "EndsWithOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "EntityReferenceDataType" : {
      "allOf" : [ {
        "$ref" : "#/definitions/DataType"
      }, {
        "type" : "object"
      } ]
    },
    "EqualsOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "Evaluator" : {
      "type" : "object",
      "discriminator" : "type"
    },
    "Expression" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "operator" : {
            "$ref" : "#/definitions/CriteriaOperator"
          },
          "leftOperand" : {
            "$ref" : "#/definitions/Evaluator"
          },
          "rightOperand" : {
            "$ref" : "#/definitions/Evaluator"
          }
        }
      } ]
    },
    "ExternalNetworkProfile" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NetworkProfile"
      }, {
        "type" : "object",
        "properties" : {
          "subnetMask" : {
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 100
          },
          "gatewayAddress" : {
            "type" : "string"
          },
          "primaryDnsAddress" : {
            "type" : "string"
          },
          "secondaryDnsAddress" : {
            "type" : "string"
          },
          "dnsSuffix" : {
            "type" : "string"
          },
          "dnsSearchSuffix" : {
            "type" : "string"
          },
          "primaryWinsAddress" : {
            "type" : "string"
          },
          "secondaryWinsAddress" : {
            "type" : "string"
          }
        }
      } ]
    },
    "ExternalValue" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "required" : [ "dynamicValueProviderInfo" ],
        "properties" : {
          "dynamicValueProviderInfo" : {
            "$ref" : "#/definitions/DynamicValueContext"
          }
        }
      } ]
    },
    "Field" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "label" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "dataType" : {
          "$ref" : "#/definitions/DataType"
        },
        "displayAdvice" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          },
          "enum" : [ "TEXTBOX", "HYPERLINK", "EMAIL", "TEXTAREA", "DATE_TIME_PICKER", "CHECKBOX", "YES_NO", "CHECKBOX_GROUP", "DUAL_LIST", "RADIO_GROUP", "DROPDOWN", "LIST", "SEARCHER", "TREE", "FORM", "IMAGE", "SLIDER", "DATA_TABLE", "VALUE_PICKER" ]
        },
        "orderIndex" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "permissibleValues" : {
          "$ref" : "#/definitions/PermissibleValueList"
        },
        "state" : {
          "$ref" : "#/definitions/ElementState"
        },
        "isMultiValued" : {
          "type" : "boolean",
          "xml" : {
            "attribute" : true
          },
          "default" : false
        },
        "columns" : {
          "type" : "array",
          "xml" : {
            "name" : "column",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/Field"
          }
        }
      }
    },
    "FieldReference" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        }
      } ]
    },
    "FixedValueConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "Flavor" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ramInMB" : {
          "type" : "integer",
          "format" : "int64"
        },
        "diskSizeInGB" : {
          "type" : "integer",
          "format" : "int64"
        },
        "virtualCPUCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "disabled" : {
          "type" : "boolean",
          "default" : false
        },
        "name" : {
          "type" : "string"
        },
        "flavorUniqueId" : {
          "type" : "string"
        },
        "isMissing" : {
          "type" : "boolean",
          "default" : false
        },
        "regionId" : {
          "type" : "string"
        },
        "endpointId" : {
          "type" : "string"
        },
        "endpointName" : {
          "type" : "string"
        }
      }
    },
    "GreaterThanOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "GreaterThanOrEqualsOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "HardwareProfile" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "cpuType" : {
          "type" : "string"
        },
        "cpuCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "memoryInMB" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "HostProperty" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "hidden" : {
          "type" : "boolean",
          "default" : false
        },
        "encrypted" : {
          "type" : "boolean",
          "default" : false
        },
        "runtime" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "IaaSMachine" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "machineType" : {
          "type" : "string"
        },
        "expirationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "description" : {
          "type" : "string"
        },
        "destructionDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "IaaSReservation" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "computeResourceName" : {
          "type" : "string"
        },
        "endpointName" : {
          "type" : "string"
        },
        "machinesTotal" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IaasPropertyNameBehavior" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "IaasRegistrationTaskStatus" : {
      "type" : "object",
      "properties" : {
        "taskId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "serviceId" : {
          "type" : "string"
        },
        "iaasRegistrationStatus" : {
          "type" : "string",
          "enum" : [ "REGISTRATION_NOT_STARTED", "REGISTRATION_STARTING", "REGISTER_RESOURCE_BUNDLE_CALLBACK_ENDPOINT", "REGISTER_INFRASTRUCTURE_ENDPOINT_TYPES", "REGISTER_CATALOG_PROVIDER_CALLBACK_ENDPOINT", "REGISTER_CATALOG_FORMS_CALLBACK_ENDPOINT", "REGISTER_DATA_SCHEMA_CALLBACK_ENDPOINT", "REGISTER_RESERVATION_SERVICE_CALLBACK_ENDPOINT", "REGISTER_NETWORK_SERVICE_CALLBACK_ENDPOINT", "REGISTER_IPAM_SERVICE_CALLBACK_ENDPOINT", "REGISTER_BUSINESS_GROUP_CALLBACK_ENDPOINT", "REGISTER_COMPOSITION_PROVIDER_CALLBACK_ENDPOINT", "REGISTER_COMPOSITION_BPVALIDATION_PROVIDER_CALLBACK_ENDPOINT", "REGISTER_COMPOSITION_BPENHANCEMENT_PROVIDER_CALLBACK_ENDPOINT", "REGISTER_RESOURCE_TYPES", "REGISTER_CATALOG_ITEM_TYPES", "REGISTER_CATALOG_ITEMS", "REGISTER_COMPONENT_TYPES", "REGISTER_RESOURCE_ACTIONS", "REGISTER_RESERVATION_TYPE_CATEGORIES", "REGISTER_RESERVATION_TYPES", "REGISTER_RESERVATION_POLICY_TYPES", "REGISTER_EVENT_TOPICS", "REGISTER_NETWORK_PLATFORM_TYPES", "REGISTRATION_COMPLETE", "REGISTRATION_FAILED" ]
        },
        "failureStage" : {
          "type" : "string",
          "enum" : [ "REGISTRATION_NOT_STARTED", "REGISTRATION_STARTING", "REGISTER_RESOURCE_BUNDLE_CALLBACK_ENDPOINT", "REGISTER_INFRASTRUCTURE_ENDPOINT_TYPES", "REGISTER_CATALOG_PROVIDER_CALLBACK_ENDPOINT", "REGISTER_CATALOG_FORMS_CALLBACK_ENDPOINT", "REGISTER_DATA_SCHEMA_CALLBACK_ENDPOINT", "REGISTER_RESERVATION_SERVICE_CALLBACK_ENDPOINT", "REGISTER_NETWORK_SERVICE_CALLBACK_ENDPOINT", "REGISTER_IPAM_SERVICE_CALLBACK_ENDPOINT", "REGISTER_BUSINESS_GROUP_CALLBACK_ENDPOINT", "REGISTER_COMPOSITION_PROVIDER_CALLBACK_ENDPOINT", "REGISTER_COMPOSITION_BPVALIDATION_PROVIDER_CALLBACK_ENDPOINT", "REGISTER_COMPOSITION_BPENHANCEMENT_PROVIDER_CALLBACK_ENDPOINT", "REGISTER_RESOURCE_TYPES", "REGISTER_CATALOG_ITEM_TYPES", "REGISTER_CATALOG_ITEMS", "REGISTER_COMPONENT_TYPES", "REGISTER_RESOURCE_ACTIONS", "REGISTER_RESERVATION_TYPE_CATEGORIES", "REGISTER_RESERVATION_TYPES", "REGISTER_RESERVATION_POLICY_TYPES", "REGISTER_EVENT_TOPICS", "REGISTER_NETWORK_PLATFORM_TYPES", "REGISTRATION_COMPLETE", "REGISTRATION_FAILED" ]
        },
        "failure" : {
          "type" : "string"
        }
      }
    },
    "IncrementBehavior" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "InstanceType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "sizeName" : {
          "type" : "string"
        },
        "memory" : {
          "type" : "number"
        },
        "computeUnits" : {
          "type" : "number"
        },
        "instanceStorage" : {
          "type" : "number"
        },
        "apiName" : {
          "type" : "string"
        },
        "ioPerformanceName" : {
          "type" : "string"
        },
        "virtualCores" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "InternalConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "IpRange" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ipRange"
      }, {
        "type" : "object",
        "xml" : {
          "name" : "ipRange"
        }
      } ]
    },
    "IpRangeOperationRequest" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ipamObject"
      }, {
        "type" : "object",
        "properties" : {
          "ipRangeOperations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ipRangeOperation"
            }
          },
          "resourceInfo" : {
            "$ref" : "#/definitions/resourceInfo"
          },
          "networkProfileId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "ipamObject"
        }
      } ]
    },
    "IpRangeOperationResult" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ipamObject"
      }, {
        "type" : "object",
        "properties" : {
          "ipRangeOperations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ipRangeOperation"
            }
          },
          "networkProfileId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "ipamObject"
        }
      } ]
    },
    "IsDefinedOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "Iso" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hypervisorType" : {
          "type" : "string"
        },
        "isoUniqueId" : {
          "type" : "string"
        }
      }
    },
    "KeyPair" : {
      "type" : "object",
      "required" : [ "computeResourceId", "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255
        },
        "computeResourceId" : {
          "type" : "string"
        },
        "secretKey" : {
          "type" : "string"
        }
      }
    },
    "LessThanOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "LessThanOrEqualsOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "Link" : {
      "type" : "object",
      "properties" : {
        "rel" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "href" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "LiteralMapEntry" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "value" : {
          "$ref" : "#/definitions/literal"
        }
      }
    },
    "LoadBalancer" : {
      "allOf" : [ {
        "$ref" : "#/definitions/loadBalancer"
      }, {
        "type" : "object",
        "xml" : {
          "name" : "loadBalancer"
        }
      } ]
    },
    "LoadBalancerPool" : {
      "allOf" : [ {
        "$ref" : "#/definitions/networkObject"
      }, {
        "type" : "object",
        "xml" : {
          "name" : "loadBalancerPool"
        }
      } ]
    },
    "LoadBalancerVirtualIp" : {
      "allOf" : [ {
        "$ref" : "#/definitions/networkObject"
      }, {
        "type" : "object",
        "xml" : {
          "name" : "loadBalancerVirtualIp"
        }
      } ]
    },
    "Machine" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255
        },
        "description" : {
          "type" : "string"
        },
        "reservationName" : {
          "type" : "string"
        },
        "hostName" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "endpointName" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "parentTemplate" : {
          "type" : "string"
        },
        "cpu" : {
          "type" : "integer",
          "format" : "int64"
        },
        "memoryMB" : {
          "type" : "integer",
          "format" : "int64"
        },
        "storageGB" : {
          "type" : "integer",
          "format" : "int64"
        },
        "isTemplate" : {
          "type" : "boolean",
          "default" : false
        },
        "guestOsFamily" : {
          "type" : "string"
        },
        "interfaceType" : {
          "type" : "string",
          "enum" : [ "VSPHERE", "KVM", "SCVMM" ]
        },
        "disks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MachineDisk"
          }
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MachineProperty"
          }
        }
      }
    },
    "MachineDisk" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 128
        },
        "capacity" : {
          "type" : "integer",
          "format" : "int64"
        },
        "externalDiskId" : {
          "type" : "string"
        },
        "deviceId" : {
          "type" : "string"
        }
      }
    },
    "MachinePrefix" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255
        }
      }
    },
    "MachineProperty" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 256
        },
        "value" : {
          "type" : "string"
        },
        "isHidden" : {
          "type" : "boolean",
          "default" : false
        },
        "isRuntime" : {
          "type" : "boolean",
          "default" : false
        },
        "isEncrypted" : {
          "type" : "boolean",
          "default" : false
        },
        "virtualMachineId" : {
          "type" : "string"
        }
      }
    },
    "MachineSnapshot" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255
        },
        "description" : {
          "type" : "string"
        },
        "virtualMachineId" : {
          "type" : "string"
        },
        "externalSnapshotId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDateTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "isCurrentSnapshot" : {
          "type" : "boolean",
          "default" : false
        },
        "isMemorySnapshot" : {
          "type" : "boolean",
          "default" : false
        },
        "parentId" : {
          "type" : "string"
        }
      }
    },
    "ManagementEndpoint" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "interfaceType" : {
          "type" : "string"
        },
        "credentialId" : {
          "type" : "string",
          "format" : "uuid"
        }
      }
    },
    "MandatoryConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "MaxCardinalityConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "MaxLengthConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "MaxValueConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "MaximumValueEvaluator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "arguments" : {
            "type" : "array",
            "xml" : {
              "name" : "argument",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/definitions/Evaluator"
            }
          }
        }
      } ]
    },
    "MinCardinalityConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "MinLengthConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "MinValueConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "MinimumValueEvaluator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "arguments" : {
            "type" : "array",
            "xml" : {
              "name" : "argument",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/definitions/Evaluator"
            }
          }
        }
      } ]
    },
    "MonetaryValue" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "currencyCode" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The ISO 4217 code used to identify the currency (if any) associated with this value."
          }
        },
        "description" : "Base type for representing monetary values, encapsulating both some kind of quantity and a currency.",
        "xml" : {
          "name" : "literal"
        }
      } ]
    },
    "MoneyTimeRate" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "description" : "Represents a rate of money over time.",
        "xml" : {
          "name" : "moneyTimeRate"
        }
      } ]
    },
    "MultipleEvaluator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "required" : [ "items" ],
        "properties" : {
          "elementTypeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "STRING", "INTEGER", "DECIMAL", "MONEY", "MONEY_RANGE", "MONEY_TIME_RATE", "BOOLEAN", "ENTITY_REFERENCE", "DATE_TIME", "TIME_SPAN", "SECURE_STRING", "COMPLEX" ]
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Evaluator"
            }
          }
        }
      } ]
    },
    "NATNetworkProfile" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NetworkProfile"
      }, {
        "type" : "object",
        "required" : [ "externalNetworkProfileId", "natType", "subnetMask" ],
        "properties" : {
          "natType" : {
            "type" : "string",
            "enum" : [ "ONETOONE", "ONETOMANY" ]
          },
          "subnetMask" : {
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 100
          },
          "gatewayAddress" : {
            "type" : "string"
          },
          "primaryDnsAddress" : {
            "type" : "string"
          },
          "secondaryDnsAddress" : {
            "type" : "string"
          },
          "dnsSuffix" : {
            "type" : "string"
          },
          "dnsSearchSuffix" : {
            "type" : "string"
          },
          "primaryWinsAddress" : {
            "type" : "string"
          },
          "secondaryWinsAddress" : {
            "type" : "string"
          },
          "externalNetworkProfileId" : {
            "type" : "string"
          },
          "externalNetworkProfileName" : {
            "type" : "string"
          },
          "dhcpConfig" : {
            "$ref" : "#/definitions/DhcpConfig"
          }
        }
      } ]
    },
    "NatRuleComponent" : {
      "type" : "object",
      "properties" : {
        "profileId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "componentName" : {
          "type" : "string"
        },
        "machineId" : {
          "type" : "string"
        },
        "ipAddress" : {
          "type" : "string"
        },
        "nicIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "targetType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "VM_NIC", "LB_VIP" ]
        }
      }
    },
    "Network" : {
      "allOf" : [ {
        "$ref" : "#/definitions/network"
      }, {
        "type" : "object",
        "xml" : {
          "name" : "network"
        }
      } ]
    },
    "NetworkProfile" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 100
        },
        "description" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastModifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "isHidden" : {
          "type" : "boolean",
          "default" : false
        },
        "definedRanges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StaticIPv4Range"
          }
        },
        "definedAddresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StaticIPv4Address"
          }
        },
        "reclaimedAddresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StaticIPv4Address"
          }
        },
        "profileType" : {
          "type" : "string",
          "enum" : [ "EXTERNAL", "PRIVATE", "NAT", "ROUTED" ]
        },
        "IPAMEndpointId" : {
          "type" : "string"
        },
        "IPAMEndpointName" : {
          "type" : "string"
        },
        "addressSpaceExternalId" : {
          "type" : "string"
        }
      }
    },
    "NotClause" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "subClause" : {
            "$ref" : "#/definitions/Clause"
          }
        }
      } ]
    },
    "NotEqualsOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "NullDisplayTextBehavior" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "ObjectDataType" : {
      "allOf" : [ {
        "$ref" : "#/definitions/DataType"
      }, {
        "type" : "object",
        "properties" : {
          "componentTypeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "componentId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "classId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "typeFilter" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "label" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        }
      } ]
    },
    "OpenstackImage" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minRam" : {
          "type" : "integer",
          "format" : "int64"
        },
        "minDisk" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "imageUniqueId" : {
          "type" : "string"
        },
        "isMissing" : {
          "type" : "boolean",
          "default" : false
        },
        "regionId" : {
          "type" : "string"
        },
        "regionName" : {
          "type" : "string"
        },
        "project" : {
          "type" : "string"
        },
        "endpointId" : {
          "type" : "string"
        },
        "endpointName" : {
          "type" : "string"
        }
      }
    },
    "OpenstackSecurityGroup" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "securityGroupUniqueId" : {
          "type" : "string"
        },
        "endpointId" : {
          "type" : "string"
        },
        "endpointName" : {
          "type" : "string"
        },
        "reservationIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "OrClause" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "subClauses" : {
            "type" : "array",
            "xml" : {
              "name" : "clause"
            },
            "items" : {
              "$ref" : "#/definitions/Clause"
            }
          }
        }
      } ]
    },
    "PageAmazonImage" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AmazonImage"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageAmazonRequestData" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AmazonRequestData"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageBusinessGroupAllocationsData" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BusinessGroupAllocationsData"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageCapacityUsageByBlueprintViewModel" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CapacityUsageByBlueprintViewModel"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageCapacityUsageByComputeResourceViewModel" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CapacityUsageByComputeResourceViewModel"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageCapacityUsageByGroupViewModel" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CapacityUsageByGroupViewModel"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageCapacityUsageByOwnerViewModel" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CapacityUsageByOwnerViewModel"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageChargebackByGroupViewModel" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChargebackByGroupViewModel"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageCustomMachineAction" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomMachineAction"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageFlavor" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Flavor"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageHardwareProfile" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HardwareProfile"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageHostProperty" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HostProperty"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageInstanceType" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InstanceType"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageIso" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Iso"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageKeyPair" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/KeyPair"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageLoadBalancer" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/loadBalancer"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageMachine" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Machine"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageMachinePrefix" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MachinePrefix"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageMachineSnapshot" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MachineSnapshot"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageManagementEndpoint" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ManagementEndpoint"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageNetwork" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/network"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageNetworkProfile" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NetworkProfile"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageOpenstackImage" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OpenstackImage"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageOpenstackSecurityGroup" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OpenstackSecurityGroup"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageProvisioningWorkflow" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProvisioningWorkflow"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageReclamationSavingsByGroupViewModel" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReclamationSavingsByGroupViewModel"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageReclamationSavingsByOwnerViewModel" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReclamationSavingsByOwnerViewModel"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageReservation" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/reservation"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageReservationPolicy" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/reservationPolicy"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageSecurityGroup" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/securityGroup"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageSecurityPolicy" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/securityPolicy"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageSecurityTag" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/securityTag"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageStaticIPv4Address" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StaticIPv4Address"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageStaticIPv4RangeSummary" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StaticIPv4RangeSummary"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageTransportZone" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransportZone"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PageVirtualHardDisk" : {
      "type" : "object",
      "properties" : {
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VirtualHardDisk"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ParameterMapping" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "value" : {
          "$ref" : "#/definitions/Evaluator"
        }
      }
    },
    "ParameterMappingCollection" : {
      "type" : "object",
      "properties" : {
        "params" : {
          "type" : "array",
          "xml" : {
            "name" : "param",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/ParameterMapping"
          }
        }
      }
    },
    "PermissibleValueList" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "customAllowed" : {
          "type" : "boolean",
          "xml" : {
            "attribute" : true
          },
          "default" : false
        }
      }
    },
    "PrimitiveDataType" : {
      "allOf" : [ {
        "$ref" : "#/definitions/DataType"
      }, {
        "type" : "object",
        "properties" : {
          "typeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "STRING", "INTEGER", "DECIMAL", "MONEY", "MONEY_RANGE", "MONEY_TIME_RATE", "BOOLEAN", "ENTITY_REFERENCE", "DATE_TIME", "TIME_SPAN", "SECURE_STRING", "COMPLEX" ]
          }
        }
      } ]
    },
    "PrivateNetworkProfile" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NetworkProfile"
      }, {
        "type" : "object",
        "required" : [ "gatewayAddress", "subnetMask" ],
        "properties" : {
          "subnetMask" : {
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 255
          },
          "gatewayAddress" : {
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 255
          },
          "dhcpConfig" : {
            "$ref" : "#/definitions/DhcpConfig"
          }
        }
      } ]
    },
    "ProviderRequestExtension" : {
      "type" : "object",
      "properties" : {
        "extData" : {
          "$ref" : "#/definitions/literalMap"
        }
      }
    },
    "ProviderRequestValidation" : {
      "type" : "object",
      "properties" : {
        "quote" : {
          "$ref" : "#/definitions/RequestQuote"
        },
        "updatedData" : {
          "$ref" : "#/definitions/literalMap"
        }
      }
    },
    "ProvisioningWorkflow" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255
        },
        "buildTag" : {
          "type" : "string"
        }
      }
    },
    "ReadOnlyConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "ReclamationSavingsByGroupViewModel" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string"
        },
        "machinesTotal" : {
          "type" : "integer",
          "format" : "int32"
        },
        "machinesReclaimed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "machinesReclaimedPercent" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cpus" : {
          "type" : "integer",
          "format" : "int32"
        },
        "memoryMBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "storageGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "cost" : {
          "type" : "number",
          "format" : "double"
        },
        "beginDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "machineType" : {
          "type" : "string",
          "format" : "byte"
        },
        "groupName" : {
          "type" : "string"
        }
      }
    },
    "ReclamationSavingsByOwnerViewModel" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string"
        },
        "machinesTotal" : {
          "type" : "integer",
          "format" : "int32"
        },
        "machinesReclaimed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "machinesReclaimedPercent" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cpus" : {
          "type" : "integer",
          "format" : "int32"
        },
        "memoryMBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "storageGBTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "cost" : {
          "type" : "number",
          "format" : "double"
        },
        "groupName" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "beginDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "machineType" : {
          "type" : "string",
          "format" : "byte"
        }
      }
    },
    "RefreshOnChangeBehavior" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "RegexpConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object",
        "properties" : {
          "errorMessage" : {
            "type" : "string"
          }
        }
      } ]
    },
    "RequestQuote" : {
      "type" : "object",
      "properties" : {
        "leasePeriod" : {
          "$ref" : "#/definitions/timeSpan"
        },
        "leaseRate" : {
          "$ref" : "#/definitions/moneyTimeRate"
        },
        "totalLeaseCost" : {
          "$ref" : "#/definitions/literal"
        }
      }
    },
    "ResetValueBehavior" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "ResourceInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/resourceInfo"
      }, {
        "type" : "object",
        "xml" : {
          "name" : "resourceInfo"
        }
      } ]
    },
    "ResponseEntity" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "body" : {
          "type" : "object"
        },
        "statusCode" : {
          "type" : "string",
          "enum" : [ "CONTINUE", "SWITCHING_PROTOCOLS", "PROCESSING", "CHECKPOINT", "OK", "CREATED", "ACCEPTED", "NON_AUTHORITATIVE_INFORMATION", "NO_CONTENT", "RESET_CONTENT", "PARTIAL_CONTENT", "MULTI_STATUS", "ALREADY_REPORTED", "IM_USED", "MULTIPLE_CHOICES", "MOVED_PERMANENTLY", "FOUND", "MOVED_TEMPORARILY", "SEE_OTHER", "NOT_MODIFIED", "USE_PROXY", "TEMPORARY_REDIRECT", "PERMANENT_REDIRECT", "BAD_REQUEST", "UNAUTHORIZED", "PAYMENT_REQUIRED", "FORBIDDEN", "NOT_FOUND", "METHOD_NOT_ALLOWED", "NOT_ACCEPTABLE", "PROXY_AUTHENTICATION_REQUIRED", "REQUEST_TIMEOUT", "CONFLICT", "GONE", "LENGTH_REQUIRED", "PRECONDITION_FAILED", "PAYLOAD_TOO_LARGE", "REQUEST_ENTITY_TOO_LARGE", "URI_TOO_LONG", "REQUEST_URI_TOO_LONG", "UNSUPPORTED_MEDIA_TYPE", "REQUESTED_RANGE_NOT_SATISFIABLE", "EXPECTATION_FAILED", "I_AM_A_TEAPOT", "INSUFFICIENT_SPACE_ON_RESOURCE", "METHOD_FAILURE", "DESTINATION_LOCKED", "UNPROCESSABLE_ENTITY", "LOCKED", "FAILED_DEPENDENCY", "UPGRADE_REQUIRED", "PRECONDITION_REQUIRED", "TOO_MANY_REQUESTS", "REQUEST_HEADER_FIELDS_TOO_LARGE", "INTERNAL_SERVER_ERROR", "NOT_IMPLEMENTED", "BAD_GATEWAY", "SERVICE_UNAVAILABLE", "GATEWAY_TIMEOUT", "HTTP_VERSION_NOT_SUPPORTED", "VARIANT_ALSO_NEGOTIATES", "INSUFFICIENT_STORAGE", "LOOP_DETECTED", "BANDWIDTH_LIMIT_EXCEEDED", "NOT_EXTENDED", "NETWORK_AUTHENTICATION_REQUIRED" ]
        }
      }
    },
    "RoutedNetworkProfile" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NetworkProfile"
      }, {
        "type" : "object",
        "required" : [ "externalNetworkProfileId", "parentNetworkProfileId" ],
        "properties" : {
          "rangeSubnetMask" : {
            "type" : "string"
          },
          "subnetMask" : {
            "type" : "string"
          },
          "primaryDnsAddress" : {
            "type" : "string"
          },
          "secondaryDnsAddress" : {
            "type" : "string"
          },
          "dnsSuffix" : {
            "type" : "string"
          },
          "dnsSearchSuffix" : {
            "type" : "string"
          },
          "primaryWinsAddress" : {
            "type" : "string"
          },
          "secondaryWinsAddress" : {
            "type" : "string"
          },
          "parentNetworkProfileId" : {
            "type" : "string"
          },
          "externalNetworkProfileId" : {
            "type" : "string"
          },
          "externalNetworkProfileName" : {
            "type" : "string"
          },
          "baseIP" : {
            "type" : "string"
          },
          "addressGroupId" : {
            "type" : "string"
          },
          "dlrEdgeId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      } ]
    },
    "Schema" : {
      "type" : "object",
      "properties" : {
        "fields" : {
          "type" : "array",
          "xml" : {
            "name" : "field"
          },
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Field"
          }
        }
      }
    },
    "SecurityGroup" : {
      "allOf" : [ {
        "$ref" : "#/definitions/securityGroup"
      }, {
        "type" : "object",
        "xml" : {
          "name" : "securityGroup"
        }
      } ]
    },
    "SecurityPolicy" : {
      "allOf" : [ {
        "$ref" : "#/definitions/securityPolicy"
      }, {
        "type" : "object",
        "xml" : {
          "name" : "securityPolicy"
        }
      } ]
    },
    "SecurityTag" : {
      "allOf" : [ {
        "$ref" : "#/definitions/securityTag"
      }, {
        "type" : "object",
        "xml" : {
          "name" : "securityTag"
        }
      } ]
    },
    "SkipExportBehavior" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "Sort" : {
      "type" : "object"
    },
    "StartsWithOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "StaticIPv4Address" : {
      "type" : "object",
      "required" : [ "IPv4Address", "networkProfileId", "state" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "networkProfileId" : {
          "type" : "string"
        },
        "staticIPv4RangeId" : {
          "type" : "string"
        },
        "virtualMachineId" : {
          "type" : "string"
        },
        "virtualMachineName" : {
          "type" : "string"
        },
        "IPv4Address" : {
          "type" : "string"
        },
        "IPSortValue" : {
          "type" : "integer",
          "format" : "int64"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ALLOCATED", "UNALLOCATED", "DESTROYED", "EXPIRED" ]
        },
        "stateValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "networkInterfaceCardOffset" : {
          "type" : "string"
        },
        "hostName" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastModifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "StaticIPv4Range" : {
      "type" : "object",
      "required" : [ "beginIPv4Address", "endIPv4Address", "gateway", "name", "networkProfileId", "state" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "beginIPv4Address" : {
          "type" : "string"
        },
        "endIPv4Address" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ALLOCATED", "UNALLOCATED", "DESTROYED", "EXPIRED" ]
        },
        "networkProfileId" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastModifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "definedAddresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StaticIPv4Address"
          }
        },
        "gateway" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        }
      }
    },
    "StaticIPv4RangeSummary" : {
      "type" : "object",
      "required" : [ "allocatedAddresses", "beginIPv4Address", "destroyedAddresses", "endIPv4Address", "expiredAddresses", "name", "networkProfileId", "state", "totalAddresses", "unallocatedAddresses" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "beginIPv4Address" : {
          "type" : "string"
        },
        "endIPv4Address" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ALLOCATED", "UNALLOCATED", "DESTROYED", "EXPIRED" ]
        },
        "networkProfileId" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastModifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalAddresses" : {
          "type" : "integer",
          "format" : "int32"
        },
        "allocatedAddresses" : {
          "type" : "integer",
          "format" : "int32"
        },
        "unallocatedAddresses" : {
          "type" : "integer",
          "format" : "int32"
        },
        "destroyedAddresses" : {
          "type" : "integer",
          "format" : "int32"
        },
        "expiredAddresses" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "StaticPermissibleValueList" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PermissibleValueList"
      }, {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "xml" : {
              "name" : "value"
            },
            "items" : {
              "$ref" : "#/definitions/value"
            }
          }
        }
      } ]
    },
    "SubsetOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "SupersetOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "TimeSpan" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "description" : "A literal defining period of time. This period is represented some integral number of a specified timeUnit.e.g. 6 days.",
        "xml" : {
          "name" : "timeSpan"
        }
      } ]
    },
    "TransportZone" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 256
        },
        "externalId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 128
        },
        "revision" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nsxEndpointId" : {
          "type" : "string"
        },
        "managementEndpointName" : {
          "type" : "string"
        }
      }
    },
    "UniqueConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "UnspecifiedEvaluator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object"
      } ]
    },
    "VirtualHardDisk" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "vhdType" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "VirtualPrivateCloud" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cidrBlock" : {
          "type" : "string"
        },
        "instanceTenancy" : {
          "type" : "string"
        },
        "amazonVpcId" : {
          "type" : "string"
        },
        "vpcState" : {
          "type" : "string"
        }
      }
    },
    "VirtualServer" : {
      "allOf" : [ {
        "$ref" : "#/definitions/networkObject"
      }, {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "ipAddress" : {
            "type" : "string"
          },
          "protocol" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          },
          "connectionLimit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "connectionRate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "poolId" : {
            "type" : "string"
          },
          "applicationProfileId" : {
            "type" : "string"
          },
          "enableServiceInsertion" : {
            "type" : "boolean",
            "default" : false
          },
          "accelerationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "applicationRulesIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "networkObject"
        }
      } ]
    },
    "VisibilityConstraint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Constraint"
      }, {
        "type" : "object"
      } ]
    },
    "WithinOperator" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CriteriaOperator"
      }, {
        "type" : "object"
      } ]
    },
    "WrapperClause" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Evaluator"
      }, {
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/definitions/Evaluator"
          }
        }
      } ]
    },
    "addressSpace" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ipamObject"
      }, {
        "type" : "object",
        "properties" : {
          "externalId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "providerEndpointId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "addressSpace"
        }
      } ]
    },
    "alert" : {
      "type" : "object",
      "properties" : {
        "alertPercentLevel" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "referenceResourceId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "alert"
      }
    },
    "alertPolicy" : {
      "type" : "object",
      "properties" : {
        "recipients" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "alerts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/alert"
          }
        },
        "enabled" : {
          "type" : "boolean",
          "xml" : {
            "attribute" : true
          },
          "default" : false
        },
        "frequencyReminder" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "emailBgMgr" : {
          "type" : "boolean",
          "xml" : {
            "attribute" : true
          },
          "default" : false
        }
      },
      "xml" : {
        "name" : "alertPolicy"
      }
    },
    "allocationConstraint" : {
      "type" : "object",
      "properties" : {
        "filter" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "allocationConstraint"
      }
    },
    "association" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "associationTypeInfoId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "customProperties" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "fromEndpointId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "toEndpointId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "association"
      }
    },
    "booleanLiteral" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "value" : {
          "type" : "boolean",
          "description" : "The boolean value.",
          "default" : false
        }
      },
      "description" : "Wraps a boolean value.",
      "xml" : {
        "name" : "booleanLiteral"
      }
    },
    "catalogOrganizationReference" : {
      "type" : "object",
      "properties" : {
        "tenantRef" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "tenantLabel" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "subtenantRef" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "subtenantLabel" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "catalogOrganizationReference"
      }
    },
    "complexLiteral" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "componentTypeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The identifier for this literal's component type."
          },
          "componentId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The identifier for this literal's component."
          },
          "classId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The identifier for this literal's class."
          },
          "typeFilter" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The type filter for this literal."
          },
          "values" : {
            "description" : "Map of values, keyed by the field ids of some complex type.",
            "$ref" : "#/definitions/literalMap"
          }
        },
        "description" : "A complex value composed of multiple values keyed by the field ids of some complex type.",
        "xml" : {
          "name" : "complexLiteral"
        }
      } ]
    },
    "dateTimeLiteral" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date."
          }
        },
        "description" : "Wraps a Date & Time value. This is a wrapper for the Java {@link Date} class.",
        "xml" : {
          "name" : "dateTimeLiteral"
        }
      } ]
    },
    "decimalLiteral" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "number",
            "format" : "double",
            "description" : "The decimal value."
          }
        },
        "description" : "Wraps a decimal value.",
        "xml" : {
          "name" : "decimalLiteral"
        }
      } ]
    },
    "dnsInfo" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "dnsSuffix" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "primaryDNS" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "secondaryDNS" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "dnsSearchSuffixes" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "preferredWINS" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "alternateWINS" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "dnsInfo"
      }
    },
    "elementValues" : {
      "type" : "object",
      "properties" : {
        "values" : {
          "type" : "array",
          "xml" : {
            "name" : "value",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/value"
          }
        }
      },
      "xml" : {
        "name" : "elementValues"
      }
    },
    "elementValuesRequest" : {
      "type" : "object",
      "properties" : {
        "text" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "dependencyValues" : {
          "$ref" : "#/definitions/literalMap"
        },
        "pagingInfo" : {
          "$ref" : "#/definitions/ElementValuesPagingInfo"
        },
        "associateValue" : {
          "$ref" : "#/definitions/literal"
        },
        "headers" : {
          "$ref" : "#/definitions/literalMap"
        }
      },
      "xml" : {
        "name" : "elementValuesRequest"
      }
    },
    "endpoint" : {
      "type" : "object",
      "required" : [ "uri" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "uri" : {
          "type" : "string"
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "associations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/association"
          }
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "typeId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "typeDisplayName" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "name" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "description" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "tenantId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "endpoint"
      }
    },
    "endpointCreateRequest" : {
      "type" : "object",
      "properties" : {
        "endpoint" : {
          "$ref" : "#/definitions/endpoint"
        },
        "associatedEndpoints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/endpoint"
          }
        },
        "tenantId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "providerServiceId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "endpointCreateRequest"
      }
    },
    "endpointDeleteRequest" : {
      "type" : "object",
      "properties" : {
        "endpoint" : {
          "$ref" : "#/definitions/endpoint"
        },
        "associatedEndpoints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/endpoint"
          }
        },
        "tenantId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "providerServiceId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "endpointDeleteRequest"
      }
    },
    "endpointMenuItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "menuId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "displayName" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "extensionId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "location" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "icon" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "endpointMenuItem"
      }
    },
    "endpointType" : {
      "type" : "object",
      "properties" : {
        "schema" : {
          "$ref" : "#/definitions/Schema"
        },
        "menuItems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/endpointMenuItem"
          }
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "category" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "displayName" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "categoryDisplayName" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "description" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "tenantable" : {
          "type" : "boolean",
          "xml" : {
            "attribute" : true
          },
          "default" : false
        },
        "tenantId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "serviceProviderId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "capabilities" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "endpointType"
      }
    },
    "endpointTypeRequest" : {
      "type" : "object",
      "properties" : {
        "endpointType" : {
          "$ref" : "#/definitions/endpointType"
        }
      },
      "xml" : {
        "name" : "endpointTypeRequest"
      }
    },
    "endpointUpdateRequest" : {
      "type" : "object",
      "properties" : {
        "existingEndpoint" : {
          "$ref" : "#/definitions/endpoint"
        },
        "existingAssociatedEndpoints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/endpoint"
          }
        },
        "endpoint" : {
          "$ref" : "#/definitions/endpoint"
        },
        "associatedEndpoints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/endpoint"
          }
        },
        "tenantId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "providerServiceId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "endpointUpdateRequest"
      }
    },
    "endpointValidateRequest" : {
      "type" : "object",
      "properties" : {
        "endpoint" : {
          "$ref" : "#/definitions/endpoint"
        },
        "associatedEndpoints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/endpoint"
          }
        },
        "tenantId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "providerServiceId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "endpointValidateRequest"
      }
    },
    "endpointValidationResult" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "HOST_NOT_REACHABLE", "AGENT_NOT_FOUND", "UNKNOWN_FAILURE", "INVALID_CERTIFICATE", "INVALID_CREDENTIALS", "TIMEOUT" ]
        },
        "message" : {
          "type" : "string"
        },
        "certificateInfo" : {
          "$ref" : "#/definitions/CertificateInfo"
        }
      },
      "xml" : {
        "name" : "endpointValidationResult"
      }
    },
    "entities" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "xml" : {
            "name" : "links",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "content" : {
          "type" : "array",
          "xml" : {
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/BusinessGroupAllocationsData"
          }
        }
      },
      "xml" : {
        "name" : "entities"
      }
    },
    "entityRef" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "classId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The identifier of the type or category to which the referenced entity belongs."
          },
          "id" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the referenced entity, encoded as a string"
          },
          "componentId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The durable identifier of a component registered in the suite component registry that owns and manages the referenced entity. This can be omitted if this component can be derived from the context within which this entity reference occurs. It must be specified, if no such context exists or if the component differs from that defined by the context."
          },
          "label" : {
            "type" : "string"
          }
        },
        "description" : "Represents a reference to an entity defined somewhere in the suite.",
        "xml" : {
          "name" : "entityRef"
        }
      } ]
    },
    "entityRefEx" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "the Href"
          }
        },
        "description" : "Represents a reference to an entity by uri",
        "xml" : {
          "name" : "entityRefEx"
        }
      } ]
    },
    "integerLiteral" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The integer value."
          }
        },
        "description" : "Wraps a signed 64-bit integer value.",
        "xml" : {
          "name" : "integerLiteral"
        }
      } ]
    },
    "ipAllocationRequest" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ipRangeOperation"
      }, {
        "type" : "object",
        "properties" : {
          "rangeIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "allocationStartAddress" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "allocationSize" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            }
          },
          "nicIndex" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "primary" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "default" : false
          },
          "blueprintRequestId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "ipAllocationRequest"
        }
      } ]
    },
    "ipAllocationResult" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ipRangeOperation"
      }, {
        "type" : "object",
        "properties" : {
          "allocatedAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dnsInfo" : {
            "$ref" : "#/definitions/dnsInfo"
          },
          "ipAllocationRequestId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "rangeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "ipVersion" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "IPv6", "IPv4" ]
          },
          "gateway" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "subnetPrefixLength" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "ipAllocationResult"
        }
      } ]
    },
    "ipRange" : {
      "type" : "object",
      "properties" : {
        "externalId" : {
          "type" : "string"
        },
        "dnsInfo" : {
          "$ref" : "#/definitions/dnsInfo"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "providerEndpointId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "providerEndpointURI" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "start" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "end" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "ipVersion" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          },
          "enum" : [ "IPv6", "IPv4" ]
        },
        "gateway" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "subnetPrefixLength" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "addressSpaceId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "ipRange"
      }
    },
    "ipRangeCreateResult" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ipRangeOperation"
      }, {
        "type" : "object",
        "properties" : {
          "ipRange" : {
            "$ref" : "#/definitions/ipRange"
          },
          "ipRangeCreateRequestId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "ipRangeCreateResult"
        }
      } ]
    },
    "ipRangeDeleteRequest" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ipRangeOperation"
      }, {
        "type" : "object",
        "properties" : {
          "ipRangeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "externalIpRangeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "ipRangeDeleteRequest"
        }
      } ]
    },
    "ipRangeDeleteResult" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ipRangeOperation"
      }, {
        "type" : "object",
        "properties" : {
          "ipRangeDeleteRequestId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "UNKNOWN", "COMPLETED", "IN_PROGRESS", "FAILED" ]
          },
          "errorCode" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "errorMessage" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "ipRangeDeleteResult"
        }
      } ]
    },
    "ipRangeOperation" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "ipRangeOperation"
      }
    },
    "ipRangesCreateRequest" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ipRangeOperation"
      }, {
        "type" : "object",
        "properties" : {
          "networkProfileId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "blueprintRequestId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "ipRangesCreateRequest"
        }
      } ]
    },
    "ipReleaseRequest" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ipRangeOperation"
      }, {
        "type" : "object",
        "properties" : {
          "rangeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "address" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "nicIndex" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "ipReleaseRequest"
        }
      } ]
    },
    "ipReleaseResult" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ipRangeOperation"
      }, {
        "type" : "object",
        "properties" : {
          "ipReleaseRequestId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "UNKNOWN", "COMPLETED", "IN_PROGRESS", "FAILED" ]
          },
          "errorCode" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "errorMessage" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "ipReleaseResult"
        }
      } ]
    },
    "ipamObject" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "ipamObject"
      }
    },
    "ipamRequestStatus" : {
      "type" : "object",
      "properties" : {
        "requestPayload" : {
          "$ref" : "#/definitions/ipamObject"
        },
        "requestInput" : {
          "$ref" : "#/definitions/ipamObject"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "providerCorrelationRequestId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "originalCallbackServiceId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "tenantId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "requestType" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          },
          "enum" : [ "DEALLOCATE", "DELETE_IP_RANGES", "ALLOCATE", "CREATE_IP_RANGES" ]
        },
        "requestState" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          },
          "enum" : [ "UNKNOWN", "COMPLETED", "IN_PROGRESS", "FAILED" ]
        },
        "requestDetails" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "providerEndpointId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "ipamRequestStatus"
      }
    },
    "literal" : {
      "type" : "object",
      "discriminator" : "type",
      "description" : "Wraps a value such that values of different types can be treated generically.",
      "xml" : {
        "name" : "literal"
      }
    },
    "literalMap" : {
      "type" : "object",
      "properties" : {
        "entries" : {
          "type" : "array",
          "xml" : {
            "name" : "entry"
          },
          "items" : {
            "$ref" : "#/definitions/LiteralMapEntry"
          }
        }
      },
      "description" : "Equivalent of java.util.Map",
      "xml" : {
        "name" : "literalMap"
      }
    },
    "loadBalancer" : {
      "allOf" : [ {
        "$ref" : "#/definitions/networkObject"
      }, {
        "type" : "object",
        "properties" : {
          "pools" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/loadBalancerPool"
            }
          },
          "monitors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/loadBalancerMonitor"
            }
          },
          "virtualIps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/loadBalancerVirtualIp"
            }
          },
          "vipNetwork" : {
            "type" : "string"
          },
          "vipNicIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "tierNetwork" : {
            "type" : "string"
          },
          "tierNicIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "loggingLevel" : {
            "type" : "string"
          },
          "loadBalancerTypeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "loadBalancer"
        }
      } ]
    },
    "loadBalancerMember" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32"
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "loadBalancerMember"
      }
    },
    "loadBalancerMonitor" : {
      "type" : "object",
      "properties" : {
        "timeout" : {
          "type" : "integer",
          "format" : "int32"
        },
        "interval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxRetries" : {
          "type" : "integer",
          "format" : "int32"
        },
        "method" : {
          "type" : "string"
        },
        "monitorPath" : {
          "type" : "string"
        },
        "send" : {
          "type" : "string"
        },
        "receive" : {
          "type" : "string"
        },
        "newEntity" : {
          "type" : "boolean",
          "default" : false
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "loadBalancerMonitor"
      }
    },
    "loadBalancerPool" : {
      "type" : "object",
      "properties" : {
        "protocol" : {
          "type" : "string"
        },
        "healthCheckProtocol" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32"
        },
        "memberPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "monitorPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "memberMaxConnections" : {
          "type" : "integer",
          "format" : "int32"
        },
        "memberMinConnections" : {
          "type" : "integer",
          "format" : "int32"
        },
        "acceleration" : {
          "type" : "boolean",
          "default" : false
        },
        "transparent" : {
          "type" : "boolean",
          "default" : false
        },
        "connectionRate" : {
          "type" : "integer",
          "format" : "int32"
        },
        "connectionLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "algorithm" : {
          "type" : "string"
        },
        "algorithmParameter" : {
          "type" : "string"
        },
        "persistenceMethod" : {
          "type" : "string"
        },
        "persistenceCookieName" : {
          "type" : "string"
        },
        "persistenceCookieMode" : {
          "type" : "string"
        },
        "persistenceExpiration" : {
          "type" : "integer",
          "format" : "int32"
        },
        "monitorIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "uniqueMonitorId" : {
          "type" : "string"
        },
        "servicePortId" : {
          "type" : "string"
        },
        "members" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/loadBalancerMember"
          }
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "loadBalancerPool"
      }
    },
    "loadBalancerVirtualIp" : {
      "type" : "object",
      "properties" : {
        "poolId" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "loadBalancerVirtualIp"
      }
    },
    "money" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number",
            "format" : "double",
            "description" : "The amount associated with this value (with no specific currency)."
          }
        },
        "description" : "Represents a single, precise monetary value.",
        "xml" : {
          "name" : "money"
        }
      } ]
    },
    "moneyRange" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "minValue" : {
            "type" : "number",
            "format" : "double",
            "description" : "The lower limit of the range."
          },
          "maxValue" : {
            "type" : "number",
            "format" : "double",
            "description" : "The upper limit of the range."
          }
        },
        "description" : "Represents a range of money values, between some defined minimums and maximums.",
        "xml" : {
          "name" : "moneyRange"
        }
      } ]
    },
    "moneyRate" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "cost" : {
            "description" : "The cost (including optional currency code).",
            "$ref" : "#/definitions/literal"
          }
        },
        "description" : "A base type for literals representing a rate of some monetary value over a specified basis. E.g. $5 / hour; $1-2 / GB.",
        "xml" : {
          "name" : "moneyRate"
        }
      } ]
    },
    "moneyTimeRate" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "basis" : {
            "description" : "The span of time to calculate the rate of money for.",
            "$ref" : "#/definitions/timeSpan"
          }
        },
        "description" : "Represents a rate of money over time.",
        "xml" : {
          "name" : "moneyTimeRate"
        }
      } ]
    },
    "multipleLiteral" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "elementTypeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The data type of the items in the list.",
            "enum" : [ "STRING", "INTEGER", "DECIMAL", "MONEY", "MONEY_RANGE", "MONEY_TIME_RATE", "BOOLEAN", "ENTITY_REFERENCE", "DATE_TIME", "TIME_SPAN", "SECURE_STRING", "COMPLEX" ]
          },
          "items" : {
            "type" : "array",
            "xml" : {
              "name" : "item"
            },
            "description" : "The list of specified values. NOTE: All values must be of the same data type.",
            "items" : {
              "$ref" : "#/definitions/literal"
            }
          }
        },
        "description" : "A literal which represents multiple values. All of these component values must be of the same data type.",
        "xml" : {
          "name" : "multipleLiteral"
        }
      } ]
    },
    "natRule" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "order" : {
          "type" : "integer",
          "format" : "int32"
        },
        "action" : {
          "type" : "string"
        },
        "protocol" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean",
          "default" : false
        },
        "originalAddress" : {
          "type" : "string"
        },
        "translatedAddress" : {
          "type" : "string"
        },
        "originalPort" : {
          "type" : "string"
        },
        "translatedPort" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "interfaceIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "peerInterfaceIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "machineId" : {
          "type" : "string"
        },
        "componentName" : {
          "type" : "string"
        },
        "componentId" : {
          "type" : "string"
        },
        "targetType" : {
          "type" : "string"
        },
        "userDefined" : {
          "type" : "boolean",
          "default" : false
        },
        "networkInterfaceId" : {
          "type" : "string"
        },
        "edgeId" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "natRule"
      }
    },
    "network" : {
      "allOf" : [ {
        "$ref" : "#/definitions/networkObject"
      }, {
        "type" : "object",
        "properties" : {
          "networkProfileType" : {
            "type" : "string",
            "enum" : [ "NONE", "PRIVATE", "NAT", "ROUTED", "EXTERNAL" ]
          },
          "machineIdCollection" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "networkBackings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/networkBacking"
            }
          },
          "natRules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/natRule"
            }
          },
          "networkTypeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "network"
        }
      } ]
    },
    "networkBacking" : {
      "type" : "object",
      "properties" : {
        "externalId" : {
          "type" : "string"
        },
        "computeResourceNetworkId" : {
          "type" : "string"
        },
        "computeResourceName" : {
          "type" : "string"
        },
        "computeResourceId" : {
          "type" : "string"
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "networkBacking"
      }
    },
    "networkObject" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "networkObject"
      }
    },
    "networkProviderRequest" : {
      "type" : "object",
      "properties" : {
        "networkObject" : {
          "$ref" : "#/definitions/networkObject"
        },
        "rootCafeRequestId" : {
          "type" : "string"
        },
        "requestId" : {
          "type" : "string"
        },
        "originalCallbackServiceId" : {
          "type" : "string"
        },
        "callbackServiceId" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "subtenantId" : {
          "type" : "string"
        },
        "operationType" : {
          "type" : "string",
          "enum" : [ "UNREGISTER", "DEALLOCATE", "UPDATE", "CREATE", "READ", "ALLOCATE", "DELETE" ]
        },
        "resourceId" : {
          "type" : "string"
        },
        "componentData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "previousComponentData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "requestInputData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "componentTypeId" : {
          "type" : "string"
        },
        "blueprintRequestId" : {
          "type" : "string"
        },
        "callbackAdditionalUrlPath" : {
          "type" : "string"
        },
        "componentId" : {
          "type" : "string"
        },
        "rootCafeDeploymentId" : {
          "type" : "string"
        },
        "blueprintId" : {
          "type" : "string"
        },
        "blueprintName" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "networkProviderRequest"
      }
    },
    "providerRequest" : {
      "type" : "object",
      "properties" : {
        "requestedObjectId" : {
          "type" : "string"
        },
        "requestType" : {
          "type" : "string",
          "enum" : [ "CATALOG_ITEM", "RESOURCE_ACTION" ]
        },
        "catalogItemTypeId" : {
          "type" : "string"
        },
        "targetResourceId" : {
          "type" : "string"
        },
        "targetResourceTypeId" : {
          "type" : "string"
        },
        "targetResourceProviderId" : {
          "type" : "string"
        },
        "targetCafeResourceId" : {
          "type" : "string"
        },
        "requestBindingId" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "reasons" : {
          "type" : "string"
        },
        "organization" : {
          "$ref" : "#/definitions/catalogOrganizationReference"
        },
        "requestedFor" : {
          "type" : "string"
        },
        "requestedBy" : {
          "type" : "string"
        },
        "requestData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "solution" : {
          "type" : "boolean",
          "default" : false
        },
        "rootCafeResourceId" : {
          "type" : "string"
        },
        "catalogRequestId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "callbackServiceId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "requestNumber" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "providerRequest"
      }
    },
    "providerRollbackRequest" : {
      "type" : "object",
      "properties" : {
        "resourceIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "xml" : {
        "name" : "providerRollbackRequest"
      }
    },
    "registerMachineInfo" : {
      "type" : "object",
      "required" : [ "componentId", "compositeBlueprintId", "deploymentName", "hostReservationId", "hostStorageReservationId", "owner", "requestingUser", "templateId", "virtualMachineId" ],
      "properties" : {
        "virtualMachineId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "templateId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "hostReservationId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "hostStorageReservationId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "deploymentName" : {
          "type" : "string"
        },
        "compositeBlueprintId" : {
          "type" : "string"
        },
        "componentId" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string"
        },
        "requestingUser" : {
          "type" : "string"
        },
        "machineProperties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MachineProperty"
          }
        }
      },
      "xml" : {
        "name" : "registerMachineInfo"
      }
    },
    "requestCompletion" : {
      "type" : "object",
      "properties" : {
        "completionDetails" : {
          "type" : "string"
        },
        "requestCompletionState" : {
          "type" : "string",
          "enum" : [ "SUCCESSFUL", "PARTIALLY_SUCCESSFUL", "FAILED", "REJECTED" ]
        },
        "resourceBindingIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "xml" : {
        "name" : "requestCompletion"
      }
    },
    "reservation" : {
      "type" : "object",
      "properties" : {
        "alertPolicy" : {
          "$ref" : "#/definitions/alertPolicy"
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "name" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "reservationTypeId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "tenantId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "subTenantId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "enabled" : {
          "type" : "boolean",
          "xml" : {
            "attribute" : true
          },
          "default" : false
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "reservationPolicyId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "reservation"
      }
    },
    "reservationPolicy" : {
      "type" : "object",
      "properties" : {
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "date-time",
          "xml" : {
            "attribute" : true
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          }
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "name" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "description" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "reservationPolicyTypeId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "reservationPolicy"
      }
    },
    "resourceInfo" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "extensionData" : {
          "$ref" : "#/definitions/literalMap"
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "type" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "machineId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "tenantId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "resourceInfo"
      }
    },
    "secureString" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The string value."
          }
        },
        "description" : "Wraps a secured string value, such as a password.",
        "xml" : {
          "name" : "secureString"
        }
      } ]
    },
    "securityGroup" : {
      "allOf" : [ {
        "$ref" : "#/definitions/networkObject"
      }, {
        "type" : "object",
        "properties" : {
          "machineIdCollection" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ipAddressCollection" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "securityGroupTypeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "internal" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "default" : false
          }
        },
        "xml" : {
          "name" : "securityGroup"
        }
      } ]
    },
    "securityPolicy" : {
      "allOf" : [ {
        "$ref" : "#/definitions/networkObject"
      }, {
        "type" : "object",
        "properties" : {
          "securityPolicyTypeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "internal" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "default" : false
          }
        },
        "xml" : {
          "name" : "securityPolicy"
        }
      } ]
    },
    "securityTag" : {
      "allOf" : [ {
        "$ref" : "#/definitions/networkObject"
      }, {
        "type" : "object",
        "properties" : {
          "securityTagTypeId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "securityTag"
        }
      } ]
    },
    "stringLiteral" : {
      "allOf" : [ {
        "$ref" : "#/definitions/literal"
      }, {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The string value."
          }
        },
        "description" : "Wraps a String value.",
        "xml" : {
          "name" : "stringLiteral"
        }
      } ]
    },
    "timeSpan" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "unit" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          },
          "description" : "The unit of measure for the time span. e.g: days.",
          "enum" : [ "MILLISECONDS", "SECONDS", "MINUTES", "HOURS", "DAYS", "WEEKS", "MONTHS", "YEARS" ]
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64",
          "xml" : {
            "attribute" : true
          },
          "description" : "The amount for the time span."
        }
      },
      "description" : "A literal defining period of time. This period is represented some integral number of a specified timeUnit.e.g. 6 days.",
      "xml" : {
        "name" : "timeSpan"
      }
    },
    "value" : {
      "type" : "object",
      "properties" : {
        "underlyingValue" : {
          "$ref" : "#/definitions/literal"
        },
        "label" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "value"
      }
    }
  }
}