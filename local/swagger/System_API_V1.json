{
  "swagger": "2.0",
  "info": {
    "version": "1",
    "title": "AirWatch Organization Group Management (System) REST API",
    "description": "AirWatch Organization Group Management (System) REST API V1"
  },
  "host": "apimain.ssdevrd.com",
  "basePath": "/api/system",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/admins/{adminId}/favorites": {
      "get": {
        "tags": [
          "AdminFavoritesV1"
        ],
        "summary": "New - Get favorites list for an admin",
        "description": "Returns set of saved favorites in sorted order by sortOder of link filtering out links which are not accessible based on organization group permissions.",
        "operationId": "AdminFavoritesV1_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "Identifier for an admin on behalf of whom operation is to be performed(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FavoritesListV1Model"
            }
          },
          "403": {
            "description": "Forbidden 1.{6078: User does not have permission to perform this operation.} ",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          },
          "404": {
            "description": "Not Found 1.{6000: Admin not found} ",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminFavoritesV1"
        ],
        "summary": "New - Add a new favorite to the favorites list",
        "description": "Save a given link/page in admin favorites list.",
        "operationId": "AdminFavoritesV1_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "Identifier for an admin on behalf of whom operation is to be performed(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "favoriteRequest",
            "in": "body",
            "description": "New favorite to be added into favorites list. Favorite would have url, name(friendly name) and sortOrder.(Required)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddFavoritesRequestV1Model"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "/api/system/admins/{adminId}/favorites/{favoriteId}",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden 1.{6078: User does not have permission to perform this operation}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          },
          "404": {
            "description": "Not Found 1.{6000: Admin not found}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      }
    },
    "/admins/{adminId}/favorites/{favoriteId}": {
      "get": {
        "tags": [
          "AdminFavoritesV1"
        ],
        "summary": "New - Get details for given favorite",
        "description": "Provides favorite details like displayName, url for a given favorite id",
        "operationId": "AdminFavoritesV1_GetById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "favoriteId",
            "in": "path",
            "description": "Id of favorite entity to be removed from list(Required)",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "adminId",
            "in": "path",
            "description": "Identifier for an admin on behalf of whom operation is to be performed(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FavoritesV1Model"
            }
          },
          "403": {
            "description": "Forbidden 1.{6078: User does not have permission to perform this operation.}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          },
          "404": {
            "description": "Not Found 1.{6000: Admin not found} 2.{6077: Favorite not found}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AdminFavoritesV1"
        ],
        "summary": "New - Delete a favorite from favorites list",
        "description": "Remove a favorite from favorties list of admin.",
        "operationId": "AdminFavoritesV1_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "favoriteId",
            "in": "path",
            "description": "Id of favorite entity to be removed from list(Required)",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "adminId",
            "in": "path",
            "description": "Identifier for an admin on behalf of whom operation is to be performed(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden 1.{6078: User does not have permission to perform this operation.}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          },
          "404": {
            "description": "Not Found 1.{6000: Admin not found} 2.{6077: Favorite not found}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      }
    },
    "/admins/permissions": {
      "get": {
        "tags": [
          "AdminPermissionsV1"
        ],
        "summary": "New - Get permissions for given admin",
        "description": "Get admin allowed permissions considering admin's active role along with privacy and SKU conditions for the OG which this admin belongs to",
        "operationId": "AdminPermissionsV1_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "query",
            "description": "Optional adminId for which permissions to be fetched otherwise permissions are fetched for current admin",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdminPermissionsV1Model"
            }
          },
          "403": {
            "description": "Forbidden 1. {6078: User does not have permission to perform this operation}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          },
          "404": {
            "description": "Not Found 1.{6000: Admin not found}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      }
    },
    "/admin/roles/{id}": {
      "get": {
        "tags": [
          "AdminRoles"
        ],
        "summary": "Retrieves the existing role",
        "operationId": "AdminRoles_GetRole",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "AdminRoles"
        ],
        "summary": "Update name of an existing role",
        "operationId": "AdminRoles_UpdateRole",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "role",
            "in": "body",
            "description": "Role with new name",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/admin/roles": {
      "put": {
        "tags": [
          "AdminRoles"
        ],
        "summary": "Updates an existing role with the new set of permissions",
        "operationId": "AdminRoles_UpdateRole",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "rolePermission",
            "in": "body",
            "description": "The Permissions associated with a role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RolePermissionModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "AdminRoles"
        ],
        "summary": "Creates a new role with the given permissions",
        "operationId": "AdminRoles_CreateRole",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "rolePermission",
            "in": "body",
            "description": "The Permissions associated with a role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RolePermissionModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/admins/{id}": {
      "get": {
        "tags": [
          "AdminUsers"
        ],
        "summary": "Retrieves information about the specified admin user.",
        "description": "v1",
        "operationId": "AdminUsers_Get",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The admin user ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/admins/{id}/delete": {
      "delete": {
        "tags": [
          "AdminUsers"
        ],
        "summary": "Deletes the specified admin user.",
        "description": "v1",
        "operationId": "AdminUsers_Delete",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The admin user ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/admins/addadminuser": {
      "post": {
        "tags": [
          "AdminUsers"
        ],
        "summary": "Creates a new admin user.",
        "description": "v1",
        "operationId": "AdminUsers_Put",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "adminUser",
            "in": "body",
            "description": "The admin user resource to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUser"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/admins/{id}/update": {
      "post": {
        "tags": [
          "AdminUsers"
        ],
        "summary": "Updates the specified admin user.",
        "description": "v1",
        "operationId": "AdminUsers_UpdateAdminUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The admin user ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "adminUser",
            "in": "body",
            "description": "The updated admin user details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUser"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/admins/search": {
      "get": {
        "tags": [
          "AdminUsers"
        ],
        "summary": "Searches for Admin users using the query information provided.",
        "description": "v1",
        "operationId": "AdminUsers_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "firstname",
            "in": "query",
            "description": "The First name to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname",
            "in": "query",
            "description": "The Last name to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "The Email Address to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The Organization Group Id to search for.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "role",
            "in": "query",
            "description": "The Role name to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "description": "The User name to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Order the results by this attribute.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Maximum records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Allowed values are ASC or DESC. Defaults to ASC if this attribute is not specified.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/admins/{id}/changepassword": {
      "post": {
        "tags": [
          "AdminUsers"
        ],
        "summary": "Changes the specified admin user's password.",
        "description": "v1",
        "operationId": "AdminUsers_ChangePassword",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The admin user ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "adminuser",
            "in": "body",
            "description": "The admin user details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUser"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/admins/{id}/addrole": {
      "post": {
        "tags": [
          "AdminUsers"
        ],
        "summary": "Adds a role to the specified admin user.",
        "description": "v1",
        "operationId": "AdminUsers_AddRoleToUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The admin user ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "role",
            "in": "body",
            "description": "The role to add.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/admins/{id}/removerole": {
      "post": {
        "tags": [
          "AdminUsers"
        ],
        "summary": "Removes a role from the specified admin user.",
        "description": "v1",
        "operationId": "AdminUsers_RemoveRoleFromUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The admin user ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "role",
            "in": "body",
            "description": "The role to remove.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/android/{id}/IsSecurityEnabled": {
      "post": {
        "tags": [
          "Android"
        ],
        "summary": "Checks whether the android security is enabled for the given OG",
        "operationId": "Android_IsSecurityEnabled",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "OG ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/androidwork": {
      "get": {
        "tags": [
          "AndroidWork"
        ],
        "summary": "Method to Save the android work settings\r\nThis method is used to mock and save the android work settings if all the parameters are available",
        "operationId": "AndroidWork_GetAndroidWorkSettings",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "AndroidWork"
        ],
        "summary": "Method to Save the android work settings\r\nThis method is used to mock and save the android work settings if all the parameters are available",
        "operationId": "AndroidWork_SaveAndroidWorkSettings",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "androidWorkSetupModel",
            "in": "body",
            "description": "Parameter for Android Work set up Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AndroidWorkSetupModel"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/apns": {
      "get": {
        "tags": [
          "Apns"
        ],
        "summary": "Method to Create APNs Cert Request or Get the status of the APNs Configuration for an Organization Group\r\nUpload certificate Blob Id is -1 when APNs is already Configured for the Organization Group",
        "operationId": "Apns_ApnsCertificate",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force generate APNs Cert Request",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Apns"
        ],
        "summary": "Method to Save the APNs Configuration for an Organization Group\r\nThis method is applicable after the APNs certificate Blob(.pem) is uploaded to the AirWatch server.",
        "operationId": "Apns_SaveApnsCertificate",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "apnsSetupModel",
            "in": "body",
            "description": "Parameter for APNs Setup Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApnsSetupModel"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Apns"
        ],
        "summary": "New - Method to Update the APNs Configuration for an Organization Group\r\nThis method is applicable after the APNs is configured on the AirWatch server.",
        "operationId": "Apns_UpdateApnsCertificate",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "apnsConfigurationModel",
            "in": "body",
            "description": "Parameter for APNs Configuration Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApnsConfigurationModel"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/apns/details": {
      "get": {
        "tags": [
          "Apns"
        ],
        "summary": "New - Method to get the status of the APNs Configuration for an Organization Group",
        "operationId": "Apns_ApnsCertificateDetail",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{ogid}/storage": {
      "get": {
        "tags": [
          "AppContent"
        ],
        "summary": "Provides application and content storage info for the specified organization group.",
        "description": "v1",
        "operationId": "AppContent_GetAppContentStorageInfo",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogid",
            "in": "path",
            "description": "The OrganizationGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/{id}/apps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Retrieves Apps Based on user",
        "operationId": "Apps_GetAppsByUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/autodiscovery": {
      "get": {
        "tags": [
          "Autodiscovery"
        ],
        "summary": "New - Get method to fetch all the Registered Domains in Airwatch, \r\nwhich are eligible to be pushed to VIDM",
        "operationId": "Autodiscovery_AutodiscoveryDomainFetch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Autodiscovery"
        ],
        "summary": "New - Create the domain on VIDM if the domain is already registered with airwatch or\r\nelse register it with Airwatch and do not push it to VIDM.",
        "operationId": "Autodiscovery_AutoDiscoveryDomainCreate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "autoDiscoveryModel",
            "in": "body",
            "description": "autoDiscovery Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutoDiscoveryModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints": {
      "get": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Get Action Method for fetching blueprints for an Organization Group.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_GetBluePrints",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Saves the Blueprint\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_SaveBlueprint",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "blueprintModel",
            "in": "body",
            "description": "blueprintModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlueprintModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints/{id}": {
      "get": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Retrieves the blueprint details of a blueprint in an Organization Group.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_GetBlueprintDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of blueprint",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Delete Action Method for deleting blueprint having particular blueprintId\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_DeleteBluePrint",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of blueprint to be deleted",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Modifies Name and AssignmentType of the Blueprint.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_UpdateBlueprint",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of blueprint to be deleted",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "blueprintModel",
            "in": "body",
            "description": "blueprintModel contains the properties of instance to be patched",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlueprintModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints/{id}/apps": {
      "post": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Links the specified Blueprint with provided Apps.\r\nIf the Blueprint is already published, then Apps will be published asynchronously in some other process.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_LinkWithApps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of blueprint",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "apps",
            "in": "body",
            "description": "list of Apps",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppModel"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints/{id}/resources": {
      "get": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Retrieves resources for a blueprint.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_GetResource",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of blueprint",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Links the specified Blueprint with provided resource.\r\nIf the Blueprint is already published, then resource will be published.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_LinkWithResources",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of blueprint",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceModel",
            "in": "body",
            "description": "Model for Resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlueprintResourceModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints/{id}/resources/{resourceid}": {
      "delete": {
        "tags": [
          "Blueprints"
        ],
        "summary": "De links a resource from a particular blueprint\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_DelinkResource",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of blueprint",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceid",
            "in": "path",
            "description": "Id of Resource",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints/{id}/users": {
      "get": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Retrieves Users for a blueprint.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_GetUsers",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of blueprint",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Links the specified Blueprint with the provided users\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_LinkUsersToBlueprint",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of blueprint",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "blueprintUsersModel",
            "in": "body",
            "description": "Model for users list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlueprintUsersModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints/{id}/policies/{policyId}": {
      "post": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Link Policies to Blueprint",
        "operationId": "Blueprints_LinkPoliciesToBlueprint",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Blueprint Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "policy Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints/{id}/publish": {
      "post": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Publish the Blueprint",
        "operationId": "Blueprints_PublishBlueprint",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints/{id}/usergroups": {
      "get": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Retrieves UserGroups for a blueprint.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_GetUserGroups",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of blueprint",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Links the specified Blueprint with the provided user groups.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_LinkUserGroupsToBlueprint",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of blueprint",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "blueprintUserGroupsModel",
            "in": "body",
            "description": "Model for User groups",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlueprintUserGroupsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints/{id}/users/delete": {
      "post": {
        "tags": [
          "Blueprints"
        ],
        "summary": "De Links the specified Blueprint from users.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_DelinkUsersFromBlueprint",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of blueprint",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "blueprintUsersModel",
            "in": "body",
            "description": "Model for blueprint user list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlueprintUsersModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints/{id}/usergroups/delete": {
      "post": {
        "tags": [
          "Blueprints"
        ],
        "summary": "De Links the specified Blueprint from UserGroups.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "Blueprints_DelinkUserGroupsFromBlueprint",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of blueprint",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "blueprintUserGroupsModel",
            "in": "body",
            "description": "Model for user groups list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlueprintUserGroupsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints/{id}/Policies": {
      "get": {
        "tags": [
          "Blueprints"
        ],
        "summary": "Get Policies Associated with the Blueprint",
        "operationId": "Blueprints_GetPolicies",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Blueprint Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blueprints/{id}/purchasedapps": {
      "post": {
        "tags": [
          "Blueprints"
        ],
        "summary": "New - Save the assignment of the licences for a list of Purchased Apps and adds them to the Blueprint.\r\nIf the App is already present, edits the assignment of the licences accordingly.",
        "operationId": "Blueprints_SavePurchasedApps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Blueprint Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "appModel",
            "in": "body",
            "description": "Model with the List of Applications",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasedApplicationViewModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Blueprints"
        ],
        "summary": "New - Removes the License allocation from the purchased App and delinks the app from the Blueprint.",
        "operationId": "Blueprints_DeletePurchasedApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Blueprint Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "appid",
            "in": "query",
            "description": "Id of the purchased Application to be removed",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/customattributes/create": {
      "post": {
        "tags": [
          "CustomAttributes"
        ],
        "summary": "Creates a custom attribute definition in AirWatch",
        "description": "v1",
        "operationId": "CustomAttributes_SaveCustomAttribute",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "customAttribute",
            "in": "body",
            "description": "Custom Attribute Details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomAttributeModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/customattributes/search": {
      "get": {
        "tags": [
          "CustomAttributes"
        ],
        "summary": "Searches for the Custom Attributes in AirWatch for the filters provided in input",
        "description": "v1",
        "operationId": "CustomAttributes_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group Identifer",
            "required": false,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Custom Attribute Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Page Size",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/registercontainerdevice": {
      "post": {
        "tags": [
          "DeviceRegistrationV1"
        ],
        "summary": "Creates container device with the query infomration passed in the request",
        "operationId": "DeviceRegistrationV1_RegisterContainerDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "workspaceModel",
            "in": "body",
            "description": "vmWorkspace information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VmWorkspaceModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/registeruserdevices": {
      "post": {
        "tags": [
          "DeviceRegistrationV1"
        ],
        "summary": "Registers users and devices provided in the request",
        "description": "v1",
        "operationId": "DeviceRegistrationV1_RegisterUserDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceUserDetails",
            "in": "body",
            "description": "User and Device details",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeviceUserDetails"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/registereddevices/deletebyassetnumber": {
      "post": {
        "tags": [
          "DeviceRegistrationV1"
        ],
        "summary": "Deletes the registered devices identified by Asset number",
        "description": "v1",
        "operationId": "DeviceRegistrationV1_DeleteRegisteredDevicesByAssetNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "List of devices identified by Asset number",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/users/registereddevices/deletebyserialnumber": {
      "post": {
        "tags": [
          "DeviceRegistrationV1"
        ],
        "summary": "Deletes the registered devices identified by serial number",
        "description": "v1",
        "operationId": "DeviceRegistrationV1_DeleteRegisteredDevicesBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "List of devices identified by serial number",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/users/registereddevices/deletebyudid": {
      "post": {
        "tags": [
          "DeviceRegistrationV1"
        ],
        "summary": "Deletes the registered devices identified by UDID",
        "description": "v1",
        "operationId": "DeviceRegistrationV1_DeleteRegisteredDevicesByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "List of devices identified by UDID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/users/registereddevices/delete": {
      "post": {
        "tags": [
          "DeviceRegistrationV1"
        ],
        "summary": "Delete the registered devices identified by [Asset number ,UserName] or [Udid] or [Serialnumber]",
        "description": "v1",
        "operationId": "DeviceRegistrationV1_DeleteRegisteredDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "httpRequest",
            "in": "query",
            "description": "Holds request entity coming through call pipeline",
            "required": true,
            "type": "object"
          },
          {
            "name": "bulkInput",
            "in": "body",
            "description": "List of devices identified by Asset number/Udid/SerialNumber",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "searchby",
            "in": "query",
            "description": "MANDATORY. The identifier type must be one of the following [ Udid, Serialnumber, AssetNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "description": "OPTIONAL. If included will be processed ",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/enrollmenttoken/search": {
      "get": {
        "tags": [
          "DeviceRegistrationV1"
        ],
        "summary": "Searches for Enrollment Token and Device details using the query information provided.",
        "description": "v1",
        "operationId": "DeviceRegistrationV1_EnrollmentTokenSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "UserName of the Enrollment User for whom Enrollment Tokens needs to be searched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "query",
            "description": "Identifier of the Enrollment User for whom Enrollment Tokens needs to be searched.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Identifier of the Organization Group where Enrollment Tokens needs to be searched.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "organizationgroup",
            "in": "query",
            "description": "Organization Group Name where Enrollment Tokens needs to be searched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serialnumber",
            "in": "query",
            "description": "Serial number of device for which Enrollment Tokens to be retrieved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetnumber",
            "in": "query",
            "description": "Asset Number of device for which Enrollment Tokens to be retrieved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "enrollmentstatusid",
            "in": "query",
            "description": "EnrollmentStatusID of device for which Enrollment Tokens to be retrieved.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "compliancestatusid",
            "in": "query",
            "description": "ComplianceStatus of device for which Enrollment Tokens to be retrieved.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/{id}/registerdevice": {
      "post": {
        "tags": [
          "DeviceRegistrationV1"
        ],
        "summary": "Registers a device for the specified enrollment user.",
        "description": "v1",
        "operationId": "DeviceRegistrationV1_RegisterDeviceForUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "registerDeviceDetails",
            "in": "body",
            "description": "The device details to register.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterDeviceDetailsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/enrolleddevices/search": {
      "get": {
        "tags": [
          "DeviceRegistrationV1"
        ],
        "summary": "Retrieves enrolled device details for the query information provided in the request",
        "description": "v1",
        "operationId": "DeviceRegistrationV1_RetrieveEnrolledDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group Identifier in which device details will be retrieved.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "organizationgroup",
            "in": "query",
            "description": "Organization Group Name search parameter in which device details will be retrieved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform filter for the device details to be retrieved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customattributes",
            "in": "query",
            "description": "List of custom attribute names [separated by comma (,)] for which values should be returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serialnumber",
            "in": "query",
            "description": "Device serialnumber for which values should be returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "seensince",
            "in": "query",
            "description": "SeenSince DateTime, devices registered after the seensince datetime will be returned if present.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "seentill",
            "in": "query",
            "description": "SeenTill DateTime, devices registered till the seentill datetime will be returned if present.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "enrolledsince",
            "in": "query",
            "description": "EnrolledSince DateTime, devices enrolled after the enrolledsince datetime will be returned if present.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "enrolledtill",
            "in": "query",
            "description": "EnrolledTill DateTime, devices enrolled till the enrolledtill datetime will be returned if present.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/registereddevices/search": {
      "get": {
        "tags": [
          "DeviceRegistrationV1"
        ],
        "summary": "Retrieves registered device details",
        "description": "v1",
        "operationId": "DeviceRegistrationV1_RetrieveRegisteredDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group Identifier in which device details will be retrieved.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "organizationgroup",
            "in": "query",
            "description": "Organization Group Name search parameter in which device details will be retrieved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform filter for the device details to be retrieved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customattributes",
            "in": "query",
            "description": "List of custom attribute names [separated by comma (,)] for which values should be returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetnumber",
            "in": "query",
            "description": "Asset number filter for the device details to be retrieved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "seensince",
            "in": "query",
            "description": "SeenSince DateTime, devices registered after the seensince datetime will be returned if present.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "seentill",
            "in": "query",
            "description": "SeenTill DateTime, devices registered till the seentill datetime will be returned if present.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/{id}/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves Devices Based on user",
        "description": "v1",
        "operationId": "Devices_GetDevicesByUserId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/diagnostics/registerada": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Registers ADA(Airwatch Diagnostics Agent) with AirWatch.",
        "description": "v1",
        "operationId": "Diagnostics_RegisterAda",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "adaInfo",
            "in": "body",
            "description": "ADA Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdaEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/diagnostics/adauid/{adauid}/registerservices": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Registers the services to be monitored by the ADA.",
        "description": "v1",
        "operationId": "Diagnostics_RegisterServices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "adauid",
            "in": "path",
            "description": "ADA Uid",
            "required": true,
            "type": "string"
          },
          {
            "name": "monitoringEntity",
            "in": "body",
            "description": "Services to be monitored",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwMonitoringEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/diagnostics/adauid/{adauid}/getadaconfiguration": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Gets the configuration deatils of ADA(SamplingFequency, CommandPollingFrequency)",
        "description": "v1",
        "operationId": "Diagnostics_GetAdaConfiguration",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "adauid",
            "in": "path",
            "description": "ADA UID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/diagnostics/savesample": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Saves sample data from the ADA.",
        "description": "v1",
        "operationId": "Diagnostics_SaveSample",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "sampleEntity",
            "in": "body",
            "description": "Sample Entities to save",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdaSampleEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/diagnostics/adauid/{adauid}/GetAdaCommands": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Gets the list of commands for the ADA",
        "description": "v1",
        "operationId": "Diagnostics_GetAdaCommands",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "adauid",
            "in": "path",
            "description": "ADA Uid",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/diagnostics/UpdateAdaCommandStatus": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Updates command status",
        "description": "v1",
        "operationId": "Diagnostics_UpdateAdaCommandStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationCommandStatusEntity",
            "in": "body",
            "description": "command status",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationCommandStatusEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/diagnostics/maplogfiletoservice": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Maps log file to service\\application identified from commandid.",
        "description": "v1",
        "operationId": "Diagnostics_MapLogFileToService",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "logFileMappingEntity",
            "in": "body",
            "description": "Mapping information of service\\application from ADA",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogFileMappingEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/diagnostics/updateloglevel": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Updates log level of service\\application identified from commandid.",
        "description": "v1",
        "operationId": "Diagnostics_UpdateLogLevel",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "logLevelMappingEntity",
            "in": "body",
            "description": "Mapping information of service\\application from ADA",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogLevelMappingEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/system/uploadblob": {
      "post": {
        "tags": [
          "DiagnosticsBlob"
        ],
        "summary": "Upload the blob data to a repository.",
        "description": "v1",
        "operationId": "DiagnosticsBlob_UploadBlob",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "query",
            "description": "The name of the file being uploaded",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The id of the organization group in which to upload the file.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/system/downloadblob/{blobId}": {
      "get": {
        "tags": [
          "DiagnosticsBlob"
        ],
        "summary": "Download a file based on blobId.",
        "description": "v1",
        "operationId": "DiagnosticsBlob_DownloadBlob",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "blobId",
            "in": "path",
            "description": "The blob id of the file to download",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/registereddevices/serialnumber/{serialnumber}/createcustomattributes": {
      "post": {
        "tags": [
          "EnrollmentCustomAttributes"
        ],
        "summary": "Creates a new device custom attribute value for a registered device.",
        "description": "v1",
        "operationId": "EnrollmentCustomAttributes_CreateCustomAttributesForRegDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "Device Serial number",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom Attribute name and value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/registereddevices/serialnumber/{serialnumber}/updatecustomattributes": {
      "post": {
        "tags": [
          "EnrollmentCustomAttributes"
        ],
        "summary": "Updates custom attribute value for registered device if custom attribute value already exists.",
        "description": "v1",
        "operationId": "EnrollmentCustomAttributes_UpdateCustomAttributesForRegDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "Device Serial number",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom Attribute name and value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/registereddevices/serialnumber/{serialnumber}/deletecustomattributes": {
      "post": {
        "tags": [
          "EnrollmentCustomAttributes"
        ],
        "summary": "Deletes the custom attributes for a registered device",
        "description": "v1",
        "operationId": "EnrollmentCustomAttributes_DeleteCustomAttributesForRegDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "serial number of the device",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom Attribute list containing names which needs to be deleted for the device",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/registereddevices/assetnumber/{assetnumber}/createcustomattributes": {
      "post": {
        "tags": [
          "EnrollmentCustomAttributes"
        ],
        "summary": "Creates a new device custom attribute value for a registered device.",
        "description": "v1",
        "operationId": "EnrollmentCustomAttributes_CreateCustomAttributesForRegDevicesByAssetNr",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "assetnumber",
            "in": "path",
            "description": "Device Asset number",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom Attribute name and value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/registereddevices/assetnumber/{assetnumber}/updatecustomattributes": {
      "post": {
        "tags": [
          "EnrollmentCustomAttributes"
        ],
        "summary": "Updates custom attribute value for registered device if custom attribute value already exists.",
        "description": "v1",
        "operationId": "EnrollmentCustomAttributes_UpdateCustomAttributesForRegDevicesByAssetNr",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "assetnumber",
            "in": "path",
            "description": "Device Asset number",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom Attribute name and value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/registereddevices/assetnumber/{assetnumber}/deletecustomattributes": {
      "post": {
        "tags": [
          "EnrollmentCustomAttributes"
        ],
        "summary": "Deletes the custom attributes for a registered device",
        "description": "v1",
        "operationId": "EnrollmentCustomAttributes_DeleteCustomAttributesForRegDevicesByAssetNr",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "assetnumber",
            "in": "path",
            "description": "Asset number of the device",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom Attribute list containing names which needs to be deleted for the device",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/enrolleddevices/mulitiplecustomattributesearch": {
      "post": {
        "tags": [
          "EnrollmentCustomAttributes"
        ],
        "summary": "Retrieves enrolled device details for the query information provided in the request",
        "description": "v1",
        "operationId": "EnrollmentCustomAttributes_RetrieveEnrolledDevicesByCustomAttribute",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "enrolledDeviceAttribute",
            "in": "body",
            "description": "Custom Attribute Search Detail",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnrolledDeviceAttribute"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/registereddevices/multiplecustomattributesearch": {
      "post": {
        "tags": [
          "EnrollmentCustomAttributes"
        ],
        "summary": "Retrieves enrolled device details for the query information provided in the request",
        "description": "v1",
        "operationId": "EnrollmentCustomAttributes_MultipleCustomAttributeSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "registeredDeviceAttribute",
            "in": "body",
            "description": "Custom Attribute Search Detail",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisteredDeviceAttribute"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/enrollment/settings/grouping": {
      "post": {
        "tags": [
          "EnrollmentSettings"
        ],
        "summary": "New - Configure Enrollment Grouping settings. Set the Enrollment mode to Automatically Select Based on User Group \r\nConfigure User Group and Organization Group mapping settings based on the request",
        "description": "v1",
        "operationId": "EnrollmentSettings_ConfigureEnrollmentGroupingSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "groupAssignment",
            "in": "body",
            "description": "Group Assignment Mapping request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupingSettingsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/eventnotifications": {
      "post": {
        "tags": [
          "EventNotifications"
        ],
        "summary": "Creates a new Event Notification rule with events to subscribe to.",
        "description": "v1",
        "operationId": "EventNotifications_CreateEventNotificationRule",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The Event Notification Model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventNotificationModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/eventnotifications/{id}": {
      "get": {
        "tags": [
          "EventNotifications"
        ],
        "summary": "Retrieves details of an Event Notification Rule identified by EventNotification Id.",
        "operationId": "EventNotifications_GetEventNotificationById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Event Notification Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "EventNotifications"
        ],
        "summary": "Updates an Event Notification Rule identified by the Event Notification Id.",
        "operationId": "EventNotifications_UpdateEventNotificationRule",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Event Notification Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "The Event Notification Model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventNotificationModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "EventNotifications"
        ],
        "summary": "Deletes an Event Notification Rule identified by the Event Notification Id.",
        "description": "v1",
        "operationId": "EventNotifications_DeleteEventNotificationRule",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Event Notification Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/eventnotifications/search": {
      "get": {
        "tags": [
          "EventNotifications"
        ],
        "summary": "Searches Event Notifications based on the query information provided.",
        "operationId": "EventNotifications_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "targetname",
            "in": "query",
            "description": "The Target Name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The OrganizationGroup Identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "The Event Notification status [Active, Inactive].",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sorts the response based on this attribute [TargetName, TargetUrl, FormatType, UserName, Active].",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Values ASC or DESC. Defaults to ASC..",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Number of Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/expresslicenses": {
      "post": {
        "tags": [
          "ExpressLicense"
        ],
        "summary": "New - Creates specific number of aw express licenses at given organization group.",
        "operationId": "ExpressLicense_CreateLicense",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "licenseModel",
            "in": "body",
            "description": "License Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LicenseModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/gem/admin": {
      "post": {
        "tags": [
          "GemAdminUsers"
        ],
        "summary": "Creates a new admin user.",
        "description": "v1",
        "operationId": "GemAdminUsers_CreateAdminUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "adminUser",
            "in": "body",
            "description": "Details about the admin user resource to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUser"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/gem/setintegrationstaging": {
      "post": {
        "tags": [
          "GemAdminUsers"
        ],
        "summary": "Saves vIDM integration staging information onto AirWatch DB",
        "operationId": "GemAdminUsers_SaveIntegrationStaging",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "description": "Holds request entity coming thru call pipeline",
            "required": true,
            "type": "object"
          },
          {
            "name": "vidmStagingInformation",
            "in": "body",
            "description": "Staging information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VidmIntegrationStagingModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/gem/getintegrationstaging": {
      "get": {
        "tags": [
          "GemAdminUsers"
        ],
        "summary": "Load vIDM integration staging information for a given group ID",
        "operationId": "GemAdminUsers_LoadIntegrationStaging",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "description": "Holds request entity coming thru call pipeline",
            "required": true,
            "type": "object"
          },
          {
            "name": "groupid",
            "in": "query",
            "description": "Group ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/globalization": {
      "post": {
        "tags": [
          "GlobalizationV1"
        ],
        "summary": "New - Globalize given set of msgkeys as per given locale",
        "description": "Returns globalized singular and plural values as per given locale. Note all keys should be regular valid msg keys (No spaces in between, less than 50 chars) defined in Globalization Manager and should not be suffixed with .Plural for plural values. Api takes care of plural values for given key according convention followed while creating label keys in Globalization Manager.",
        "operationId": "GlobalizationV1_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "globalizationRequest",
            "in": "body",
            "description": "Globalization request model having locale and keys, where locale is valid language code and keys are set of msg keys which needs to be globalized.(Required)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GlobalizationRequestV1Model"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GlobalizationResponseV1Model"
              }
            }
          },
          "422": {
            "description": "1012 - Unprocessable Entity{ locale: Locale should be a valid culture code }",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      }
    },
    "/profiles/search": {
      "get": {
        "tags": [
          "GlobalSearch"
        ],
        "summary": "Searches for Profiles globally based on the query informaation provided.",
        "operationId": "GlobalSearch_ProfilesSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchtext",
            "in": "query",
            "description": "The search text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The search Organization Group Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page index.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The number of records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/search": {
      "get": {
        "tags": [
          "GlobalSearch"
        ],
        "summary": "Searches for the Devices globally for the query information provided.",
        "operationId": "GlobalSearch_DevicesSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchtext",
            "in": "query",
            "description": "The search text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The search Organization Group Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page index.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The number of records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/internalapps/search": {
      "get": {
        "tags": [
          "GlobalSearch"
        ],
        "summary": "Searches for the internal apps globally for the query information provided.",
        "operationId": "GlobalSearch_InternalAppsSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchtext",
            "in": "query",
            "description": "The search text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The search Organization Group Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page index.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The number of records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/publicapps/search": {
      "get": {
        "tags": [
          "GlobalSearch"
        ],
        "summary": "Searches for the public apps globally based on the query information provided.",
        "operationId": "GlobalSearch_PublicAppsSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchtext",
            "in": "query",
            "description": "The search query.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The search Organization Group Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page index.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The number of records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/purchasedapps/search": {
      "get": {
        "tags": [
          "GlobalSearch"
        ],
        "summary": "Searches for the purchased apps globally for the query information provided.",
        "operationId": "GlobalSearch_PurchasedAppsSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchtext",
            "in": "query",
            "description": "The search query.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The search Organization Group Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page index.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The number of records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/accounts/admins/search": {
      "get": {
        "tags": [
          "GlobalSearch"
        ],
        "summary": "Searches for Admins globally for the query information provided.",
        "operationId": "GlobalSearch_AdminsSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchtext",
            "in": "query",
            "description": "The search query.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The search Organization Group Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page index.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The number of records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/accounts/users/search": {
      "get": {
        "tags": [
          "GlobalSearch"
        ],
        "summary": "Searches for Users globally based on the query information provided.",
        "operationId": "GlobalSearch_UsersSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchtext",
            "in": "query",
            "description": "The search query.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The search Organization Group Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page index.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The number of records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/settings/search": {
      "get": {
        "tags": [
          "GlobalSearch"
        ],
        "summary": "Searches for settings globally for the query information provided.",
        "operationId": "GlobalSearch_SettingsSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchtext",
            "in": "query",
            "description": "The search query.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The search Organization Group Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page index.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The number of records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/content/search": {
      "get": {
        "tags": [
          "GlobalSearch"
        ],
        "summary": "Searches for Content globally for the query information provided.",
        "operationId": "GlobalSearch_ContentSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchtext",
            "in": "query",
            "description": "The search query.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The search Organization Group Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page index.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The number of records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/help/controllers": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "Get the list of Api controllers",
        "operationId": "Help_GetControllers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/help/endpoints/{endpointId}": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "Gets the details about an endpoint",
        "operationId": "Help_GetEndPointById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "Example:\"GET-activesync-ping\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/help/controllers/{id}": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "Gets the controller endpoints",
        "operationId": "Help_GetControllerById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "controller name",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/help/controllers/endpoints/index": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "Retrieve the index form for endpoints to be used for searching",
        "operationId": "Help_GetEndpointIndex",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/helpinfo": {
      "get": {
        "tags": [
          "HelpInfoV1"
        ],
        "summary": "New - Retrieves the information for Help for supplied Organization Group Id.",
        "operationId": "HelpInfoV1_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group Id.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/info": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Api call to get information about AirWatch version and API URLs. Replaces \"https://{host}/API/v1\" and \"https://{host}/API/v2\".",
        "operationId": "Info_GetInfo",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Retrieves the list of notifications based on the core user.",
        "operationId": "Notifications_All",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "startIndex",
            "in": "query",
            "description": "Optional. Start index for the list of fetched notifications. Default value is 0.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Optional. Number of notifications fetched per page. Default value is 0.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "active",
            "in": "query",
            "description": "Optional. Option to fetch active/dismissed notifications. Value can be true or false. Default value is true.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "cultureCode",
            "in": "query",
            "description": "Optional. Option to provide the locale setting for the fetched notifications. Default value is the default culture code for the core user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Creates a notification for admin or og depending on request.",
        "operationId": "Notifications_CreateNotification",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Notification model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNotificationModel"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Required. This parameter is used to direct the notification created for either og or admin. Possible values are og and admin.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/notifications/count": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Retrieves the total, active and dismissed count of notifications.",
        "operationId": "Notifications_GetNotificationCounts",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/notifications/{id}": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Dismiss a notification using notification id passed in by the user.",
        "operationId": "Notifications_DismissNotification",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notification id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "Delete a notification using notification id passed in by the user.",
        "operationId": "Notifications_DeleteNotification",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notification id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ocsp/{id}": {
      "post": {
        "tags": [
          "Ocsp"
        ],
        "summary": "This method processes ocsp requests",
        "operationId": "Ocsp_Post",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Issuer root certificate GUID",
            "required": true,
            "type": "string"
          },
          {
            "name": "ocspRequestData",
            "in": "body",
            "description": "OCSP request data",
            "required": true,
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{ogid}/customattributes": {
      "get": {
        "tags": [
          "OrganizationGroupCustomAttributes"
        ],
        "summary": "Provides Custom Attribute Details for the specified Organization Group.",
        "description": "v1",
        "operationId": "OrganizationGroupCustomAttributes_GetCustomAttributesByOgId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogid",
            "in": "path",
            "description": "The OrganizationGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/resources": {
      "get": {
        "tags": [
          "OrganizationGroupResources"
        ],
        "summary": "New - Retrieves resources for the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroupResources_GetResources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}": {
      "get": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Retrieves information about the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroups_Get",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Updates the metadata of the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroups_UpdateLocationGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The parent OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationGroup",
            "in": "body",
            "description": "An organization group resource containing the updated values.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "New - Creates a new organization group.",
        "description": "v1",
        "operationId": "OrganizationGroups_CreateOg",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The parent OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationGroup",
            "in": "body",
            "description": "The OrganizationGroup resource to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      },
      "delete": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Deletes the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroups_Delete",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/children": {
      "get": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Provides a list of child organization groups of the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroups_GetChildLocationGroups",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The parent organization group ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/search": {
      "get": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Searches for organization groups using the query information provided.",
        "description": "v1",
        "operationId": "OrganizationGroups_LocationGroupSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The OrganizationGroup name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "The OrganizationGroup type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "query",
            "description": "The organization group identifier[Activation code] to search for.[Exact match is performed for this attribute]",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orders the results based on this attribute-value[Valid values are: Id/Name/GroupId/LocationGroupType]",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Allowed values are ASC or DESC. Defaults to ASC if this attribute is not specified.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/groups/devicecounts": {
      "get": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Returns the Device Count for all the Organization Groups that are available under the specified Organization Group.",
        "operationId": "OrganizationGroups_GetDeviceCountForEachLocationGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group to be searched, user's OG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "seensince",
            "in": "query",
            "description": "Filter devices such that devices with last seen after this date will be returned",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "seentill",
            "in": "query",
            "description": "Filter devices such that devices with last seen till this date will be returned",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/samplerates": {
      "get": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Provides the device sample rates for an organization group by platform.",
        "description": "v1",
        "operationId": "OrganizationGroups_GetSampleRatesByPlatform",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Organization group ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "platform name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/setup/steps": {
      "get": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Get Action Method for steps of Environment Setup for an Organization Group.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "OrganizationGroups_SetupSteps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "input parameter for location group id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Put Action Method for Changing the status steps during Environment Setup for an Organization Group.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "OrganizationGroups_UpdateStepStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "input parameter for location group id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "expressWizardStepModel",
            "in": "body",
            "description": "Model binder for the ExpressWizardStep Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressWizardStepModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/setup/questionnaire": {
      "get": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Get Action Method for Questionnaire for Intial Survey for an Organization Group.\r\nOnly Applicable to Express Provisioned Organization Groups.",
        "operationId": "OrganizationGroups_Questionnaire",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "input parameter for location group id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Update method for the Questionnaire.\r\nIt Can Only Be run when the Organization Group is being setup.",
        "operationId": "OrganizationGroups_SaveQuestionnaire",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "input parameter for location group id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionnaireModel",
            "in": "body",
            "description": "Model binder for the Questionnaire model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionnaireModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/sampleratesbyplatform": {
      "get": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Provides the device sample rates for an organization group by platform.",
        "description": "v1",
        "operationId": "OrganizationGroups_GetSampleRates",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Organization group ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "platform name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/groups/{id}/getchild": {
      "get": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Provides a list of child organization groups of the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroups_GetChildLgs",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The parent organization group ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/groups/{id}/update": {
      "post": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Updates the metadata of the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroups_UpdateLg",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The parent OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationGroup",
            "in": "body",
            "description": "An organization group resource containing the updated values.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/groups/{id}/creategroup": {
      "post": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Creates a new organization group.",
        "description": "v1",
        "operationId": "OrganizationGroups_CreateLg",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The parent OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationGroup",
            "in": "body",
            "description": "The OrganizationGroup resource to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/groups/{id}/delete": {
      "delete": {
        "tags": [
          "OrganizationGroups"
        ],
        "summary": "Deletes the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroups_DeleteLg",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/groups/{id}/users": {
      "get": {
        "tags": [
          "OrganizationGroupUsers"
        ],
        "summary": "Provides a list of enrollment users in the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroupUsers_GetUsers",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Select users within or outside the specified Organization Group tree. (Optional). Defaults to False.",
            "required": false,
            "type": "string"
          },
          {
            "name": "includechildorganizationgroups",
            "in": "query",
            "description": "Includes users that belong to specified location group and all child organization groups or includes users that belong to the specified location group alone. (Optional). Defaults to True.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/admins": {
      "get": {
        "tags": [
          "OrganizationGroupUsers"
        ],
        "summary": "Provides a list of admin users in the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroupUsers_GetAdmins",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/roles": {
      "get": {
        "tags": [
          "OrganizationGroupUsers"
        ],
        "summary": "Provides a list of user roles in the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroupUsers_ListRoles",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/getusers": {
      "get": {
        "tags": [
          "OrganizationGroupUsers"
        ],
        "summary": "Provides a list of enrollment users in the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroupUsers_GetEnrollmentUsers",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/groups/{id}/getadmins": {
      "get": {
        "tags": [
          "OrganizationGroupUsers"
        ],
        "summary": "Provides a list of admin users in the specified organization group.",
        "description": "v1",
        "operationId": "OrganizationGroupUsers_GetAdminUsers",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Get",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Put",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Post",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Delete",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "head": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Head",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Patch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/cached": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetCached",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/concurrency": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetRequestQueryValue",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/cached/query": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetPagedResultFromCache",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/enrollmentuser": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_TestEnrollmentUserRoleType",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-group-id",
            "in": "header",
            "description": "Group ID",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/adminuser": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_TestAdminUserRoleType",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/internal": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_TestInternal",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/emptymodel": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetEmptyModel",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/resources": {
      "put": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_PutToReturnModel",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_SetLocationHeader",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_PatchToReturnModel",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/content": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetContent",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/assignprofile": {
      "post": {
        "tags": [
          "Profiles"
        ],
        "summary": "Assigns a profile to the specified organization group.",
        "description": "v1",
        "operationId": "Profiles_AssignProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Profile name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/unassignprofile": {
      "post": {
        "tags": [
          "Profiles"
        ],
        "summary": "Unassigns a profile from the specified organization group.",
        "description": "v1",
        "operationId": "Profiles_UnassignProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Profile name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/provisioning/admin": {
      "post": {
        "tags": [
          "Provisioning"
        ],
        "summary": "Generates and returns the following: an API client certificate for the specified admin user, an enrollment user API key, an admin API key, and the user's activation code (group id).",
        "operationId": "Provisioning_ProvisioningAdminInfo",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "adminCertificateModel",
            "in": "body",
            "description": "Admin certificate password model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUserCertificateModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/schedulers/stats": {
      "get": {
        "tags": [
          "Schedulers"
        ],
        "summary": "Returns Scheduler Job execution stats for the specified OrganizationGroup.",
        "operationId": "Schedulers_GetSchedulerJobExecutionStats",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OPTIONAL. Id of which organizationgroup scheduler jobs stats are required.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SchedulerJobStatsModel"
            }
          }
        }
      }
    },
    "/schedulers/jobs/{triggername}/reset": {
      "patch": {
        "tags": [
          "Schedulers"
        ],
        "summary": "Resets the status of scheduler job identified by the trigger key.",
        "operationId": "Schedulers_ResetJob",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "triggername",
            "in": "path",
            "description": "Scheduler Job's Trigger Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OPTIONAL. OrganizationGroupId at which this Job has to be reset.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/schedulers/jobs/trigger": {
      "put": {
        "tags": [
          "Schedulers"
        ],
        "summary": "New - Update the trigger of scheduler job.",
        "operationId": "Schedulers_EditJobTrigger",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Scheduler Job's Trigger edit model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchedulerTriggerEditModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/sslpinning/pinnedhost": {
      "post": {
        "tags": [
          "SSLPinning"
        ],
        "summary": "Create a pinned host",
        "operationId": "SSLPinning_CreatePinnedHost",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Specifies the Pinned Host to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PinnedHostModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/sslpinning/pinnedhosts": {
      "get": {
        "tags": [
          "SSLPinning"
        ],
        "summary": "Query for pinned hosts by host name",
        "operationId": "SSLPinning_FindPinnedHosts",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "hostName",
            "in": "query",
            "description": "The hostname to query for",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The organization group to check at (OPTIONAL)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/sslpinning/pinnedhost/{hostGuid}": {
      "delete": {
        "tags": [
          "SSLPinning"
        ],
        "summary": "Query for pinned hosts by host name",
        "operationId": "SSLPinning_RemovePinnedHost",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "hostGuid",
            "in": "path",
            "description": "The ID (returned during creation or a query) of the host to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "SSLPinning"
        ],
        "summary": "Update a specific pinned host",
        "operationId": "SSLPinning_UpdatePinnedHost",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "hostGuid",
            "in": "path",
            "description": "The ID of the host to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "body",
            "description": "The model that describes the host update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PinnedHostModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/sslpinning/pincertificate": {
      "post": {
        "tags": [
          "SSLPinning"
        ],
        "summary": "Pin a given certificate to a pinned host",
        "operationId": "SSLPinning_PinCertificateToHost",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The model of the pinned certificate containing Host ID and the Base64 Certificate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PinnedCertificateModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/sslpinning/unpincertificate": {
      "post": {
        "tags": [
          "SSLPinning"
        ],
        "summary": "Unpin a given certificate from a pinned host",
        "operationId": "SSLPinning_UnpinCertificateFromHost",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The model of the Pinned Certificate containing Host ID and Certificate Thumbprint",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PinnedCertificateQueryModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/sslpinning/enable/{organizationgroupid}": {
      "post": {
        "tags": [
          "SSLPinning"
        ],
        "summary": "Enable SSL Pinning at an Organization Group",
        "operationId": "SSLPinning_EnablePinning",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "path",
            "description": "The ID of the organization group to enable at",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/sslpinning/disable/{organizationgroupid}": {
      "post": {
        "tags": [
          "SSLPinning"
        ],
        "summary": "Disable SSL Pinning at an Organization Group",
        "operationId": "SSLPinning_DisablePinning",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "path",
            "description": "The ID of the organization group to disable at",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/sslpinning/syncwithautodiscovery/{organizationgroupid}": {
      "post": {
        "tags": [
          "SSLPinning"
        ],
        "summary": "Synchronize Pins with Auto Discovery at an Organization Group",
        "operationId": "SSLPinning_SyncWithAutoDiscovery",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "path",
            "description": "The ID of the organization group",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/sslpinning/enablepin/{hostGuid}/{organizationgroupid}": {
      "post": {
        "tags": [
          "SSLPinning"
        ],
        "summary": "Enable a pinned relationship between host and cert",
        "operationId": "SSLPinning_EnablePin",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "hostGuid",
            "in": "path",
            "description": "The ID of the pertinent host",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationgroupid",
            "in": "path",
            "description": "The ID of the organization group (OPTIONAL)",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/sslpinning/disablepin/{hostGuid}/{organizationgroupid}": {
      "post": {
        "tags": [
          "SSLPinning"
        ],
        "summary": "Disable a pinned relationship between host and cert",
        "operationId": "SSLPinning_DisablePin",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "hostGuid",
            "in": "path",
            "description": "The ID of the pertinent host",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationgroupid",
            "in": "path",
            "description": "The Organization Group to disable at",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/advanced/validateuser": {
      "post": {
        "tags": [
          "SystemAdvanced"
        ],
        "summary": "Validated user credentials",
        "description": "v1",
        "operationId": "SystemAdvanced_ValidateUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "authenticationEntity",
            "in": "body",
            "description": "Authentication Entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthenticationEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/systemcode/getSystemCode": {
      "get": {
        "tags": [
          "SystemCode"
        ],
        "summary": "Retrieves the specified systemCode",
        "description": "v1",
        "operationId": "SystemCode_Get",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "categoryid",
            "in": "query",
            "description": "The System Code Category Id.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "codename",
            "in": "query",
            "description": "The System Code Name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The Location Group Id.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "autodecrypt",
            "in": "query",
            "description": "Auto Decrypt",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/systemcode/updateSystemCode": {
      "post": {
        "tags": [
          "SystemCode"
        ],
        "summary": "Updates the specified systemCode",
        "description": "v1",
        "operationId": "SystemCode_UpdateSystemCode",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "systemCodeModel",
            "in": "body",
            "description": "System Code Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemCodeModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/systemcode/updateSystemCodeGroup": {
      "post": {
        "tags": [
          "SystemCode"
        ],
        "summary": "Updates the specified group of system codes",
        "description": "v1",
        "operationId": "SystemCode_UpdateSystemCodeGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "systemCodeGroupOverrideEntity",
            "in": "body",
            "description": "The system code group override entity.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemCodeCategoryOverrideEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/systemcode/publishSdkSettings": {
      "post": {
        "tags": [
          "SystemCode"
        ],
        "summary": "Saves and then publishes(Device Queue) the SDK settings.",
        "operationId": "SystemCode_PublishSdkSettings",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "systemCodeGroup",
            "in": "body",
            "description": "The system code group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemCodeCategoryOverrideEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Retrieves the tags for the specified organization group.",
        "description": "v1",
        "operationId": "Tags_GetTagsByOG",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Creates a tag for the specified organization group.",
        "description": "v1",
        "operationId": "Tags_CreateTag",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tag",
            "in": "body",
            "description": "The tag Id.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{ogid}/tags/{tagid}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Retrieves a particular tag for the specified organization group.",
        "description": "v1",
        "operationId": "Tags_GetTag",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogid",
            "in": "path",
            "description": "The OrganizationGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tagid",
            "in": "path",
            "description": "The tag Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Updates a tag for the specified organization group.",
        "description": "v1",
        "operationId": "Tags_UpdateTag",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogid",
            "in": "path",
            "description": "The OrganizationGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tagid",
            "in": "path",
            "description": "The tag Id to be updated.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tag",
            "in": "body",
            "description": "The Resource containing tag details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Deletes a tag for the specified organization group.",
        "description": "v1",
        "operationId": "Tags_DeleteTag",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogid",
            "in": "path",
            "description": "The OrganizationGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tagid",
            "in": "path",
            "description": "The tag Id to be deleted.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{id}/addTag": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Retrieves a particular tag for the specified organization group.",
        "description": "v1",
        "operationId": "Tags_CreateTagForOg",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The OrganizationGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tag",
            "in": "body",
            "description": "The tag Id.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/groups/{ogid}/tags/{tagid}/update": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Updates a tag for the specified organization group.",
        "description": "v1",
        "operationId": "Tags_UpdateTagForOg",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogid",
            "in": "path",
            "description": "The OrganizationGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tagid",
            "in": "path",
            "description": "The tag Id to be updated.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tag",
            "in": "body",
            "description": "The Resource containing tag details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieves information about the specified enrollment user.",
        "description": "v1",
        "operationId": "User_Get",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieves information about the authenticated enrollment user returning user attributes or not.",
        "description": "v1",
        "operationId": "User_Get",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "attributes",
            "in": "query",
            "description": "Return enrollment user attributes or not.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/{id}/delete": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deletes the specified enrollment user.",
        "description": "v1",
        "operationId": "User_Delete",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/adduser": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Creates a new enrollment user.",
        "description": "v1",
        "operationId": "User_AddUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "The user resource to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/{id}/update": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Updates the user details",
        "description": "v1",
        "operationId": "User_UpdateUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Resource containing user details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/{id}/activate": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Activates the specified enrollment user.",
        "description": "v1",
        "operationId": "User_ActivateUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/{id}/deactivate": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Deactivates the specified enrollment user.",
        "description": "v1",
        "operationId": "User_DeactivateUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/{id}/changelocationgroup": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Changes the specified enrollment user's Location Group.",
        "description": "v1",
        "operationId": "User_ChangeLocationGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "targetLG",
            "in": "query",
            "description": "The new Location Group ID..",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/search": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Searches for enrollment users using the query information provided.",
        "description": "v1",
        "operationId": "User_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "firstname",
            "in": "query",
            "description": "The first name to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname",
            "in": "query",
            "description": "The last name to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "The email address to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locationgroupId",
            "in": "query",
            "description": "The Location Group ID to search for.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "role",
            "in": "query",
            "description": "The role to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "description": "The username to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "It specifies the page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Maximum records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orders the results based on this attribute.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Allowed values are ASC or DESC. Defaults to ASC if this attribute is not specified.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/activate": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Activates the list of enrollment users.",
        "description": "v1",
        "operationId": "User_BulkActivate",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input of user IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/deactivate": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Deactivates the list of enrollment users.",
        "description": "v1",
        "operationId": "User_BulkDeActivate",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input user IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/delete": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Deletes the list of enrollment users.",
        "description": "v1",
        "operationId": "User_BulkDelete",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input of user IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/{id}/uploadsmimecerts": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Uploads MIME Certificates into DB",
        "description": "v1",
        "operationId": "User_UploadSmimeCertificates",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enrollment User identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "certificates",
            "in": "body",
            "description": "MIME-Certificate details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SMIMECertificate"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/{externalId}/resources": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieves the public apps assigned for the specified user group.",
        "description": "v1",
        "operationId": "User_GetResourcesForUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "description": "The Http Request Message",
            "required": true,
            "type": "object"
          },
          {
            "name": "externalId",
            "in": "path",
            "description": "The user external ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/usergroups/createcustomusergroup": {
      "post": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Creates a Custom User Group.",
        "description": "v1",
        "operationId": "UserGroups_CreateCustomUserGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "usergroup",
            "in": "body",
            "description": "The custom user group resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/usergroups/{usergroupid}/user/{enrollmentuserid}/addusertogroup": {
      "post": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Adds the user to custom user-group",
        "description": "v1",
        "operationId": "UserGroups_AddUserToUserGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "usergroupid",
            "in": "path",
            "description": "User group identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "enrollmentuserid",
            "in": "path",
            "description": "Enrollment user identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/usergroups/{usergroupid}/user/{enrollmentuserid}/removeuserfromgroup": {
      "post": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Removes the user from custom user-group",
        "description": "v1",
        "operationId": "UserGroups_RemoveUserFromUserGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "usergroupid",
            "in": "path",
            "description": "User group identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "enrollmentuserid",
            "in": "path",
            "description": "Enrollment user identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/usergroups/{usergroupid}/users": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Retrieves list of users from provided custom user group id",
        "description": "v1",
        "operationId": "UserGroups_RetrieveUserGroupIdUsers",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "usergroupid",
            "in": "path",
            "description": "user Group Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "It specifies the page number",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Maximum records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/usergroups/{usergroupid}/delete": {
      "delete": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Delete custom user group",
        "description": "v1",
        "operationId": "UserGroups_DeleteUserGroupIdUsers",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "usergroupid",
            "in": "path",
            "description": "User Group Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/usergroups/custom/search": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Search custom user group with given parameters",
        "description": "v1",
        "operationId": "UserGroups_SearchUserGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "groupname",
            "in": "query",
            "description": "Name of the group",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group Identifier.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "It specifies the page number",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Maximum records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/usergroups/search": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Search User Groups",
        "operationId": "UserGroups_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "groupname",
            "in": "query",
            "description": "Name of the group",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group Identifier.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "usergrouptype",
            "in": "query",
            "description": "User Group Type",
            "required": false,
            "type": "string"
          },
          {
            "name": "syncstatus",
            "in": "query",
            "description": "Sync Status of the User Grooup",
            "required": false,
            "type": "string"
          },
          {
            "name": "mergestatus",
            "in": "query",
            "description": "Merge Status of the User Group",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "It specifies the page number",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Maximum records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/usergroups/{usergroupid}/resources": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Retrieves the resource list assigned for the specified user group.",
        "operationId": "UserGroups_GetUserGroupAssignedResources",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "usergroupid",
            "in": "path",
            "description": "The user group external ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/vidm/auth": {
      "post": {
        "tags": [
          "VidmV1"
        ],
        "summary": "Authenticates a user against client's LDAP",
        "operationId": "VidmV1_Authenticate",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "description": "Holds request entity coming thru call pipeline",
            "required": true,
            "type": "object"
          },
          {
            "name": "authenticationRequest",
            "in": "body",
            "description": "Authenticate entity to be authenticated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthenticationRequestModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    }
  },
  "definitions": {
    "IActionResult": {
      "description": "interface for HttpActionResult",
      "type": "object",
      "properties": {
        "RequestQuery": {
          "$ref": "#/definitions/IRequestQuery",
          "description": "Gets or sets the RequestQuery"
        },
        "RequestMessage": {
          "description": "Gets or sets the RequestMessage",
          "type": "object",
          "example": {
            "Version": {
              "Major": 1,
              "Minor": 1,
              "Build": -1,
              "Revision": -1,
              "MajorRevision": -1,
              "MinorRevision": -1
            },
            "Method": {
              "Method": "GET"
            },
            "RequestUri": "http://air-watch.com",
            "Headers": [],
            "Properties": {}
          }
        },
        "HttpStatusCode": {
          "format": "int32",
          "description": "Gets or sets HttpStatusCode",
          "enum": [
            100,
            101,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            300,
            300,
            301,
            301,
            302,
            302,
            303,
            303,
            304,
            305,
            306,
            307,
            307,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            426,
            500,
            501,
            502,
            503,
            504,
            505
          ],
          "type": "integer"
        },
        "Model": {
          "description": "Gets or sets Model",
          "type": "object",
          "example": {}
        },
        "Stream": {
          "$ref": "#/definitions/Stream",
          "description": "Gets or sets Stream"
        },
        "ByteArray": {
          "format": "byte",
          "description": "Gets or sets ByteArray",
          "type": "string"
        },
        "FileName": {
          "description": "Gets or sets FileName {Will be set in the content-disposition header}",
          "type": "string"
        },
        "MediaType": {
          "description": "Gets or sets MediaType",
          "type": "string"
        },
        "OnStreamAvailable": {
          "description": "Gets or sets OnStreamAvailable",
          "type": "object"
        },
        "ETagHeaderValue": {
          "$ref": "#/definitions/EntityTagHeaderValue",
          "description": "Gets or sets ResponseHeaders"
        },
        "LocationHeaderValue": {
          "description": "Gets or sets LocationHeaderValue",
          "type": "string"
        }
      }
    },
    "IRequestQuery": {
      "description": "Interface for IAwRequestQuery\r\nThis will hold all the required data for a request. Will be filled from ModelBinder",
      "type": "object",
      "properties": {
        "QueryParams": {
          "description": "Gets or sets Query Parameters. For e.g. any query string parameters will be extracted to key,value pair and stored here.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "TenantContext": {
          "$ref": "#/definitions/ITenantContext",
          "description": "Gets or sets IAwTenantContext. Will hold the tenant details, which will be filled as part of the tenant validation handler"
        },
        "RequestMethod": {
          "$ref": "#/definitions/HttpMethod",
          "description": "Gets or sets RequestMethod. Will be used to write custom rules"
        },
        "ActionName": {
          "description": "Gets or sets ActionName",
          "type": "string"
        },
        "AllowedUriQueryChars": {
          "description": "Gets or sets allowed Characters in Query String.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Stream": {
      "type": "object",
      "properties": {
        "__identity": {
          "type": "object",
          "example": {}
        }
      }
    },
    "EntityTagHeaderValue": {
      "type": "object",
      "properties": {
        "Tag": {
          "type": "string",
          "readOnly": true
        },
        "IsWeak": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ITenantContext": {
      "description": "Contract for TenantContext. Will be exposed from RequestQuery and will be injected to every controller actions and Business method",
      "type": "object",
      "properties": {
        "TenantCode": {
          "description": "Gets or sets TenantCode. Uniquely identify the tenant for the request",
          "type": "string"
        },
        "OrganizationgroupId": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets Organization Group ID"
        }
      }
    },
    "HttpMethod": {
      "type": "object",
      "properties": {
        "Method": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EntityId": {
      "type": "object",
      "properties": {
        "Value": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "Value": 1
      }
    },
    "FavoritesListV1Model": {
      "description": "List of admin favorites in sorted order by sortOrder property defined while creating a favorite",
      "type": "object",
      "properties": {
        "adminId": {
          "description": "Indentifier for admin to whom these favorites belong",
          "type": "string"
        },
        "favorites": {
          "description": "Favorites list for an admin",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FavoritesV1Model"
          }
        },
        "totalCount": {
          "format": "int32",
          "description": "Count of favorites saved in list",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "adminId": "52",
        "favorites": [
          {
            "displayName": "Device List",
            "navigateUrl": "/Airwatch/Express/Blueprint",
            "id": 1
          }
        ],
        "totalCount": 3,
        "id": 1
      }
    },
    "FavoritesV1Model": {
      "description": "Favorite page/link saved by admin",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Friendly name for the link",
          "type": "string"
        },
        "navigateUrl": {
          "description": "Actual url of favorite page",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "displayName": "Device List",
        "navigateUrl": "/Airwatch/Express/Blueprint",
        "id": 1
      }
    },
    "BaseExceptionModel": {
      "description": "Base model for exception",
      "type": "object",
      "properties": {
        "errorCode": {
          "format": "int32",
          "description": "Application error code",
          "type": "integer"
        },
        "message": {
          "description": "Friendly error message",
          "type": "object",
          "example": {}
        },
        "activityId": {
          "format": "uuid",
          "description": "TransactionId of the request",
          "type": "string"
        }
      },
      "example": {
        "errorCode": 1001,
        "message": "Friendly error message",
        "activityId": "5b12da50-26e0-48df-8de0-850801258e29"
      }
    },
    "AddFavoritesRequestV1Model": {
      "description": "Models a request for adding new favorite in the Favorites List of admin",
      "required": [
        "name",
        "url",
        "sortOrder"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Freindly name for the link",
          "type": "string"
        },
        "url": {
          "description": "Url of the link/page",
          "type": "string"
        },
        "query": {
          "description": "Query params for the link",
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "description": "Sort order of this new favorite in favorites list",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "name": "DeviceList",
        "url": "/Airwatch/Devices/List",
        "query": "SearchText=abc",
        "sortOrder": 0,
        "id": 1
      }
    },
    "RequestQuery": {
      "description": "Implementation for RequestQuery",
      "type": "object",
      "properties": {}
    },
    "AdminPermissionsV1Model": {
      "description": "Permissions for given admin",
      "type": "object",
      "properties": {
        "isGlobalAdmin": {
          "description": "admin is global admin or not",
          "type": "boolean"
        },
        "allowedResources": {
          "description": "set of allowed resources for admin",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "isGlobalAdmin": false,
        "allowedResources": [
          "test"
        ],
        "id": 1
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "RoleID": {
          "format": "int32",
          "type": "integer"
        },
        "ID": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "Description": "test",
        "Name": "test",
        "RoleID": 1,
        "ID": 1
      }
    },
    "RolePermissionModel": {
      "description": "The Role xml Model",
      "type": "object",
      "properties": {
        "LocationGroupId": {
          "format": "int32",
          "description": "Gets or sets the Location Group Id",
          "type": "integer"
        },
        "Name": {
          "description": "Gets or sets the name of role",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description of role",
          "type": "string"
        },
        "Resources": {
          "description": "Gets or sets the list of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceModel"
          }
        }
      },
      "example": {
        "LocationGroupId": 1,
        "Name": "test",
        "Description": "test",
        "Resources": [
          {
            "ResourceName": "test",
            "CategoryName": "test",
            "Allow": true
          }
        ]
      }
    },
    "ResourceModel": {
      "description": "The Resource Model",
      "type": "object",
      "properties": {
        "ResourceName": {
          "description": "Gets or sets the resource name",
          "type": "string"
        },
        "CategoryName": {
          "description": "Gets or sets the category name",
          "type": "string"
        },
        "Allow": {
          "description": "Gets or sets a value indicating whether has access on resource",
          "type": "boolean"
        }
      },
      "example": {
        "ResourceName": "test",
        "CategoryName": "test",
        "Allow": true
      }
    },
    "AdminUser": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "LocationGroup": {
          "type": "string"
        },
        "LocationGroupId": {
          "type": "string"
        },
        "TimeZone": {
          "type": "string"
        },
        "Locale": {
          "type": "string"
        },
        "InitialLandingPage": {
          "type": "string"
        },
        "LastLoginTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "Roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleModel"
          }
        },
        "IsActiveDirectoryUser": {
          "type": "boolean"
        },
        "RequiresPasswordChange": {
          "type": "boolean"
        },
        "MessageType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            -1
          ],
          "type": "integer"
        },
        "MessageTemplateId": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      }
    },
    "RoleModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "LocationGroup": {
          "type": "string"
        },
        "LocationGroupId": {
          "type": "string"
        }
      },
      "example": {
        "Id": 1,
        "Name": "test",
        "Description": "test",
        "LocationGroup": "test",
        "LocationGroupId": "test"
      }
    },
    "AdminSearchResult": {
      "type": "object",
      "properties": {
        "Admins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminUser"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AndroidWorkSetupModel": {
      "description": "Model for Environment APNS setup",
      "type": "object",
      "properties": {
        "ServiceAccountEmail": {
          "description": "Gets or sets Service account email for AFW",
          "type": "string"
        },
        "ServiceAccountClientId": {
          "description": "Gets or sets the Client Id for Afw",
          "type": "string"
        },
        "ServiceAccountAdminEmail": {
          "description": "Gets or sets the service account admin email address",
          "type": "string"
        },
        "EnterpriseId": {
          "description": "Gets or sets the enterprise ID",
          "type": "string"
        },
        "AndroidWorkSetUpMode": {
          "description": "Gets or sets the android work set up mode",
          "type": "string"
        },
        "CertificateSubjectName": {
          "description": "Gets or sets the android work set up mode",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ServiceAccountEmail": "test",
        "ServiceAccountClientId": "test",
        "ServiceAccountAdminEmail": "test",
        "EnterpriseId": "test",
        "AndroidWorkSetUpMode": "test",
        "CertificateSubjectName": "test",
        "id": 1
      }
    },
    "ApnsSetupModel": {
      "description": "Model for Environment APNS setup",
      "type": "object",
      "properties": {
        "AppleId": {
          "description": "Gets or sets the AppleId. Apple account from which APNS certificate is created",
          "type": "string"
        },
        "CertificateSigningRequestBlobId": {
          "format": "int32",
          "description": "Gets or sets the CertificateSigningRequestFileUrl",
          "type": "integer"
        },
        "UploadedCertificateBlobId": {
          "format": "int32",
          "description": "Gets or sets the UploadedCertificateBlobId",
          "type": "integer"
        },
        "IssuedCertificateId": {
          "format": "int32",
          "description": "Gets or sets the IssuedCertificateId",
          "type": "integer"
        },
        "Renew": {
          "description": "Gets or sets the Renew",
          "type": "boolean"
        },
        "CertificatePassword": {
          "description": "Gets or sets the Cetificate Password",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "AppleId": "test",
        "CertificateSigningRequestBlobId": 1,
        "UploadedCertificateBlobId": 1,
        "IssuedCertificateId": 1,
        "Renew": true,
        "CertificatePassword": "test",
        "id": 1
      }
    },
    "ApnsConfigurationModel": {
      "description": "Apple Push Notification service Certificate Configuration",
      "type": "object",
      "properties": {
        "Inherit": {
          "description": "Gets or sets the Inherit configuration of Certificate. When it is true, the Certificate will be inherited from parent OG.",
          "type": "boolean"
        },
        "ChildPermission": {
          "description": "Gets or sets the ChildPermission",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Inherit": true,
        "ChildPermission": "test",
        "id": 1
      }
    },
    "ApnsCertificateModel": {
      "description": "Apple Push Notification service Certificate",
      "type": "object",
      "properties": {
        "CurrentSetting": {
          "description": "Gets or sets CurrentSetting indicating APNs Certificate is inherited or overridden",
          "type": "string"
        },
        "Type": {
          "description": "Type",
          "type": "string"
        },
        "IssuedTo": {
          "description": "Issued To",
          "type": "string"
        },
        "IssuedBy": {
          "description": "Issued By",
          "type": "string"
        },
        "ValidFrom": {
          "description": "Valid From",
          "type": "string"
        },
        "ValidTo": {
          "description": "Valid To",
          "type": "string"
        },
        "Thumbprint": {
          "description": "Thumbprint",
          "type": "string"
        },
        "AppleId": {
          "description": "Apple ID",
          "type": "string"
        },
        "ChildPermission": {
          "description": "Child Permission",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "CurrentSetting": "test",
        "Type": "test",
        "IssuedTo": "test",
        "IssuedBy": "test",
        "ValidFrom": "test",
        "ValidTo": "test",
        "Thumbprint": "test",
        "AppleId": "test",
        "ChildPermission": "test",
        "id": 1
      }
    },
    "AppContentStorageEntity": {
      "type": "object",
      "properties": {
        "ApplicationCapacity": {
          "type": "string"
        },
        "ApplicationOverage": {
          "type": "string"
        },
        "ApplicationMaxFileSize": {
          "type": "string"
        },
        "ContentCapacity": {
          "type": "string"
        },
        "ContentOverage": {
          "type": "string"
        },
        "ContentMaxFileSize": {
          "type": "string"
        }
      },
      "example": {
        "ApplicationCapacity": "test",
        "ApplicationOverage": "test",
        "ApplicationMaxFileSize": "test",
        "ContentCapacity": "test",
        "ContentOverage": "test",
        "ContentMaxFileSize": "test"
      }
    },
    "DeviceAppsModel": {
      "description": "Device Apps Model",
      "type": "object",
      "properties": {
        "FriendlyName": {
          "description": "Gets or sets Device Friendly Name",
          "type": "string"
        },
        "Platform": {
          "description": "Gets or sets Device Platform",
          "type": "string"
        },
        "ComplianceStatus": {
          "description": "Gets or sets Device Compliance Status",
          "type": "string"
        },
        "EnrollmentStatus": {
          "description": "Gets or sets Device Enrollment Status",
          "type": "string"
        },
        "Applications": {
          "description": "Gets or sets the array of applications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationModel"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "ApplicationModel": {
      "description": "Application Model",
      "type": "object",
      "properties": {
        "ApplicationName": {
          "description": "Gets or sets the name of application",
          "type": "string"
        },
        "Version": {
          "description": "Gets or sets Application version",
          "type": "string"
        },
        "BuildVersion": {
          "description": "Gets or sets Application build version",
          "type": "string"
        },
        "Status": {
          "description": "Gets or sets Status of the application, installation staus",
          "type": "string"
        },
        "Size": {
          "description": "Gets or sets size of Application in Bytes",
          "type": "string"
        },
        "ApplicationIdentifier": {
          "description": "Gets or sets Identifier of the application i.e. Bundle Id or Package Id",
          "type": "string"
        },
        "Type": {
          "description": "Gets or sets Application type... for e.g. System/Internal/Public etc",
          "type": "string"
        },
        "IsManaged": {
          "description": "Gets or sets a value indicating whether the App is Managed App or not",
          "type": "boolean"
        },
        "AppVersion": {
          "description": "Gets or sets Application version",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ApplicationName": "test",
        "Version": "test",
        "BuildVersion": "test",
        "Status": "test",
        "Size": "test",
        "ApplicationIdentifier": "test",
        "Type": "test",
        "IsManaged": true,
        "AppVersion": "test",
        "id": 1
      }
    },
    "AutoDiscoveryModel": {
      "description": "Autodiscovery model",
      "type": "object",
      "properties": {
        "Domain": {
          "description": "Gets or sets the domain.",
          "type": "string"
        },
        "Email": {
          "description": "Gets or sets the email.",
          "type": "string"
        },
        "ActiveDomains": {
          "description": "Gets or sets the list of active domains.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "SelectedDomains": {
          "description": "Gets or sets the selected domain from the list of Active domains",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IsAutoDiscoveryEnabled": {
          "description": "Gets or sets whether Auto Discovery is enabled.",
          "type": "boolean"
        },
        "IsDomainRegistered": {
          "description": "Gets or sets whether any domain is added.",
          "type": "boolean"
        }
      }
    },
    "BlueprintListModel": {
      "description": "Model for Blueprint list",
      "type": "object",
      "properties": {
        "ResultSet": {
          "description": "Gets or sets the list of BlueprintCards",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlueprintDetailsModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the Total Count",
          "type": "integer"
        }
      },
      "example": {
        "ResultSet": [
          {
            "LocationGroupId": 1,
            "IsPublished": true,
            "Name": "test",
            "Description": "test",
            "ApplicationCount": 1,
            "ResourceCount": 1,
            "PolicyCount": 1,
            "UserCount": "test",
            "UserGroupCount": "test",
            "DeviceCount": 1,
            "SmartGroupId": 1,
            "IndexOfLastCompletedStep": 1,
            "AssignmentType": "test",
            "id": 1
          }
        ],
        "TotalCount": 1
      }
    },
    "BlueprintDetailsModel": {
      "description": "Model for BluePrintDetails",
      "type": "object",
      "properties": {
        "LocationGroupId": {
          "format": "int32",
          "description": "Gets or sets LocationGroupId",
          "type": "integer"
        },
        "IsPublished": {
          "description": "Gets or sets a value indicating whether blueprint is Published",
          "type": "boolean"
        },
        "Name": {
          "description": "Gets or sets the Name",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the Description",
          "type": "string"
        },
        "ApplicationCount": {
          "format": "int32",
          "description": "Gets or sets the ApplicationCount",
          "type": "integer"
        },
        "ResourceCount": {
          "format": "int32",
          "description": "Gets or sets the ResourceCount",
          "type": "integer"
        },
        "PolicyCount": {
          "format": "int32",
          "description": "Gets or sets the PolicyCount",
          "type": "integer"
        },
        "UserCount": {
          "description": "Gets or sets the UserCount",
          "type": "string"
        },
        "UserGroupCount": {
          "description": "Gets or sets the UserGroupCount",
          "type": "string"
        },
        "DeviceCount": {
          "format": "int32",
          "description": "Gets or sets the DeviceCount",
          "type": "integer"
        },
        "SmartGroupId": {
          "format": "int32",
          "description": "Gets or sets the SmartGroupId",
          "type": "integer"
        },
        "IndexOfLastCompletedStep": {
          "format": "int32",
          "description": "Gets or sets the IndexOfLastCompletedStep\r\nIf blueprint is unpublished, then index from where blueprint creation will be resumed, Index is 1 based index",
          "type": "integer"
        },
        "AssignmentType": {
          "description": "Gets or sets the AssignmentType",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "LocationGroupId": 1,
        "IsPublished": true,
        "Name": "test",
        "Description": "test",
        "ApplicationCount": 1,
        "ResourceCount": 1,
        "PolicyCount": 1,
        "UserCount": "test",
        "UserGroupCount": "test",
        "DeviceCount": 1,
        "SmartGroupId": 1,
        "IndexOfLastCompletedStep": 1,
        "AssignmentType": "test",
        "id": 1
      }
    },
    "BlueprintModel": {
      "description": "Model for BluePrintDetails",
      "required": [
        "Name",
        "AssignmentType"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the Name",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the Description",
          "type": "string"
        },
        "AssignmentType": {
          "format": "int32",
          "description": "Gets or sets the BlueprintAssignmentType",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Name": "test",
        "Description": "test",
        "AssignmentType": 0,
        "id": 1
      }
    },
    "AppModel": {
      "description": "Model for App",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the Name",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Name": "test",
        "id": 1
      }
    },
    "BulkResponse": {
      "type": "object",
      "properties": {
        "TotalItems": {
          "format": "int32",
          "type": "integer"
        },
        "AcceptedItems": {
          "format": "int32",
          "type": "integer"
        },
        "FailedItems": {
          "format": "int32",
          "type": "integer"
        },
        "Faults": {
          "$ref": "#/definitions/Faults"
        }
      },
      "example": {
        "TotalItems": 1,
        "AcceptedItems": 1,
        "FailedItems": 1
      }
    },
    "Faults": {
      "type": "object",
      "properties": {
        "Fault": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fault"
          }
        }
      }
    },
    "Fault": {
      "type": "object",
      "properties": {
        "ErrorCode": {
          "format": "int32",
          "type": "integer"
        },
        "ItemValue": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      },
      "example": {
        "ErrorCode": 1,
        "ItemValue": "test",
        "Message": "test"
      }
    },
    "BlueprintResourceModel": {
      "description": "Model for Resource",
      "required": [
        "ResourceId",
        "ResourceType"
      ],
      "type": "object",
      "properties": {
        "ResourceId": {
          "format": "int32",
          "description": "Gets or sets the ResourceId",
          "type": "integer"
        },
        "ResourceType": {
          "format": "int32",
          "description": "Gets or sets the ProfileResourceType",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ResourceId": 1,
        "ResourceType": 0,
        "id": 1
      }
    },
    "ResourceListModel": {
      "description": "Model for Resource List",
      "type": "object",
      "properties": {
        "ResultSet": {
          "description": "Gets or sets the list of ResourceModels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlueprintResourceModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the Total Count",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ResultSet": [
          {
            "ResourceId": 1,
            "ResourceType": 0,
            "id": 1
          }
        ],
        "TotalCount": 1,
        "id": 1
      }
    },
    "BlueprintUsersModel": {
      "description": "Model for BlueprintUsersModel",
      "required": [
        "UserIds"
      ],
      "type": "object",
      "properties": {
        "UserIds": {
          "description": "Gets or sets the UserIds",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "UserIds": [
          "test"
        ],
        "id": 1
      }
    },
    "UserAssignmentListModel": {
      "description": "Model for Resource List",
      "type": "object",
      "properties": {
        "ResultSet": {
          "description": "Gets or sets the list of ResourceModels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAssignmentModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the Total Count",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ResultSet": [
          {
            "UserName": "test",
            "EmailAddress": "test",
            "UserId": 1,
            "DeviceCount": 1,
            "FullName": "test",
            "id": 1
          }
        ],
        "TotalCount": 1,
        "id": 1
      }
    },
    "UserAssignmentModel": {
      "description": "Model for User Assignment",
      "required": [
        "UserName",
        "EmailAddress",
        "UserId",
        "DeviceCount",
        "FullName"
      ],
      "type": "object",
      "properties": {
        "UserName": {
          "description": "Gets or sets the Name",
          "type": "string"
        },
        "EmailAddress": {
          "description": "Gets or sets the EmailAddress",
          "type": "string"
        },
        "UserId": {
          "format": "int32",
          "description": "Gets or sets the UserId",
          "type": "integer"
        },
        "DeviceCount": {
          "format": "int32",
          "description": "Gets or sets the DeviceCount",
          "type": "integer"
        },
        "FullName": {
          "description": "Gets or sets the FullName",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "UserName": "test",
        "EmailAddress": "test",
        "UserId": 1,
        "DeviceCount": 1,
        "FullName": "test",
        "id": 1
      }
    },
    "BlueprintUserGroupsModel": {
      "description": "Model for BlueprintUserGroupsModel",
      "required": [
        "UserGroupIds"
      ],
      "type": "object",
      "properties": {
        "UserGroupIds": {
          "description": "Gets or sets the UserGroupIds",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "UserGroupIds": [
          "test"
        ],
        "id": 1
      }
    },
    "UserGroupAssignmentListModel": {
      "description": "Model for Resource List",
      "type": "object",
      "properties": {
        "ResultSet": {
          "description": "Gets or sets the list of ResourceModels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroupAssignmentModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the Total Count",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "UserGroupAssignmentModel": {
      "description": "Model for User Group",
      "required": [
        "UserGroupId",
        "Name",
        "LastSyncOn",
        "SyncStatus",
        "Type",
        "UserCount"
      ],
      "type": "object",
      "properties": {
        "UserGroupId": {
          "format": "int32",
          "description": "Gets or sets the UserId",
          "type": "integer"
        },
        "Name": {
          "description": "Gets or sets the Name",
          "type": "string"
        },
        "LastSyncOn": {
          "format": "date-time",
          "description": "Gets or sets the LastSyncOn",
          "type": "string"
        },
        "SyncStatus": {
          "format": "int32",
          "description": "Gets or sets the SyncStatus",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "Type": {
          "format": "int32",
          "description": "Gets or sets the Type",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "UserCount": {
          "format": "int32",
          "description": "Gets or sets the UserCount",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "ProfilePoliciesEntity": {
      "type": "object",
      "properties": {
        "Restrictions": {
          "$ref": "#/definitions/RestrictionPayloadEntity"
        },
        "Passcode": {
          "$ref": "#/definitions/PasscodePayloadEntity"
        }
      },
      "example": {}
    },
    "RestrictionPayloadEntity": {
      "type": "object",
      "properties": {
        "AllowUseOfCamera": {
          "type": "boolean"
        },
        "AllowUseOfBluetooth": {
          "type": "boolean"
        },
        "AllowUseOfAirDropNfc": {
          "type": "boolean"
        },
        "AllowUseOfSiriCortana": {
          "type": "boolean"
        },
        "AllowDeviceWipe": {
          "type": "boolean"
        },
        "AllowUseOfGoogleiCloudBackup": {
          "type": "boolean"
        },
        "AllowAccessToAppStore": {
          "type": "boolean"
        },
        "AllowUseOfYoutube": {
          "type": "boolean"
        },
        "AllowAccessToGameCenter": {
          "type": "boolean"
        },
        "AllowUntrustedApps": {
          "type": "boolean"
        },
        "AllowNativeBrowser": {
          "type": "boolean"
        },
        "AllowScreenCapture": {
          "type": "boolean"
        },
        "AllowCopyPasteBetweenApps": {
          "type": "boolean"
        },
        "AllowSDCard": {
          "type": "boolean"
        },
        "AllowManagedDocUnmanagedUse": {
          "type": "boolean"
        },
        "RequireDeviceEncryption": {
          "type": "boolean"
        },
        "General": {
          "$ref": "#/definitions/ProfileResourceGeneralPayloadEntity"
        }
      },
      "example": {
        "AllowUseOfCamera": true,
        "AllowUseOfBluetooth": true,
        "AllowUseOfAirDropNfc": true,
        "AllowUseOfSiriCortana": true,
        "AllowDeviceWipe": true,
        "AllowUseOfGoogleiCloudBackup": true,
        "AllowAccessToAppStore": true,
        "AllowUseOfYoutube": true,
        "AllowAccessToGameCenter": true,
        "AllowUntrustedApps": true,
        "AllowNativeBrowser": true,
        "AllowScreenCapture": true,
        "AllowCopyPasteBetweenApps": true,
        "AllowSDCard": true,
        "AllowManagedDocUnmanagedUse": true,
        "RequireDeviceEncryption": true
      }
    },
    "PasscodePayloadEntity": {
      "type": "object",
      "properties": {
        "RequirePasscode": {
          "type": "boolean"
        },
        "MinimumPasscodeLength": {
          "format": "int32",
          "maximum": 16,
          "minimum": 4,
          "type": "integer"
        },
        "AutoLock": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumFailedAttempts": {
          "format": "int32",
          "maximum": 10,
          "minimum": 4,
          "type": "integer"
        },
        "AllowSimple": {
          "type": "boolean"
        },
        "RequireAlphanumeric": {
          "type": "boolean"
        },
        "MaximumPasscodeAge": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumRequiredComplexCharacters": {
          "format": "int32",
          "type": "integer"
        },
        "General": {
          "$ref": "#/definitions/ProfileResourceGeneralPayloadEntity"
        }
      },
      "example": {
        "RequirePasscode": true,
        "MinimumPasscodeLength": 1,
        "AutoLock": 1,
        "MaximumFailedAttempts": 1,
        "AllowSimple": true,
        "RequireAlphanumeric": true,
        "MaximumPasscodeAge": 1,
        "MinimumRequiredComplexCharacters": 1
      }
    },
    "ProfileResourceGeneralPayloadEntity": {
      "type": "object",
      "properties": {
        "ProfileResourceId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ManagedLocationGroupID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "ProfileResourceId": 1,
        "Name": "test",
        "Description": "test",
        "ManagedLocationGroupID": 1
      }
    },
    "PurchasedApplicationViewModel": {
      "description": "Purchased Application View Model",
      "type": "object",
      "properties": {
        "Apps": {
          "description": "List of Purchased Application Model",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchasedApplicationModel"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Apps": [
          {
            "AppId": 1,
            "VppLicenseCountId": 1,
            "ApplicationLicensePoolId": 1,
            "PushMode": 1,
            "AllocatedLicenseCount": 1,
            "id": 1
          }
        ],
        "id": 1
      }
    },
    "PurchasedApplicationModel": {
      "description": "Minified purchased application model",
      "type": "object",
      "properties": {
        "AppId": {
          "format": "int32",
          "description": "Application Id",
          "type": "integer"
        },
        "VppLicenseCountId": {
          "format": "int32",
          "description": "Vpp Licesne count id",
          "type": "integer"
        },
        "ApplicationLicensePoolId": {
          "format": "int32",
          "description": "App license pool id",
          "type": "integer"
        },
        "PushMode": {
          "format": "int32",
          "description": "Application push mode",
          "type": "integer"
        },
        "AllocatedLicenseCount": {
          "format": "int32",
          "description": "Allocated license count",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "AppId": 1,
        "VppLicenseCountId": 1,
        "ApplicationLicensePoolId": 1,
        "PushMode": 1,
        "AllocatedLicenseCount": 1,
        "id": 1
      }
    },
    "CustomAttributeModel": {
      "description": "Custom Attribute Resource.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        },
        "ApplicationGroup": {
          "description": "Application Group to which Custom Attribute applicable to",
          "type": "string"
        },
        "CollectValuesForRuleCreator": {
          "description": "Flag to indicate whether value should be collected for rule generator",
          "type": "boolean"
        },
        "Description": {
          "description": "Custom Attribute Description",
          "type": "string"
        },
        "ManagedByOrganizationGroupID": {
          "description": "Managed By Organization Group Identifier[Customer Organization Group Type]",
          "type": "string"
        },
        "Name": {
          "description": "Custom Attrbute Name.",
          "type": "string"
        },
        "Persist": {
          "description": "Flag to indicate value should be persisted or not",
          "type": "boolean"
        },
        "ShowInRuleCreator": {
          "description": "Flag to indicate whether it should be shown in Rule Generator",
          "type": "boolean"
        },
        "UseAsLookupValue": {
          "description": "Flag to indicate whether Custom Attribute can be used as lookup or not",
          "type": "boolean"
        },
        "Values": {
          "description": "Gets or sets the domains.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeValueModel"
          }
        }
      },
      "example": {
        "ApplicationGroup": "test",
        "CollectValuesForRuleCreator": true,
        "Description": "test",
        "ManagedByOrganizationGroupID": "test",
        "Name": "test",
        "Persist": true,
        "ShowInRuleCreator": true,
        "UseAsLookupValue": true,
        "Values": [
          {}
        ]
      }
    },
    "CustomAttributeValueModel": {
      "description": "Custom Attribute Value dummy for validation.",
      "type": "object",
      "properties": {
        "Value": {
          "description": "Gets or sets Custom Attribute Value.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {}
    },
    "CustomAttributeSearchResult": {
      "type": "object",
      "properties": {
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeResource"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "CustomAttributes": [
          {
            "AttributeID": 1,
            "Name": "test",
            "ApplicationGroup": "test",
            "Description": "test",
            "Persist": true,
            "ManagedByOrganizationGroupID": "test",
            "ShowInRuleCreator": true,
            "CollectValuesForRuleCreator": true,
            "UseAsLookupValue": true,
            "Values": [
              {
                "Value": "test"
              }
            ]
          }
        ],
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "CustomAttributeResource": {
      "type": "object",
      "properties": {
        "AttributeID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "pattern": "^[^*:?\"<>|\\\\/;,\\[\\]\\(\\)]+$",
          "type": "string"
        },
        "ApplicationGroup": {
          "pattern": "^[^*:?\"<>|\\\\/;,\\[\\]\\(\\)]+$",
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Persist": {
          "type": "boolean"
        },
        "ManagedByOrganizationGroupID": {
          "type": "string"
        },
        "ShowInRuleCreator": {
          "type": "boolean"
        },
        "CollectValuesForRuleCreator": {
          "type": "boolean"
        },
        "UseAsLookupValue": {
          "type": "boolean"
        },
        "Values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeValue"
          }
        }
      },
      "example": {
        "AttributeID": 1,
        "Name": "test",
        "ApplicationGroup": "test",
        "Description": "test",
        "Persist": true,
        "ManagedByOrganizationGroupID": "test",
        "ShowInRuleCreator": true,
        "CollectValuesForRuleCreator": true,
        "UseAsLookupValue": true,
        "Values": [
          {
            "Value": "test"
          }
        ]
      }
    },
    "CustomAttributeValue": {
      "type": "object",
      "properties": {
        "Value": {
          "pattern": "^[^*:?\"<>|\\\\/;,\\[\\]\\(\\)]+$",
          "type": "string"
        }
      },
      "example": {
        "Value": "test"
      }
    },
    "VmWorkspaceModel": {
      "type": "object",
      "properties": {
        "udid": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "appBundleId": {
          "type": "string"
        },
        "platformId": {
          "format": "int32",
          "type": "integer"
        },
        "deviceOs": {
          "type": "string"
        },
        "deviceModel": {
          "type": "string"
        },
        "deviceModelIdentifier": {
          "type": "string"
        },
        "isDeviceAfwCertified": {
          "type": "boolean"
        },
        "deviceOemInfo": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "domainGroupId": {
          "type": "string"
        }
      },
      "example": {
        "udid": "test",
        "userId": "test",
        "appBundleId": "test",
        "platformId": 1,
        "deviceOs": "test",
        "deviceModel": "test",
        "deviceModelIdentifier": "test",
        "isDeviceAfwCertified": true,
        "deviceOemInfo": "test",
        "groupId": "test",
        "domainGroupId": "test"
      }
    },
    "RegisterContainerResponse": {
      "type": "object",
      "properties": {
        "HmacToken": {
          "type": "string"
        },
        "GroupId": {
          "type": "string"
        },
        "AuthenticationGroup": {
          "type": "string"
        },
        "DeviceServicesUrl": {
          "type": "string"
        }
      },
      "example": {
        "HmacToken": "test",
        "GroupId": "test",
        "AuthenticationGroup": "test",
        "DeviceServicesUrl": "test"
      }
    },
    "DeviceUserDetails": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "DeviceMACAddress": {
          "type": "string"
        },
        "DeviceSerialNumber": {
          "type": "string"
        },
        "TokenType": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "UserName": "test",
        "Password": "test",
        "FirstName": "test",
        "LastName": "test",
        "Email": "test",
        "DeviceMACAddress": "test",
        "DeviceSerialNumber": "test",
        "TokenType": 1
      }
    },
    "DeviceTokenDetails": {
      "type": "object",
      "properties": {
        "MACAddress": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "EnrollmentToken": {
          "type": "string"
        }
      },
      "example": {
        "MACAddress": "test",
        "SerialNumber": "test",
        "EnrollmentToken": "test"
      }
    },
    "BulkInput": {
      "type": "object",
      "properties": {
        "BulkValues": {
          "$ref": "#/definitions/BulkValues"
        }
      },
      "example": {}
    },
    "BulkValues": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EnrollmentTokensModel": {
      "description": "The enrollment tokens model.",
      "type": "object",
      "properties": {
        "Device": {
          "description": "Gets or sets the device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnrollmentTokenDetailsModel"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "EnrollmentTokenDetailsModel": {
      "description": "Enrollment Token Details",
      "type": "object",
      "properties": {
        "OrganizationGroup": {
          "description": "Gets or sets Organization Group Name where Current Enrollment Token is valid.",
          "type": "string"
        },
        "Username": {
          "description": "Gets or sets Gets or sets Enrollment User Name for whom Current Enrollment Token is generated.",
          "type": "string"
        },
        "FriendlyName": {
          "description": "Gets or sets Friendly Name of the Device, which will be enrolled using the current Enrollment Token.",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets Asset Number of the Device, which will be enrolled using the current Enrollment Token.",
          "type": "string"
        },
        "Token": {
          "description": "Gets or sets Enrollment Token",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets Serial Number of the device, which will be enrolled using the current Enrollment Token",
          "type": "string"
        },
        "EnrollmentStatusID": {
          "description": "Gets or sets EnrollmentStatusID",
          "type": "string"
        },
        "ComplianceStatusID": {
          "description": "Gets or sets ComplianceStatusID",
          "type": "string"
        },
        "CustomAttributes": {
          "description": "Gets or sets List of Custom Attributes mapped to the Enrollment Token",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeDomainModel"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "CustomAttributeDomainModel": {
      "description": "Custom Attribute Resource.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "RegisterDeviceDetailsModel": {
      "description": "Register Device Details Model\r\n{AW.Core.Api.Model.Enrollment.RegisterDeviceDetailsModel}",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        },
        "LocationGroupId": {
          "format": "int32",
          "description": "Gets or sets the location group identifier.",
          "type": "integer"
        },
        "FriendlyName": {
          "description": "Gets or sets the name of the friendly.",
          "type": "string"
        },
        "Ownership": {
          "description": "Gets or sets the ownership.",
          "type": "string"
        },
        "PlatformId": {
          "format": "int32",
          "description": "Gets or sets the platform identifier.",
          "type": "integer"
        },
        "ModelId": {
          "format": "int32",
          "description": "Gets or sets the model identifier.",
          "type": "integer"
        },
        "OperatingSystemId": {
          "format": "int32",
          "description": "Gets or sets the operating system identifier.",
          "type": "integer"
        },
        "Udid": {
          "description": "Gets or sets the udid.",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "Imei": {
          "description": "Gets or sets the imei.",
          "type": "string"
        },
        "AssetNumber": {
          "description": "asset number of the device",
          "type": "string"
        },
        "MessageType": {
          "format": "int32",
          "description": "Gets or sets the type of the message.",
          "enum": [
            0,
            1,
            2,
            -1
          ],
          "type": "integer"
        },
        "MessageTemplateId": {
          "description": "Gets or sets the message template identifier.",
          "type": "string"
        },
        "SIM": {
          "description": "Gets or sets the sim.",
          "type": "string"
        },
        "ToEmailAddress": {
          "description": "Gets or sets to email address.",
          "type": "string"
        },
        "ToPhoneNumber": {
          "description": "Gets or sets to phone number.",
          "type": "string"
        },
        "Tags": {
          "description": "Gets or sets the tags.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagModel"
          }
        },
        "CustomAttributes": {
          "description": "Gets or sets the custom attributes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeNameValueApplicationModel"
          }
        },
        "IsMigration": {
          "description": "Gets or sets a value indicating whether this instance is migration.",
          "type": "boolean"
        }
      }
    },
    "TagModel": {
      "description": "Tag Model\r\n{AW.Core.Api.Model.Enrollment.TagModel}",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        }
      },
      "example": {
        "Name": "test"
      }
    },
    "CustomAttributeNameValueApplicationModel": {
      "description": "Custom Attribute Name Value Application Group Model\r\n{AW.Core.Api.Model.Enrollment.CustomAttributeNameValueApplicationModel}",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets Custom Attrbute Name.",
          "type": "string"
        },
        "Value": {
          "description": "Gets or sets Custom Attribute Value.",
          "type": "string"
        },
        "Application": {
          "description": "Gets or sets the application.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {}
    },
    "EnrolledDevices": {
      "type": "object",
      "properties": {
        "EnrolledDeviceInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnrolledDeviceDetails"
          }
        }
      },
      "example": {
        "EnrolledDeviceInfoList": [
          {
            "DeviceID": 1,
            "SerialNumber": "test",
            "AssetNumber": "test",
            "FriendlyName": "test",
            "UserName": "test",
            "EnrolledDate": "test",
            "RegistrationDate": "test",
            "LastSeen": "test",
            "Platform": "test",
            "OrganizationGroup": "test",
            "CustomAttributes": [
              {
                "Name": "test",
                "Value": "test",
                "Source": "test",
                "Application": "test"
              }
            ]
          }
        ]
      }
    },
    "EnrolledDeviceDetails": {
      "type": "object",
      "properties": {
        "DeviceID": {
          "format": "int32",
          "type": "integer"
        },
        "SerialNumber": {
          "type": "string"
        },
        "AssetNumber": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "EnrolledDate": {
          "type": "string"
        },
        "RegistrationDate": {
          "type": "string"
        },
        "LastSeen": {
          "type": "string"
        },
        "Platform": {
          "type": "string"
        },
        "OrganizationGroup": {
          "type": "string"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttribute"
          }
        }
      },
      "example": {
        "DeviceID": 1,
        "SerialNumber": "test",
        "AssetNumber": "test",
        "FriendlyName": "test",
        "UserName": "test",
        "EnrolledDate": "test",
        "RegistrationDate": "test",
        "LastSeen": "test",
        "Platform": "test",
        "OrganizationGroup": "test",
        "CustomAttributes": [
          {
            "Name": "test",
            "Value": "test",
            "Source": "test",
            "Application": "test"
          }
        ]
      }
    },
    "CustomAttribute": {
      "type": "object",
      "properties": {
        "Name": {
          "pattern": "^[^*:?\"<>|\\\\/;,\\[\\]\\(\\)]+$",
          "type": "string"
        },
        "Value": {
          "pattern": "^[^*:?\"<>|\\\\/;,\\[\\]\\(\\)]+$",
          "type": "string"
        },
        "Source": {
          "type": "string"
        },
        "Application": {
          "pattern": "^[^*:?\"<>|\\\\/;,\\[\\]\\(\\)]+$",
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "Value": "test",
        "Source": "test",
        "Application": "test"
      }
    },
    "RegisteredDevices": {
      "type": "object",
      "properties": {
        "RegisteredDeviceInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegisteredDeviceDetails"
          }
        }
      },
      "example": {
        "RegisteredDeviceInfoList": [
          {
            "OrganizationGroup": "test",
            "Username": "test",
            "FriendlyName": "test",
            "AssetNumber": "test",
            "UDID": "test",
            "RegistrationDate": "test",
            "SerialNumber": "test",
            "Platform": "test",
            "CustomAttributes": [
              {
                "Name": "test",
                "Value": "test",
                "Source": "test",
                "Application": "test"
              }
            ]
          }
        ]
      }
    },
    "RegisteredDeviceDetails": {
      "type": "object",
      "properties": {
        "OrganizationGroup": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "AssetNumber": {
          "type": "string"
        },
        "UDID": {
          "type": "string"
        },
        "RegistrationDate": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "Platform": {
          "type": "string"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttribute"
          }
        }
      },
      "example": {
        "OrganizationGroup": "test",
        "Username": "test",
        "FriendlyName": "test",
        "AssetNumber": "test",
        "UDID": "test",
        "RegistrationDate": "test",
        "SerialNumber": "test",
        "Platform": "test",
        "CustomAttributes": [
          {
            "Name": "test",
            "Value": "test",
            "Source": "test",
            "Application": "test"
          }
        ]
      }
    },
    "UserDevicesModel": {
      "description": "User Devices Model",
      "type": "object",
      "properties": {
        "UserName": {
          "description": "Gets or sets the User Name of the Enrollment User",
          "type": "string"
        },
        "Devices": {
          "description": "Gets or sets Array of Devices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceModel"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "DeviceModel": {
      "description": "Device Model",
      "type": "object",
      "properties": {
        "UDID": {
          "description": "Gets or sets the Udid of the Device",
          "type": "string"
        },
        "ImeiNumber": {
          "description": "Gets or sets the IMEI Number of the Device",
          "type": "string"
        },
        "FriendlyName": {
          "description": "Gets or sets the Device Friendly Name",
          "type": "string"
        },
        "Ownership": {
          "description": "Gets or sets the Device Ownership",
          "type": "string"
        },
        "Platform": {
          "description": "Gets or sets the Device Platform",
          "type": "string"
        },
        "CompromisedStatus": {
          "description": "Gets or sets the Compromised Status of the Device",
          "type": "string"
        },
        "ComplianceStatus": {
          "description": "Gets or sets the Compliance Status of the Device",
          "type": "string"
        },
        "EnrollmentStatus": {
          "description": "Gets or sets the Enrollment Status of the device",
          "type": "string"
        },
        "LastEnrolledOn": {
          "description": "Gets or sets the Device Enrollment Date",
          "type": "string"
        },
        "LastComplianceCheckOn": {
          "description": "Gets or sets the Date when the Device is Checked for Compliance for the Last time",
          "type": "string"
        },
        "LastCompromisedCheckOn": {
          "description": "Gets or sets the Date when the Device is Checked Whether it is compromised or not for the Last time",
          "type": "string"
        },
        "LastSeen": {
          "description": "Gets or sets the Date when the Device is last seen",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "UDID": "test",
        "ImeiNumber": "test",
        "FriendlyName": "test",
        "Ownership": "test",
        "Platform": "test",
        "CompromisedStatus": "test",
        "ComplianceStatus": "test",
        "EnrollmentStatus": "test",
        "LastEnrolledOn": "test",
        "LastComplianceCheckOn": "test",
        "LastCompromisedCheckOn": "test",
        "LastSeen": "test",
        "id": 1
      }
    },
    "AdaEntity": {
      "type": "object",
      "properties": {
        "AdaClientId": {
          "type": "string"
        },
        "HostName": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "IpAddress": {
          "type": "string"
        },
        "LocationGroupId": {
          "format": "int64",
          "type": "integer"
        },
        "LocationGroupName": {
          "type": "string"
        }
      },
      "example": {
        "AdaClientId": "test",
        "HostName": "test",
        "FriendlyName": "test",
        "IpAddress": "test",
        "LocationGroupId": 1,
        "LocationGroupName": "test"
      }
    },
    "AwMonitoringEntity": {
      "type": "object",
      "properties": {
        "AwMonitoringServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwMonitoringService"
          }
        }
      },
      "example": {
        "AwMonitoringServices": [
          {
            "Name": "test",
            "LocalName": "test",
            "Version": "test",
            "ServiceType": "test"
          }
        ]
      }
    },
    "AwMonitoringService": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "LocalName": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "ServiceType": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "LocalName": "test",
        "Version": "test",
        "ServiceType": "test"
      }
    },
    "AdaConfigurationEntity": {
      "type": "object",
      "properties": {
        "SamplingFrequency": {
          "format": "int32",
          "type": "integer"
        },
        "CommandPollingFrequency": {
          "format": "int32",
          "type": "integer"
        },
        "OrganizationGroupId": {
          "format": "int64",
          "type": "integer"
        },
        "ApplicationListToSample": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationDetailsEntity"
          }
        }
      },
      "example": {
        "SamplingFrequency": 1,
        "CommandPollingFrequency": 1,
        "OrganizationGroupId": 1,
        "ApplicationListToSample": [
          {
            "Name": "test",
            "LocalName": "test",
            "Version": "test",
            "Description": "test",
            "ServiceType": "test",
            "ToBeMonitored": true,
            "ServiceId": "test"
          }
        ]
      }
    },
    "ApplicationDetailsEntity": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "LocalName": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ServiceType": {
          "type": "string"
        },
        "ToBeMonitored": {
          "type": "boolean"
        },
        "ServiceId": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "LocalName": "test",
        "Version": "test",
        "Description": "test",
        "ServiceType": "test",
        "ToBeMonitored": true,
        "ServiceId": "test"
      }
    },
    "AdaSampleEntity": {
      "type": "object",
      "properties": {
        "AdaDetails": {
          "$ref": "#/definitions/AdaEntity"
        },
        "SampleEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleEntity"
          }
        }
      }
    },
    "SampleEntity": {
      "type": "object",
      "properties": {
        "WindowsServiceSampleEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WindowsServiceSampleEntity"
          }
        },
        "WebsiteSampleEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebsiteSampleEntity"
          }
        },
        "MsmqSampleEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MsmqSampleEntity"
          }
        },
        "EventViewer": {
          "$ref": "#/definitions/EventViewerSampleEntity"
        },
        "AwcmSampleEntity": {
          "$ref": "#/definitions/AwcmSampleEntity"
        },
        "CpuUsage": {
          "type": "string"
        },
        "MemoryUsage": {
          "type": "string"
        },
        "SampleDateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "WindowsServiceSampleEntity": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "ProcessName": {
          "type": "string"
        },
        "ProcessId": {
          "type": "string"
        },
        "ThreadCount": {
          "type": "string"
        },
        "MemoryUsage": {
          "type": "string"
        },
        "CpuUsage": {
          "type": "string"
        },
        "LogLevel": {
          "type": "string"
        },
        "ServiceId": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "Version": "test",
        "Description": "test",
        "State": "test",
        "ProcessName": "test",
        "ProcessId": "test",
        "ThreadCount": "test",
        "MemoryUsage": "test",
        "CpuUsage": "test",
        "LogLevel": "test",
        "ServiceId": "test"
      }
    },
    "WebsiteSampleEntity": {
      "type": "object",
      "properties": {
        "AppPoolName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "ProcessName": {
          "type": "string"
        },
        "ProcessId": {
          "type": "string"
        },
        "ThreadCount": {
          "type": "string"
        },
        "MemoryUsage": {
          "type": "string"
        },
        "CpuUsage": {
          "type": "string"
        },
        "LogLevel": {
          "type": "string"
        },
        "ServiceId": {
          "type": "string"
        }
      },
      "example": {
        "AppPoolName": "test",
        "Name": "test",
        "Version": "test",
        "Description": "test",
        "State": "test",
        "ProcessName": "test",
        "ProcessId": "test",
        "ThreadCount": "test",
        "MemoryUsage": "test",
        "CpuUsage": "test",
        "LogLevel": "test",
        "ServiceId": "test"
      }
    },
    "MsmqSampleEntity": {
      "type": "object",
      "properties": {
        "MessageQueueName": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "MessageQueueLength": {
          "format": "int32",
          "type": "integer"
        },
        "ServiceId": {
          "type": "string"
        }
      },
      "example": {
        "MessageQueueName": "test",
        "State": "test",
        "MessageQueueLength": 1,
        "ServiceId": "test"
      }
    },
    "EventViewerSampleEntity": {
      "type": "object",
      "properties": {
        "EventViewerEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventViewerEntity"
          }
        },
        "ServiceId": {
          "type": "string"
        }
      }
    },
    "AwcmSampleEntity": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "ProcessName": {
          "type": "string"
        },
        "ProcessId": {
          "type": "string"
        },
        "ThreadCount": {
          "type": "string"
        },
        "MemoryUsage": {
          "type": "string"
        },
        "CpuUsage": {
          "type": "string"
        },
        "LogLevel": {
          "type": "string"
        },
        "ServiceId": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "Version": "test",
        "Description": "test",
        "State": "test",
        "ProcessName": "test",
        "ProcessId": "test",
        "ThreadCount": "test",
        "MemoryUsage": "test",
        "CpuUsage": "test",
        "LogLevel": "test",
        "ServiceId": "test"
      }
    },
    "EventViewerEntity": {
      "type": "object",
      "properties": {
        "TimeGenerated": {
          "format": "date-time",
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "EntryType": {
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "Category": {
          "type": "string"
        },
        "Source": {
          "type": "string"
        },
        "ServiceId": {
          "type": "string"
        }
      }
    },
    "AdaCommandEntity": {
      "type": "object",
      "properties": {
        "ApplicationCommandEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationCommandEntity"
          }
        }
      },
      "example": {
        "ApplicationCommandEntities": [
          {
            "CommandId": 1,
            "CommandType": "test",
            "ServiceId": 1,
            "ServiceName": "test",
            "LocalName": "test",
            "ToBeMonitored": true,
            "ServiceType": "test"
          }
        ]
      }
    },
    "ApplicationCommandEntity": {
      "type": "object",
      "properties": {
        "CommandId": {
          "format": "int32",
          "type": "integer"
        },
        "CommandType": {
          "type": "string"
        },
        "ServiceId": {
          "format": "int32",
          "type": "integer"
        },
        "ServiceName": {
          "type": "string"
        },
        "LocalName": {
          "type": "string"
        },
        "ToBeMonitored": {
          "type": "boolean"
        },
        "ServiceType": {
          "type": "string"
        }
      },
      "example": {
        "CommandId": 1,
        "CommandType": "test",
        "ServiceId": 1,
        "ServiceName": "test",
        "LocalName": "test",
        "ToBeMonitored": true,
        "ServiceType": "test"
      }
    },
    "ApplicationCommandStatusEntity": {
      "type": "object",
      "properties": {
        "CommandId": {
          "format": "int32",
          "type": "integer"
        },
        "CommandStatus": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "MessageQueueLength": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "CommandId": 1,
        "CommandStatus": "test",
        "State": "test",
        "MessageQueueLength": 1
      }
    },
    "LogFileMappingEntity": {
      "type": "object",
      "properties": {
        "CommandId": {
          "format": "int32",
          "type": "integer"
        },
        "LogFileBlobId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "CommandId": 1,
        "LogFileBlobId": 1
      }
    },
    "LogLevelMappingEntity": {
      "type": "object",
      "properties": {
        "CommandId": {
          "format": "int32",
          "type": "integer"
        },
        "LogLevel": {
          "type": "string"
        }
      },
      "example": {
        "CommandId": 1,
        "LogLevel": "test"
      }
    },
    "ManagementStatus": {
      "type": "object",
      "properties": {
        "Status": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Status": 1
      }
    },
    "CustomAttributeListModel": {
      "description": "Device Custom Attribute List\r\n{AW.Core.Api.Model.Enrollment.CustomAttributeListModel}",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        },
        "CustomAttributes": {
          "description": "Gets or sets the custom attributes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeNameValueModel"
          }
        }
      },
      "example": {
        "CustomAttributes": [
          {}
        ]
      }
    },
    "CustomAttributeNameValueModel": {
      "description": "Custom Attribute Name Value Model\r\n{AW.Core.Api.Model.Enrollment.CustomAttributeNameValueModel}",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets Custom Attrbute Name.",
          "type": "string"
        },
        "Value": {
          "description": "Gets or sets Custom Attribute Value.",
          "type": "string"
        },
        "Application": {
          "description": "Gets or sets Custom Attribute Application Name.",
          "type": "string"
        },
        "ApplicationGroup": {
          "description": "Gets or sets the application.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {}
    },
    "EnrolledDeviceAttribute": {
      "type": "object",
      "properties": {
        "OrgnizationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "CustomAttribute": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttribute"
          }
        }
      }
    },
    "RegisteredDeviceAttribute": {
      "type": "object",
      "properties": {
        "OrgnizationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "CustomAttribute": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttribute"
          }
        }
      }
    },
    "GroupingSettingsModel": {
      "description": "Group Assignment Mapping Settings resource",
      "type": "object",
      "properties": {
        "OrganizationGroup": {
          "format": "int32",
          "description": "Organization Group where settings needs to be configured",
          "type": "integer"
        },
        "GroupAssignmentMappings": {
          "description": "Group Assignment mapping list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupAssignmentMappingModel"
          }
        }
      },
      "example": {
        "OrganizationGroup": 1,
        "GroupAssignmentMappings": [
          {
            "UserGroupId": 1,
            "TargetOrganizationGroupId": 1,
            "AssignmentRank": 1
          }
        ]
      }
    },
    "GroupAssignmentMappingModel": {
      "description": "Group Assignment Mapping",
      "type": "object",
      "properties": {
        "UserGroupId": {
          "format": "int32",
          "description": "User Group Id",
          "type": "integer"
        },
        "TargetOrganizationGroupId": {
          "format": "int32",
          "description": "Target Organization Group id",
          "type": "integer"
        },
        "AssignmentRank": {
          "format": "int32",
          "description": "Assignment rank",
          "type": "integer"
        }
      },
      "example": {
        "UserGroupId": 1,
        "TargetOrganizationGroupId": 1,
        "AssignmentRank": 1
      }
    },
    "EventNotificationModel": {
      "description": "The Event Notification model.",
      "type": "object",
      "properties": {
        "TargetName": {
          "description": "Gets or sets the Friendly name of the Target URL.",
          "type": "string"
        },
        "TargetUrl": {
          "description": "Gets or sets the URL to send the notification to.",
          "type": "string"
        },
        "Username": {
          "description": "Gets or sets the UserName required to access the Target URL.",
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets the Password required to access the Target URL.",
          "type": "string"
        },
        "Format": {
          "format": "int32",
          "description": "Gets or sets the format of the POST message: XML(0) or Json(1).",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "description": "Gets or sets the Organization Group where these settings are saved.",
          "type": "integer"
        },
        "IsActive": {
          "description": "Gets or sets a value indicating whether Event Notification is active or not.",
          "type": "boolean"
        },
        "DeviceEvents": {
          "$ref": "#/definitions/DeviceEventsModel",
          "description": "Gets or sets the device events."
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "TargetName": "test",
        "TargetUrl": "test",
        "Username": "test",
        "Password": "test",
        "Format": 0,
        "OrganizationGroupId": 1,
        "IsActive": true,
        "id": 1
      }
    },
    "DeviceEventsModel": {
      "description": "The Device Events model.",
      "type": "object",
      "properties": {
        "Enrollment": {
          "description": "Gets or sets a value indicating whether device enrolled.",
          "type": "boolean"
        },
        "UnenrolledEnterpriseWipe": {
          "description": "Gets or sets a value indicating whether device unenrolled enterprise wipe.",
          "type": "boolean"
        },
        "Wipe": {
          "description": "Gets or sets a value indicating whether device wipe.",
          "type": "boolean"
        },
        "CompromisedStatusChange": {
          "description": "Gets or sets a value indicating whether device compromised status change.",
          "type": "boolean"
        },
        "Delete": {
          "description": "Gets or sets a value indicating whether device deleted.",
          "type": "boolean"
        },
        "ComplianceStatusChange": {
          "description": "Gets or sets a value indicating whether device compliance status change.",
          "type": "boolean"
        },
        "DeviceAttributes": {
          "$ref": "#/definitions/DeviceAttributesModel",
          "description": "Gets or sets the Device Attributes."
        }
      },
      "example": {
        "Enrollment": true,
        "UnenrolledEnterpriseWipe": true,
        "Wipe": true,
        "CompromisedStatusChange": true,
        "Delete": true,
        "ComplianceStatusChange": true
      }
    },
    "DeviceAttributesModel": {
      "description": "The device attributes model.",
      "type": "object",
      "properties": {
        "AssetNumber": {
          "description": "Gets or sets a value indicating whether asset number.",
          "type": "boolean"
        },
        "FriendlyName": {
          "description": "Gets or sets a value indicating whether device friendly name.",
          "type": "boolean"
        },
        "OrganizationGroup": {
          "description": "Gets or sets a value indicating whether device organization group changed.",
          "type": "boolean"
        },
        "UserEmailAddress": {
          "description": "Gets or sets a value indicating whether user email address.",
          "type": "boolean"
        },
        "Ownership": {
          "description": "Gets or sets a value indicating whether ownership.",
          "type": "boolean"
        },
        "OperatingSystem": {
          "description": "Gets or sets a value indicating whether operating system.",
          "type": "boolean"
        },
        "PhoneNumber": {
          "description": "Gets or sets a value indicating whether phone number.",
          "type": "boolean"
        },
        "DeviceMCC": {
          "description": "Gets or sets a value indicating whether device mcc.",
          "type": "boolean"
        }
      },
      "example": {
        "AssetNumber": true,
        "FriendlyName": true,
        "OrganizationGroup": true,
        "UserEmailAddress": true,
        "Ownership": true,
        "OperatingSystem": true,
        "PhoneNumber": true,
        "DeviceMCC": true
      }
    },
    "EventNotificationsPagedSearchResultModel": {
      "description": "Event Notifications Paged Search Results.",
      "type": "object",
      "properties": {
        "EventNotifications": {
          "description": "Gets or sets the Event Notifications.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventNotificationModel"
          }
        },
        "AdditionalInfo": {
          "$ref": "#/definitions/HypermediaModel",
          "description": "Gets or sets Hypermedia content for the result"
        },
        "TotalResults": {
          "format": "int32",
          "description": "Gets or sets Total Result",
          "type": "integer"
        }
      }
    },
    "HypermediaModel": {
      "description": "The aw hypermedia model.",
      "type": "object",
      "properties": {
        "Links": {
          "description": "Gets the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Links": [],
        "id": 1
      }
    },
    "Link": {
      "description": "The link.",
      "type": "object",
      "properties": {
        "Rel": {
          "description": "Gets or sets the relational links.",
          "type": "string"
        },
        "Href": {
          "description": "Gets or sets the HREF.",
          "type": "string"
        },
        "Title": {
          "description": "Gets or sets the title.",
          "type": "string"
        }
      },
      "example": {
        "Rel": "test",
        "Href": "test",
        "Title": "test"
      }
    },
    "LicenseModel": {
      "description": "License model.",
      "type": "object",
      "properties": {
        "MultiLicenseKey": {
          "description": "Gets or sets the result Set",
          "type": "string"
        },
        "QuantityPurchased": {
          "format": "int32",
          "description": "Gets or sets the result Set",
          "type": "integer"
        },
        "EffectiveDate": {
          "format": "date-time",
          "description": "Gets or sets the result Set",
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date-time",
          "description": "Gets or sets the result Set",
          "type": "string"
        },
        "OverageTolerance": {
          "format": "int32",
          "description": "Gets or sets the result Set",
          "type": "integer"
        },
        "LicenseType": {
          "format": "int32",
          "description": "Gets or sets the license type",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "ShutdownMode": {
          "format": "int32",
          "description": "Gets or sets the shutdown mode of license",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "WarningDate": {
          "format": "date-time",
          "description": "Gets or sets the result Set",
          "type": "string"
        },
        "LockoutDate": {
          "format": "date-time",
          "description": "Gets or sets the result Set",
          "type": "string"
        },
        "DevicesPerUser": {
          "format": "int32",
          "description": "Gets or sets the result Set",
          "type": "integer"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "description": "Gets or sets the Organization group id",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "VidmIntegrationStagingModel": {
      "description": "Represents vidm integration staging model",
      "type": "object",
      "properties": {
        "GroupId": {
          "description": "Gets or sets group id",
          "type": "string"
        },
        "VidmTenantUrl": {
          "description": "Gets or sets vIDM tenant URL",
          "type": "string"
        },
        "VidmAdminUsername": {
          "description": "Gets or sets vIDM admin username",
          "type": "string"
        },
        "VidmAdminPassword": {
          "description": "Gets or sets vIDM admin password",
          "type": "string"
        }
      },
      "example": {
        "GroupId": "test",
        "VidmTenantUrl": "test",
        "VidmAdminUsername": "test",
        "VidmAdminPassword": "test"
      }
    },
    "VidmIntegrationStagingResultModel": {
      "description": "Represents vidm integration staging result model",
      "type": "object",
      "properties": {
        "LocationGroupId": {
          "format": "int32",
          "description": "Gets or sets location group id",
          "type": "integer"
        },
        "VidmTenantUrl": {
          "description": "Gets or sets vIDM tenant URL",
          "type": "string"
        },
        "VidmAdminUsername": {
          "description": "Gets or sets vIDM admin username",
          "type": "string"
        },
        "VidmAdminPassword": {
          "description": "Gets or sets vIDM admin password",
          "type": "string"
        }
      },
      "example": {
        "LocationGroupId": 1,
        "VidmTenantUrl": "test",
        "VidmAdminUsername": "test",
        "VidmAdminPassword": "test"
      }
    },
    "GlobalizationRequestV1Model": {
      "description": "Globalization request model having locale and set of keys to be globalized",
      "required": [
        "locale",
        "keys"
      ],
      "type": "object",
      "properties": {
        "locale": {
          "description": "Locale for globalization",
          "type": "string"
        },
        "keys": {
          "description": "Set of keys to be globalized",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "locale": "en-US",
        "keys": [
          "test"
        ],
        "id": 1
      }
    },
    "GlobalizationResponseV1Model": {
      "description": "Globalized singular and plural value for given key",
      "type": "object",
      "properties": {
        "singular": {
          "description": "Singular value for msg key",
          "type": "string"
        },
        "plural": {
          "description": "Plural value for msg key",
          "type": "string"
        },
        "key": {
          "description": "Message key to be globalized",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "singular": "Application",
        "plural": "Applications",
        "key": "App",
        "id": 1
      }
    },
    "ProfilesSearchResultsModel": {
      "description": "The profiles search results model.",
      "type": "object",
      "properties": {
        "Profiles": {
          "description": "Gets or sets the devices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProfilesSearchResultModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the Devices count.",
          "type": "integer"
        }
      }
    },
    "ProfilesSearchResultModel": {
      "description": "The Profile search result model.",
      "type": "object",
      "properties": {
        "DeviceProfileName": {
          "description": "Gets or sets the Name.",
          "type": "string"
        },
        "DevicePlatformName": {
          "description": "Gets or sets the Platform.",
          "type": "string"
        },
        "DevicePlatformId": {
          "format": "int32",
          "description": "Gets or sets the Platform Id.",
          "type": "integer"
        },
        "IsDisabled": {
          "description": "Gets or sets a value indicating whether is disabled.",
          "type": "boolean"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "DeviceProfileName": "test",
        "DevicePlatformName": "test",
        "DevicePlatformId": 1,
        "IsDisabled": true,
        "id": 1
      }
    },
    "DevicesSearchResultsModel": {
      "description": "The devices search results model.",
      "type": "object",
      "properties": {
        "Devices": {
          "description": "Gets or sets the devices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevicesSearchResultModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the Devices count.",
          "type": "integer"
        }
      }
    },
    "DevicesSearchResultModel": {
      "description": "The Device Search Result Model.",
      "type": "object",
      "properties": {
        "FriendlyName": {
          "description": "Gets or sets the Friendly name.",
          "type": "string"
        },
        "OwnershipType": {
          "description": "Gets or sets the Device Ownership type.",
          "type": "string"
        },
        "DisplayModel": {
          "description": "Gets or sets the Device Display Model.",
          "type": "string"
        },
        "DeviceType": {
          "format": "int32",
          "description": "Gets or sets the Device Type.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            100,
            101,
            102,
            103,
            104,
            105,
            200
          ],
          "type": "integer"
        },
        "name": {
          "description": "Gets or sets the Name.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "FriendlyName": "test",
        "OwnershipType": "test",
        "DisplayModel": "test",
        "DeviceType": 0,
        "name": "test",
        "id": 1
      }
    },
    "InternalAppsSearchResultsModel": {
      "description": "The internal apps search results model.",
      "type": "object",
      "properties": {
        "InternalApps": {
          "description": "Gets or sets the Internal apps.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalAppsSearchResultModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the total count for internal apps.",
          "type": "integer"
        }
      }
    },
    "InternalAppsSearchResultModel": {
      "description": "The internal apps search result model.",
      "type": "object",
      "properties": {
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "ApplicationName": {
          "description": "Gets or sets the ApplicationName.",
          "type": "string"
        },
        "SmallIconBlobId": {
          "format": "int32",
          "description": "Gets or sets the Small Icon Blob id.",
          "type": "integer"
        },
        "MediumIconBlobId": {
          "format": "int32",
          "description": "Gets or sets the Medium icon blob id.",
          "type": "integer"
        },
        "LargeIconBlobId": {
          "format": "int32",
          "description": "Gets or sets the Large icon blob id.",
          "type": "integer"
        },
        "DeviceType": {
          "format": "int32",
          "description": "Gets or sets the Device type.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            100,
            101,
            102,
            103,
            104,
            105,
            200
          ],
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Description": "test",
        "ApplicationName": "test",
        "SmallIconBlobId": 1,
        "MediumIconBlobId": 1,
        "LargeIconBlobId": 1,
        "DeviceType": 0,
        "id": 1
      }
    },
    "PublicAppsSearchResultsModel": {
      "description": "The public apps search results model.",
      "type": "object",
      "properties": {
        "PublicApps": {
          "description": "Gets or sets the Public apps.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicAppsSearchResultModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the total count for Public apps.",
          "type": "integer"
        }
      }
    },
    "PublicAppsSearchResultModel": {
      "description": "The public apps search result model.",
      "type": "object",
      "properties": {
        "ApplicationUrl": {
          "description": "Gets or sets the application url.",
          "type": "string"
        },
        "ApplicationName": {
          "description": "Gets or sets the ApplicationName.",
          "type": "string"
        },
        "SmallIconBlobId": {
          "format": "int32",
          "description": "Gets or sets the Small Icon Blob id.",
          "type": "integer"
        },
        "MediumIconBlobId": {
          "format": "int32",
          "description": "Gets or sets the Medium icon blob id.",
          "type": "integer"
        },
        "LargeIconBlobId": {
          "format": "int32",
          "description": "Gets or sets the Large icon blob id.",
          "type": "integer"
        },
        "DeviceType": {
          "format": "int32",
          "description": "Gets or sets the Device type.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            100,
            101,
            102,
            103,
            104,
            105,
            200
          ],
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ApplicationUrl": "test",
        "ApplicationName": "test",
        "SmallIconBlobId": 1,
        "MediumIconBlobId": 1,
        "LargeIconBlobId": 1,
        "DeviceType": 0,
        "id": 1
      }
    },
    "PurchasedAppsSearchResultsModel": {
      "description": "The purchased apps search results model.",
      "type": "object",
      "properties": {
        "PurchasedApps": {
          "description": "Gets or sets the apps.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchasedAppsSearchResultModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the total count.",
          "type": "integer"
        }
      }
    },
    "PurchasedAppsSearchResultModel": {
      "description": "The purchased apps search result model.",
      "type": "object",
      "properties": {
        "BundleId": {
          "description": "Gets or sets the bundle id.",
          "type": "string"
        },
        "ApplicationUrl": {
          "description": "Gets or sets the application url.",
          "type": "string"
        },
        "LargeIconUrl": {
          "description": "Gets or sets the large icon url.",
          "type": "string"
        },
        "SmallIconUrl": {
          "description": "Gets or sets the small icon url.",
          "type": "string"
        },
        "ApplicationLicensePoolId": {
          "format": "int32",
          "description": "Gets or sets the ApplicationLicensePoolId.",
          "type": "integer"
        },
        "VppLicenseCountId": {
          "format": "int32",
          "description": "Gets or sets the VppLicenseCountId.",
          "type": "integer"
        },
        "ApplicationName": {
          "description": "Gets or sets the ApplicationName.",
          "type": "string"
        },
        "SmallIconBlobId": {
          "format": "int32",
          "description": "Gets or sets the Small Icon Blob id.",
          "type": "integer"
        },
        "MediumIconBlobId": {
          "format": "int32",
          "description": "Gets or sets the Medium icon blob id.",
          "type": "integer"
        },
        "LargeIconBlobId": {
          "format": "int32",
          "description": "Gets or sets the Large icon blob id.",
          "type": "integer"
        },
        "DeviceType": {
          "format": "int32",
          "description": "Gets or sets the Device type.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            100,
            101,
            102,
            103,
            104,
            105,
            200
          ],
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "BundleId": "test",
        "ApplicationUrl": "test",
        "LargeIconUrl": "test",
        "SmallIconUrl": "test",
        "ApplicationLicensePoolId": 1,
        "VppLicenseCountId": 1,
        "ApplicationName": "test",
        "SmallIconBlobId": 1,
        "MediumIconBlobId": 1,
        "LargeIconBlobId": 1,
        "DeviceType": 0,
        "id": 1
      }
    },
    "AdminSearchResultsModel": {
      "description": "The admin search results model.",
      "type": "object",
      "properties": {
        "Admins": {
          "description": "Gets or sets the admins search results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminSearchResultModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the total count.",
          "type": "integer"
        }
      }
    },
    "AdminSearchResultModel": {
      "description": "The admin search result model.",
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "Gets or sets the first name.",
          "type": "string"
        },
        "LastName": {
          "description": "Gets or sets the Last name.",
          "type": "string"
        },
        "Role": {
          "description": "Gets or sets the role name.",
          "type": "string"
        },
        "LocationGroup": {
          "description": "Gets or sets the organization group name.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "FirstName": "test",
        "LastName": "test",
        "Role": "test",
        "LocationGroup": "test",
        "id": 1
      }
    },
    "UsersSearchResultsModel": {
      "description": "The users search results model.",
      "type": "object",
      "properties": {
        "Users": {
          "description": "Gets or sets the admins search results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsersSearchResultModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the total count.",
          "type": "integer"
        }
      }
    },
    "UsersSearchResultModel": {
      "description": "The user search result model.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "UserName": {
          "description": "Gets or sets the username.",
          "type": "string"
        },
        "OrganizationGroupName": {
          "description": "Gets or sets the Organization Group name.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Name": "test",
        "UserName": "test",
        "OrganizationGroupName": "test",
        "id": 1
      }
    },
    "SettingsSearchResultsModel": {
      "description": "The settings search results model.",
      "type": "object",
      "properties": {
        "Settings": {
          "description": "Gets or sets the settings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SettingsSearchResultModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the total count.",
          "type": "integer"
        }
      }
    },
    "SettingsSearchResultModel": {
      "description": "The settings search result model.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "CategoryName": {
          "description": "Gets or sets the category name.",
          "type": "string"
        },
        "NavigationUrl": {
          "description": "Gets or sets the navigation url.",
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "CategoryName": "test",
        "NavigationUrl": "test"
      }
    },
    "ContentSearchResultsModel": {
      "description": "The content search results model.",
      "type": "object",
      "properties": {
        "content": {
          "description": "Gets or sets the content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContentSearchResultModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the content count.",
          "type": "integer"
        }
      }
    },
    "ContentSearchResultModel": {
      "description": "The content search result model.",
      "type": "object",
      "properties": {
        "ContentId": {
          "format": "int32",
          "description": "Gets or sets the content id.",
          "type": "integer"
        },
        "ContentTypeId": {
          "format": "int32",
          "description": "Gets or sets the content type id.",
          "type": "integer"
        },
        "ContentName": {
          "description": "Gets or sets the content name.",
          "type": "string"
        },
        "Version": {
          "description": "Gets or sets the version.",
          "type": "string"
        },
        "Size": {
          "format": "int32",
          "description": "Gets or sets the size.",
          "type": "integer"
        }
      },
      "example": {
        "ContentId": 1,
        "ContentTypeId": 1,
        "ContentName": "test",
        "Version": "test",
        "Size": 1
      }
    },
    "ControllerModel": {
      "description": "Model to define the Controller and its components like Description, custom attributes and end points",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets Name",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets Description",
          "type": "string"
        },
        "endpoints": {
          "description": "Gets or sets EndPoints",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndPointModel"
          }
        },
        "endpointsErrorCount": {
          "format": "int32",
          "description": "Gets or sets the total number of endpoint errors for a particular controller",
          "type": "integer"
        },
        "modified": {
          "description": "Gets or sets a value indicating whether the controller contains a new endpoint",
          "type": "boolean"
        },
        "isinternal": {
          "description": "Gets or sets a value indicating whether the controller is interal",
          "type": "boolean"
        },
        "totalNewEndpoints": {
          "format": "int32",
          "description": "Gets or sets the total number of new endpoints for a particular controller",
          "type": "integer"
        }
      },
      "example": {
        "name": "test",
        "description": "test",
        "endpoints": [
          {
            "isnew": true,
            "isinternal": true,
            "obsolete": "test",
            "routeTemplate": "test",
            "urisample": "test",
            "id": "test",
            "endpointname": "test",
            "description": "test",
            "method": "test",
            "relativePath": "test",
            "ResponseType": "test",
            "validationErrorCount": 1,
            "version": "test"
          }
        ],
        "endpointsErrorCount": 1,
        "modified": true,
        "isinternal": true,
        "totalNewEndpoints": 1
      }
    },
    "EndPointModel": {
      "description": "Class to define the endpoints",
      "type": "object",
      "properties": {
        "isnew": {
          "description": "Gets or sets a value indicating whether it is a new endpoint",
          "type": "boolean"
        },
        "isinternal": {
          "description": "Gets or sets a value indicating whether it is an internal endpoint",
          "type": "boolean"
        },
        "obsolete": {
          "description": "Gets or sets obsolete value if present",
          "type": "string"
        },
        "routeTemplate": {
          "description": "Gets or sets the routeTemplate",
          "type": "string"
        },
        "urisample": {
          "description": "Gets or sets urisample",
          "type": "string"
        },
        "id": {
          "description": "Gets or sets Id",
          "type": "string"
        },
        "endpointname": {
          "description": "Gets or sets Name",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets Description",
          "type": "string"
        },
        "method": {
          "description": "Gets or sets Method",
          "type": "string"
        },
        "relativePath": {
          "description": "Gets or sets RelativePath",
          "type": "string"
        },
        "ResponseType": {
          "description": "Gets or sets ResponseType",
          "type": "string"
        },
        "endPointDetails": {
          "$ref": "#/definitions/EndPointDetailsModel",
          "description": "Gets or sets EndPointDetails"
        },
        "validationResults": {
          "$ref": "#/definitions/EndpointValidationResult",
          "description": "Gets or sets validation results"
        },
        "validationErrorCount": {
          "format": "int32",
          "description": "Gets or sets validation error count",
          "type": "integer"
        },
        "version": {
          "description": "Gets or sets version of endpoint if it exists",
          "type": "string"
        }
      },
      "example": {
        "isnew": true,
        "isinternal": true,
        "obsolete": "test",
        "routeTemplate": "test",
        "urisample": "test",
        "id": "test",
        "endpointname": "test",
        "description": "test",
        "method": "test",
        "relativePath": "test",
        "ResponseType": "test",
        "validationErrorCount": 1,
        "version": "test"
      }
    },
    "EndPointDetailsModel": {
      "description": "Class to define the model for the endpoint",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "Gets or sets Parameters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterModel"
          }
        },
        "queryStringParameters": {
          "description": "Gets or sets QueryStringParams",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterModel"
          }
        },
        "resourceDescription": {
          "$ref": "#/definitions/ModelDescription",
          "description": "Gets or sets the {AW.WebApi.Common.Documentation.ModelDescriptions.ModelDescription} that describes the resource."
        },
        "sampleRequests": {
          "description": "Gets or sets the sample requests associated with the API.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "example": {}
          }
        },
        "sampleResponses": {
          "description": "Gets or sets  sample responses associated with the API.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "example": {}
          }
        },
        "sampleQueryString": {
          "description": "Gets or sets SampleQueryString",
          "type": "string"
        },
        "validationResults": {
          "$ref": "#/definitions/EndpointValidationResult",
          "description": "Gets or sets validation results"
        }
      },
      "example": {
        "sampleQueryString": "test"
      }
    },
    "EndpointValidationResult": {
      "description": "EndpointValidationResult class",
      "type": "object",
      "properties": {
        "isValid": {
          "description": "Gets or sets a value indicating whether IsValid",
          "type": "boolean"
        },
        "errors": {
          "description": "Gets or sets Errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointValidationError"
          }
        }
      },
      "example": {
        "isValid": true,
        "errors": [
          {
            "propertyName": "test",
            "errorMessage": "test"
          }
        ]
      }
    },
    "ParameterModel": {
      "description": "Class to define the parameters",
      "type": "object",
      "properties": {
        "paramName": {
          "description": "Gets or sets Name",
          "type": "string"
        },
        "paramType": {
          "description": "Gets or sets Type",
          "type": "string"
        },
        "paramDescription": {
          "description": "Gets or sets Description",
          "type": "string"
        },
        "paramSource": {
          "description": "Gets or sets Source",
          "type": "string"
        }
      }
    },
    "ModelDescription": {
      "description": "Describes a type model.",
      "type": "object",
      "properties": {
        "modelDocumentation": {
          "type": "string"
        },
        "modelType": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        }
      },
      "example": {
        "modelDocumentation": "test",
        "modelName": "test"
      }
    },
    "EndpointValidationError": {
      "description": "EndpointValidationError class",
      "type": "object",
      "properties": {
        "propertyName": {
          "description": "Gets or sets PropertyName",
          "type": "string"
        },
        "errorMessage": {
          "description": "Gets or sets ErrorMessage",
          "type": "string"
        }
      },
      "example": {
        "propertyName": "test",
        "errorMessage": "test"
      }
    },
    "EndpointIndexModel": {
      "description": "Endpoint Index Model",
      "type": "object",
      "properties": {
        "EndpointIndexId": {
          "description": "Gets or sets the endpoint index ID",
          "type": "string"
        },
        "EndpointIndexDetail": {
          "$ref": "#/definitions/EndpointIndexDetailModel",
          "description": "gets or sets the endpoint index details"
        }
      },
      "example": {
        "EndpointIndexId": "test"
      }
    },
    "EndpointIndexDetailModel": {
      "description": "Endpoint Index Detail Model",
      "type": "object",
      "properties": {
        "Title": {
          "description": "Gets or sets the title.",
          "type": "string"
        },
        "Tag": {
          "description": "Gets or sets the tag.",
          "type": "string"
        },
        "HttpMethod": {
          "description": "Gets or sets the httpMethod.",
          "type": "string"
        },
        "OperationId": {
          "description": "Gets or sets the operation ID.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        }
      },
      "example": {
        "Title": "test",
        "Tag": "test",
        "HttpMethod": "test",
        "OperationId": "test",
        "Description": "test"
      }
    },
    "HelpInfoV1Model": {
      "description": "Model class for Help.",
      "type": "object",
      "properties": {
        "majorVersion": {
          "format": "int32",
          "description": "Gets or sets the Major Version of Database.",
          "type": "integer"
        },
        "minorVersion": {
          "format": "int32",
          "description": "Gets or sets the Minor Version of Database.",
          "type": "integer"
        },
        "enableHelp": {
          "description": "Gets or sets the value for EnableHelp from System Code.",
          "type": "boolean"
        }
      },
      "example": {
        "majorVersion": 1,
        "minorVersion": 1,
        "enableHelp": true
      }
    },
    "ServiceDocument": {
      "type": "object",
      "properties": {
        "ProductName": {
          "type": "string"
        },
        "ProductCopyright": {
          "type": "string"
        },
        "ProductVersion": {
          "type": "string"
        },
        "Version": {
          "format": "int32",
          "type": "integer"
        },
        "Resources": {
          "$ref": "#/definitions/ServiceDocumentResources"
        }
      },
      "example": {
        "ProductName": "test",
        "ProductCopyright": "Copyright © AirWatch 2015",
        "ProductVersion": "9.2.0.0",
        "Version": 1,
        "Resources": {
          "Collections": [],
          "Workspaces": []
        }
      }
    },
    "ServiceDocumentResources": {
      "type": "object",
      "properties": {
        "Collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          }
        },
        "Workspaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          }
        }
      },
      "example": {
        "Collections": [],
        "Workspaces": []
      }
    },
    "ResourceReference": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "Location": "test"
      }
    },
    "ConsoleNotificationModel": {
      "description": "The Console Notification Model",
      "type": "object",
      "properties": {
        "organizationGroupId": {
          "description": "Gets or sets Organization Group Id",
          "type": "string"
        },
        "title": {
          "description": "Gets or sets title of the notification",
          "type": "string"
        },
        "notificationDate": {
          "description": "Gets or sets the Notification Date",
          "type": "string"
        },
        "messageType": {
          "description": "Gets or sets Message Type",
          "type": "string"
        },
        "messageCategory": {
          "description": "Gets or sets Message Category",
          "type": "string"
        },
        "resource": {
          "description": "Gets or sets the Resource",
          "type": "string"
        },
        "priority": {
          "description": "Gets or sets Priority",
          "type": "string"
        },
        "message": {
          "description": "Gets or sets the Message",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "organizationGroupId": "test",
        "title": "test",
        "notificationDate": "test",
        "messageType": "test",
        "messageCategory": "test",
        "resource": "test",
        "priority": "test",
        "message": "test",
        "id": 1
      }
    },
    "CreateNotificationModel": {
      "description": "Model class for creating notifications.",
      "type": "object",
      "properties": {
        "Priority": {
          "format": "int32",
          "description": "Gets or sets the notification priority (1 = low, 2 = medium, 3 = high, 4 = critical).",
          "type": "integer"
        },
        "CategoryId": {
          "format": "int32",
          "description": "Gets or sets the category id.",
          "type": "integer"
        },
        "Data": {
          "description": "Gets or sets the data property of notification.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "NotificationCountModel": {
      "description": "View model class for notifications.",
      "type": "object",
      "properties": {
        "Total": {
          "format": "int32",
          "description": "Gets or sets the total count of notification.",
          "type": "integer"
        },
        "Active": {
          "format": "int32",
          "description": "Gets or sets the active count of notification.",
          "type": "integer"
        },
        "Dismissed": {
          "format": "int32",
          "description": "Gets or sets the dismissed count of notification.",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Total": 1,
        "Active": 1,
        "Dismissed": 1,
        "id": 1
      }
    },
    "GetCustomAttributeResult": {
      "type": "object",
      "properties": {
        "CustomAttribute": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OgCustomAttribute"
          }
        }
      }
    },
    "OgCustomAttribute": {
      "type": "object",
      "properties": {
        "AttributeId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Application": {
          "type": "string"
        },
        "ManagedBy": {
          "type": "string"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "Values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeValue"
          }
        }
      }
    },
    "AttributeValue": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "string"
        }
      },
      "example": {
        "Value": "test"
      }
    },
    "MenuResourceListModel": {
      "description": "Model for Menu Resource list",
      "type": "object",
      "properties": {
        "ResultSet": {
          "description": "Gets or sets the list of Menu Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MenuResourceModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the Total Count",
          "type": "integer"
        }
      },
      "example": {
        "ResultSet": [
          {
            "ResourceName": "test",
            "CategoryName": "test",
            "Allow": true
          }
        ],
        "TotalCount": 1
      }
    },
    "MenuResourceModel": {
      "description": "Resource for Menu Items.",
      "type": "object",
      "properties": {
        "ResourceName": {
          "description": "Gets or sets the resource name",
          "type": "string"
        },
        "CategoryName": {
          "description": "Gets or sets the category name",
          "type": "string"
        },
        "Allow": {
          "description": "Gets or sets a value indicating whether has access on resource",
          "type": "boolean"
        }
      },
      "example": {
        "ResourceName": "test",
        "CategoryName": "test",
        "Allow": true
      }
    },
    "LocationGroup": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "GroupId": {
          "type": "string"
        },
        "LocationGroupType": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "Locale": {
          "type": "string"
        },
        "ParentLocationGroup": {
          "$ref": "#/definitions/EntityReference"
        },
        "AddDefaultLocation": {
          "type": "string"
        },
        "CreatedOn": {
          "type": "string"
        },
        "LgLevel": {
          "format": "int32",
          "type": "integer"
        },
        "Users": {
          "type": "string"
        },
        "Admins": {
          "type": "string"
        },
        "Devices": {
          "type": "string"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {
        "Name": "test",
        "GroupId": "test",
        "LocationGroupType": "test",
        "Country": "test",
        "Locale": "test",
        "AddDefaultLocation": "test",
        "CreatedOn": "test",
        "LgLevel": 1,
        "Users": "test",
        "Admins": "test",
        "Devices": "test"
      }
    },
    "EntityReference": {
      "type": "object",
      "properties": {
        "Id": {
          "$ref": "#/definitions/EntityId"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "LocationGroupSearchResult": {
      "type": "object",
      "properties": {
        "LocationGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationGroup"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeviceCountPerLocationGroupSearchResultModel": {
      "description": "It will contain the device count per location group.",
      "type": "object",
      "properties": {
        "LocationGroups": {
          "description": "Gets or sets the list of all the location groups retrieved as a part of result set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationGroupDeviceCountSummaryModel"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "LocationGroups": [
          {
            "LocationGroupId": 1,
            "LocationGroupName": "test",
            "TotalDevices": 1
          }
        ],
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "LocationGroupDeviceCountSummaryModel": {
      "description": "It will contain the device count for the location group.",
      "type": "object",
      "properties": {
        "LocationGroupId": {
          "format": "int32",
          "description": "Gets or sets Location Group Id.",
          "type": "integer"
        },
        "LocationGroupName": {
          "description": "Gets or sets Location Group Name.",
          "type": "string"
        },
        "TotalDevices": {
          "format": "int32",
          "description": "Gets or sets the Total device count for this Location Group.",
          "type": "integer"
        },
        "DeviceCountByEnrollmentStatus": {
          "$ref": "#/definitions/DeviceCountByEnrollmentStatusModel",
          "description": "Gets or sets the Device Count Breakup for this Location Group."
        }
      },
      "example": {
        "LocationGroupId": 1,
        "LocationGroupName": "test",
        "TotalDevices": 1
      }
    },
    "DeviceCountByEnrollmentStatusModel": {
      "description": "This will contain the device count in the LG according to their Enrollment Status.",
      "type": "object",
      "properties": {
        "Discovered": {
          "format": "int32",
          "description": "Gets or sets the Discovered device count for this Location Group.",
          "type": "integer"
        },
        "Registered": {
          "format": "int32",
          "description": "Gets or sets the Registered device count for this Location Group.",
          "type": "integer"
        },
        "EnrollmentInProgress": {
          "format": "int32",
          "description": "Gets or sets the EnrollmentInProgress device count for this Location Group.",
          "type": "integer"
        },
        "Enrolled": {
          "format": "int32",
          "description": "Gets or sets the Enrolled device count for this Location Group.",
          "type": "integer"
        },
        "EnterpriseWipePending": {
          "format": "int32",
          "description": "Gets or sets the EnterpriseWipe device count for this Location Group.",
          "type": "integer"
        },
        "DeviceWipePending": {
          "format": "int32",
          "description": "Gets or sets the EnterprisePending device count for this Location Group.",
          "type": "integer"
        },
        "Retired": {
          "format": "int32",
          "description": "Gets or sets the Retired device count for this Location Group.",
          "type": "integer"
        },
        "Unenrolled": {
          "format": "int32",
          "description": "Gets or sets the Unenrolled device count for this Location Group.",
          "type": "integer"
        },
        "AppCatalogOnly": {
          "format": "int32",
          "description": "Gets or sets the AppCatalogOnly device count for this Location Group.",
          "type": "integer"
        },
        "BlackListed": {
          "format": "int32",
          "description": "Gets or sets the BlackListed device count for this Location Group.",
          "type": "integer"
        },
        "PendingAgent": {
          "format": "int32",
          "description": "Gets or sets the PendingAgent device count for this Location Group.",
          "type": "integer"
        },
        "UnenrolledByFeedbackService": {
          "format": "int32",
          "description": "Gets or sets the UnenrolledByFeedbackService device count for this Location Group.",
          "type": "integer"
        }
      },
      "example": {
        "Discovered": 1,
        "Registered": 1,
        "EnrollmentInProgress": 1,
        "Enrolled": 1,
        "EnterpriseWipePending": 1,
        "DeviceWipePending": 1,
        "Retired": 1,
        "Unenrolled": 1,
        "AppCatalogOnly": 1,
        "BlackListed": 1,
        "PendingAgent": 1,
        "UnenrolledByFeedbackService": 1
      }
    },
    "DeviceSampleRates": {
      "type": "object",
      "properties": {
        "ID": {
          "format": "int32",
          "type": "integer"
        },
        "PlatformID": {
          "type": "string"
        },
        "Platform": {
          "type": "string"
        },
        "HeartbeatInterval": {
          "type": "string"
        },
        "DataSampleInterval": {
          "type": "string"
        },
        "DataTransmitInterval": {
          "type": "string"
        },
        "ProfileRefreshInterval": {
          "type": "string"
        },
        "GPSSampleInterval": {
          "type": "string"
        },
        "AgentPollingInterval": {
          "type": "string"
        },
        "BeaconInterval": {
          "type": "string"
        },
        "DeviceInformationSample": {
          "type": "string"
        },
        "ApplicationListSample": {
          "type": "string"
        },
        "CertificateListSample": {
          "type": "string"
        },
        "ProfileListSample": {
          "type": "string"
        },
        "ProvisioningProfileListSample": {
          "type": "string"
        },
        "RestrictionListSample": {
          "type": "string"
        },
        "SecurityInformationSample": {
          "type": "string"
        },
        "ManagedAppListSample": {
          "type": "string"
        },
        "CheckInInterval": {
          "type": "string"
        }
      },
      "example": {
        "ID": 1,
        "PlatformID": "test",
        "Platform": "test",
        "HeartbeatInterval": "test",
        "DataSampleInterval": "test",
        "DataTransmitInterval": "test",
        "ProfileRefreshInterval": "test",
        "GPSSampleInterval": "test",
        "AgentPollingInterval": "test",
        "BeaconInterval": "test",
        "DeviceInformationSample": "test",
        "ApplicationListSample": "test",
        "CertificateListSample": "test",
        "ProfileListSample": "test",
        "ProvisioningProfileListSample": "test",
        "RestrictionListSample": "test",
        "SecurityInformationSample": "test",
        "ManagedAppListSample": "test",
        "CheckInInterval": "test"
      }
    },
    "SetupStepsModel": {
      "description": "Model for environmental setup steps",
      "type": "object",
      "properties": {
        "ResultSet": {
          "description": "Gets or sets the result Set",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressWizardStepModel"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Gets or sets the Total Count",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ResultSet": [
          {
            "StepDefinition": 1,
            "StepId": 1,
            "Url": "test",
            "Name": "test",
            "StepStatus": "test",
            "id": 1
          }
        ],
        "TotalCount": 1,
        "id": 1
      }
    },
    "ExpressWizardStepModel": {
      "description": "Holds the information about Express setup steps",
      "type": "object",
      "properties": {
        "StepDefinition": {
          "format": "int32",
          "description": "Gets or sets decription of the step",
          "type": "integer"
        },
        "StepId": {
          "format": "int32",
          "description": "Gets or sets the step Id",
          "type": "integer"
        },
        "Url": {
          "description": "Gets or sets the step URL",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the step Name",
          "type": "string"
        },
        "StepStatus": {
          "description": "Gets or sets the step Status",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "StepDefinition": 1,
        "StepId": 1,
        "Url": "test",
        "Name": "test",
        "StepStatus": "test",
        "id": 1
      }
    },
    "QuestionnaireModel": {
      "description": "View Model for Environment Setup Questions",
      "type": "object",
      "properties": {
        "Title": {
          "description": "Gets or sets the Title",
          "type": "string"
        },
        "Questions": {
          "description": "Gets or sets the Questions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/YesOrNoQuestionModel"
          }
        },
        "Totalcount": {
          "format": "int32",
          "description": "Gets or sets the TotalCo",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "YesOrNoQuestionModel": {
      "description": "Model For Entity EnvironmentSetupQuestion",
      "type": "object",
      "properties": {
        "QuestionId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets QuestionId"
        },
        "Title": {
          "description": "Gets or sets Title",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets Description",
          "type": "string"
        },
        "Warning": {
          "description": "Gets or sets Warning",
          "type": "string"
        },
        "Answer": {
          "description": "Gets or sets Answer",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "EntityKey": {
      "type": "object",
      "properties": {
        "_value": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Value": 1
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Status": {
          "type": "boolean"
        },
        "Email": {
          "type": "string"
        },
        "SecurityType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "ContactNumber": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "MobileNumber": {
          "type": "string"
        },
        "MessageType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            -1
          ],
          "type": "integer"
        },
        "EmailUserName": {
          "type": "string"
        },
        "Group": {
          "type": "string"
        },
        "LocationGroupId": {
          "type": "string"
        },
        "Role": {
          "type": "string"
        },
        "EnrolledDevicesCount": {
          "type": "string"
        },
        "MessageTemplateId": {
          "type": "string"
        },
        "CustomAttribute1": {
          "type": "string"
        },
        "CustomAttribute2": {
          "type": "string"
        },
        "CustomAttribute3": {
          "type": "string"
        },
        "CustomAttribute4": {
          "type": "string"
        },
        "CustomAttribute5": {
          "type": "string"
        },
        "ExternalId": {
          "type": "string"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      }
    },
    "AdminUserCertificateModel": {
      "description": "Admin certificate model.",
      "type": "object",
      "properties": {
        "Password": {
          "description": "Gets or sets certificate password.",
          "type": "string"
        }
      },
      "example": {
        "Password": "test"
      }
    },
    "ProvisioningResponseModel": {
      "description": "Provisioning Response Model.",
      "type": "object",
      "properties": {
        "EnrollmentUserApiKey": {
          "description": "Gets or sets Enrollment User API Key",
          "type": "string"
        },
        "AdminUserApiKey": {
          "description": "Gets or sets Admin User API Key",
          "type": "string"
        },
        "ActivationCode": {
          "description": "Gets or sets Activation Code (Group Id)",
          "type": "string"
        },
        "CmsCertificate": {
          "description": "Gets or sets Admin CMS Certificate",
          "type": "string"
        }
      },
      "example": {
        "EnrollmentUserApiKey": "test",
        "AdminUserApiKey": "test",
        "ActivationCode": "test",
        "CmsCertificate": "test"
      }
    },
    "SchedulerJobStatsModel": {
      "description": "Scheduler JOB execution stats.",
      "type": "object",
      "properties": {
        "Total": {
          "format": "int32",
          "description": "Gets or sets Total number of Scheduler Execution jobs.",
          "type": "integer"
        },
        "SchedulerJobs": {
          "description": "Gets or sets Scheduler Jobs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchedulerJobDetailsModel"
          }
        }
      }
    },
    "SchedulerJobDetailsModel": {
      "description": "Scheduler Job execution details.",
      "type": "object",
      "properties": {
        "JobName": {
          "description": "Gets or sets Job Name",
          "type": "string"
        },
        "TriggerName": {
          "description": "Gets or sets trigger name",
          "type": "string"
        },
        "Frequency": {
          "description": "Gets or sets Job Frequency",
          "type": "string"
        },
        "IsActive": {
          "description": "Gets or sets a value indicating whether the Job is active or not.",
          "type": "boolean"
        },
        "LastStartTime": {
          "format": "date-time",
          "description": "Gets or sets start time of last succesfull trigger.",
          "type": "string"
        },
        "LastSuccessfulCompletion": {
          "format": "date-time",
          "description": "Gets or sets completion time of last succesfull trigger.",
          "type": "string"
        },
        "NumberOfTimesRun": {
          "format": "int32",
          "description": "Gets or sets the total number",
          "type": "integer"
        },
        "JobState": {
          "description": "Gets or sets the Job State",
          "type": "string"
        }
      }
    },
    "SchedulerTriggerEditModel": {
      "description": "Scheduler Job execution details.",
      "type": "object",
      "properties": {
        "LocationGroupId": {
          "format": "int32",
          "description": "Gets or sets Job Type",
          "type": "integer"
        },
        "TriggerName": {
          "description": "Gets or sets trigger name",
          "type": "string"
        },
        "TriggerGroup": {
          "description": "Gets or sets trigger group",
          "type": "string"
        },
        "SchedulerGroup": {
          "description": "Gets or sets scheduler group",
          "type": "string"
        },
        "ScheduleType": {
          "format": "int32",
          "description": "Gets or sets Schedule Type",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "IsDayOfWeek": {
          "description": "Gets or sets day of week schdule is set.",
          "type": "object",
          "properties": {
            "None": {
              "type": "boolean"
            },
            "Sunday": {
              "type": "boolean"
            },
            "Monday": {
              "type": "boolean"
            },
            "Tuesday": {
              "type": "boolean"
            },
            "Wednesday": {
              "type": "boolean"
            },
            "Thursday": {
              "type": "boolean"
            },
            "Friday": {
              "type": "boolean"
            },
            "Saturday": {
              "type": "boolean"
            },
            "All": {
              "type": "boolean"
            }
          }
        },
        "DayOfMonth": {
          "format": "int32",
          "description": "Gets or sets day of month schdule is set.",
          "type": "integer"
        },
        "RecurrenceFrequency": {
          "format": "int32",
          "description": "Gets or sets Recurrence Frequency.",
          "type": "integer"
        },
        "IntervalType": {
          "format": "int32",
          "description": "Gets or sets Interval Type.",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "HasNoEndDate": {
          "description": "Gets or sets a value indicating if the job has an end time",
          "type": "boolean"
        },
        "CronExpression": {
          "description": "Gets or sets Cron Expression.",
          "type": "string"
        },
        "IsWeekdaysOnly": {
          "description": "Gets or sets a value indicating if Is week days only",
          "type": "boolean"
        },
        "IsEndOfMonth": {
          "description": "Gets or sets a value indicating if Is end of month only",
          "type": "boolean"
        },
        "StartDateTime": {
          "format": "date-time",
          "description": "Gets or sets start date time",
          "type": "string"
        },
        "EndDateTime": {
          "format": "date-time",
          "description": "Gets or sets end date time",
          "type": "string"
        },
        "Active": {
          "description": "Gets or sets a value indicating if is active",
          "type": "boolean"
        },
        "JobGroup": {
          "description": "Gets or sets job group",
          "type": "string"
        },
        "JobId": {
          "description": "Gets or sets Job id",
          "type": "string"
        },
        "JobType": {
          "format": "int32",
          "description": "Gets or sets Job Type",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            44,
            45,
            46,
            47,
            48,
            49,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62
          ],
          "type": "integer"
        }
      }
    },
    "PinnedHostModel": {
      "description": "In a pinned relationship between a host name and a certificate, represents the host name",
      "required": [
        "HostName"
      ],
      "type": "object",
      "properties": {
        "HostName": {
          "description": "The host name of the pinned relationship",
          "type": "string"
        },
        "IsDeviceServices": {
          "description": "Specifies whether this host is a device services host",
          "type": "boolean"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "description": "The organization group that this host should be pinned at",
          "type": "integer"
        },
        "Required": {
          "description": "If required, child LGs cannot disable pins with this host",
          "type": "boolean"
        }
      },
      "example": {
        "HostName": "test",
        "IsDeviceServices": true,
        "OrganizationGroupId": 1,
        "Required": true
      }
    },
    "CertificatePinningHostEntity": {
      "type": "object",
      "properties": {
        "CertPinningGuid": {
          "format": "uuid",
          "type": "string"
        },
        "LocationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "HostName": {
          "type": "string"
        },
        "Required": {
          "type": "boolean"
        },
        "IsDeviceServices": {
          "type": "boolean"
        },
        "AutoDiscoverySynced": {
          "type": "boolean"
        },
        "PinnedCerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificatePinningCertEntity"
          }
        }
      }
    },
    "CertificatePinningCertEntity": {
      "type": "object",
      "properties": {
        "CertificateId": {
          "format": "int32",
          "type": "integer"
        },
        "PublicKey": {
          "type": "string"
        },
        "IsEnabled": {
          "type": "boolean"
        },
        "IssuerName": {
          "type": "string"
        },
        "SubjectName": {
          "type": "string"
        },
        "NotAfter": {
          "format": "date-time",
          "type": "string"
        },
        "NotBefore": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PinnedCertificateModel": {
      "description": "Models a certificate's pinned relationship to a host",
      "type": "object",
      "properties": {
        "HostGuid": {
          "format": "uuid",
          "description": "The Guid of the Pinned Host to pin to",
          "type": "string"
        },
        "Certificate": {
          "description": "The base64-encoded certificate",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "HostGuid": "564df503-cf9f-41d0-9c68-98a1d08e9376",
        "Certificate": "test",
        "id": 1
      }
    },
    "PinnedCertificateQueryModel": {
      "description": "Models a pinned relationship's query by thumbprint",
      "required": [
        "HostGuid",
        "CertificateThumbprint"
      ],
      "type": "object",
      "properties": {
        "HostGuid": {
          "format": "uuid",
          "description": "The Guid of the Pinned Host to pin to",
          "type": "string"
        },
        "CertificateThumbprint": {
          "description": "The thumbprint of the certificate",
          "type": "string"
        }
      },
      "example": {
        "HostGuid": "2f8fb5d4-1ae0-4ee0-98d3-fe3e73b4c1b6",
        "CertificateThumbprint": "test"
      }
    },
    "OperationStatusModel": {
      "description": "Describes the basic results",
      "type": "object",
      "properties": {
        "ItemsAffected": {
          "format": "int32",
          "description": "The number of items affected by this operation",
          "type": "integer"
        },
        "Message": {
          "description": "Message about the operation, error message if failure",
          "type": "string"
        }
      },
      "example": {
        "ItemsAffected": 1,
        "Message": "test"
      }
    },
    "AuthenticationEntity": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "GroupCode": {
          "type": "string"
        }
      },
      "example": {
        "UserName": "test",
        "Password": "test",
        "GroupCode": "test"
      }
    },
    "AuthenticationResult": {
      "type": "object",
      "properties": {
        "UserId": {
          "format": "int32",
          "type": "integer"
        },
        "APIKey": {
          "type": "string"
        },
        "BatteryStatusIndicator": {
          "type": "boolean"
        },
        "SetClock": {
          "type": "boolean"
        }
      },
      "example": {
        "UserId": 1,
        "APIKey": "test",
        "BatteryStatusIndicator": true,
        "SetClock": true
      }
    },
    "SystemCodeModel": {
      "description": "System code model",
      "required": [
        "CategoryId",
        "CodeName",
        "LocationGroupId",
        "OverrideValue"
      ],
      "type": "object",
      "properties": {
        "CategoryId": {
          "description": "Category of System Code",
          "type": "string"
        },
        "CodeName": {
          "description": "System code this override is for",
          "type": "string"
        },
        "LocationGroupId": {
          "description": "OG this override exists in",
          "type": "string"
        },
        "OverrideValue": {
          "description": "Actual value of the override",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "CategoryId": "test",
        "CodeName": "test",
        "LocationGroupId": "test",
        "OverrideValue": "test",
        "id": 1
      }
    },
    "SystemCodeCategoryOverrideEntity": {
      "type": "object",
      "properties": {
        "<Category>k__BackingField": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            5,
            6,
            7,
            8,
            9,
            10,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            20,
            21,
            22,
            23,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            29,
            30,
            31,
            32,
            33,
            35,
            36,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            84,
            85,
            86,
            88,
            89,
            91,
            96,
            97,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            142,
            143,
            144,
            145,
            146,
            146,
            147,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            157,
            158,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            170,
            171,
            172,
            173,
            174,
            176,
            177,
            178,
            179,
            183,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            195,
            196,
            197,
            198,
            201,
            202,
            203,
            205,
            206,
            208,
            209,
            210,
            211,
            212,
            214,
            215,
            216,
            217,
            218,
            219,
            220,
            221,
            222,
            223,
            224,
            225,
            226,
            227,
            228,
            229,
            300,
            301,
            302,
            304,
            305,
            306,
            307,
            308,
            309,
            310,
            320,
            321,
            322,
            323,
            324,
            326,
            327,
            328,
            329,
            330,
            331,
            332,
            335,
            336,
            337,
            338,
            339,
            340,
            341,
            342,
            343,
            344,
            345,
            346,
            347,
            349,
            350,
            351,
            352,
            353,
            354,
            355,
            356,
            357,
            358,
            359,
            360,
            361,
            362,
            363,
            364,
            366,
            367,
            368,
            369,
            370,
            371,
            372,
            373,
            374,
            375,
            376,
            377,
            378,
            379,
            380,
            381,
            400,
            401,
            402,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            1000,
            1001,
            1002,
            1003,
            1005,
            1006
          ],
          "type": "integer"
        },
        "<OrganizationGroupId>k__BackingField": {
          "format": "int32",
          "type": "integer"
        },
        "<Settings>k__BackingField": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SystemCodeOverrideEntity"
          }
        }
      }
    },
    "SystemCodeOverrideEntity": {
      "type": "object",
      "properties": {
        "<CategoryId>k__BackingField": {
          "type": "string"
        },
        "<CodeName>k__BackingField": {
          "type": "string"
        },
        "<LocationGroupId>k__BackingField": {
          "type": "string"
        },
        "<OverrideValue>k__BackingField": {
          "type": "string"
        }
      },
      "example": {
        "CategoryId": "test",
        "CodeName": "test",
        "LocationGroupId": "test",
        "OverrideValue": "test"
      }
    },
    "TagSearchResult": {
      "type": "object",
      "properties": {
        "OGId": {
          "$ref": "#/definitions/EntityReference"
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "TagAvatar": {
          "type": "string"
        },
        "TagName": {
          "type": "string"
        },
        "TagType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "LocationGroupId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Id": 1,
        "TagAvatar": "test",
        "TagName": "test",
        "TagType": 0,
        "LocationGroupId": 1
      }
    },
    "UserModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "objectIdentifier": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "emailUserName": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "distinguishedName": {
          "type": "string"
        },
        "userPrincipalName": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "lockoutTime": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "employeeId": {
          "type": "string"
        },
        "costCenter": {
          "type": "string"
        },
        "managerDistinguishedName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "customAttribute1": {
          "type": "string"
        },
        "customAttribute2": {
          "type": "string"
        },
        "customAttribute3": {
          "type": "string"
        },
        "customAttribute4": {
          "type": "string"
        },
        "customAttribute5": {
          "type": "string"
        },
        "memberOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MemberOf"
          }
        }
      },
      "example": {
        "userId": "test",
        "objectIdentifier": "test",
        "userName": "test",
        "fullName": "test",
        "displayName": "test",
        "firstName": "test",
        "middleName": "test",
        "lastName": "test",
        "emailAddress": "test",
        "emailUserName": "test",
        "mobilePhone": "test",
        "phoneNumber": "test",
        "distinguishedName": "test",
        "userPrincipalName": "test",
        "department": "test",
        "status": "test",
        "lockoutTime": "test",
        "lastModified": "test",
        "employeeId": "test",
        "costCenter": "test",
        "managerDistinguishedName": "test",
        "domain": "test",
        "customAttribute1": "test",
        "customAttribute2": "test",
        "customAttribute3": "test",
        "customAttribute4": "test",
        "customAttribute5": "test",
        "memberOf": [
          {
            "externalId": "test",
            "distinguishedName": "test"
          }
        ]
      }
    },
    "MemberOf": {
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        },
        "distinguishedName": {
          "type": "string"
        }
      },
      "example": {
        "externalId": "test",
        "distinguishedName": "test"
      }
    },
    "UserSearchResult": {
      "type": "object",
      "properties": {
        "Users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SMIMECertificate": {
      "type": "object",
      "properties": {
        "Encryption": {
          "$ref": "#/definitions/Certificate"
        },
        "Signing": {
          "$ref": "#/definitions/Certificate"
        },
        "Archived": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Certificate"
          }
        }
      }
    },
    "Certificate": {
      "type": "object",
      "properties": {
        "CertificatePayload": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      },
      "example": {
        "CertificatePayload": "test",
        "Password": "test"
      }
    },
    "UserResourcesDetails": {
      "type": "object",
      "properties": {
        "PublicApplicationDetails": {
          "$ref": "#/definitions/PublicAppDetails"
        }
      },
      "example": {}
    },
    "PublicAppDetails": {
      "type": "object",
      "properties": {
        "PublicApplications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicAppDetailsEntity"
          }
        },
        "PublicApplicationsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PublicAppDetailsEntity": {
      "type": "object",
      "properties": {
        "Id": {
          "$ref": "#/definitions/EntityKey"
        },
        "bundleId": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "bundleId": "test",
        "Name": "test"
      }
    },
    "UserGroup": {
      "type": "object",
      "properties": {
        "GroupName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ManagedByOrganizationGroupID": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {
        "GroupName": "test",
        "Description": "test",
        "ManagedByOrganizationGroupID": 1
      }
    },
    "UserGroupUsers": {
      "type": "object",
      "properties": {
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        },
        "EnrollmentUser": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnrollmentUserDetail"
          }
        }
      },
      "example": {
        "Page": 1,
        "PageSize": 1,
        "Total": 1,
        "EnrollmentUser": [
          {
            "UserName": "test",
            "FirstName": "test",
            "LastName": "test",
            "SecurityType": 0,
            "OrganizationGroup": 1
          }
        ]
      }
    },
    "EnrollmentUserDetail": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "SecurityType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "OrganizationGroup": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "UserName": "test",
        "FirstName": "test",
        "LastName": "test",
        "SecurityType": 0,
        "OrganizationGroup": 1
      }
    },
    "UserGroups": {
      "type": "object",
      "properties": {
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        },
        "UserGroup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroupSearchDetail"
          }
        }
      },
      "example": {
        "Page": 1,
        "PageSize": 1,
        "Total": 1,
        "UserGroup": [
          {
            "UserGroupId": 1,
            "UserGroupName": "test",
            "OrganizationGroup": "test",
            "UserCount": 1
          }
        ]
      }
    },
    "UserGroupSearchDetail": {
      "type": "object",
      "properties": {
        "UserGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "UserGroupName": {
          "type": "string"
        },
        "OrganizationGroup": {
          "type": "string"
        },
        "UserCount": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "UserGroupId": 1,
        "UserGroupName": "test",
        "OrganizationGroup": "test",
        "UserCount": 1
      }
    },
    "UserGroupSearchResultModel": {
      "description": "Representation of UserGroupPagedSearchResultModel",
      "type": "object",
      "properties": {
        "ResultSet": {
          "description": "Gets or sets ResultSet\r\nArray of returned account policy search results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroupModel"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UserGroupModel": {
      "description": "Model to represent User Group",
      "type": "object",
      "properties": {
        "groupName": {
          "description": "Gets or sets Group Friendly Name",
          "type": "string"
        },
        "type": {
          "description": "Gets or sets User Group Type",
          "type": "string"
        },
        "lastSyncOn": {
          "description": "Gets or sets Last Sync Datetime",
          "type": "string"
        },
        "rootLocationGroupName": {
          "description": "Gets or sets Root Location Group Name",
          "type": "string"
        },
        "syncStatus": {
          "description": "Gets or sets User Group Sync Status",
          "type": "string"
        },
        "mergeStatus": {
          "description": "Gets or sets User Group Merge Status",
          "type": "string"
        },
        "users": {
          "format": "int32",
          "description": "Gets or sets Total Members of the User Group",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "groupName": "test",
        "type": "test",
        "lastSyncOn": "test",
        "rootLocationGroupName": "test",
        "syncStatus": "test",
        "mergeStatus": "test",
        "users": 1,
        "id": 1
      }
    },
    "HarmonyResourceModel": {
      "description": "Response model of the assigned resources to user group",
      "type": "object",
      "properties": {
        "PublicApplicationDetails": {
          "$ref": "#/definitions/PublicApplicationListModel",
          "description": "List of Public app details"
        },
        "PublicApplicationsCount": {
          "format": "int32",
          "description": "List of Public app list count",
          "type": "integer"
        }
      },
      "example": {
        "PublicApplicationsCount": 1
      }
    },
    "PublicApplicationListModel": {
      "description": "Response model of list of public applications",
      "type": "object",
      "properties": {
        "PublicApplications": {
          "description": "Public Application details list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicApplicationModel"
          }
        }
      }
    },
    "PublicApplicationModel": {
      "description": "The response model of the Public Application",
      "type": "object",
      "properties": {
        "Id": {
          "$ref": "#/definitions/EntityKey",
          "description": "Application Id"
        },
        "BundleId": {
          "description": "Application Bundle Id",
          "type": "string"
        },
        "Name": {
          "description": "Application Name",
          "type": "string"
        }
      },
      "example": {
        "BundleId": "test",
        "Name": "test"
      }
    },
    "AuthenticationRequestModel": {
      "description": "Data model for and authentication request",
      "type": "object",
      "properties": {
        "Username": {
          "description": "Gets or sets user name",
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets password",
          "type": "string"
        },
        "GroupId": {
          "description": "Gets or sets group ID",
          "type": "string"
        }
      },
      "example": {
        "Username": "test",
        "Password": "test",
        "GroupId": "test"
      }
    }
  }
}