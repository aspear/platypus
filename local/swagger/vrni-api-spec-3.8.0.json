{
  "swagger": "2.0",
  "info": {
    "description": "vRealize Network Insight API Reference",
    "version": "1.1.0",
    "title": "vRealize Network Insight API Reference"
  },
  "host": "vrni.example.com",
  "basePath": "/api/ni",
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication APIs"
    },
    {
      "name": "Data Sources",
      "description": "Data source APIs"
    },
    {
      "name": "Entities",
      "description": "Entities APIs"
    },
    {
      "name": "Search",
      "description": "Search APIs"
    },
    {
      "name": "Infrastructure",
      "description": "Infra APIs"
    },
    {
      "name": "Applications",
      "description": "Applications APIs"
    },
    {
      "name": "Microsegmentation",
      "description": "Micro-segmentation APIs"
    },
    {
      "name": "Info",
      "description": "Info APIs"
    },
    {
      "name": "Settings",
      "description": "Settings APIs"
    },
    {
      "name": "Schema",
      "description": "Schema APIs"
    },
    {
      "name": "Metrics",
      "description": "Metrics APIs"
    }
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "description": "API Key - NetworkInsight {token}",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "produces": [
    "application/json"
  ],
  "parameters": {
    "Identifier": {
      "name": "id",
      "in": "path",
      "description": "entity id",
      "required": true,
      "type": "string"
    },
    "Time": {
      "name": "time",
      "in": "query",
      "description": "time in epoch seconds",
      "required": false,
      "type": "integer",
      "format": "int64"
    },
    "Size": {
      "name": "size",
      "in": "query",
      "description": "page size of results",
      "required": false,
      "type": "number",
      "default": 10
    },
    "Cursor": {
      "name": "cursor",
      "in": "query",
      "description": "cursor from previous response",
      "required": false,
      "type": "string"
    },
    "StartTime": {
      "name": "start_time",
      "in": "query",
      "description": "start time for query in epoch seconds",
      "required": false,
      "type": "number"
    },
    "EndTime": {
      "name": "end_time",
      "in": "query",
      "description": "end time for query in epoch seconds",
      "required": false,
      "type": "number"
    }
  },
  "paths": {
    "/auth/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Create an auth token",
        "description": "<html><body> vRealize Network Insight supports token based authentication.Tokens are non-modifiable identifiers returned by the system when the user has successfully authenticated using valid credentials. Token expires after expiry time returned in the response. All API requests must provide the auth token in Authorization header in following format.<br> Authorization &#58; NetworkInsight {token} <br> If a token is invalid or expired, 401-Unauthorized error gets returned in the response of the API request. </body></html>",
        "operationId": "create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User Credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredential"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Token"
            },
            "examples": {
              "token": "1rT7tm4riiACSfxrO2BvkA==",
              "expiry": 1509332642427
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Delete an auth token.",
        "description": "Deletes the auth token provided in Authorization header.\nDeleting an expired or invalid token will result in 401 Unauthorized error.",
        "operationId": "delete",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/infra/nodes": {
      "get": {
        "tags": [
          "Infrastructure"
        ],
        "summary": "List nodes",
        "description": "Get list of infrastructure nodes. Only admin users can retrieve this information.",
        "operationId": "listNodes",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NodeListResult"
            },
            "examples": {
              "results": [
                {
                  "id": "18230:901:1585583463",
                  "entity_type": "NODE"
                },
                {
                  "id": "18230:901:1706494033",
                  "entity_type": "NODE"
                }
              ],
              "total_count": 2
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/infra/nodes/{id}": {
      "get": {
        "tags": [
          "Infrastructure"
        ],
        "summary": "Show node details",
        "description": "Get details of infrastructure nodes. Only admin users can get this information. The proxy id is\nrequired for adding a data source for selecting appropriate proxy node to add the data source.",
        "operationId": "getNode",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Node"
            },
            "examples": {
              "id": "18230:901:1585583463",
              "entity_type": "NODE",
              "node_type": "PROXY_VM",
              "node_id": "IOYHU2J",
              "ip_address": "10.126.103.156"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/info/version": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Show version info",
        "description": "Show version info",
        "operationId": "getVersion",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/data-sources/vcenters": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create a vCenter data source",
        "description": "Add a vcenter data source. User must provide one of ip or fqdn field in the request body.\nAppropriate proxy id is retrieved from infra/nodes URL to select the proxy node.",
        "operationId": "addVcenterDatasource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "VCenter Credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VCenterDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VCenterDataSource"
            },
            "examples": {
              "entity_id": "18230:902:993642895",
              "entity_type": "VCenterDataSource",
              "ip": "10.197.17.68",
              "fqdn": null,
              "proxy_id": "18230:901:1585583463",
              "nickname": "aa",
              "enabled": true,
              "notes": "ecmp lab aa",
              "credentials": {
                "username": "administrator@vsphere.local",
                "password": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List vCenter data sources",
        "description": "List vCenter data sources",
        "operationId": "listVcenters",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:902:993642895",
                  "entity_type": "VCenterDataSource"
                },
                {
                  "entity_id": "18230:902:627340998",
                  "entity_type": "VCenterDataSource"
                }
              ],
              "total_count": 2
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/vcenters/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show vCenter data source details",
        "description": "Show vCenter data source details",
        "operationId": "getVcenter",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VCenterDataSource"
            },
            "examples": {
              "entity_id": "18230:902:993642895",
              "entity_type": "VCenterDataSource",
              "ip": "10.197.17.68",
              "fqdn": null,
              "proxy_id": "18230:901:1585583463",
              "nickname": "aa",
              "enabled": true,
              "notes": "ecmp lab",
              "credentials": {
                "username": "administrator@vsphere.local",
                "password": ""
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update a vCenter data source.",
        "description": "Update a vcenter data source. Only nickname, notes and credentials can be updated.",
        "operationId": "updateVcenter",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VCenterDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VCenterDataSource"
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete a vCenter data source",
        "description": "Delete a data source",
        "operationId": "deleteVcenter",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/vcenters/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable a vCenter data source",
        "description": "Enable a vCenter data source",
        "operationId": "enableVcenter",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/vcenters/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable a vCenter data source",
        "description": "Disable a vCenter data source",
        "operationId": "disableVcenter",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/cisco-switches": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create a cisco switch data source",
        "description": "Add cisco switch as data source. User must provide one of ip or fqdn field in the request body.\nAppropriate proxy id is retrieved from infra/nodes URL to select the proxy node.",
        "operationId": "addCiscoSwitch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add a cisco switch as datasource.",
            "schema": {
              "$ref": "#/definitions/CiscoSwitchDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CiscoSwitchDataSource"
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List cisco switch data sources",
        "description": "List cisco switch data sources",
        "operationId": "listCiscoSwitches",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/cisco-switches/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show cisco switch data source details",
        "description": "Show cisco switch data source details",
        "operationId": "getCiscoSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CiscoSwitchDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update a cisco switch data source",
        "description": "Update a cisco switch data source. Only credentials, nickname and notes can be updated.",
        "operationId": "updateCiscoSwitch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CiscoSwitchDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CiscoSwitchDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete a cisco switch data source",
        "description": "Delete a cisco switch data source",
        "operationId": "deleteCiscoSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/cisco-switches/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable a cisco switch data source",
        "description": "Enable a cisco switch data source",
        "operationId": "enableCiscoSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/cisco-switches/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable a cisco switch data source",
        "description": "Disable a cisco switch data source",
        "operationId": "disableCiscoSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/cisco-switches/{id}/snmp-config": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show snmp config for cisco switch data source",
        "description": "Show snmp config for cisco switch data source",
        "operationId": "getCiscoSwitchSnmpConfig",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update snmp config for cisco switch data source",
        "description": "Update snmp config for cisco switch data source",
        "operationId": "updateCiscoSwitchSnmpConfig",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/dell-switches": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create a dell switch data source",
        "description": "Add a dell switch as data source",
        "operationId": "addDellSwitch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DellSwitchDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/DellSwitchDataSource"
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List dell switch data sources",
        "description": "List dell switch data sources",
        "operationId": "listDellSwitches",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:902:993642895",
                  "entity_type": "DellSwitchDataSource"
                }
              ],
              "total_count": 1
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/dell-switches/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show dell switch data source details",
        "description": "Get a dell switch data source details",
        "operationId": "getDellSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DellSwitchDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update a dell switch data source",
        "description": "Update a dell switch data source. Only credentials, nickname and notes can be updated",
        "operationId": "updateDellSwitch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DellSwitchDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DellSwitchDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete a dell switch data source",
        "description": "Delete a data source",
        "operationId": "deleteDellSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/dell-switches/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable a dell switch data source",
        "description": "Enable a dell switch data source",
        "operationId": "enableDellSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/dell-switches/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable a dell switch data source",
        "description": "Disable a dell switch data source",
        "operationId": "disableDellSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/dell-switches/{id}/snmp-config": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show snmp config for dell switch data source",
        "description": "Show snmp config for dell switch data source",
        "operationId": "getDellSwitchSnmpConfig",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update snmp config for dell switch data source",
        "description": "Update snmp config for dell switch data source",
        "operationId": "updateDellSwitchSnmpConfig",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/brocade-switches": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create a brocade switch data source",
        "description": "Add brocade switch as a data source",
        "operationId": "addBrocadeSwitch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BrocadeSwitchDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/BrocadeSwitchDataSource"
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List brocade switch data sources",
        "description": "List brocade switch data sources",
        "operationId": "listBrocadeSwitches",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:908:993642895",
                  "entity_type": "BrocadeSwitchDataSource"
                }
              ],
              "total_count": 1
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/brocade-switches/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show brocade switch data source details",
        "description": "Show brocade switch data source details",
        "operationId": "getBrocadeSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrocadeSwitchDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update a brocade switch data source",
        "description": "Update a brocade switch data source. Only credentials, nickname and notes can be updated.",
        "operationId": "updateBrocadeSwitch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BrocadeSwitchDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrocadeSwitchDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete a brocade switch data source",
        "description": "Delete a brocade switch data source",
        "operationId": "deleteBrocadeSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/brocade-switches/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable a brocade switch data source",
        "operationId": "enableBrocadeSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/brocade-switches/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable a brocade switch data source",
        "operationId": "disableBrocadeSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/brocade-switches/{id}/snmp-config": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show snmp config for brocade switch data source",
        "description": "Show snmp config for brocade switch data source",
        "operationId": "getBrocadeSwitchSnmpConfig",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update snmp config for brocade switch data source",
        "description": "Update snmp config for brocade switch data source",
        "operationId": "updateBrocadeSwitchSnmpConfig",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/juniper-switches": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Add a juniper switch as data source",
        "description": "Add switch Datasource",
        "operationId": "addJuniperSwitch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add a cisco switch as datasource",
            "schema": {
              "$ref": "#/definitions/JuniperSwitchDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/JuniperSwitchDataSource"
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List juniper switch data sources",
        "description": "List juniper switch data sources",
        "operationId": "listJuniperSwitches",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:909:993642895",
                  "entity_type": "JuniperSwitchDataSource"
                }
              ],
              "total_count": 1
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/juniper-switches/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show juniper switch data source details",
        "description": "Show juniper switch data source details",
        "operationId": "getJuniperSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JuniperSwitchDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update a juniper switch data source",
        "description": "Update a juniper switch data source",
        "operationId": "updateJuniperSwitch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/JuniperSwitchDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JuniperSwitchDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete a juniper switch data source",
        "description": "Delete a juniper switch data source",
        "operationId": "deleteJuniperSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/juniper-switches/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable a juniper switch data source",
        "description": "Enable a juniper switch data source",
        "operationId": "enableJuniperSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/juniper-switches/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable a juniper switch data source",
        "description": "Disable a juniper switch data source",
        "operationId": "disableJuniperSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/juniper-switches/{id}/snmp-config": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show snmp config for juniper switch data source",
        "description": "Show snmp config for juniper switch data source",
        "operationId": "getJuniperSwitchSnmpConfig",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update snmp config for a juniper switch data source",
        "description": "Update snmp config for a juniper switch data source",
        "operationId": "updateJuniperSwitchSnmpConfig",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/arista-switches": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create an arista switch data source",
        "description": "Add arista switch data source",
        "operationId": "addAristaSwitch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add a cisco switch as datasource",
            "schema": {
              "$ref": "#/definitions/AristaSwitchDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AristaSwitchDataSource"
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List arista switch data sources",
        "description": "List arista switch data sources",
        "operationId": "listAristaSwitches",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:906:993642895",
                  "entity_type": "AristaSwitchDataSource"
                }
              ],
              "total_count": 1
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/arista-switches/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show arista switch data source details",
        "description": "Show arista switch data source details",
        "operationId": "getAristaSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AristaSwitchDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update an arista switch data source",
        "description": "Update an switch data source",
        "operationId": "updateAristaSwitch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AristaSwitchDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AristaSwitchDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete an arista switch data source",
        "description": "Delete an arista switch data source",
        "operationId": "deleteAristaSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/arista-switches/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable an arista switch data source",
        "description": "Enable an arista switch data source",
        "operationId": "enableAristaSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/arista-switches/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable an arista switch data source",
        "description": "Disable an arista switch data source",
        "operationId": "disableAristaSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/arista-switches/{id}/snmp-config": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show snmp config for arista switch data source",
        "description": "Show snmp config for arista switch data source",
        "operationId": "getAristaSwitchSnmpConfig",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update snmp config for arista switch data source",
        "description": "Update snmp config for arista switch data source",
        "operationId": "updateAristaSwitchSnmpConfig",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/checkpoint-firewalls": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create a checkpoint firewall",
        "description": "Add checkpoint firewall as data source",
        "operationId": "addCheckpointFirewall",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add a vSec Checkpoint firewall as data source",
            "schema": {
              "$ref": "#/definitions/CheckpointFirewallDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CheckpointFirewallDataSource"
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List checkpoint firewall data sources",
        "description": "List checkpoint firewall data sources",
        "operationId": "listCheckpointFirewalls",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:910:993642895",
                  "entity_type": "CheckpointFirewallDataSource"
                }
              ],
              "total_count": 1
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/checkpoint-firewalls/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show checkpoint firewall data source details",
        "description": "Show checkpoint firewall data source details",
        "operationId": "getCheckpointFirewall",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CheckpointFirewallDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update a checkpoint firewall data source",
        "description": "Update a checkpoint firewall data source",
        "operationId": "updateCheckpointFirewall",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CheckpointFirewallDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CheckpointFirewallDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete a checkpoint firewall data source",
        "description": "Delete a checkpoint firewall data source",
        "operationId": "deleteCheckpointFirewall",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/checkpoint-firewalls/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable a checkpoint firewall data source",
        "description": "Enable a checkpoint firewall data source",
        "operationId": "enableCheckpointFirewall",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/checkpoint-firewalls/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable a checkpoint firewall data source",
        "description": "Disable a checkpoint firewall data source",
        "operationId": "disableCheckpointFirewall",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/panorama-firewalls": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create panorama firewall data source",
        "description": "Add panorama firewall as data source",
        "operationId": "addPanoramaFirewall",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add a panorama firewall as datasource",
            "schema": {
              "$ref": "#/definitions/PanFirewallDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PanFirewallDataSource"
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List panorama firewall data sources",
        "description": "List panorama firewall data sources",
        "operationId": "listPanoramaFirewalls",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:911:993642895",
                  "entity_type": "PanFirewallDataSource"
                }
              ],
              "total_count": 1
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/panorama-firewalls/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show panorama firewall data source details",
        "description": "Show panorama firewall data source details",
        "operationId": "getPanoramaFirewall",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PanFirewallDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update a panorama firewall data source",
        "description": "Update a panorama firewall data source",
        "operationId": "updatePanoramaFirewall",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PanFirewallDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PanFirewallDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete a panorama firewall data source",
        "description": "Delete a panorama firewall data source",
        "operationId": "deletePanoramaFirewall",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/panorama-firewalls/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable a panorama firewall data source",
        "description": "Enable a panorama firewall data source",
        "operationId": "enablePanoramaFirewall",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/panorama-firewalls/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable a panorama firewall data source",
        "description": "Disable a panorama firewall data source",
        "operationId": "disablePanoramaFirewall",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/ucs-managers": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create a ucs manager data source",
        "description": "Add a ucs manager as data source",
        "operationId": "addUcsManager",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UCSManagerDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/UCSManagerDataSource"
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List ucs manager data sources",
        "description": "List ucs manager data sources",
        "operationId": "listUcsManagers",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:912:993642895",
                  "entity_type": "UCSManagerDataSource"
                }
              ],
              "total_count": 1
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/ucs-managers/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show ucs manager data source details",
        "description": "Show ucs manager data source details",
        "operationId": "getUcsManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UCSManagerDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update a ucs manager data source",
        "description": "Update a ucs manager data source",
        "operationId": "updateUcsManager",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UCSManagerDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UCSManagerDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete a ucs manager data source",
        "description": "Delete a ucs manager data source",
        "operationId": "deleteUcsManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/ucs-managers/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable a ucs manager data source",
        "description": "Enable a ucs manager data source",
        "operationId": "enableUcsManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/ucs-managers/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable a ucs manager data source",
        "description": "Disable a ucs manager data source",
        "operationId": "disableUcsManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/ucs-managers/{id}/snmp-config": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show snmp config for ucs fabric interconnects",
        "description": "Show snmp config for ucs fabric interconnects",
        "operationId": "getUcsSnmpConfig",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update snmp config for ucs fabric interconnects",
        "description": "Update snmp config for ucs fabric interconnects",
        "operationId": "updateUcsSnmpConfig",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SNMPConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/hpvc-managers": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create a hpvc manager data source",
        "description": "Add hpvc manager data source",
        "operationId": "addHpvcManager",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add a switch as datasource",
            "schema": {
              "$ref": "#/definitions/HPVCManagerDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/HPVCManagerDataSource"
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List hpvc manager data sources",
        "description": "List hpvc manager data sources",
        "operationId": "listHpvcManagers",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:914:993642895",
                  "entity_type": "HPVCManagerDataSource"
                }
              ],
              "total_count": 1
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/hpvc-managers/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show hpvc data source details",
        "description": "Show hpvc data source details",
        "operationId": "getHpvcManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HPVCManagerDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update a hpvc manager data source",
        "description": "Update a hpvc manager data source",
        "operationId": "updateHpvcManager",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/HPVCManagerDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HPVCManagerDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete a hpvc manager data source",
        "description": "Delete a hpvc manager data source",
        "operationId": "deleteHpvcManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/hpvc-managers/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable a hpvc manager data source",
        "description": "Enable a hpvc manager data source",
        "operationId": "enableHpvcManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/hpvc-managers/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable a hpvc manager data source",
        "description": "Disable a hpvc manager data source",
        "operationId": "disableHpvcManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/hpov-managers": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create a hp oneview manager data source",
        "description": "Add a hp oneview manager data source",
        "operationId": "addHpovManager",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/HPOneViewManagerDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/HPOneViewManagerDataSource"
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List hp oneview manager data sources",
        "description": "List hp oneview manager data sources",
        "operationId": "listHpovManagers",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:915:993642895",
                  "entity_type": "HPOneViewManagerDataSource"
                }
              ],
              "total_count": 1
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/hpov-managers/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show hp oneview data source details",
        "description": "Show hp oneview data source details",
        "operationId": "getHpovManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HPOneViewManagerDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update a hp oneview data source",
        "description": "Update a hp oneview data source",
        "operationId": "updateHpovManager",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/HPOneViewManagerDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HPOneViewManagerDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete a hp oneview data source",
        "description": "Delete a hp oneview data source",
        "operationId": "deleteHpovManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/hpov-managers/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable a hp oneview data source",
        "description": "Enable a hp oneview data source",
        "operationId": "enableHpovManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/hpov-managers/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable a hp oneview data source",
        "description": "Disable a hp oneview data source",
        "operationId": "disableHpovManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/nsxt-managers": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create an nsx-t manager data source",
        "description": "Add an nsx-t manager data source",
        "operationId": "addNsxtManagerDatasource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NSXTManagerDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NSXTManagerDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List nsx-t manager data sources",
        "description": "List nsx-t manager data sources",
        "operationId": "listNsxtManagers",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:903:993642895",
                  "entity_type": "NSXTManagerDataSource"
                }
              ],
              "total_count": 1
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/nsxt-managers/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show nsx-t manager data source details",
        "description": "Show nsx-t manager data source details",
        "operationId": "getNsxtManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NSXTManagerDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update an nsx-t manager data source",
        "description": "Update an nsx-t manager data source",
        "operationId": "updateNsxtManager",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NSXTManagerDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NSXTManagerDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete an nsx-t manager data source",
        "description": "Delete an nsx-t manager data source",
        "operationId": "deleteNsxtManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/nsxt-managers/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable an nsx-t manager data source",
        "description": "Enable an nsx-t manager data source",
        "operationId": "enableNsxtManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/nsxt-managers/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable an nsx-t manager data source",
        "description": "Disable an nsx-t manager data source",
        "operationId": "disableNsxtManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/nsxv-managers": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create an nsx-v manager data source",
        "description": "Add an nsx-v manager data source",
        "operationId": "addNsxvManagerDatasource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NSXVManagerDataSourceRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NSXVManagerDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "List nsx-v manager data sources",
        "description": "List nsx-v manager data sources",
        "operationId": "listNsxvManagers",
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:903:993642895",
                  "entity_type": "NSXVManagerDataSource"
                }
              ],
              "total_count": 1
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/nsxv-managers/{id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show nsx-v manager data source details",
        "description": "Show nsx-v manager data source details",
        "operationId": "getNsxvManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NSXVManagerDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update an nsx-v manager data source",
        "description": "Update an nsx-v manager data source",
        "operationId": "updateNsxvManager",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NSXVManagerDataSource"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NSXVManagerDataSource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete an nsx-v manager data source",
        "description": "Delete an nsx-v manager data source",
        "operationId": "deleteNsxvManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/nsxv-managers/{id}/enable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Enable an nsx-v manager data source",
        "description": "Enable an nsx-v manager data source",
        "operationId": "enableNsxvManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/nsxv-managers/{id}/disable": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Disable an nsx-v manager data source",
        "description": "Disable an nsx-v manager data source",
        "operationId": "disableNsxvManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/data-sources/nsxv-managers/{id}/controller-cluster": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Show nsx controller-cluster details",
        "description": "Show nsx controller-cluster details",
        "operationId": "getNsxvControllerCluster",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NSXControllerDataCollection"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update nsx controller-cluster details",
        "description": "Update nsx controller-cluster details",
        "operationId": "updateNsxvControllerCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NSXControllerDataCollection"
            }
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NSXControllerDataCollection"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/problems": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List problems",
        "description": "List problem events.",
        "operationId": "listProblemEvents",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:35230:1233393386",
                  "entity_type": "ProblemEvent",
                  "time": 1509283820
                },
                {
                  "entity_id": "18230:35228:1832167524",
                  "entity_type": "ProblemEvent",
                  "time": 1509285022
                }
              ],
              "cursor": "MTA=",
              "total_count": 15,
              "start_time": 1509231996,
              "end_time": 1509318396
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/problems/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show problem details",
        "description": "Show problem event details.",
        "operationId": "getProblemEvent",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProblemEvent"
            },
            "examples": {
              "entity_id": "18230:36050:1583312594",
              "name": "NSXFirewallDefaultAllowAllRulesEvent",
              "entity_type": "ProblemEvent",
              "anchor_entities": [
                {
                  "entity_id": "18230:39:660899929",
                  "entity_type": "NSXDistributedFirewall"
                }
              ],
              "related_entities": [
                {
                  "entity_id": "18230:7:824494449",
                  "entity_type": "NSXVManager"
                },
                {
                  "entity_id": "18230:87:367271162",
                  "entity_type": "NSXFirewallRule"
                },
                {
                  "entity_id": "18230:39:660899929",
                  "entity_type": "NSXDistributedFirewall"
                }
              ],
              "message": "The distributed firewall is configured to allow all traffic by default, which increases the potential attack surface of the network",
              "event_tags": [
                "Best Practices",
                "Firewall"
              ],
              "admin_state": "ENABLED",
              "archived": false,
              "event_time_epoch_ms": 1509283819834,
              "severity": "INFO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/vms": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List vms",
        "description": "List vms",
        "operationId": "listVms",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:1:1158969162",
                  "entity_type": "VirtualMachine",
                  "time": 1509283414
                },
                {
                  "entity_id": "18230:1:875338851",
                  "entity_type": "VirtualMachine",
                  "time": 1509283476
                }
              ],
              "cursor": "MTA=",
              "total_count": 39,
              "start_time": 1509335034,
              "end_time": 1509335034
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/vms/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show vm details",
        "description": "Show vm details",
        "operationId": "getVm",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseVirtualMachine"
            },
            "examples": {
              "entity_id": "18230:1:1158969162",
              "name": "NSX_Controller_9e80ec74-57ce-4671-8fd7-b5884a997535",
              "entity_type": "VirtualMachine",
              "ip_addresses": [
                {
                  "ip_address": "10.197.17.74",
                  "netmask": "255.255.255.0",
                  "network_address": "10.197.17.0/24"
                }
              ],
              "default_gateway": "",
              "vnics": [
                {
                  "entity_id": "18230:18:863301374",
                  "entity_type": "Vnic"
                }
              ],
              "security_groups": [

              ],
              "source_firewall_rules": [

              ],
              "destination_firewall_rules": [

              ],
              "ip_sets": [

              ],
              "cluster": {
                "entity_id": "18230:66:1293137396",
                "entity_type": "Cluster"
              },
              "resource_pool": {
                "entity_id": "18230:79:313158344",
                "entity_type": "ResourcePool"
              },
              "security_tags": [

              ],
              "layer2_networks": [

              ],
              "host": {
                "entity_id": "18230:4:652218965",
                "entity_type": "Host"
              },
              "vlans": [

              ],
              "vendor_id": "vm-181",
              "vcenter_manager": {
                "entity_id": "18230:8:2048038620",
                "entity_type": "VCenterManager"
              },
              "folders": [
                {
                  "entity_id": "18230:81:520432789",
                  "entity_type": "Folder"
                }
              ],
              "datastores": [
                {
                  "entity_id": "18230:80:682061552",
                  "entity_type": "Datastore"
                }
              ],
              "datacenter": {
                "entity_id": "18230:105:1663983066",
                "entity_type": "VCDatacenter"
              },
              "nsx_manager": null,
              "applied_to_source_rules": [

              ],
              "applied_to_destination_rules": [

              ],
              "source_inversion_rules": [

              ],
              "destination_inversion_rules": [

              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/fetch": {
      "post": {
        "tags": [
          "Entities"
        ],
        "summary": "Get details of entities",
        "description": "Bulk fetch of entities",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FetchRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BulkFetchResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/vnics": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List vnics",
        "description": "List vnics",
        "operationId": "listVnics",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:18:1158969162",
                  "entity_type": "Vnic",
                  "time": 1509283414
                },
                {
                  "entity_id": "18230:18:875338851",
                  "entity_type": "Vnic",
                  "time": 1509283476
                }
              ],
              "cursor": "MTA=",
              "total_count": 39,
              "start_time": 1509335034,
              "end_time": 1509335034
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/vnics/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show vnic details",
        "description": "Show vnic details",
        "operationId": "getVnic",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseVnic"
            },
            "examples": {
              "entity_id": "18230:18:1285494944",
              "name": "[USA  Edge-0]-[Network adapter 8]",
              "entity_type": "Vnic",
              "ip_addresses": [

              ],
              "layer2_network": null,
              "vlan": {
                "begin": 0,
                "end": 0
              },
              "vm": {
                "entity_id": "18230:1:1158972882",
                "entity_type": "VirtualMachine"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/hosts": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List hosts",
        "description": "List hosts",
        "operationId": "listHosts",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:4:652218965",
                  "entity_type": "Host",
                  "time": 1509283414
                },
                {
                  "entity_id": "18230:4:1256074202",
                  "entity_type": "Host",
                  "time": 1509283414
                }
              ],
              "cursor": null,
              "total_count": 6,
              "start_time": 1509336095,
              "end_time": 1509336095
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/hosts/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show host details",
        "description": "Show host details",
        "operationId": "getHost",
        "parameters": [
          {
            "$ref": "#/parameters/Time"
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Host"
            },
            "examples": {
              "entity_id": "18230:4:1256074202",
              "name": "10.197.17.228",
              "entity_type": "Host",
              "vmknics": [
                {
                  "entity_id": "18230:17:1776349286",
                  "entity_type": "Vmknic"
                }
              ],
              "cluster": {
                "entity_id": "18230:66:1293137396",
                "entity_type": "Cluster"
              },
              "vcenter_manager": {
                "entity_id": "18230:8:2048038620",
                "entity_type": "VCenterManager"
              },
              "vm_count": 0,
              "datastores": [
                {
                  "entity_id": "18230:80:330903629",
                  "entity_type": "Datastore"
                }
              ],
              "service_tag": "VMware-42 14 cd 9f f0 c8 0f 77-6a 53 71 8c 6d d6 e3 ff",
              "vendor_id": "host-202",
              "nsx_manager": null,
              "maintenance_mode": "NOTINMAINTENANCEMODE",
              "connection_state": "CONNECTED"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/clusters": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List clusters",
        "description": "List clusters",
        "operationId": "listClusters",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:66:1293137396",
                  "entity_type": "Cluster",
                  "time": 1509282803
                },
                {
                  "entity_id": "18230:66:670818039",
                  "entity_type": "Cluster",
                  "time": 1509284911
                }
              ],
              "cursor": null,
              "total_count": 4,
              "start_time": 1509337200,
              "end_time": 1509337200
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/clusters/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show cluster details",
        "description": "Show cluster details",
        "operationId": "getCluster",
        "parameters": [
          {
            "$ref": "#/parameters/Time"
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "examples": {
              "entity_id": "18230:66:1293137396",
              "name": "Cluster1",
              "entity_type": "Cluster",
              "total_cpus": 88400,
              "total_memory": 68717867008,
              "num_cpu_cores": 34,
              "vendor_id": "domain-c7",
              "num_hosts": 3,
              "num_datastores": 3,
              "nsx_manager": null,
              "vcenter_manager": {
                "entity_id": "18230:8:2048038620",
                "entity_type": "VCenterManager"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/vc-datacenters": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List vCenter datacenters",
        "description": "List vCenter datacenters",
        "operationId": "listDatacenters",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:105:192022336",
                  "entity_type": "VCDatacenter",
                  "time": 1509282871
                },
                {
                  "entity_id": "18230:105:1663983066",
                  "entity_type": "VCDatacenter",
                  "time": 1509282803
                }
              ],
              "cursor": null,
              "total_count": 2,
              "start_time": 1509337402,
              "end_time": 1509337402
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/vc-datacenters/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show vCenter datacenter details",
        "description": "Show vCenter datacenter details",
        "operationId": "getDatacenter",
        "parameters": [
          {
            "$ref": "#/parameters/Time"
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCDatacenter"
            },
            "examples": {
              "entity_id": "18230:105:192022336",
              "name": "DataCenter",
              "entity_type": "VCDatacenter",
              "vendor_id": "datacenter-2",
              "vcenter_manager": {
                "entity_id": "18230:8:824494514",
                "entity_type": "VCenterManager"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/folders": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List folders",
        "description": "List folders",
        "operationId": "listFolders",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:81:591055243",
                  "entity_type": "Folder",
                  "time": 1509282871
                },
                {
                  "entity_id": "18230:81:520432789",
                  "entity_type": "Folder",
                  "time": 1509282804
                }
              ],
              "cursor": "MTA=",
              "total_count": 14,
              "start_time": 1509337459,
              "end_time": 1509337459
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/folders/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show folder details",
        "description": "Show folder details",
        "operationId": "getFolder",
        "parameters": [
          {
            "$ref": "#/parameters/Time"
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Folder"
            },
            "examples": {
              "entity_id": "18230:81:591055243",
              "name": "datastore",
              "entity_type": "Folder",
              "vendor_id": "group-s5",
              "vcenter_manager": {
                "entity_id": "18230:8:824494514",
                "entity_type": "VCenterManager"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/datastores": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List datastores",
        "description": "List datastores",
        "operationId": "listDatastores",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:80:1756900216",
                  "entity_type": "Datastore",
                  "time": 1509282874
                },
                {
                  "entity_id": "18230:80:682061552",
                  "entity_type": "Datastore",
                  "time": 1509282819
                }
              ],
              "cursor": null,
              "total_count": 6,
              "start_time": 1509337523,
              "end_time": 1509337523
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/datastores/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show datastore details",
        "description": "Show datastore details",
        "operationId": "getDatastore",
        "parameters": [
          {
            "$ref": "#/parameters/Time"
          },
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Datastore"
            },
            "examples": {
              "entity_id": "18230:80:1756898449",
              "name": "datastore1 (2)",
              "entity_type": "Datastore",
              "vendor_id": "datastore-33",
              "vcenter_manager": {
                "entity_id": "18230:8:824494514",
                "entity_type": "VCenterManager"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/vmknics": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List vmknics",
        "description": "List vmknics",
        "operationId": "listVmknics",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:17:1928372608",
                  "entity_type": "Vmknic",
                  "time": 1509283321
                },
                {
                  "entity_id": "18230:17:695819318",
                  "entity_type": "Vmknic",
                  "time": 1509282819
                }
              ],
              "cursor": "MTA=",
              "total_count": 11,
              "start_time": 1509337586,
              "end_time": 1509337586
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/vmknics/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show vmknic details",
        "description": "Show vmknic details",
        "operationId": "getVmknic",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Vmknic"
            },
            "examples": {
              "entity_id": "18230:17:695819318",
              "name": "[10.197.17.64]-[vmk0]",
              "entity_type": "Vmknic",
              "ip_addresses": [
                {
                  "ip_address": "10.197.17.64",
                  "netmask": "255.255.252.0",
                  "network_address": "10.197.16.0/22"
                }
              ],
              "vlan": {
                "begin": 0,
                "end": 0
              },
              "host": {
                "entity_id": "18230:4:652218965",
                "entity_type": "Host"
              },
              "layer2_network": null
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/layer2-networks": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List layer2 networks",
        "description": "List layer2 networks",
        "operationId": "listLayer2Networks",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:11:2095237606",
                  "entity_type": "VxlanLayer2Network",
                  "time": 1509284850
                },
                {
                  "entity_id": "18230:11:2095237668",
                  "entity_type": "VxlanLayer2Network",
                  "time": 1509284850
                }
              ],
              "cursor": "MTA=",
              "total_count": 38,
              "start_time": 1509339711,
              "end_time": 1509339711
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/layer2-networks/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show layer2 network details",
        "description": "Show layer2 network details",
        "operationId": "getLayer2Network",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseL2Network"
            },
            "examples": {
              "entity_id": "18230:11:2095237606",
              "name": "Deccan-uplink-vxlan",
              "entity_type": "VxlanLayer2Network",
              "network_addresses": [
                "192.168.13.0/24"
              ],
              "gateways": [

              ],
              "segment_id": 5004,
              "vteps": [
                {
                  "entity_id": "18230:17:695819287",
                  "entity_type": "Vmknic"
                },
                {
                  "entity_id": "18230:17:431576805",
                  "entity_type": "Vmknic"
                }
              ],
              "scope": "GLOBAL",
              "nsx_managers": [

              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/ip-sets": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List ip sets",
        "description": "List ip sets",
        "operationId": "listIPSets",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:84:347816011",
                  "entity_type": "NSXIPSet",
                  "time": 1509283320
                }
              ],
              "cursor": null,
              "total_count": 3,
              "start_time": 1509339942,
              "end_time": 1509339942
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/ip-sets/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show ip set details",
        "description": "Show ip set details",
        "operationId": "getIPSet",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseIPSet"
            },
            "examples": {
              "entity_id": "18230:84:347816011",
              "name": "IPSET_ford",
              "entity_type": "NSXIPSet",
              "ip_addresses": [

              ],
              "ip_ranges": [
                {
                  "start_ip": "192.168.78.21",
                  "end_ip": "192.168.78.30"
                }
              ],
              "ip_numeric_ranges": [
                {
                  "start": 3232255509,
                  "end": 3232255518
                }
              ],
              "parent_security_groups": [

              ],
              "direct_source_rules": [

              ],
              "direct_destination_rules": [

              ],
              "indirect_source_rules": [

              ],
              "indirect_destination_rules": [

              ],
              "vendor_id": "ipset-3",
              "vendor": "",
              "nsx_managers": [
                {
                  "entity_id": "18230:7:824494449",
                  "entity_type": "NSXVManager"
                }
              ],
              "scope": "GLOBAL"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/flows": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List flows",
        "description": "List flows",
        "operationId": "getFlows",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "10000:515:1491521924",
                  "entity_type": "Flow",
                  "time": 1509283320
                }
              ],
              "cursor": null,
              "total_count": 3,
              "start_time": 1509339942,
              "end_time": 1509339942
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/flows/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show flow details",
        "description": "Show flow details",
        "operationId": "getFlow",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flow"
            },
            "examples": {
              "entity_id": "10000:515:1491521924",
              "name": "10.197.53.40 -> 10.197.53.38 [port:500]",
              "entity_type": "Flow",
              "source_ip": {
                "ip_address": "10.197.53.40",
                "netmask": "255.255.255.255",
                "network_address": "10.197.53.40"
              },
              "destination_ip": {
                "ip_address": "10.197.53.38",
                "netmask": "255.255.255.255",
                "network_address": "10.197.53.38"
              },
              "port": {
                "start": 500,
                "end": 500,
                "display": "500",
                "iana_name": "isakmp",
                "iana_port_display": "500 [isakmp]"
              },
              "source_folders": [

              ],
              "destination_folders": [

              ],
              "protocol": "UDP",
              "source_ip_sets": [

              ],
              "destination_ip_sets": [

              ],
              "source_security_groups": [

              ],
              "destination_security_groups": [

              ],
              "traffic_type": "EAST_WEST_TRAFFIC",
              "source_security_tags": [

              ],
              "destination_security_tags": [

              ],
              "source_vm_tags": [

              ],
              "destination_vm_tags": [

              ],
              "within_host": false,
              "firewall_action": "ALLOW",
              "flow_tag": [
                "EAST_WEST_TRAFFIC",
                "PHY_PHY_TRAFFIC",
                "SRC_IP_PHYSICAL"
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/security-groups": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List security groups",
        "description": "List security groups",
        "operationId": "listSecurityGroups",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:82:1504518253",
                  "entity_type": "NSXSecurityGroup",
                  "time": 1509283316
                },
                {
                  "entity_id": "18230:82:604574196",
                  "entity_type": "NSXSecurityGroup",
                  "time": 1509284912
                }
              ],
              "cursor": null,
              "total_count": 9,
              "start_time": 1509340012,
              "end_time": 1509340012
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/security-groups/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show security group details",
        "description": "Show security group details",
        "operationId": "getSecurityGroup",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseSecurityGroup"
            },
            "examples": {
              "entity_id": "18230:82:604574196",
              "name": "SG-TestApp-Web",
              "entity_type": "NSXSecurityGroup",
              "members": [
                {
                  "entity_id": "18230:99:922343691",
                  "entity_type": "SecurityTag"
                }
              ],
              "direct_source_rules": [

              ],
              "direct_destination_rules": [

              ],
              "indirect_source_rules": [

              ],
              "indirect_destination_rules": [

              ],
              "parents": [

              ],
              "direct_members": [
                {
                  "entity_id": "18230:99:922343691",
                  "entity_type": "SecurityTag"
                }
              ],
              "vendor_id": "securitygroup-25",
              "excluded_members": [

              ],
              "nsx_managers": [
                {
                  "entity_id": "18230:7:824494449",
                  "entity_type": "NSXVManager"
                }
              ],
              "scope": "GLOBAL",
              "ip_sets": [

              ],
              "security_tags": [
                {
                  "entity_id": "18230:99:922343691",
                  "entity_type": "SecurityTag"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/security-tags": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List security tags",
        "description": "List security tags",
        "operationId": "listSecurityTags",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:99:922344652",
                  "entity_type": "SecurityTag",
                  "time": 1509283319
                },
                {
                  "entity_id": "18230:99:1830868297",
                  "entity_type": "SecurityTag",
                  "time": 1509283318
                }
              ],
              "cursor": "MTA=",
              "total_count": 14,
              "start_time": 1509340096,
              "end_time": 1509340096
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/security-tags/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show security tag details",
        "description": "Show security tag details",
        "operationId": "getSecurityTag",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityTag"
            },
            "examples": {
              "entity_id": "18230:99:922344652",
              "name": "IDS_IPS.threat=medium",
              "entity_type": "SecurityTag",
              "description": "Tag indicates that the data violation detected has a medium threat level",
              "direct_security_groups": [

              ],
              "security_groups": [

              ],
              "vendor_id": "securitytag-10",
              "nsx_manager": {
                "entity_id": "18230:7:824494449",
                "entity_type": "NSXVManager"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/firewall-rules": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List firewall rules",
        "description": "List firewall rules",
        "operationId": "listFirewallRules",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:87:367271162",
                  "entity_type": "NSXFirewallRule",
                  "time": 1509283319
                },
                {
                  "entity_id": "18230:87:367270232",
                  "entity_type": "NSXFirewallRule",
                  "time": 1509283319
                }
              ],
              "cursor": null,
              "total_count": 7,
              "start_time": 1509344618,
              "end_time": 1509344618
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/firewall-rules/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show firewall rule details",
        "description": "Show firewall rule details",
        "operationId": "getFirewallRule",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseFirewallRule"
            },
            "examples": {
              "entity_id": "18230:87:367271162",
              "name": "Default Rule",
              "entity_type": "NSXFirewallRule",
              "rule_id": "1001",
              "section_id": "1003",
              "section_name": "Default Section Layer3",
              "sequence_number": 6,
              "source_any": true,
              "destination_any": true,
              "service_any": true,
              "sources": [

              ],
              "destinations": [

              ],
              "services": [

              ],
              "action": "ALLOW",
              "disabled": false,
              "source_inversion": false,
              "destination_inversion": false,
              "port_ranges": [
                {
                  "start": 0,
                  "end": 65535,
                  "display": "0-65535 (ANY)",
                  "iana_name": "",
                  "iana_port_display": ""
                }
              ],
              "logging_enabled": false,
              "direction": "INOUT",
              "scope": "GLOBAL",
              "nsx_managers": [
                {
                  "entity_id": "18230:7:824494449",
                  "entity_type": "NSXVManager"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/firewalls": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List firewalls",
        "description": "List firewalls",
        "operationId": "listFirewalls",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:39:660899929",
                  "entity_type": "NSXDistributedFirewall",
                  "time": 1509283319
                }
              ],
              "cursor": null,
              "total_count": 1,
              "start_time": 1509344618,
              "end_time": 1509344618
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/firewalls/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show firewall details",
        "description": "Show firewall details",
        "operationId": "getFirewall",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseFirewallRule"
            },
            "examples": {
              "entity_id": "18230:39:660899929",
              "name": "NSX Firewall",
              "entity_type": "NSXDistributedFirewall",
              "firewall_rules": [
                {
                  "rules": [

                  ],
                  "rule_set_type": "NSX_STANDARD"
                },
                {
                  "rules": [

                  ]
                }
              ],
              "exclusions": [
                {
                  "entity_id": "18230:1:875338882",
                  "entity_type": "VirtualMachine"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/services": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List services",
        "description": "List services",
        "operationId": "listServices",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:85:503995168",
                  "entity_type": "NSXService",
                  "time": 1509283319
                }
              ],
              "cursor": null,
              "total_count": 1,
              "start_time": 1509344618,
              "end_time": 1509344618
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/services/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show service details",
        "description": "Show service details",
        "operationId": "getService",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseService"
            },
            "examples": {
              "entity_id": "18230:85:503995168",
              "name": "PostgresSQL",
              "entity_type": "NSXService",
              "protocol": "TCP",
              "port_ranges": [
                {
                  "start": 5432,
                  "end": 5432,
                  "display": "5432",
                  "iana_name": "",
                  "iana_port_display": ""
                }
              ],
              "nsx_managers": [
                {
                  "entity_id": "18230:7:824494449",
                  "entity_type": "NSXVManager"
                }
              ],
              "scope": "GLOBAL",
              "vendor_id": "application-211"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/service-groups": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List service groups",
        "description": "List service groups",
        "operationId": "listServiceGroups",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:86:1504518253",
                  "entity_type": "NSXServiceGroup",
                  "time": 1509283319
                }
              ],
              "cursor": null,
              "total_count": 1,
              "start_time": 1509344618,
              "end_time": 1509344618
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/service-groups/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show service group details",
        "description": "Show service group details",
        "operationId": "getServiceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseServiceGroup"
            },
            "examples": {
              "entity_id": "18230:86:505347433",
              "name": "Oracle Enterprise Manager",
              "entity_type": "NSXServiceGroup",
              "members": [
                {
                  "entity_id": "18230:85:676477656",
                  "entity_type": "NSXService"
                },
                {
                  "entity_id": "18230:85:503998082",
                  "entity_type": "NSXService"
                },
                {
                  "entity_id": "18230:85:504027904",
                  "entity_type": "NSXService"
                },
                {
                  "entity_id": "18230:85:676474897",
                  "entity_type": "NSXService"
                }
              ],
              "scope": "GLOBAL",
              "nsx_managers": [
                {
                  "entity_id": "18230:7:824494449",
                  "entity_type": "NSXVManager"
                }
              ],
              "vendor_id": "applicationgroup-23"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/vcenter-managers": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List vCenter managers",
        "description": "List vCenter managers",
        "operationId": "listVcenterManagers",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:8:2048038620",
                  "entity_type": "VCenterManager",
                  "time": 1509282805
                },
                {
                  "entity_id": "18230:8:824494514",
                  "entity_type": "VCenterManager",
                  "time": 1509283017
                }
              ],
              "cursor": null,
              "total_count": 2,
              "start_time": 1509344794,
              "end_time": 1509344794
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/vcenter-managers/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show vCenter manager details",
        "description": "Show vCenter manager details",
        "operationId": "getVcenterManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCenterManager"
            },
            "examples": {
              "entity_id": "18230:8:2048038620",
              "name": "10.197.17.68",
              "entity_type": "VCenterManager",
              "ip_address": {
                "ip_address": "10.197.17.68",
                "netmask": "255.255.255.255",
                "network_address": "10.197.17.68/32"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/nsx-managers": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List nsx managers",
        "description": "List nsx managers",
        "operationId": "listNSXManagers",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:7:824494449",
                  "entity_type": "NSXVManager",
                  "time": 1509339744
                }
              ],
              "cursor": null,
              "total_count": 1,
              "start_time": 1509345346,
              "end_time": 1509345346
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/nsx-managers/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show nsx manager details",
        "description": "Show nsx manager details",
        "operationId": "getNSXManager",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseNSXManager"
            },
            "examples": {
              "entity_id": "18230:7:824494449",
              "name": "10.197.53.187",
              "entity_type": "NSXVManager",
              "ip_address": {
                "ip_address": "10.197.53.187",
                "netmask": "255.255.255.255",
                "network_address": "10.197.53.187/32"
              },
              "version": "6.2.8",
              "role": "STANDALONE"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/distributed-virtual-switches": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List distributed virtual switches",
        "description": "List distributed virtual switches",
        "operationId": "listDistributedVirtualSwitches",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:2:161257049",
                  "entity_type": "DistributedVirtualSwitch",
                  "time": 1509282885
                },
                {
                  "entity_id": "18230:2:368016825",
                  "entity_type": "DistributedVirtualSwitch",
                  "time": 1509282854
                }
              ],
              "cursor": null,
              "total_count": 2,
              "start_time": 1509345426,
              "end_time": 1509345426
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/distributed-virtual-switches/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show distributed virtual switch details",
        "description": "Show distributed virtual switch details",
        "operationId": "getDistributedVirtualSwitch",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DistributedVirtualSwitch"
            },
            "examples": {
              "entity_id": "18230:2:161257049",
              "name": "dvSwitch",
              "entity_type": "DistributedVirtualSwitch",
              "vendor_id": "dvs-21",
              "vcenter_manager": {
                "entity_id": "18230:8:824494514",
                "entity_type": "VCenterManager"
              },
              "hosts": [
                {
                  "entity_id": "18230:4:1528136654",
                  "entity_type": "Host"
                },
                {
                  "entity_id": "18230:4:1528138514",
                  "entity_type": "Host"
                },
                {
                  "entity_id": "18230:4:1528136747",
                  "entity_type": "Host"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/distributed-virtual-portgroups": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "List distributed virtual portgroups",
        "description": "List distributed virtual portgroups",
        "operationId": "listDistributedVirtualPortgroups",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:3:187309184",
                  "entity_type": "DistributedVirtualPortgroup",
                  "time": 1509282847
                },
                {
                  "entity_id": "18230:3:1603334983",
                  "entity_type": "DistributedVirtualPortgroup",
                  "time": 1509282885
                }
              ],
              "cursor": "MTA=",
              "total_count": 46,
              "start_time": 1509345514,
              "end_time": 1509345514
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/distributed-virtual-portgroups/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Show distributed virtual portgroup details",
        "description": "Show distributed virtual portgroup details",
        "operationId": "getDistributedVirtualPortgroup",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DistributedVirtualPortgroup"
            },
            "examples": {
              "entity_id": "18230:3:187309184",
              "name": "vxw-dvs-15-virtualwire-18-sid-5017-swargate end vm vxlan",
              "entity_type": "DistributedVirtualPortgroup",
              "vendor_id": "dvportgroup-92",
              "vcenter_manager": {
                "entity_id": "18230:8:2048038620",
                "entity_type": "VCenterManager"
              },
              "distributed_virtual_switch": {
                "entity_id": "18230:2:368016825",
                "entity_type": "DistributedVirtualSwitch"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/names": {
      "post": {
        "tags": [
          "Entities"
        ],
        "summary": "Get names for entities",
        "description": "Get names for entities.Limit of 1000 entities in a single request.",
        "operationId": "getNames",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Names Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamesRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NamesResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/entities/names/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Get name of an entity",
        "description": "Get name of an entity",
        "operationId": "getName",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityName"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get metric points for an entity",
        "description": "Get metric points for an entity",
        "operationId": "getMetrics",
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "description": "entity type",
            "required": true,
            "type": "string"
          },
          {
            "name": "metric",
            "in": "query",
            "description": "metric name",
            "required": true,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "description": "metric points interval",
            "required": true,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start time for query in epoch seconds",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end time for query in epoch seconds",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetricResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/schema/{entity-type}/metrics": {
      "get": {
        "tags": [
          "Schema"
        ],
        "summary": "Get metrics schema for an entity type",
        "description": "Get details of metrics available for entity type",
        "operationId": "getMetricsSchema",
        "parameters": [
          {
            "name": "entity-type",
            "in": "path",
            "description": "entity type",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityMetricsSchema"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/groups/applications": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Create an application",
        "description": "Application is a group of tiers. A tier is a group of virtual machines based on membership criteria. Tiers are bound to single\napplication. An application name is unique and should not conflict with another application name.",
        "operationId": "addApplication",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Application"
            },
            "examples": {
              "entity_id": "18230:561:271275765",
              "name": "App-1",
              "entity_type": "Application",
              "create_time": 1509410056733,
              "created_by": "admin@local",
              "last_modified_time": 0,
              "last_modified_by": ""
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "List applications",
        "description": "List applications",
        "operationId": "listApplications",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/StartTime"
          },
          {
            "$ref": "#/parameters/EndTime"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:561:271275765",
                  "entity_type": "Application"
                }
              ],
              "total_count": 1
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/groups/applications/{id}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Show application details",
        "description": "Show application details",
        "operationId": "getApplication",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Application"
            },
            "examples": {
              "entity_id": "18230:561:271275765",
              "name": "App-1",
              "entity_type": "Application",
              "create_time": 1509410056733,
              "created_by": "admin@local",
              "last_modified_time": 0,
              "last_modified_by": ""
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Delete an application",
        "description": "Deleting an application deletes all the tiers of the application along with the application",
        "operationId": "deleteApplication",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/groups/applications/fetch": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get application details bulk",
        "description": "Get application details bulk",
        "operationId": "listApplicationsDetails",
        "parameters": [
          {
            "$ref": "#/parameters/Size"
          },
          {
            "$ref": "#/parameters/Cursor"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedApplicationListResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/groups/applications/{id}/tiers": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Create tier in application",
        "description": "Create a tier of an application by with specified membership criteria. The membership criteria id defined in terms of\nvirtual machines or ip addresses/subnet. Please refer to API Guide on how to construct membership criteria.",
        "operationId": "addTier",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TierRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Tier"
            },
            "examples": {
              "entity_id": "18230:562:1266458745",
              "name": "tier-1",
              "entity_type": "Tier",
              "group_membership_criteria": [
                {
                  "membership_type": "SearchMembershipCriteria",
                  "search_membership_criteria": {
                    "entity_type": "VirtualMachine",
                    "filter": "security_groups.entity_id = '18230:82:604573173'"
                  }
                }
              ],
              "application": {
                "entity_id": "18230:561:271275765",
                "entity_type": "Application"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "List tiers of an application",
        "description": "List tiers of an application",
        "operationId": "listApplicationTiers",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TierListResponse"
            },
            "examples": {
              "results": [
                {
                  "entity_id": "18230:562:1266458745",
                  "name": "tier-1",
                  "entity_type": "Tier",
                  "group_membership_criteria": [
                    {
                      "membership_type": "SearchMembershipCriteria",
                      "search_membership_criteria": {
                        "entity_type": "VirtualMachine",
                        "filter": "security_groups.entity_id = '18230:82:604573173'"
                      }
                    }
                  ],
                  "application": {
                    "entity_id": "18230:561:271275765",
                    "entity_type": "Application"
                  }
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/groups/applications/{id}/tiers/{tier-id}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Show tier details",
        "description": "Show tier details",
        "operationId": "getApplicationTier",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "name": "tier-id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tier"
            },
            "examples": {
              "entity_id": "18230:562:1266458745",
              "name": "tier-1",
              "entity_type": "Tier",
              "group_membership_criteria": [
                {
                  "membership_type": "SearchMembershipCriteria",
                  "search_membership_criteria": {
                    "entity_type": "VirtualMachine",
                    "filter": "security_groups.entity_id = '18230:82:604573173'"
                  }
                }
              ],
              "application": {
                "entity_id": "18230:561:271275765",
                "entity_type": "Application"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Delete tier",
        "description": "Delete tier of an application",
        "operationId": "deleteTier",
        "parameters": [
          {
            "$ref": "#/parameters/Identifier"
          },
          {
            "name": "tier-id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/groups/tiers/{tier-id}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Show tier details",
        "description": "Show tier details",
        "operationId": "getTier",
        "parameters": [
          {
            "name": "tier-id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Header",
            "required": true,
            "type": "string",
            "format": "NetworkInsight <token>"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tier"
            },
            "examples": {
              "entity_id": "18230:562:1266458745",
              "name": "tier-1",
              "entity_type": "Tier",
              "group_membership_criteria": [
                {
                  "membership_type": "SearchMembershipCriteria",
                  "search_membership_criteria": {
                    "entity_type": "VirtualMachine",
                    "filter": "security_groups.entity_id = '18230:82:604573173'"
                  }
                }
              ],
              "application": {
                "entity_id": "18230:561:271275765",
                "entity_type": "Application"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/micro-seg/recommended-rules": {
      "post": {
        "tags": [
          "Microsegmentation"
        ],
        "summary": "Get logical recommended rules",
        "description": "Get recommended firewall rules based on the flow data gathered by vRealize Network Insight.\nThis API provides service to retrieve recommended rules based on flow traffic that is observed between\ntwo groups OR for a single group based on all the inbound and outboud traffic for that group.\nIn case two groups are provided, both the groups should be of same type.\nCurrently supported groups are Application, Tier, NSXSecurityGroup, EC2SecurityGroup.",
        "operationId": "listRecommendedRules",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Recommended Rules Request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RecommendedRulesRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RecommendedRules"
            },
            "examples": {
              "results": [
                {
                  "sources": [
                    {
                      "entity_id": "10000:562:1904698621",
                      "entity_type": "Tier"
                    }
                  ],
                  "destinations": [
                    {
                      "entity_id": "10000:562:1780351215",
                      "entity_type": "Tier"
                    }
                  ],
                  "protocols": [
                    "UDP"
                  ],
                  "port_ranges": [
                    {
                      "start": 53,
                      "end": 53
                    },
                    {
                      "start": 1025,
                      "end": 1025
                    }
                  ],
                  "action": "ALLOW"
                }
              ],
              "time_range": {
                "start_time_epoch": 1508996919391,
                "end_time_epoch": 1509083319391
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/micro-seg/recommended-rules/nsx": {
      "post": {
        "tags": [
          "Microsegmentation"
        ],
        "summary": "Export recommended rules for NSX-V",
        "description": "Export recommended firewall rules based on the flow data gathered by vRealize Network Insight in NSX-V compatible\nformat",
        "operationId": "exportNsxRecommendedRules",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "NSX Recommended Rules Request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RecommendedRulesRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/search": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Search entities",
        "description": "Using search API you can search vRealize Network Insight entities by specifying entity type and filter expression.\nA filter expression is a predicate expression (similar to SQL where clause) used to define the search criteria.\nPlease refer to API Guide on details of how to construct filter expression. A successful search request will return a\nlist of entity ids that matches the search criteria.",
        "operationId": "searchEntities",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search Request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SearchRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedListResponseWithTime"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/settings/ip-tags/tag-ids": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Show ip tag ids",
        "description": "Show ip tag ids",
        "operationId": "getIpTagIds",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Header",
            "required": true,
            "type": "string",
            "format": "NetworkInsight <token>"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IpTagIdList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/settings/ip-tags/{tag-id}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Show ip tag details",
        "description": "Show ip tag details",
        "operationId": "getIpTag",
        "parameters": [
          {
            "name": "tag-id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Header",
            "required": true,
            "type": "string",
            "format": "NetworkInsight <token>"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IpTag"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/settings/ip-tags/{tag-id}/add": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Tag ip addresses with tag-id",
        "description": "Tag ip addresses with tag-id",
        "operationId": "addIpTag",
        "parameters": [
          {
            "name": "tag-id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Header",
            "required": true,
            "type": "string",
            "format": "NetworkInsight <token>"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Ip Tag",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpTag"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/settings/ip-tags/{tag-id}/remove": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Remove tag from ip addresses",
        "description": "Remove tag from ip addresses",
        "operationId": "removeIpTag",
        "parameters": [
          {
            "name": "tag-id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Header",
            "required": true,
            "type": "string",
            "format": "NetworkInsight <token>"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Ip Tag",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpTag"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    }
  },
  "definitions": {
    "UserCredential": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "admin@vrni.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        },
        "domain": {
          "$ref": "#/definitions/Domain"
        }
      }
    },
    "Domain": {
      "type": "object",
      "properties": {
        "domain_type": {
          "type": "string",
          "enum": [
            "LDAP",
            "LOCAL"
          ],
          "example": "LDAP"
        },
        "value": {
          "type": "string",
          "description": "domain value, not required for LOCAL domain",
          "example": "example.com"
        }
      }
    },
    "Token": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "expiry": {
          "description": "expiry epoch time in secs.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "VCenterDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseDataSource"
        },
        {
          "properties": {
            "credentials": {
              "$ref": "#/definitions/PasswordCredentials"
            }
          }
        }
      ],
      "example": {
        "entity_type": "VCenterDataSource",
        "entity_id": "1000:902:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.vc.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "admin@vsphere.local",
          "password": "thePassword"
        },
        "nickname": "vc1",
        "enabled": true,
        "notes": "VC 1"
      }
    },
    "BaseDataSource": {
      "type": "object",
      "discriminator": "entity_type",
      "properties": {
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "$ref": "#/definitions/DataSourceType"
        },
        "ip": {
          "type": "string",
          "example": "192.168.10.1"
        },
        "fqdn": {
          "type": "string",
          "example": "your.domain.com"
        },
        "proxy_id": {
          "type": "string",
          "description": "proxy vm which should register this vcenter",
          "example": "1000:104:12313412"
        },
        "nickname": {
          "type": "string",
          "example": "vc1"
        },
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "BaseDataSourceRequest": {
      "type": "object",
      "required": [
        "proxy_id",
        "nickname"
      ],
      "properties": {
        "ip": {
          "type": "string",
          "example": "192.168.10.1"
        },
        "fqdn": {
          "type": "string",
          "example": "your.domain.com"
        },
        "proxy_id": {
          "type": "string",
          "description": "proxy vm which should register this vcenter",
          "example": "1000:104:12313412"
        },
        "nickname": {
          "type": "string",
          "example": "vc1"
        },
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "VCenterDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseDataSourceRequest"
        },
        {
          "properties": {
            "credentials": {
              "$ref": "#/definitions/PasswordCredentials"
            }
          }
        }
      ]
    },
    "PasswordCredentials": {
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "AristaSwitchDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        }
      ],
      "example": {
        "entity_type": "AristaSwitchDataSource",
        "entity_id": "1000:906:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.vc.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "readonly",
          "password": "thePassword"
        },
        "nickname": "my nickname",
        "enabled": true,
        "notes": "my notes"
      }
    },
    "JuniperSwitchDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        }
      ],
      "example": {
        "entity_type": "JuniperSwitchDataSource",
        "entity_id": "1000:909:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.vc.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "readonly",
          "password": "thePassword"
        },
        "nickname": "my nickname",
        "enabled": true,
        "notes": "my notes"
      }
    },
    "CiscoSwitchDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        },
        {
          "properties": {
            "switch_type": {
              "$ref": "#/definitions/CiscoSwitchType"
            }
          }
        }
      ],
      "example": {
        "entity_type": "CiscoSwitchDataSource",
        "entity_id": "1000:905:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.vc.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "readonly",
          "password": "thePassword"
        },
        "nickname": "my nickname",
        "enabled": true,
        "notes": "my notes",
        "switch_type": "NEXUS_5K"
      }
    },
    "DellSwitchDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        },
        {
          "properties": {
            "switch_type": {
              "$ref": "#/definitions/DellSwitchType"
            }
          }
        }
      ],
      "example": {
        "entity_type": "DellSwitchDataSource",
        "entity_id": "1000:907:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.vc.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "readonly",
          "password": "thePassword"
        },
        "nickname": "my nickname",
        "enabled": true,
        "notes": "my notes",
        "switch_type": "S6000"
      }
    },
    "BrocadeSwitchDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        }
      ],
      "example": {
        "entity_type": "BrocadeSwitchDataSource",
        "entity_id": "1000:908:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.vc.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "readonly",
          "password": "thePassword"
        },
        "nickname": "my nickname",
        "enabled": true,
        "notes": "my notes"
      }
    },
    "UCSManagerDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        }
      ]
    },
    "HPVCManagerDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        }
      ]
    },
    "HPOneViewManagerDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        }
      ]
    },
    "UCSManagerDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        }
      ],
      "example": {
        "entity_type": "UCSManagerDataSource",
        "entity_id": "1000:912:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.vc.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "readonly",
          "password": "thePassword"
        },
        "nickname": "my nickname",
        "enabled": true,
        "notes": "my notes"
      }
    },
    "HPVCManagerDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        }
      ],
      "example": {
        "entity_type": "HPVCManagerDataSource",
        "entity_id": "1000:914:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.vc.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "readonly",
          "password": "thePassword"
        },
        "nickname": "my nickname",
        "enabled": true,
        "notes": "my notes"
      }
    },
    "HPOneViewManagerDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        }
      ],
      "example": {
        "entity_type": "HPOneViewManagerDataSource",
        "entity_id": "1000:915:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.vc.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "readonly",
          "password": "thePassword"
        },
        "nickname": "my nickname",
        "enabled": true,
        "notes": "my notes"
      }
    },
    "SwitchDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseDataSourceRequest"
        },
        {
          "properties": {
            "credentials": {
              "$ref": "#/definitions/PasswordCredentials"
            }
          }
        }
      ]
    },
    "SwitchDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseDataSource"
        },
        {
          "properties": {
            "credentials": {
              "$ref": "#/definitions/PasswordCredentials"
            }
          }
        }
      ]
    },
    "CiscoSwitchDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSourceRequest"
        },
        {
          "properties": {
            "switch_type": {
              "$ref": "#/definitions/CiscoSwitchType"
            }
          }
        }
      ]
    },
    "JuniperSwitchDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSourceRequest"
        }
      ]
    },
    "AristaSwitchDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSourceRequest"
        }
      ]
    },
    "BrocadeSwitchDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSourceRequest"
        }
      ]
    },
    "DellSwitchDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSourceRequest"
        },
        {
          "properties": {
            "switch_type": {
              "$ref": "#/definitions/DellSwitchType"
            }
          }
        }
      ]
    },
    "CiscoSwitchType": {
      "type": "string",
      "enum": [
        "CATALYST_3000",
        "CATALYST_4500",
        "CATALYST_6500",
        "NEXUS_5K",
        "NEXUS_7K",
        "NEXUS_9K"
      ]
    },
    "DellSwitchType": {
      "type": "string",
      "enum": [
        "FORCE_10_MXL_10",
        "POWERCONNECT_8024",
        "S4048",
        "Z9100",
        "S6000"
      ]
    },
    "CheckpointFirewallDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        }
      ],
      "example": {
        "entity_type": "CheckpointFirewallDataSource",
        "entity_id": "1000:910:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.vc.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "readonly",
          "password": "thePassword"
        },
        "nickname": "my nickname",
        "enabled": true,
        "notes": "my notes"
      }
    },
    "PanFirewallDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        }
      ],
      "example": {
        "entity_type": "PanFirewallDataSource",
        "entity_id": "1000:911:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.vc.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "readonly",
          "password": "thePassword"
        },
        "nickname": "my nickname",
        "enabled": true,
        "notes": "my notes"
      }
    },
    "CheckpointFirewallDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSourceRequest"
        }
      ]
    },
    "PanFirewallDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSourceRequest"
        }
      ]
    },
    "NSXVManagerDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseDataSource"
        },
        {
          "properties": {
            "credentials": {
              "$ref": "#/definitions/PasswordCredentials"
            },
            "vcenter_id": {
              "type": "string",
              "description": "Associated vcenter data source entity Id"
            },
            "ipfix_enabled": {
              "type": "boolean",
              "default": false
            },
            "central_cli_enabled": {
              "type": "boolean",
              "default": false
            }
          }
        }
      ],
      "example": {
        "entity_type": "NSXVManagerDataSource",
        "entity_id": "1000:903:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.vc.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "admin@vsphere.local",
          "password": "thePassword"
        },
        "nickname": "my nickname",
        "enabled": true,
        "notes": "my notes",
        "ipfix_enabled": false,
        "central_cli_enabled": true
      }
    },
    "NSXTManagerDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchDataSource"
        }
      ],
      "example": {
        "entity_type": "NSXTManagerDataSource",
        "entity_id": "1000:904:12890123",
        "ip": "192.168.10.1",
        "fqdn": "go.nsxt.org",
        "proxy_id": "1000:104:12313412",
        "credentials": {
          "username": "admin@vsphere.local",
          "password": "thePassword"
        },
        "nickname": "my nickname",
        "enabled": true,
        "notes": "my notes"
      }
    },
    "NSXControllerDataCollection": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "controller_password": {
          "type": "string"
        }
      }
    },
    "NSXVManagerDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseDataSourceRequest"
        },
        {
          "properties": {
            "credentials": {
              "$ref": "#/definitions/PasswordCredentials"
            },
            "vcenter_id": {
              "type": "string",
              "description": "Associated vcenter data source entity Id"
            },
            "ipfix_enabled": {
              "type": "boolean",
              "default": false
            },
            "central_cli_enabled": {
              "type": "boolean",
              "default": false
            }
          },
          "required": [
            "vcenter_id",
            "credentials"
          ]
        }
      ]
    },
    "NSXTManagerDataSourceRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseDataSourceRequest"
        },
        {
          "properties": {
            "credentials": {
              "$ref": "#/definitions/PasswordCredentials"
            }
          },
          "required": [
            "credentials"
          ]
        }
      ]
    },
    "DatasourceHealth": {
      "type": "object",
      "description": "Datasource Health state",
      "properties": {
        "health_status": {
          "type": "string",
          "enum": [
            "HEALTHY",
            "HEALTHY_WITH_WARNINGS",
            "UNHEALTHY"
          ]
        },
        "health_message": {
          "type": "string"
        },
        "health_error_code": {
          "type": "string"
        }
      }
    },
    "SNMPConfig": {
      "type": "object",
      "properties": {
        "snmp_enabled": {
          "type": "boolean",
          "default": false
        },
        "snmp_version": {
          "type": "string",
          "enum": [
            "v2c",
            "v3"
          ]
        },
        "config_snmp_2c": {
          "$ref": "#/definitions/SNMP2cConfig"
        },
        "config_snmp_3": {
          "$ref": "#/definitions/SNMP3Config"
        }
      }
    },
    "SNMP3Config": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "context_name": {
          "type": "string"
        },
        "authentication_type": {
          "type": "string",
          "enum": [
            "NO_AUTH",
            "MD5",
            "SHA"
          ]
        },
        "authentication_password": {
          "type": "string"
        },
        "privacy_type": {
          "type": "string",
          "enum": [
            "AES",
            "DES",
            "AES128",
            "AES192",
            "AES256",
            "3DES",
            "NO_PRIV"
          ]
        },
        "privacy_password": {
          "type": "string"
        }
      }
    },
    "SNMP2cConfig": {
      "type": "object",
      "properties": {
        "community_string": {
          "type": "string"
        }
      }
    },
    "EntityId": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string",
          "description": "Entity Identifier",
          "example": "1000:104:12213212"
        },
        "entity_type": {
          "$ref": "#/definitions/EntityType"
        }
      }
    },
    "DataSourceEntityId": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string",
          "description": "Entity Identifier",
          "example": "1000:104:12213212"
        },
        "entity_type": {
          "$ref": "#/definitions/DataSourceType"
        }
      }
    },
    "FetchRequest": {
      "type": "object",
      "properties": {
        "entity_ids": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "entity_id": {
                "type": "string",
                "description": "Entity Identifier"
              },
              "entity_type": {
                "$ref": "#/definitions/EntityType"
              },
              "time": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      }
    },
    "EntityIdWithTime": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string",
          "description": "Entity Identifier"
        },
        "entity_type": {
          "$ref": "#/definitions/EntityType"
        },
        "time": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EC2Instance": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseVirtualMachine"
        },
        {
          "properties": {
            "vpc": {
              "$ref": "#/definitions/Reference"
            },
            "region": {
              "type": "string"
            }
          }
        }
      ]
    },
    "VirtualMachine": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseVirtualMachine"
        },
        {
          "properties": {
            "cluster": {
              "$ref": "#/definitions/Reference"
            },
            "resource_pool": {
              "$ref": "#/definitions/Reference"
            },
            "security_tags": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "layer2_networks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "host": {
              "$ref": "#/definitions/Reference"
            },
            "vlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vlan"
              }
            },
            "vendor_id": {
              "type": "string"
            },
            "vcenter_manager": {
              "$ref": "#/definitions/Reference"
            },
            "folders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "datastores": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "datacenter": {
              "$ref": "#/definitions/Reference"
            },
            "nsx_manager": {
              "$ref": "#/definitions/Reference"
            },
            "applied_to_source_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "applied_to_destination_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "source_inversion_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "destination_inversion_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            }
          }
        }
      ]
    },
    "BaseVirtualMachine": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "ip_addresses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpV4Address"
              }
            },
            "default_gateway": {
              "type": "string"
            },
            "vnics": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "security_groups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "source_firewall_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "destination_firewall_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "ip_sets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            }
          }
        }
      ]
    },
    "Cluster": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "total_cpus": {
              "type": "integer",
              "format": "int32"
            },
            "total_memory": {
              "type": "integer",
              "format": "int64"
            },
            "num_cpu_cores": {
              "type": "integer",
              "format": "int32"
            },
            "vendor_id": {
              "type": "string"
            },
            "num_hosts": {
              "type": "integer",
              "format": "int32"
            },
            "num_datastores": {
              "type": "integer",
              "format": "int32"
            },
            "nsx_manager": {
              "$ref": "#/definitions/Reference"
            },
            "vcenter_manager": {
              "$ref": "#/definitions/Reference"
            }
          }
        }
      ]
    },
    "SecurityTag": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "description": {
              "type": "string"
            },
            "direct_security_groups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "security_groups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "vendor_id": {
              "type": "string"
            },
            "nsx_manager": {
              "$ref": "#/definitions/Reference"
            }
          }
        }
      ]
    },
    "ResourcePool": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "vcenter_manager": {
              "$ref": "#/definitions/Reference"
            },
            "vendor_id": {
              "type": "string"
            }
          }
        }
      ]
    },
    "Host": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "vmknics": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "cluster": {
              "$ref": "#/definitions/Reference"
            },
            "vcenter_manager": {
              "$ref": "#/definitions/Reference"
            },
            "vm_count": {
              "type": "integer",
              "format": "int32"
            },
            "datastores": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "service_tag": {
              "type": "string"
            },
            "vendor_id": {
              "type": "string"
            },
            "nsx_manager": {
              "$ref": "#/definitions/Reference"
            },
            "maintenance_mode": {
              "type": "string"
            },
            "connection_state": {
              "type": "string"
            }
          }
        }
      ]
    },
    "DistributedVirtualPortgroup": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "vendor_id": {
              "type": "string"
            },
            "vcenter_manager": {
              "$ref": "#/definitions/Reference"
            },
            "distributed_virtual_switch": {
              "$ref": "#/definitions/Reference"
            }
          }
        }
      ]
    },
    "DistributedVirtualSwitch": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "vendor_id": {
              "type": "string"
            },
            "vcenter_manager": {
              "$ref": "#/definitions/Reference"
            },
            "hosts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            }
          }
        }
      ]
    },
    "VCDatacenter": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "vendor_id": {
              "type": "string"
            },
            "vcenter_manager": {
              "$ref": "#/definitions/Reference"
            }
          }
        }
      ]
    },
    "Datastore": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "vendor_id": {
              "type": "string"
            },
            "vcenter_manager": {
              "$ref": "#/definitions/Reference"
            }
          }
        }
      ]
    },
    "Folder": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "vendor_id": {
              "type": "string"
            },
            "vcenter_manager": {
              "$ref": "#/definitions/Reference"
            }
          }
        }
      ]
    },
    "Reference": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "$ref": "#/definitions/EntityType"
        }
      }
    },
    "IpV4Address": {
      "type": "object",
      "properties": {
        "ip_address": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "network_address": {
          "type": "string"
        }
      }
    },
    "Vmknic": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "ip_addresses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpV4Address"
              }
            },
            "vlan": {
              "$ref": "#/definitions/Vlan"
            },
            "host": {
              "$ref": "#/definitions/Reference"
            },
            "layer2_network": {
              "$ref": "#/definitions/Reference"
            }
          }
        }
      ]
    },
    "EC2NetworkInterface": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseVnic"
        }
      ]
    },
    "Vnic": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseVnic"
        }
      ]
    },
    "BaseVnic": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "ip_addresses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpV4Address"
              }
            },
            "layer2_network": {
              "$ref": "#/definitions/Reference"
            },
            "vlan": {
              "$ref": "#/definitions/Vlan"
            },
            "vm": {
              "$ref": "#/definitions/Reference"
            }
          }
        }
      ]
    },
    "VxlanLayer2Network": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseL2Network"
        },
        {
          "properties": {
            "segment_id": {
              "type": "integer",
              "format": "int32"
            },
            "vteps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "scope": {
              "$ref": "#/definitions/ScopeEnum"
            },
            "nsx_managers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            }
          }
        }
      ]
    },
    "VlanL2Network": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseL2Network"
        },
        {
          "properties": {
            "vlan_id": {
              "type": "string"
            },
            "distributed_virtual_switches": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "distributed_virtual_portgroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            }
          }
        }
      ]
    },
    "BaseL2Network": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "network_addresses": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "gateways": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "Vlan": {
      "type": "object",
      "properties": {
        "begin": {
          "type": "integer",
          "x-searchable": true
        },
        "end": {
          "type": "integer"
        }
      }
    },
    "NSXIPSet": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseIPSet"
        },
        {
          "properties": {
            "nsx_managers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "scope": {
              "$ref": "#/definitions/ScopeEnum"
            }
          }
        }
      ]
    },
    "EC2IPSet": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseIPSet"
        }
      ]
    },
    "BaseIPSet": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "ip_addresses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpV4Address"
              }
            },
            "ip_ranges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpAddressRange"
              }
            },
            "ip_numeric_ranges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpNumericRange"
              }
            },
            "parent_security_groups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "direct_source_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "direct_destination_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "indirect_source_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "indirect_destination_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "vendor_id": {
              "type": "string"
            },
            "vendor": {
              "type": "string"
            }
          }
        }
      ]
    },
    "IpAddressRange": {
      "properties": {
        "start_ip": {
          "type": "string"
        },
        "end_ip": {
          "type": "string"
        }
      }
    },
    "IpNumericRange": {
      "properties": {
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "end": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "NSXSecurityGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseSecurityGroup"
        },
        {
          "properties": {
            "nsx_managers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "scope": {
              "$ref": "#/definitions/ScopeEnum"
            },
            "ip_sets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "security_tags": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            }
          }
        }
      ]
    },
    "EC2SecurityGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseSecurityGroup"
        },
        {
          "properties": {
            "vpc": {
              "$ref": "#/definitions/Reference"
            },
            "region": {
              "type": "string"
            }
          }
        }
      ]
    },
    "BaseSecurityGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/Group"
        },
        {
          "properties": {
            "direct_source_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "direct_destination_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "indirect_source_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "indirect_destination_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "parents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "direct_members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "vendor_id": {
              "type": "string"
            },
            "excluded_members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            }
          }
        }
      ]
    },
    "RuleSet": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "firewall": {
          "$ref": "#/definitions/Reference"
        },
        "rule_set_type": {
          "type": "string",
          "enum": [
            "NSX_STANDARD",
            "NSX_REDIRECT",
            "AWS_STANDARD"
          ]
        }
      }
    },
    "BaseFirewallRule": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "rule_id": {
              "type": "string"
            },
            "section_id": {
              "type": "string"
            },
            "section_name": {
              "type": "string"
            },
            "sequence_number": {
              "type": "integer"
            },
            "source_any": {
              "type": "boolean"
            },
            "destination_any": {
              "type": "boolean"
            },
            "service_any": {
              "type": "boolean"
            },
            "sources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "destinations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "services": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "action": {
              "$ref": "#/definitions/FirewallAction"
            },
            "disabled": {
              "type": "boolean"
            },
            "source_inversion": {
              "type": "boolean"
            },
            "destination_inversion": {
              "type": "boolean"
            },
            "port_ranges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PortRange"
              }
            }
          }
        }
      ]
    },
    "NSXFirewallRule": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseFirewallRule"
        },
        {
          "properties": {
            "logging_enabled": {
              "type": "boolean"
            },
            "direction": {
              "$ref": "#/definitions/FirewallDirection"
            },
            "scope": {
              "$ref": "#/definitions/ScopeEnum"
            },
            "nsx_managers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            }
          }
        }
      ]
    },
    "NSXRedirectRule": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseFirewallRule"
        },
        {
          "properties": {
            "logging_enabled": {
              "type": "boolean"
            },
            "direction": {
              "$ref": "#/definitions/FirewallDirection"
            },
            "service_profile": {
              "type": "string"
            }
          }
        }
      ]
    },
    "EC2SGFirewallRule": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseFirewallRule"
        },
        {
          "properties": {
            "vpc": {
              "$ref": "#/definitions/Reference"
            },
            "direction": {
              "$ref": "#/definitions/EC2FirewallDirection"
            },
            "owner_security_group": {
              "$ref": "#/definitions/Reference"
            }
          }
        }
      ]
    },
    "EC2FirewallDirection": {
      "type": "string",
      "enum": [
        "INBOUND",
        "OUTBOUND"
      ]
    },
    "FirewallDirection": {
      "type": "string",
      "enum": [
        "IN",
        "OUT",
        "INOUT"
      ]
    },
    "FirewallAction": {
      "type": "string",
      "enum": [
        "ALLOW",
        "ACCEPT",
        "DENY",
        "DROP",
        "REJECT",
        "REDIRECT",
        "DO_NOT_REDIRECT"
      ]
    },
    "Group": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            }
          }
        }
      ]
    },
    "VCenterManager": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseManager"
        },
        {
          "properties": {
            "ip_address": {
              "$ref": "#/definitions/IpV4Address"
            },
            "fqdn": {
              "type": "string"
            },
            "vm": {
              "$ref": "#/definitions/Reference"
            },
            "nsx_manager": {
              "$ref": "#/definitions/Reference"
            },
            "vc_uuid": {
              "type": "string"
            }
          }
        }
      ]
    },
    "NSXVManager": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseNSXManager"
        },
        {
          "properties": {
            "fqdn": {
              "type": "string"
            },
            "ip_address": {
              "$ref": "#/definitions/IpV4Address"
            },
            "version": {
              "type": "string"
            },
            "primary_nsx_manager": {
              "$ref": "#/definitions/Reference"
            },
            "vm": {
              "$ref": "#/definitions/Reference"
            },
            "role": {
              "type": "string"
            }
          }
        }
      ]
    },
    "BaseNSXManager": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseManager"
        }
      ]
    },
    "BaseManager": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        }
      ]
    },
    "Flow": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "source_vm": {
              "$ref": "#/definitions/Reference"
            },
            "destination_vm": {
              "$ref": "#/definitions/Reference"
            },
            "source_vnic": {
              "$ref": "#/definitions/Reference"
            },
            "destination_vnic": {
              "$ref": "#/definitions/Reference"
            },
            "source_vpc": {
              "$ref": "#/definitions/Reference"
            },
            "destination_vpc": {
              "$ref": "#/definitions/Reference"
            },
            "source_datacenter": {
              "$ref": "#/definitions/Reference"
            },
            "destination_datacenter": {
              "$ref": "#/definitions/Reference"
            },
            "source_ip": {
              "$ref": "#/definitions/IpV4Address"
            },
            "destination_ip": {
              "$ref": "#/definitions/IpV4Address"
            },
            "source_l2_network": {
              "$ref": "#/definitions/Reference"
            },
            "destination_l2_network": {
              "$ref": "#/definitions/Reference"
            },
            "port": {
              "$ref": "#/definitions/PortRange"
            },
            "source_folders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "destination_folders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "source_resource_pool": {
              "$ref": "#/definitions/Reference"
            },
            "destination_resource_pool": {
              "$ref": "#/definitions/Reference"
            },
            "source_cluster": {
              "$ref": "#/definitions/Reference"
            },
            "destination_cluster": {
              "$ref": "#/definitions/Reference"
            },
            "protocol": {
              "$ref": "#/definitions/Protocol"
            },
            "source_ip_sets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "destination_ip_sets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "source_security_groups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "destination_security_groups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "traffic_type": {
              "$ref": "#/definitions/FlowTrafficType"
            },
            "source_security_tags": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "destination_security_tags": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "source_host": {
              "$ref": "#/definitions/Reference"
            },
            "destination_host": {
              "$ref": "#/definitions/Reference"
            },
            "source_vm_tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "destination_vm_tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "within_host": {
              "type": "boolean"
            },
            "firewall_action": {
              "$ref": "#/definitions/FirewallAction"
            },
            "flow_tag": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FlowTag"
              }
            }
          }
        }
      ]
    },
    "FlowTag": {
      "type": "string",
      "enum": [
        "TAG_TRAFFIC_TYPE_UNKNOWN",
        "TAG_INTERNET_TRAFFIC",
        "TAG_EAST_WEST_TRAFFIC",
        "TAG_VM_VM_TRAFFIC",
        "TAG_VM_PHY_TRAFFIC",
        "TAG_PHY_PHY_TRAFFIC",
        "TAG_SRC_IP_VMKNIC",
        "TAG_DST_IP_VMKNIC",
        "TAG_SRC_IP_VM",
        "TAG_DST_IP_VM",
        "TAG_SRC_IP_INTERNET",
        "TAG_DST_IP_INTERNET",
        "TAG_SRC_IP_PHYSICAL",
        "TAG_DST_IP_PHYSICAL",
        "TAG_SAME_HOST",
        "TAG_DIFF_HOST",
        "TAG_SHARED_SERVICE",
        "TAG_NOT_SHARED_SERVICE",
        "TAG_NETWORK_SWITCHED",
        "TAG_NETWORK_ROUTED",
        "TAG_NETWORK_UNKNOWN",
        "TAG_SRC_IP_VTEP",
        "TAG_DST_IP_VTEP",
        "TAG_UNICAST",
        "TAG_BROADCAST",
        "TAG_MULTICAST",
        "TAG_SRC_IP_LINK_LOCAL",
        "TAG_DST_IP_LINK_LOCAL",
        "TAG_SRC_IP_CLASS_E",
        "TAG_DST_IP_CLASS_E",
        "TAG_SRC_IP_CLASS_A_RESERVED",
        "TAG_DST_IP_CLASS_A_RESERVED",
        "TAG_INVALID_IP_PACKETS",
        "TAG_NOT_ANALYZED",
        "TAG_GENERIC_INTERNET_SRC_IP",
        "TAG_SNAT_DNAT_FLOW",
        "TAG_MULTINICS",
        "TAG_SRC_VC",
        "TAG_DST_VC",
        "TAG_SRC_AWS",
        "TAG_DST_AWS",
        "TAG_WITHIN_DC",
        "TAG_DIFF_DC",
        "TAG_WITHIN_VPC",
        "TAG_DIFF_VPC"
      ]
    },
    "Protocol": {
      "type": "string",
      "enum": [
        "TCP",
        "UDP",
        "OTHER"
      ]
    },
    "FlowTrafficType": {
      "type": "string",
      "enum": [
        "INTERNET_TRAFFIC",
        "EAST_WEST_TRAFFIC"
      ]
    },
    "ScopeEnum": {
      "type": "string",
      "enum": [
        "UNIVERSAL",
        "GLOBAL"
      ]
    },
    "PortRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "type": "integer",
          "format": "int32"
        },
        "display": {
          "type": "string"
        },
        "iana_name": {
          "type": "string"
        },
        "iana_port_display": {
          "type": "string"
        }
      }
    },
    "SimplePortRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NSXService": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseService"
        },
        {
          "properties": {
            "nsx_managers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "scope": {
              "$ref": "#/definitions/ScopeEnum"
            },
            "vendor_id": {
              "type": "string"
            }
          }
        }
      ]
    },
    "BaseService": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "protocol": {
              "type": "string"
            },
            "port_ranges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PortRange"
              }
            }
          }
        }
      ]
    },
    "EC2Service": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseService"
        }
      ]
    },
    "NSXServiceGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseServiceGroup"
        },
        {
          "properties": {
            "scope": {
              "$ref": "#/definitions/ScopeEnum"
            },
            "nsx_managers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "vendor_id": {
              "type": "string"
            }
          }
        }
      ]
    },
    "BaseServiceGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/Group"
        }
      ]
    },
    "VPC": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "cidr_block": {
              "$ref": "#/definitions/IpV4Address"
            },
            "state": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "default_vpc": {
              "type": "boolean"
            },
            "vendor_id": {
              "type": "string"
            },
            "last_synched_time": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "NSXDistributedFirewall": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseFirewall"
        },
        {
          "properties": {
            "vendor_id": {
              "type": "string"
            }
          }
        }
      ]
    },
    "EC2Firewall": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseFirewall"
        }
      ]
    },
    "BaseFirewall": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "firewall_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleSet"
              }
            },
            "exclusions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            }
          }
        }
      ]
    },
    "SearchRequest": {
      "type": "object",
      "properties": {
        "entity_type": {
          "$ref": "#/definitions/AllEntityType"
        },
        "filter": {
          "type": "string",
          "description": "query filter"
        },
        "sort_by": {
          "$ref": "#/definitions/SortByClause"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "cursor": {
          "type": "string"
        },
        "time_range": {
          "$ref": "#/definitions/TimeRange"
        }
      }
    },
    "SortByClause": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "order": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      }
    },
    "TimeRange": {
      "type": "object",
      "properties": {
        "start_time": {
          "type": "integer",
          "format": "int64"
        },
        "end_time": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ProblemEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEvent"
        },
        {
          "properties": {
            "severity": {
              "type": "string",
              "enum": [
                "CRITICAL",
                "MODERATE",
                "WARNING",
                "INFO"
              ]
            },
            "event_close_time_epoch_ms": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "BaseEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "anchor_entities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "related_entities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "message": {
              "type": "string"
            },
            "event_tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "admin_state": {
              "type": "string",
              "enum": [
                "ENABLED",
                "DISABLED"
              ]
            },
            "archived": {
              "type": "boolean"
            },
            "event_time_epoch_ms": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "PagedListResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityId"
          }
        },
        "cursor": {
          "type": "string"
        },
        "total_count": {
          "type": "integer"
        },
        "start_time": {
          "type": "integer",
          "format": "int64"
        },
        "end_time": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PagedApplicationListResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Application"
          }
        },
        "cursor": {
          "type": "string"
        },
        "total_count": {
          "type": "integer"
        }
      }
    },
    "SimpleListResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityId"
          }
        },
        "total_count": {
          "type": "integer"
        }
      }
    },
    "TierListResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tier"
          }
        }
      }
    },
    "DataSourceListResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSourceEntityId"
          }
        },
        "total_count": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "NodeListResult": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeId"
          }
        },
        "total_count": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "PagedListResponseWithTime": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityIdWithTime"
          }
        },
        "cursor": {
          "type": "string",
          "example": "ML12eu02=="
        },
        "total_count": {
          "type": "integer",
          "example": 100
        },
        "start_time": {
          "type": "integer",
          "format": "int64",
          "example": 1504739809
        },
        "end_time": {
          "type": "integer",
          "format": "int64",
          "example": 1504739809
        }
      }
    },
    "BaseEntity": {
      "type": "object",
      "discriminator": "entity_type",
      "properties": {
        "entity_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "entity_type": {
          "$ref": "#/definitions/EntityType"
        }
      }
    },
    "DataSourceType": {
      "type": "string",
      "enum": [
        "CiscoSwitchDataSource",
        "DellSwitchDataSource",
        "AristaSwitchDataSource",
        "BrocadeSwitchDataSource",
        "JuniperSwitchDataSource",
        "VCenterDataSource",
        "NSXVManagerDataSource",
        "UCSManagerDataSource",
        "HPVCManagerDataSource",
        "HPOneViewDataSource",
        "PanFirewallDataSource",
        "CheckpointFirewallDataSource",
        "NSXTManagerDataSource",
        "InfobloxManagerDataSource"
      ]
    },
    "NodeId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Entity Identifier",
          "example": "1000:104:12213212"
        },
        "entity_type": {
          "$ref": "#/definitions/NodeType"
        }
      }
    },
    "NodeType": {
      "type": "string",
      "enum": [
        "Node"
      ]
    },
    "EntityType": {
      "type": "string",
      "enum": [
        "VirtualMachine",
        "EC2Instance",
        "Host",
        "Vnic",
        "Vmknic",
        "VxlanLayer2Network",
        "VlanL2Network",
        "Cluster",
        "SecurityTag",
        "ResourcePool",
        "NSXIPSet",
        "EC2IPSet",
        "NSXSecurityGroup",
        "EC2SecurityGroup",
        "Flow",
        "ProblemEvent",
        "Application",
        "Tier",
        "NSXFirewallRule",
        "EC2SGFirewallRule",
        "NSXRedirectRule",
        "VCenterManager",
        "NSXVManager",
        "NSXService",
        "EC2Service",
        "VPC",
        "NSXDistributedFirewall",
        "EC2Firewall",
        "NSXServiceGroup",
        "DistributedVirtualSwitch",
        "DistributedVirtualPortgroup",
        "VCDatacenter",
        "Datastore",
        "Folder"
      ]
    },
    "MetaEntityType": {
      "type": "string",
      "enum": [
        "Group",
        "BaseSecurityGroup",
        "BaseEvent",
        "BaseVirtualMachine",
        "BaseFirewallRule",
        "BaseIPSet",
        "BaseL2Network",
        "BaseManager",
        "BaseNSXManager",
        "BaseFirewall",
        "BaseService",
        "BaseServiceGroup",
        "BaseVnic"
      ]
    },
    "AllEntityType": {
      "type": "string",
      "enum": [
        "Group",
        "BaseSecurityGroup",
        "BaseEvent",
        "BaseVirtualMachine",
        "BaseFirewallRule",
        "BaseIPSet",
        "BaseL2Network",
        "BaseFirewall",
        "BaseService",
        "BaseServiceGroup",
        "BaseVnic",
        "VirtualMachine",
        "EC2Instance",
        "Host",
        "Vnic",
        "Vmknic",
        "VxlanLayer2Network",
        "VlanL2Network",
        "Cluster",
        "SecurityTag",
        "ResourcePool",
        "NSXIPSet",
        "EC2IPSet",
        "NSXSecurityGroup",
        "EC2SecurityGroup",
        "Flow",
        "ProblemEvent",
        "Application",
        "Tier",
        "NSXFirewallRule",
        "EC2SGFirewallRule",
        "NSXRedirectRule",
        "VCenterManager",
        "NSXVManager",
        "BaseManager",
        "BaseNSXManager",
        "NSXService",
        "EC2Service",
        "VPC",
        "NSXDistributedFirewall",
        "EC2Firewall",
        "NSXServiceGroup",
        "DistributedVirtualSwitch",
        "DistributedVirtualPortgroup",
        "VCDatacenter",
        "Datastore",
        "Folder"
      ]
    },
    "Node": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "entity_type": {
          "$ref": "#/definitions/NodeType"
        },
        "node_type": {
          "type": "string",
          "enum": [
            "PROXY_VM",
            "PLATFORM_VM"
          ]
        },
        "node_id": {
          "type": "string"
        },
        "ip_address": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Application": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "create_time": {
              "type": "integer",
              "format": "int64"
            },
            "created_by": {
              "type": "string"
            },
            "last_modified_time": {
              "type": "integer",
              "format": "int64"
            },
            "last_modified_by": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ApplicationRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "TierRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "group_membership_criteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupMembershipCriteria"
          }
        }
      },
      "example": {
        "name": "tier-1",
        "group_membership_criteria": [
          {
            "membership_type": "SearchMembershipCriteria",
            "search_membership_criteria": {
              "entity_type": "VirtualMachine",
              "filter": "security_groups.entity_id = '18230:82:604573173'"
            }
          }
        ]
      }
    },
    "Tier": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "properties": {
            "group_membership_criteria": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupMembershipCriteria"
              }
            },
            "application": {
              "$ref": "#/definitions/Reference"
            }
          }
        }
      ]
    },
    "GroupMembershipCriteria": {
      "type": "object",
      "description": "EntityType currently restricted to VirtualMachine",
      "properties": {
        "membership_type": {
          "type": "string",
          "enum": [
            "SearchMembershipCriteria",
            "IPAddressMembershipCriteria"
          ]
        },
        "ip_address_membership_criteria": {
          "$ref": "#/definitions/IpAddressMembershipCriteria"
        },
        "search_membership_criteria": {
          "$ref": "#/definitions/SearchMembershipCriteria"
        }
      }
    },
    "SearchMembershipCriteria": {
      "type": "object",
      "properties": {
        "entity_type": {
          "$ref": "#/definitions/AllEntityType"
        },
        "filter": {
          "type": "string",
          "description": "As defined in search end point"
        }
      }
    },
    "IpAddressMembershipCriteria": {
      "type": "object",
      "description": "Ip Address membership definition",
      "properties": {
        "ip_addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RecommendedRules": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedRule"
          }
        },
        "time_range": {
          "$ref": "#/definitions/TimeRange"
        }
      }
    },
    "RecommendedRule": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "protocols": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "port_ranges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimplePortRange"
          }
        },
        "action": {
          "type": "string",
          "enum": [
            "ALLOW",
            "DROP"
          ]
        }
      }
    },
    "RecommendedRulesRequest": {
      "type": "object",
      "properties": {
        "group_1": {
          "$ref": "#/definitions/MicroSecGroup"
        },
        "group_2": {
          "$ref": "#/definitions/MicroSecGroup"
        },
        "time_range": {
          "$ref": "#/definitions/TimeRange"
        }
      },
      "example": {
        "group_1": {
          "entity": {
            "entity_type": "Tier",
            "entity_id": "10000:562:1904698621"
          }
        },
        "group_2": {
          "entity": {
            "entity_type": "Tier",
            "entity_id": "10000:562:1780351215"
          }
        }
      }
    },
    "MicroSecGroup": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "NamesRequest": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameRequestParam"
          }
        }
      }
    },
    "NameRequestParam": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string"
        },
        "time": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "NamesResponse": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityName"
          }
        }
      }
    },
    "EntityName": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityIdWithTime"
        },
        {
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ApiError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          }
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VersionResponse": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string"
        }
      }
    },
    "IpTag": {
      "type": "object",
      "properties": {
        "tag_id": {
          "type": "string"
        },
        "subnets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ip_address_ranges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpAddressRange"
          }
        }
      }
    },
    "IpTagIdList": {
      "type": "object",
      "properties": {
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EntityWithTime": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string",
          "description": "Entity Identifier"
        },
        "entity_type": {
          "$ref": "#/definitions/EntityType"
        },
        "entity": {
          "$ref": "#/definitions/BaseEntity"
        },
        "time": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BulkFetchResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityWithTime"
          }
        }
      }
    },
    "EntityMetricsSchema": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSchema"
          }
        }
      }
    },
    "MetricSchema": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "intervals": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "description": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        }
      }
    },
    "MetricResponse": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "interval": {
          "type": "integer"
        },
        "unit": {
          "type": "string"
        },
        "pointlist": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "end": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}
