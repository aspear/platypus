{"swagger":"2.0","info":{"version":"1","title":"MEM API"},"host":"cc92.ssdevrd.com","basePath":"/api/mem","schemes":["https","http"],"paths":{"/activesync/accountpolicies":{"get":{"tags":["AccountPolicies"],"summary":"Get the list of Account policies.","description":"Adminstrator can setup account compliance polices for a location group.\r\nGiven a startindex and pagesize it gets account policies for a location group.\r\nIt supports caching of the policies as well.","operationId":"AccountPolicies_GetAccountPolicies","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[{"name":"invalidateCache","in":"query","description":"Invalidates the cache if true","required":false,"type":"boolean","default":""},{"name":"transId","in":"query","description":"Transaction id","required":false,"type":"uuid","default":""},{"name":"startIndex","in":"query","description":"Start index of page. (Indexed to zero)","required":false,"type":"integer","default":""},{"name":"pageSize","in":"query","description":"Page size","required":false,"type":"integer","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/AccountPolicyPagedSearchResultModel"}},"204":{"description":"No account policies found for locationgroupId"}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/processactivesyncevent":{"post":{"tags":["ActiveSync"],"summary":"Processes multiple Exchange ActiveSync events.","description":"It is to report device requests that are serviced by SEG device makes a requests for a particular command.\r\nAdds the payloads to the defined queue.","operationId":"ActiveSync_ProcessActiveSyncEvent","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[{"name":"activeSyncPayload","in":"body","description":"An array of active sync payloads","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ActiveSyncPayloadModel "}}}],"responses":{"200":{"description":"Request has been processed."},"400":{"description":"Bad Request {1000 : Active Sync Payloads should not be empty.}","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/emailsecuritytagpolicies":{"get":{"tags":["ActiveSync"],"summary":"Gets email Security Tag Policy.","description":"It is used to block or allow device based on email security tag.","operationId":"ActiveSync_GetEmailSecurityTagPolicies","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmailSecurityTagPolicyModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/impersonationcredentials":{"get":{"tags":["ActiveSync"],"summary":"The get impersonation credential payloads.","description":"credentials to impersonate the user","operationId":"ActiveSync_GetImpersonationCredentialPayloads","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[{"name":"invalidateCache","in":"query","description":"Invalidates the cache if true","required":false,"type":"","default":""},{"name":"transId","in":"query","description":"Transaction id","required":false,"type":"uuid","default":""},{"name":"startIndex","in":"query","description":"Start index of page","required":false,"type":"integer","default":""},{"name":"pageSize","in":"query","description":"Page size","required":false,"type":"integer","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ImpersonationCredentialPayloadPagedSearchResultModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/attachmentpolicies/getencryptionkeydatapayloads":{"get":{"tags":["AttachmentPolicies"],"summary":"Returns a list of encryption key data payloads.","description":"Encryption keys are used by SEG to encrypt attachments.","operationId":"AttachmentPolicies_GetEncryptionKeyDataPayloads","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"transid","in":"query","description":"Transaction id","required":false,"type":"uuid","default":""},{"name":"startindex","in":"query","description":"Start index of page","required":false,"type":"integer","default":""},{"name":"pagesize","in":"query","description":"Page size","required":false,"type":"integer","default":""},{"name":"invalidatecache","in":"query","description":"Invalidates the cache if true","required":false,"type":"","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EncryptionKeyDataPayloadPagedSearchResultModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/attachmentpolicies/getencryptionkeys":{"get":{"tags":["AttachmentPolicies"],"summary":"Returns a list of encryption key data payloads.","description":"Encryption keys are used by SEG to encrypt attachments.","operationId":"AttachmentPolicies_GetEncryptionKeys","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"transid","in":"query","description":"Transaction id","required":false,"type":"uuid","default":""},{"name":"startindex","in":"query","description":"Start index of page","required":false,"type":"integer","default":""},{"name":"pagesize","in":"query","description":"Page size","required":false,"type":"integer","default":""},{"name":"invalidatecache","in":"query","description":"Invalidates the cache if true","required":false,"type":"","default":""},{"name":"dbSyncedTime","in":"query","description":"Last db synced time","required":false,"type":"string","format":"date-time","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EncryptionKeyDataPayloadPagedSearchResultModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/managedattachmentpolicies":{"get":{"tags":["AttachmentPolicies"],"summary":"Returns the general attachment policy for managed devices.","description":"Encryption keys are used by SEG to encrypt attachments. managed general attachment policies apply to attachments in managed devices","operationId":"AttachmentPolicies_GetManagedGeneralAttachmentPolicy","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/GeneralAttachmentPolicyModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/unmanagedattachmentpolicies":{"get":{"tags":["AttachmentPolicies"],"summary":"Returns the general attachment policy for unmanaged devices.","description":"Unmanaged General attachment policies apply to attachment transformations in unmanaged devices.","operationId":"AttachmentPolicies_GetUnmanagedGeneralAttachmentPolicy","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/GeneralAttachmentPolicyModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/attachmentpolicies/deletedencryptionkeydatapayloads":{"get":{"tags":["AttachmentPolicies"],"summary":"Returns a list of deleted encryption key data payloads.","description":"Encryption keys are used by SEG to encrypt attachments. Deleted keys correspond to the devices that got deleted or unenrolled.","operationId":"AttachmentPolicies_GetDeletedEncryptionKeyDataPayloads","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"transid","in":"query","description":"Transaction id","required":false,"type":"uuid","default":""},{"name":"startindex","in":"query","description":"Start index of page","required":false,"type":"integer","default":""},{"name":"pagesize","in":"query","description":"Page size","required":false,"type":"integer","default":""},{"name":"invalidatecache","in":"query","description":"Invalidates the cache if true","required":false,"type":"","default":""},{"name":"dbSyncedTime","in":"query","description":"Last db synced time","required":false,"type":"string","format":"date-time","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EncryptionKeyDataPayloadPagedSearchResultModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesyncdevices/awmailclientdevicememcompliancestatus":{"post":{"tags":["AwMailClientDevices"],"summary":"Retrieves Status for the list of AwInbox and Boxer Devices.","operationId":"AwMailClientDevices_GetAwMailClientdeviceMEMComplianceStatus","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[{"name":"deviceIds","in":"body","description":"list of deviceIds","required":true,"schema":{"type":"array","items":{"format":"int32","type":"integer"}}},{"name":"locationgroupid","in":"query","description":"location group id","required":false,"type":"string","default":""}],"responses":{},"security":[{"BasicAuth":[]},{"CmsAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true}},"/activesync/awmailclientusers":{"get":{"tags":["AwMailClientUsers"],"summary":"Retrieves list of AwInbox and Boxer Users for the OG\r\nReturns Paged Results\r\nif syncDatetimeStamp filter is specified, returns only AwInbox and Boxer Users added/edited since then","operationId":"AwMailClientUsers_GetAwMailClientUsers","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[{"name":"locationgroupid","in":"query","description":"Location group id","required":false,"type":"string","default":""},{"name":"startIndex","in":"query","description":"Start Index","required":false,"type":"string","default":""},{"name":"pagesize","in":"query","description":"Page size","required":false,"type":"string","default":""},{"name":"orderby","in":"query","description":"Order by","required":false,"type":"string","default":""},{"name":"sortorder","in":"query","description":"Sorting order","required":false,"type":"string","default":""},{"name":"syncDatetimeStamp","in":"query","description":"Synchronizing datetime stamp","required":false,"type":"string","default":""},{"name":"invalidatecache","in":"query","description":"Invalidate cache","required":false,"type":"string","default":""},{"name":"transId","in":"query","description":"Transaction Id","required":false,"type":"string","default":""}],"responses":{},"security":[{"BasicAuth":[]},{"CmsAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true}},"/settings/classicseg":{"post":{"tags":["ClassicSegSettingsV1"],"summary":"New - Creates a new configuration for Classic SEG MEM Flavor","description":"Creates a new Classic SEG MEM Configuration based on the details provided in the payload.","operationId":"ClassicSegSettingsV1_CreateClassicSegMemConfiguration","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"settingsData","in":"body","description":"Settings to create new Classic SEG MEM Configuration.(Required)","required":true,"schema":{"$ref":"#/definitions/ClassicSegSettingsCreateRequestV1Model"}}],"responses":{"201":{"description":"MEM configuration was created successfully.","headers":{"Location":{"description":"/classicseg/{memconfiguuid}","type":"string"}}},"500":{"description":"Internal Server Error1. {4002: Invalid SEG configuration}2. {4009: Unable to save/update mem configuration}","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true}},"/settings/classicseg/{memconfiguuid}":{"get":{"tags":["ClassicSegSettingsV1"],"summary":"New - Gets settings for Classic SEG MEM Flavor By Id","description":"Gets Classic SEG MEM Configuration Settings by the id provided.","operationId":"ClassicSegSettingsV1_GetClassicSegMemConfigurationById","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"memconfiguuid","in":"path","description":"unique id for Classic SEG MEM Configuration.(Required)","required":true,"type":"string","format":"uuid"}],"responses":{"200":{"description":"MEM configuration was found.","schema":{"$ref":"#/definitions/ClassicSegSettingsV1Model"}},"404":{"description":"Not Found1. {4007: No MEM/SEG configuration found}","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true},"put":{"tags":["ClassicSegSettingsV1"],"summary":"New - Updates settings for Classic SEG MEM Flavor","description":"Updates configuration settings used for Classic SEG MEM Flavor.","operationId":"ClassicSegSettingsV1_UpdateClassicSegMemConfiguration","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"memconfiguuid","in":"path","description":"unique id for Classic SEG MEM Configuration.(Required)","required":true,"type":"string","format":"uuid"},{"name":"settingsData","in":"body","description":"Settings to update Classic SEG MEM Configuration.(Required)","required":true,"schema":{"$ref":"#/definitions/ClassicSegSettingsUpdateRequestV1Model"}}],"responses":{"204":{"description":"MEM configuration was updated successfully."},"404":{"description":"Not Found1. {4007: No MEM/SEG configuration found}","schema":{"$ref":"#/definitions/BaseExceptionModel"}},"500":{"description":"Internal Server Error1. {4009: Unable to save/update mem configuration}","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true},"delete":{"tags":["ClassicSegSettingsV1"],"summary":"New - Deletes Classic SEG MEM Flavor Settings by Id","description":"Deletes Classic SEG MEM Configuration by the id provided.","operationId":"ClassicSegSettingsV1_DeleteClassicSegMemConfigurationById","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"memconfiguuid","in":"path","description":"unique id for Classic SEG MEM Configuration.(Required)","required":true,"type":"string","format":"uuid"}],"responses":{"204":{"description":"MEM configuration deleted successfully."},"404":{"description":"Not Found1. {4007: No MEM/SEG configuration found}","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true}},"/complianceengine":{"post":{"tags":["ComplianceEngineV1"],"summary":"New - Starts the email compliance check for an organization group.","description":"Starts the compliance engine to do compliance check on the devices of an organization group.","operationId":"ComplianceEngineV1_Initiate","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"complianceRequestPayload","in":"body","description":"(Required)","required":true,"schema":{"$ref":"#/definitions/ComplianceRequestV1Model"}}],"responses":{"202":{"description":"Accepted","schema":{"$ref":"#/definitions/ComplianceResponseV1Model"}},"400":{"description":"1. { 4013 : Compliance check is already in progress. Please wait for its completion.}","schema":{"$ref":"#/definitions/BaseExceptionModel"}},"500":{"description":"1. { 4012 : Failed to initiate the compliance check.}","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/complianceengine/status":{"get":{"tags":["ComplianceEngineV1"],"summary":"New - Gets the state information of compliance engine of an organization group.","description":"Gets the status information which tells the current state of the compliance engine to the user.","operationId":"ComplianceEngineV1_Status","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ComplianceStateV1Model"}},"204":{"description":"1. {4011 : There is no compliance check operation running for this organization group.}"}},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/activesync/devicepolicies":{"get":{"tags":["DevicePolicies"],"summary":"Get the list of Account policies","description":"Device policies determine if the device is managed or unmanaged","operationId":"DevicePolicies_GetDevicePolicies","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"invalidateCache","in":"query","description":"Invalidates the cache if true","required":false,"type":"","default":""},{"name":"transId","in":"query","description":"Transaction id","required":false,"type":"uuid","default":""},{"name":"startIndex","in":"query","description":"Start index of page","required":false,"type":"integer","default":""},{"name":"pageSize","in":"query","description":"Page size","required":false,"type":"integer","default":""},{"name":"memConfigId","in":"query","description":"MEM Config ID","required":false,"type":"integer","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/DevicePolicyPagedSearchResultModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/memconfigdevicepolicies":{"get":{"tags":["DevicePolicies"],"summary":"The get mem config device policies.","description":"Device policies hold device compliance information and also determine if the device is managed or unmanaged","operationId":"DevicePolicies_GetMemConfigDevicePolicies","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"invalidatecache","in":"query","description":"Invalidates the cache if true","required":false,"type":"","default":""},{"name":"transid","in":"query","description":"Transaction id","required":false,"type":"uuid","default":""},{"name":"startindex","in":"query","description":"Start index of page","required":false,"type":"integer","default":""},{"name":"pagesize","in":"query","description":"Page size","required":false,"type":"integer","default":""},{"name":"memconfigid","in":"query","description":"MEM Config Identifier.","required":false,"type":"integer","default":""},{"name":"dbSyncedTime","in":"query","description":"Last db synced time","required":false,"type":"string","format":"date-time","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/DevicePolicyPagedSearchResultModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/deletedmemconfigdevicepolicies":{"get":{"tags":["DevicePolicies"],"summary":"gets deleted device policies.","description":"Deleted device policies correspond to the devices that got delted or un enrolled.","operationId":"DevicePolicies_GetDeletedMemConfigDevicePolicies","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"memconfigid","in":"query","description":"MEM Config Identifier.","required":false,"type":"integer","default":""},{"name":"invalidatecache","in":"query","description":"Invalidates the cache if true","required":false,"type":"","default":""},{"name":"transid","in":"query","description":"Transaction id","required":false,"type":"uuid","default":""},{"name":"startindex","in":"query","description":"Start index of page","required":false,"type":"integer","default":""},{"name":"pagesize","in":"query","description":"Page size","required":false,"type":"integer","default":""},{"name":"dbSyncedTime","in":"query","description":"Last db synced time","required":false,"type":"string","format":"date-time","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/DevicePolicyPagedSearchResultModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/easdevicetypepolicies":{"get":{"tags":["EasDeviceTypePolicies"],"summary":"Gets the list of Eas DeviceType policies.","description":"Eas Device policies hold information if the device has to allowed/blocked/white-listed","operationId":"EasDeviceTypePolicies_GetEasDeviceTypePolicies","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"invalidateCache","in":"query","description":"Invalidates the cache if true","required":false,"type":"","default":""},{"name":"transId","in":"query","description":"Transaction id","required":false,"type":"uuid","default":""},{"name":"startIndex","in":"query","description":"Start index of page","required":false,"type":"integer","default":""},{"name":"pageSize","in":"query","description":"Page size","required":false,"type":"integer","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EasDeviceTypePolicyPagedSearchResultModel"}},"204":{"description":"No Content"}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/enrollmentusers/{uuid}/emailattributes":{"get":{"tags":["EnrollmentUsersV1"],"summary":"New - Gets email attributes of Enrollment user by Id","description":"Gets email attributes of Enrollment user by Id","operationId":"EnrollmentUsersV1_GetEmailAttributes","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"uuid","in":"path","description":"unique id for enrollment User.(Required)","required":true,"type":"string","format":"uuid"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EnrollmentUserEmailAttributesV1Model"}},"400":{"description":"Bad Request 1. {6: Invalid Input} ","schema":{"$ref":"#/definitions/BaseExceptionModel"}},"404":{"description":"Not Found 1. {8: EnrollmentUser Not Found} ","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true}},"/activesync/gatewaysettings":{"get":{"tags":["GatewaySettings"],"summary":"Gets MEM configuration settings for V2 SEG.","description":"Given the configuration identifier it gets the details of the configuration.","operationId":"GatewaySettings_GetGatewaySettings","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[{"name":"memConfigId","in":"query","description":"This is MEM configuration identifier which is used identify a configuration.","required":false,"type":"integer","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/GatewaySettingsModel"}},"400":{"description":"No MEM Configuration Found.","schema":{"$ref":"#/definitions/BaseExceptionModel"}},"500":{"description":"Failed to load JWT Auth info","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/gatewayinstallationsettings":{"get":{"tags":["GatewaySettings"],"summary":"Gets the installation settings for SEG.","description":"SEG needs configuration settings during installation. It gives all the required settings for installation of SEG.","operationId":"GatewaySettings_GetInstallationGatewaySettings","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[{"name":"memConfigGuid","in":"query","description":"Unique identifier of the MEM configuration.","required":false,"type":"uuid","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/GatewayInstallationModel"}},"400":{"description":"No MEM Configuration Found.","schema":{"$ref":"#/definitions/BaseExceptionModel"}},"500":{"description":"Failed to load JWT Auth info","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/generalaccesspolicy":{"get":{"tags":["GatewaySettings"],"summary":"Gets general access policy for a configuration.","description":"General access policy contains blocking policies, requirement policies and default state of policies.","operationId":"GatewaySettings_GetGeneralAccessPolicy","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[{"name":"memConfigId","in":"query","description":"This is MEM configuration identifier which is used identify a configuration.","required":false,"type":"integer","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/GeneralAccessPolicyModel"}},"400":{"description":"No SEG configuration found.","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/help/controllers":{"get":{"tags":["Help"],"summary":"Get the list of Api controllers","operationId":"Help_GetControllers","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/help/endpoints/{endpointId}":{"get":{"tags":["Help"],"summary":"Gets the details about an endpoint","operationId":"Help_GetEndPointById","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"endpointId","in":"path","description":"Example:\"GET-activesync-ping\"","required":true,"type":"string"}],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/help/controllers/{id}":{"get":{"tags":["Help"],"summary":"Gets the controller endpoints","operationId":"Help_GetControllerById","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"id","in":"path","description":"controller name","required":true,"type":"string"}],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/help/controllers/endpoints/index":{"get":{"tags":["Help"],"summary":"Retrieve the index form for endpoints to be used for searching","operationId":"Help_GetEndpointIndex","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/activesync/hyperlinkpolicy":{"get":{"tags":["HyperLinkPolicy"],"summary":"Get the Hyperlink Policy","description":"Hyperlink Policy holds the rules on how to transform hyperlinks in an email","operationId":"HyperLinkPolicy_GetHyperLinkPolicy","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/HyperLinkPolicyModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true},"post":{"tags":["HyperLinkPolicy"],"summary":"New - Saves the Hyperlink Policy.","description":"Hyperlink Policy holds the rules on how to transform hyperlinks in an email","operationId":"HyperLinkPolicy_SaveHyperLinkPolicy","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"model","in":"body","description":"Hyperlink policy model","required":true,"schema":{"$ref":"#/definitions/HyperLinkPolicyModelV2"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/HyperLinkPolicyModelV2"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/mailclientpolicies":{"get":{"tags":["MailClientPolicies"],"summary":"Get the list of MailClient policies","description":"Mail Client policies hold information regarding what mail clients are allowed/blocked","operationId":"MailClientPolicies_GetMailClientPolicies","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"invalidateCache","in":"query","description":"Invalidates the cache if true","required":false,"type":"","default":""},{"name":"transId","in":"query","description":"Transaction id","required":false,"type":"uuid","default":""},{"name":"startIndex","in":"query","description":"Start index of page","required":false,"type":"integer","default":""},{"name":"pageSize","in":"query","description":"Page size","required":false,"type":"integer","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/MailClientPolicyPagedSearchResultModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/groups/{uuid}/mailclient/policies":{"delete":{"tags":["MailClientPolicyV1"],"summary":"New - Deletes Mail Client Policies by Organization Group Uuid","description":"Deletes Email Compliance rules based on mailclient of the device by Organization Group Uuid","operationId":"MailClientPolicyV1_DeleteByOrganizationGroupUuid","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"uuid","in":"path","description":"unique id for organization group.(Required)","required":true,"type":"string","format":"uuid"}],"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request 1. {5012: User does not have access to this organization group.} 2. {5027: Resource's organization group not found.} ","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true}},"/settings/{memconfiguuid}/profiles":{"get":{"tags":["MemConfigProfilesAssociationV1"],"summary":"New - Gets the List of Profiles associated with the MemConfigUuid","description":"Validates if the MemConfig exists","operationId":"MemConfigProfilesAssociationV1_GetMemConfigProfilesAssociationByMemConfigUuid","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"memconfiguuid","in":"path","description":"unique id for MemConfig(Required)","required":true,"type":"string","format":"uuid"}],"responses":{"200":{"description":"MemConfig and Profile Association retrieved successfully","schema":{"type":"array","items":{"$ref":"#/definitions/MemConfigProfileV1Model"}}},"404":{"description":"1. {29: MemConfiguration Not Found} ","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true},"post":{"tags":["MemConfigProfilesAssociationV1"],"summary":"New - Creates Association between the list of Profile Uuids and the MemConfig Uuid","description":"Tenant validations for the passed in ProfileUuids and MemConfigUuid. Duplicate association will be avoided. MEM must be at the level below or equal to the Profile and NEVER above.","operationId":"MemConfigProfilesAssociationV1_CreateMemConfigProfilesAssociation","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"memconfiguuid","in":"path","description":"unique id for MemConfig(Required)","required":true,"type":"string","format":"uuid"},{"name":"profilesAssociation","in":"body","description":"Profiles Association for the MemConfig(Required)","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ProfileV1Model"}}}],"responses":{"204":{"description":"MemConfig and Profiles Association creatd successfully."},"404":{"description":"1. {29: MemConfiguration Not Found}    ","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true}},"/settings/{memconfiguuid}/profiles/{profileuuid}":{"delete":{"tags":["MemConfigProfilesAssociationV1"],"summary":"New - Deletes the MemConfig and Profile Association for the passed in MemConfigUuid and ProfileUuid","description":"Tenant validations for the passed in MemConfigUuid","operationId":"MemConfigProfilesAssociationV1_DeleteMemConfigProfilesAssociation","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"memconfiguuid","in":"path","description":"unique id for MemConfig(Required)","required":true,"type":"string","format":"uuid"},{"name":"profileuuid","in":"path","description":"unique id for associated Profile(Required)","required":true,"type":"string","format":"uuid"}],"responses":{"204":{"description":"MemConfig and Profile Association deleted successfully"},"404":{"description":"1. {29: MemConfiguration Not Found} ","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true}},"/memdevices/search":{"get":{"tags":["MEMDevices"],"summary":"Searches for the MEM Devices","description":"Given a page index (row index) and page size, it gets the MEM Devices for a particular Organization Group","operationId":"MEMDevices_Search","consumes":["application/json","application/xml"],"produces":["application/json;version=1"],"parameters":[{"name":"organizationgroupid","in":"query","description":"Organization group id","required":false,"type":"integer","default":""},{"name":"page","in":"query","description":"Specific page number to get. 0 based index","required":false,"type":"integer","default":""},{"name":"pagesize","in":"query","description":"Maximumm records per page. Default 500","required":false,"type":"integer","default":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/MEMDeviceSearchResult"}},"204":{"description":"No Content"},"400":{"description":"{6:User doesn't have access to organization group or organization group not found.","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]},{"ApiKeyAuth":[]}]}},"/devices/{deviceuuid}/easdevices/{easdeviceid}":{"get":{"tags":["MemDeviceV1"],"summary":"New - Gets information about a specific MEM Device.","description":"Gets all MEM related information such as compliance state, mailbox information and general device information for a device enrolled in MEM.","operationId":"MemDeviceV1_GetMemDevice","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"deviceuuid","in":"path","description":"Unique identifier of a managed device.(Required)","required":true,"type":"string","format":"uuid"},{"name":"easdeviceid","in":"path","description":"Unique identifier of a mailclient on a device.(Required)","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/MemDeviceModel"}},"400":{"description":"Bad Request 1. {1018: The argument cannot be null} ","schema":{"$ref":"#/definitions/BaseExceptionModel"}},"404":{"description":"Not Found 1. {4008: There is no MEM Device for this request} ","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/devices/memdevices":{"get":{"tags":["MemDeviceV1"],"summary":"New - Gets MemDevices for the EasDeviceId.","description":"Gets all MEM Devices for the Eas Device Id passed. If multiple MemDevices exists for the same EasDeviceId, all MemDevices will be returned as an array.","operationId":"MemDeviceV1_GetMemDevicesFromEasDeviceId","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"easdeviceid","in":"query","description":"Unique identifier of a mailclient on a device.(Required)","required":true,"type":"string","default":""}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/MemDeviceModel"}}},"404":{"description":"Not Found 1. {4008: There is no MEM Device for this request} ","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/ping":{"get":{"tags":["Ping"],"operationId":"Ping_Get","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true},"put":{"tags":["Ping"],"operationId":"Ping_Put","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true},"post":{"tags":["Ping"],"operationId":"Ping_Post","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[{"name":"value","in":"body","required":true,"schema":{"type":"string"}}],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true},"delete":{"tags":["Ping"],"operationId":"Ping_Delete","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true},"head":{"tags":["Ping"],"operationId":"Ping_Head","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true},"patch":{"tags":["Ping"],"operationId":"Ping_Patch","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/ping/cached":{"get":{"tags":["Ping"],"operationId":"Ping_GetCached","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/ping/concurrency":{"get":{"tags":["Ping"],"operationId":"Ping_GetRequestQueryValue","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/ping/cached/query":{"get":{"tags":["Ping"],"operationId":"Ping_GetPagedResultFromCache","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/ping/enrollmentuser":{"get":{"tags":["Ping"],"operationId":"Ping_TestEnrollmentUserRoleType","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]},{"CmsAuth":[]},{"GroupIdAuth":[]}],"x-internalApi":true}},"/ping/adminuser":{"get":{"tags":["Ping"],"operationId":"Ping_TestAdminUserRoleType","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/ping/internal":{"get":{"tags":["Ping"],"operationId":"Ping_TestInternal","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/ping/emptymodel":{"get":{"tags":["Ping"],"operationId":"Ping_GetEmptyModel","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/ping/resources":{"put":{"tags":["Ping"],"operationId":"Ping_PutToReturnModel","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true},"post":{"tags":["Ping"],"operationId":"Ping_SetLocationHeader","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true},"patch":{"tags":["Ping"],"operationId":"Ping_PatchToReturnModel","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/ping/content":{"get":{"tags":["Ping"],"operationId":"Ping_GetContent","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/ping/etag":{"get":{"tags":["Ping"],"operationId":"Ping_Etag","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{},"security":[{"BasicAuth":[]}],"x-internalApi":true}},"/settings/PowerShell":{"post":{"tags":["PowerShellSettingsV1"],"summary":"New - Creates a new configuration for PowerShell MEM Flavor","description":"Creates a new PowerShell MEM Configuration based on the details provided in the payload.","operationId":"PowerShellSettingsV1_CreatePowerShellMemConfiguration","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"settingsData","in":"body","description":"Settings to create new PowerShell MEM Configuration.(Required)","required":true,"schema":{"$ref":"#/definitions/PowerShellSettingsCreateRequestV1Model"}}],"responses":{"200":{"description":"MEM configuration was created successfully.","schema":{"$ref":"#/definitions/PowerShellSettingsSaveResponseV1Model"}},"400":{"description":"Bad Request1. {6: Invalid Input}","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true}},"/settings/PowerShell/{memConfigUuid}":{"get":{"tags":["PowerShellSettingsV1"],"summary":"New - Gets settings for PowerShell MEM Flavor By Id","description":"Gets PowerShell MEM Configuration Settings by the id provided.","operationId":"PowerShellSettingsV1_GetPowerShellMemConfigurationById","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"memConfigUuid","in":"path","description":"unique id for PowerShell MEM Configuration.(Required)","required":true,"type":"string","format":"uuid"}],"responses":{"200":{"description":"MEM configuration was found.","schema":{"$ref":"#/definitions/PowerShellSettingsV1Model"}},"400":{"description":"Bad Request1. {29: MemConfiguration Not Found}2. {6: Invalid Input}","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true},"put":{"tags":["PowerShellSettingsV1"],"summary":"New - Updates settings for PowerShell MEM Flavor","description":"Updates configuration settings used for PowerShell MEM Flavor.","operationId":"PowerShellSettingsV1_UpdatePowerShellMemConfiguration","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"memConfigUuid","in":"path","description":"unique id for PowerShell MEM Configuration.(Required)","required":true,"type":"string","format":"uuid"},{"name":"settingsData","in":"body","description":"Settings to update PowerShell MEM Configuration.(Required)","required":true,"schema":{"$ref":"#/definitions/PowerShellSettingsUpdateRequestV1Model"}}],"responses":{"200":{"description":"MEM configuration was updated successfully.","schema":{"$ref":"#/definitions/PowerShellSettingsSaveResponseV1Model"}}},"security":[{"BasicAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true},"delete":{"tags":["PowerShellSettingsV1"],"summary":"New - Deletes PowerShell MEM Flavor Settings by Id","description":"Deletes PowerShell MEM Configuration by the id provided.","operationId":"PowerShellSettingsV1_DeletePowerShellMemConfigurationById","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[{"name":"memConfigUuid","in":"path","description":"unique id for PowerShell MEM Configuration.(Required)","required":true,"type":"string","format":"uuid"}],"responses":{"200":{"description":"MEM configuration deleted successfully."},"400":{"description":"Bad Request1. {29: MemConfiguration Not Found}2. {6: Invalid Input}  ","schema":{"$ref":"#/definitions/BaseExceptionModel"}}},"security":[{"BasicAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true}},"/activesync/ping":{"get":{"tags":["SegPing"],"summary":"Ping the server","operationId":"SegPing_Ping","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[],"responses":{"200":{"description":"OK","schema":{"format":"date-time","type":"string"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/syncfilterspolicies":{"get":{"tags":["SyncFiltersPolicies"],"summary":"Returns the general attachment policy for unmanaged devices.","description":"Determines what syncs are allowed/blocked like Mail, Tasks, notes etc","operationId":"SyncFiltersPolicies_GetSyncFiltersPolicies","consumes":["application/json"],"produces":["application/json;version=1"],"parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SyncFiltersPolicyModel"}}},"security":[{"BasicAuth":[]},{"CmsAuth":[]}],"x-internalApi":true}},"/activesync/unmanagedmemdevice":{"delete":{"tags":["UnmanagedMEMDevice"],"summary":"New - Delete unmanaged devices by mem config.","description":"Deletes unmanaged devices for a specific mem config","operationId":"UnmanagedMEMDevice_Delete","consumes":["application/json","application/xml"],"produces":["application/json;version=1","application/xml;version=1"],"parameters":[],"responses":{"204":{"description":"No Content"}},"security":[{"BasicAuth":[]},{"ApiKeyAuth":[]}],"x-internalApi":true}}},"definitions":{"RequestQuery":{"description":"Implementation for RequestQuery","type":"object","properties":{}},"AccountPolicyModel":{"description":"Model to represent AccountPolicy","type":"object","properties":{"userName":{"description":"Account username.","type":"string","xml":{"name":"UserName"}},"type":{"format":"int32","description":"Type of the account user.","enum":[0,1,2,3,4],"type":"integer","xml":{"name":"Type"}},"whitelisted":{"description":"Flag to indicate if the user is whitelisted.","type":"boolean","xml":{"name":"Whitelisted"}},"domain":{"description":"Domain Name for UserName (Required for AWEC Mail Client)","type":"string","xml":{"name":"Domain"}},"allowSync":{"description":"Flag to indicate if allow sync is allowed or not.","type":"boolean","xml":{"name":"AllowSync"}},"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"Info","namespace":"http://www.air-watch.com/webapi/resources"}},"HypermediaModel":{"description":"The aw hypermedia model.","type":"object","properties":{"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"Info","namespace":"http://www.air-watch.com/webapi/resources"}},"Link":{"description":"The link.","type":"object","properties":{"Rel":{"description":"Relational links.","type":"string","xml":{"name":"Rel"}},"Href":{"description":"Hyper text reference.","type":"string","xml":{"name":"Href"}},"Title":{"description":"Title of the link.","type":"string","xml":{"name":"Title"}}},"xml":{"name":"Link","namespace":"http://www.air-watch.com/webapi/resources"}},"HypermediaModel ":{"description":"The aw hypermedia model.","type":"object","properties":{"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AdditionalInfo"}},"AccountPolicyPagedSearchResultModel":{"description":"Representation of AccountPolicyPagedSearchResultModel","type":"object","properties":{"resultSet":{"description":"Gets or sets ResultSet\r\nArray of returned account policy search results","type":"array","items":{"$ref":"#/definitions/AccountPolicyModel"},"xml":{"name":"ResultSet"}},"AdditionalInfo":{"$ref":"#/definitions/HypermediaModel ","description":"Gets or sets Hypermedia content for the result","xml":{"name":"Hypermedia"}},"TotalResults":{"format":"int32","description":"Gets or sets Total Result","type":"integer","xml":{"name":"TotalResults"}}},"xml":{"name":"AccountPolicyPagedSearchResult","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"resultSet":[{"userName":"bob@acme.com","type":0,"whitelisted":true,"domain":"acme.com","allowSync":true,"Links":[],"id":1234,"uuid":"7e9e326f-f048-4cc7-9ce9-c93b9798fdec"}],"AdditionalInfo":{"Links":[],"id":1234,"uuid":"ad8a7fa4-5463-4bba-85f7-e78fde86dcff"},"TotalResults":1}},"ActiveSyncPayloadModel":{"description":"An ActiveSyncPayload to capture Exchange ActiveSync requests.","type":"object","properties":{"locationGroupId":{"$ref":"#/definitions/EntityKey","description":"This is the organization group identifier. Typically used during enrollement.","xml":{"name":"LocationGroupId"}},"userName":{"description":"Username of the email account user.","type":"string","xml":{"name":"UserName"}},"command":{"description":"Gets or sets command to device made to ActiveSync","type":"string","xml":{"name":"Command"}},"easDeviceIdentifier":{"description":"This is the device identifier contained in EAS requests. e.g. for iOS device this will be \"Apple\" + serial number.","type":"string","xml":{"name":"EasDeviceIdentifier"}},"deviceType":{"description":"The device type defined by the EAS request.  (not the platform)","type":"string","xml":{"name":"DeviceType"}},"deviceClientIp":{"description":"The IP address of client's device.","type":"string","xml":{"name":"DeviceClientIp"}},"timeOfRequest":{"format":"date-time","description":"Gets or sets the time of request.","type":"string","xml":{"name":"TimeOfRequest"}},"destinationUrl":{"description":"Gets or sets the Destination URL","type":"string","xml":{"name":"DestinationUrl"}},"deviceOs":{"description":"Gets or sets the device OS","type":"string","xml":{"name":"DeviceOs"}},"listeningUrl":{"description":"Gets or sets the Listening URL","type":"string","xml":{"name":"ListeningUrl"}},"syncAllowed":{"description":"Gets or sets a value indicating whether Sync Allowed","type":"boolean","xml":{"name":"SyncAllowed"}},"transactionId":{"format":"uuid","description":"Gets or sets the transaction id of the request.","type":"string","xml":{"name":"TransactionId"}},"policyViolations":{"description":"Gets or sets Collection of policies violated by a blocked MEG request.","type":"array","items":{"$ref":"#/definitions/PolicyViolation"},"xml":{"name":"PolicyViolations"}},"bytesUp":{"format":"int64","description":"Gets or sets Request size sent to mail server in bytes","type":"integer","xml":{"name":"BytesUp"}},"bytesDown":{"format":"int64","description":"Gets or sets Response size received from mail server in bytes","type":"integer","xml":{"name":"BytesDown"}},"testMode":{"description":"Gets or sets a value indicating whether this request was received while MEG was running in test mode.","type":"boolean","xml":{"name":"TestMode"}},"emailClient":{"description":"Gets or sets the email client.","type":"string","xml":{"name":"EmailClient"}},"awDeviceId":{"format":"int32","description":"Gets or sets This is the actual device id saved in the Device table or UnmanagedDevice table.","type":"integer","xml":{"name":"AwDeviceId"}},"managed":{"description":"Gets or sets a value indicating whether IsManaged","type":"boolean","xml":{"name":"IsManaged"}},"diagnosticPayload":{"$ref":"#/definitions/DiagnosticPayloadModel","description":"Gets or sets DiagnosticPayload","xml":{"name":"DiagnosticPayload"}},"gatewayHostName":{"description":"Gets or setsThe host name of the SEG server that processed the EAS request.","type":"string","xml":{"name":"GatewayHostName"}},"memConfigId":{"format":"int32","description":"Gets or sets the MEMConfigId the payload belongs to","type":"integer","xml":{"name":"MemConfigId"}},"memDeviceId":{"format":"int32","description":"Gets or sets the MEMConfigId the payload belongs to","type":"integer","xml":{"name":"MemDeviceId"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"EntityKey":{"type":"object","properties":{"_value":{"format":"int32","type":"integer"}}},"PolicyViolation":{"type":"object","properties":{"BlockingPolicy":{"format":"int32","enum":[0,1,2,4,5,6,7,8,9,10,11,12,13,101,102,103,104],"type":"integer","xml":{"name":"BlockingPolicy"}},"BlockedReasons":{"format":"int32","enum":[0,1,2,4,8,16,32,64,128,256,512,1024,2048,4096],"type":"integer","xml":{"name":"BlockedReasons"}},"AllowedReasons":{"format":"int32","enum":[0,1,2,4,8,16],"type":"integer","xml":{"name":"AllowedReasons"}},"Information":{"type":"string","xml":{"name":"Information"}}}},"DiagnosticPayloadModel":{"description":"Diagnostic payload model","type":"object","properties":{"reason":{"description":"Reason for the Device being blocked","type":"string","xml":{"name":"Reason"}},"responseStatus":{"description":"Gets or sets ResponseStatus","type":"string","xml":{"name":"ResponseStatus"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"IActionResult":{"description":"interface for HttpActionResult","type":"object","properties":{"RequestQuery":{"$ref":"#/definitions/IRequestQuery","description":"Gets or sets the RequestQuery","xml":{"name":"RequestQuery"}},"RequestMessage":{"description":"Gets or sets the RequestMessage","type":"object","xml":{"name":"RequestMessage"}},"HttpStatusCode":{"format":"int32","description":"Gets or sets HttpStatusCode","enum":[100,101,200,201,202,203,204,205,206,300,300,301,301,302,302,303,303,304,305,306,307,307,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,426,500,501,502,503,504,505],"type":"integer","xml":{"name":"HttpStatusCode"}},"Model":{"description":"Gets or sets Model","type":"object","xml":{"name":"Model"}},"Stream":{"$ref":"#/definitions/Stream","description":"Gets or sets Stream","xml":{"name":"Stream"}},"PartialContentRange":{"$ref":"#/definitions/RangeHeaderValue","description":"Gets or sets partial content range","xml":{"name":"PartialContentRange"}},"ByteArray":{"format":"byte","description":"Gets or sets ByteArray","type":"string","xml":{"name":"ByteArray"}},"FileName":{"description":"Gets or sets FileName {Will be set in the content-disposition header}","type":"string","xml":{"name":"FileName"}},"MediaType":{"description":"Gets or sets MediaType","type":"string","xml":{"name":"MediaType"}},"OnStreamAvailable":{"description":"Gets or sets OnStreamAvailable","type":"object","xml":{"name":"OnStreamAvailable"}},"ETagHeaderValue":{"$ref":"#/definitions/EntityTagHeaderValue","description":"Gets or sets ETagHeaderValue","xml":{"name":"ETagHeaderValue"}},"AcceptsByteRanges":{"description":"Gets or sets a value which indicates whether a range byte request for a stream is accepted or not","type":"boolean","xml":{"name":"AcceptsByteRanges"}},"SendETagHeaderValue":{"description":"Gets or sets the option to include ETagHeaderValue","type":"boolean","xml":{"name":"SendETagHeaderValue"}},"LocationHeaderValue":{"description":"Gets or sets LocationHeaderValue","type":"string","xml":{"name":"LocationHeaderValue"}},"CacheControlValue":{"$ref":"#/definitions/CacheControlHeaderValue","description":"Gets or sets CacheControlValue","xml":{"name":"CacheControlValue"}},"ContentLength":{"format":"int64","description":"Gets or sets ContentLength","type":"integer","xml":{"name":"ContentLength"}},"ResponseDateTimeFormat":{"description":"DateTime format for response","type":"string","xml":{"name":"ResponseDateTimeFormat"}}}},"IRequestQuery":{"description":"Interface for IAwRequestQuery\r\nThis will hold all the required data for a request. Will be filled from ModelBinder","type":"object","properties":{"QueryParams":{"description":"Gets or sets Query Parameters. For e.g. any query string parameters will be extracted to key,value pair and stored here.","type":"object","additionalProperties":{"type":"string"},"xml":{"name":"QueryParams"}},"TenantContext":{"$ref":"#/definitions/ITenantContext","description":"Gets or sets IAwTenantContext. Will hold the tenant details, which will be filled as part of the tenant validation handler","xml":{"name":"TenantContext"}},"RequestMethod":{"$ref":"#/definitions/HttpMethod","description":"Gets or sets RequestMethod. Will be used to write custom rules","xml":{"name":"RequestMethod"}},"ActionName":{"description":"Gets or sets ActionName","type":"string","xml":{"name":"ActionName"}},"AllowedUriQueryChars":{"description":"Gets or sets allowed Characters in Query String.","type":"array","items":{"type":"string"},"xml":{"name":"AllowedUriQueryChars"}}}},"Stream":{"type":"object","properties":{"__identity":{"type":"object"}}},"RangeHeaderValue":{"type":"object","properties":{"Unit":{"type":"string","xml":{"name":"Unit"}},"Ranges":{"type":"array","items":{"$ref":"#/definitions/RangeItemHeaderValue"},"readOnly":true,"xml":{"name":"Ranges"}}}},"EntityTagHeaderValue":{"type":"object","properties":{"Tag":{"type":"string","readOnly":true,"xml":{"name":"Tag"}},"IsWeak":{"type":"boolean","readOnly":true,"xml":{"name":"IsWeak"}}}},"CacheControlHeaderValue":{"type":"object","properties":{"NoCache":{"type":"boolean","xml":{"name":"NoCache"}},"NoCacheHeaders":{"type":"array","items":{"type":"string"},"readOnly":true,"xml":{"name":"NoCacheHeaders"}},"NoStore":{"type":"boolean","xml":{"name":"NoStore"}},"MaxAge":{"type":"string","xml":{"name":"MaxAge"}},"SharedMaxAge":{"type":"string","xml":{"name":"SharedMaxAge"}},"MaxStale":{"type":"boolean","xml":{"name":"MaxStale"}},"MaxStaleLimit":{"type":"string","xml":{"name":"MaxStaleLimit"}},"MinFresh":{"type":"string","xml":{"name":"MinFresh"}},"NoTransform":{"type":"boolean","xml":{"name":"NoTransform"}},"OnlyIfCached":{"type":"boolean","xml":{"name":"OnlyIfCached"}},"Public":{"type":"boolean","xml":{"name":"Public"}},"Private":{"type":"boolean","xml":{"name":"Private"}},"PrivateHeaders":{"type":"array","items":{"type":"string"},"readOnly":true,"xml":{"name":"PrivateHeaders"}},"MustRevalidate":{"type":"boolean","xml":{"name":"MustRevalidate"}},"ProxyRevalidate":{"type":"boolean","xml":{"name":"ProxyRevalidate"}},"Extensions":{"type":"array","items":{"$ref":"#/definitions/NameValueHeaderValue"},"readOnly":true,"xml":{"name":"Extensions"}}}},"ITenantContext":{"description":"Contract for TenantContext. Will be exposed from RequestQuery and will be injected to every controller actions and Business method","type":"object","properties":{"TenantCode":{"description":"Gets or sets TenantCode. Uniquely identify the tenant for the request","type":"string","xml":{"name":"TenantCode"}},"OrganizationgroupId":{"$ref":"#/definitions/EntityId","description":"Gets or sets Organization Group ID","xml":{"name":"OrganizationgroupId"}}}},"HttpMethod":{"type":"object","properties":{"Method":{"type":"string","readOnly":true,"xml":{"name":"Method"}}}},"RangeItemHeaderValue":{"type":"object","properties":{"From":{"format":"int64","type":"integer","readOnly":true,"xml":{"name":"From"}},"To":{"format":"int64","type":"integer","readOnly":true,"xml":{"name":"To"}}}},"NameValueHeaderValue":{"type":"object","properties":{"Name":{"type":"string","readOnly":true,"xml":{"name":"Name"}},"Value":{"type":"string","xml":{"name":"Value"}}}},"EntityId":{"type":"object","properties":{"Value":{"format":"int64","type":"integer","readOnly":true,"xml":{"name":"Value"}}}},"BaseExceptionModel":{"description":"Base model for exception","type":"object","properties":{"errorCode":{"format":"int32","description":"Application error code","type":"integer","xml":{"name":"ErrorCode"}},"message":{"description":"Friendly error message","type":"object","xml":{"name":"Message"}},"activityId":{"format":"uuid","description":"TransactionId of the request","type":"string","xml":{"name":"ActivityId"}}},"xml":{"name":"AirWatchFaultContract","namespace":"http://www.air-watch.com/"}},"PolicyViolation ":{"title":"PolicyViolation","type":"object","properties":{"BlockedReasons":{"format":"int32","enum":[0,1,2,4,8,16,32,64,128,256,512,1024,2048,4096],"type":"integer","xml":{"name":"BlockedReasons"}},"AllowedReasons":{"format":"int32","enum":[0,1,2,4,8,16],"type":"integer","xml":{"name":"AllowedReasons"}},"Information":{"type":"string","xml":{"name":"Information"}}}},"ActiveSyncPayloadModel ":{"title":"ActiveSyncPayloadModel","description":"An ActiveSyncPayload to capture Exchange ActiveSync requests.","type":"object","properties":{"locationGroupId":{"$ref":"#/definitions/EntityKey","description":"This is the organization group identifier. Typically used during enrollement.","xml":{"name":"LocationGroupId"}},"userName":{"description":"Username of the email account user.","type":"string","xml":{"name":"UserName"}},"command":{"description":"Gets or sets command to device made to ActiveSync","type":"string","xml":{"name":"Command"}},"easDeviceIdentifier":{"description":"This is the device identifier contained in EAS requests. e.g. for iOS device this will be \"Apple\" + serial number.","type":"string","xml":{"name":"EasDeviceIdentifier"}},"deviceType":{"description":"The device type defined by the EAS request.  (not the platform)","type":"string","xml":{"name":"DeviceType"}},"deviceClientIp":{"description":"The IP address of client's device.","type":"string","xml":{"name":"DeviceClientIp"}},"timeOfRequest":{"format":"date-time","description":"Gets or sets the time of request.","type":"string","xml":{"name":"TimeOfRequest"}},"destinationUrl":{"description":"Gets or sets the Destination URL","type":"string","xml":{"name":"DestinationUrl"}},"deviceOs":{"description":"Gets or sets the device OS","type":"string","xml":{"name":"DeviceOs"}},"listeningUrl":{"description":"Gets or sets the Listening URL","type":"string","xml":{"name":"ListeningUrl"}},"syncAllowed":{"description":"Gets or sets a value indicating whether Sync Allowed","type":"boolean","xml":{"name":"SyncAllowed"}},"transactionId":{"format":"uuid","description":"Gets or sets the transaction id of the request.","type":"string","xml":{"name":"TransactionId"}},"policyViolations":{"description":"Gets or sets Collection of policies violated by a blocked MEG request.","type":"array","items":{"$ref":"#/definitions/PolicyViolation "},"xml":{"name":"PolicyViolations"}},"bytesUp":{"format":"int64","description":"Gets or sets Request size sent to mail server in bytes","type":"integer","xml":{"name":"BytesUp"}},"bytesDown":{"format":"int64","description":"Gets or sets Response size received from mail server in bytes","type":"integer","xml":{"name":"BytesDown"}},"testMode":{"description":"Gets or sets a value indicating whether this request was received while MEG was running in test mode.","type":"boolean","xml":{"name":"TestMode"}},"emailClient":{"description":"Gets or sets the email client.","type":"string","xml":{"name":"EmailClient"}},"awDeviceId":{"format":"int32","description":"Gets or sets This is the actual device id saved in the Device table or UnmanagedDevice table.","type":"integer","xml":{"name":"AwDeviceId"}},"managed":{"description":"Gets or sets a value indicating whether IsManaged","type":"boolean","xml":{"name":"IsManaged"}},"diagnosticPayload":{"$ref":"#/definitions/DiagnosticPayloadModel","description":"Gets or sets DiagnosticPayload","xml":{"name":"DiagnosticPayload"}},"gatewayHostName":{"description":"Gets or setsThe host name of the SEG server that processed the EAS request.","type":"string","xml":{"name":"GatewayHostName"}},"memConfigId":{"format":"int32","description":"Gets or sets the MEMConfigId the payload belongs to","type":"integer","xml":{"name":"MemConfigId"}},"memDeviceId":{"format":"int32","description":"Gets or sets the MEMConfigId the payload belongs to","type":"integer","xml":{"name":"MemDeviceId"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"example":[{"locationGroupId":{"Value":1},"userName":"bob@acme.com","command":"SYNC","easDeviceIdentifier":"b98be3c6-55d4-4f7d-bb81-723e1018a686","deviceType":"Android","deviceClientIp":"1.1.1.1","timeOfRequest":"2018-04-19T19:34:59.0085178-04:00","destinationUrl":"http://webapihelppage2.com","deviceOs":"IOS","listeningUrl":"http://webapihelppage3.com","syncAllowed":true,"transactionId":"fddbd29a-f837-4c82-b40d-a579cb08c042","policyViolations":[{"BlockingPolicy":0,"BlockedReasons":0,"AllowedReasons":0,"Information":"Text value"}],"bytesUp":6,"bytesDown":7,"testMode":true,"emailClient":"Boxer","awDeviceId":9,"managed":true,"diagnosticPayload":{"reason":"Compliant.","responseStatus":"OK","id":1234,"uuid":"2ec5c8f7-1294-4d19-bf86-3b0b733daa19"},"gatewayHostName":"acme.com","memConfigId":1,"memDeviceId":11,"id":1234,"uuid":"9499dff9-8acf-4378-ae42-3cea3254c85a"}]},"SecurityTagsActionModel":{"description":"Defines actions to be taken for each security tag","type":"object","properties":{"tagName":{"description":"Tag Name.","type":"string","xml":{"name":"Tag"}},"awMailClientAction":{"format":"int32","description":"Flag to indicate inbox action. [Encrypt / Block / Do Nothing].","type":"integer","xml":{"name":"AwInboxAction"}},"awMailClientMessageBody":{"description":"Body of the message.","type":"string","xml":{"name":"AwInboxMessageBody"}},"otherMailClientsAction":{"format":"int32","description":"Flag to indicate mail client action [0 = Follow Attachment/Hyperlink policies, 1 = Encrypt, 2 = Block].","type":"integer","xml":{"name":"OtherMailClientsAction"}},"otherMailClientMessageBody":{"description":"Body of other mail client's message.","type":"string","xml":{"name":"OtherMailClientsMessageBody"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"SecurityTagsAction","namespace":"http://www.air-watch.com/webapi/resources"}},"SecurityTagsActionModel ":{"description":"Defines actions to be taken for each security tag","type":"object","properties":{"tagName":{"description":"Tag Name.","type":"string","xml":{"name":"Tag"}},"awMailClientAction":{"format":"int32","description":"Flag to indicate inbox action. [Encrypt / Block / Do Nothing].","type":"integer","xml":{"name":"AwInboxAction"}},"awMailClientMessageBody":{"description":"Body of the message.","type":"string","xml":{"name":"AwInboxMessageBody"}},"otherMailClientsAction":{"format":"int32","description":"Flag to indicate mail client action [0 = Follow Attachment/Hyperlink policies, 1 = Encrypt, 2 = Block].","type":"integer","xml":{"name":"OtherMailClientsAction"}},"otherMailClientMessageBody":{"description":"Body of other mail client's message.","type":"string","xml":{"name":"OtherMailClientsMessageBody"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"EmailAction"}},"EmailSecurityTagPolicyModel":{"description":"Policy defining how to handle email security tags","type":"object","properties":{"active":{"description":"Gets or sets a value indicating whether this policy is active or not.","type":"boolean","xml":{"name":"Active"}},"unmarkedEmailsAction":{"$ref":"#/definitions/SecurityTagsActionModel","description":"Gets or sets a value for the unmarked emails when security tagging policy is active","xml":{"name":"UnmarkedEmailsAction"}},"emailsActions":{"description":"Gets or sets SecurityTagsAction","type":"array","items":{"$ref":"#/definitions/SecurityTagsActionModel ","xml":{"name":"EmailAction"}},"xml":{"name":"SecurityTagsAction","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"EmailSecurityTagPolicy","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"active":true,"unmarkedEmailsAction":{"tagName":"Text value","awMailClientAction":2,"awMailClientMessageBody":"Some text in message body.","otherMailClientsAction":3,"otherMailClientMessageBody":"Some text in message body.","id":1234,"uuid":"c925f12d-9464-4088-b9fc-579a74e023a2"},"emailsActions":[{"awMailClientAction":0,"otherMailClientsAction":0}],"id":1234,"uuid":"ddb4bc13-a48b-4898-92ff-c87bc3425d72"}},"HypermediaModel  ":{"description":"The aw hypermedia model.","type":"object","properties":{"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AdditionalInfo"}},"ImpersonationCredentialPayloadPagedSearchResultModel":{"description":"The impersonation credential payload paged search result model.","type":"object","properties":{"impersonationCredentialPayloads":{"description":"Gets or sets ResultSet\r\nArray of returned Impersonation credential payloads.","type":"array","items":{"$ref":"#/definitions/ImpersonationCredentialPayloadModel"},"xml":{"name":"ImpersonationCredentialPayloads","wrapped":true}},"AdditionalInfo":{"$ref":"#/definitions/HypermediaModel  ","description":"Gets or sets Hypermedia content for the result","xml":{"name":"Hypermedia"}},"TotalResults":{"format":"int32","description":"Gets or sets Total Result","type":"integer","xml":{"name":"TotalResults"}}},"xml":{"name":"ImpersonationCredentialPayloadSearchResult","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"impersonationCredentialPayloads":[{"enrollmentUserId":{"Value":1},"enrollmentUserName":"Text value","enrollmentEmailUserName":"Text value","enrollmentEmailPassword":"Text value","enrollmentEmailPasswordSalt":"Text value","emailAutoGeneratedPassword":"Text value","emailAutoGeneratedPasswordSalt":"Text value","emailAutoGeneratedPasswordLastReset":"2018-04-19T19:34:59.1334699-04:00","emailAddress":"Text value","id":1234,"uuid":"0d6e6cb6-4c6b-4b57-a456-ea7eb35b1aa2"}],"AdditionalInfo":{"Links":[],"id":1234,"uuid":"4122c06d-bce7-46e7-919a-74e290579eed"},"TotalResults":1}},"ImpersonationCredentialPayloadModel":{"description":"The impersonation credential payload model.","type":"object","properties":{"enrollmentUserId":{"$ref":"#/definitions/EntityKey","description":"Gets or sets the enrollment user id.","xml":{"name":"EnrollmentUserId"}},"enrollmentUserName":{"description":"Gets or sets the Enrollment username","type":"string","xml":{"name":"EnrollmentUserName"}},"enrollmentEmailUserName":{"description":"Gets or sets the Enrollment EmailUser Name.\r\nThe user name of the Gmail account.\r\nThis should not include the \"@domain\" part.\r\nThis field is intended to be used when MobileEmail mail type is GoogleApps.","type":"string","xml":{"name":"EnrollmentEmailUserName"}},"enrollmentEmailPassword":{"description":"Gets or sets the Enrollment Email Password.","type":"string","xml":{"name":"EnrollmentEmailPassword"}},"enrollmentEmailPasswordSalt":{"description":"Gets or sets the Enrollment Email Password Salt.\r\nThis is the salt used to encrypt the EnrollmentEmailPassword","type":"string","xml":{"name":"EnrollmentEmailPasswordSalt"}},"emailAutoGeneratedPassword":{"description":"Gets or sets the Email AutoGenerate password.","type":"string","xml":{"name":"EmailAutoGeneratedPassword"}},"emailAutoGeneratedPasswordSalt":{"description":"Gets or sets the Email Auto Generated Password Salt.\r\nThis is the salt used to encrypt the EmailAutoGeneratedPassword","type":"string","xml":{"name":"EmailAutoGeneratedPasswordSalt"}},"emailAutoGeneratedPasswordLastReset":{"format":"date-time","description":"Gets or sets the Email auto generated password last reset.\r\nLast time auto-generated email password was reset","type":"string","xml":{"name":"EmailAutoGeneratedPasswordLastReset"}},"emailAddress":{"description":"Gets or sets the Email address.\r\nEnrollment Email Address","type":"string","xml":{"name":"EmailAddress"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"ImpersonationCredentialPayload","namespace":"http://www.air-watch.com/webapi/resources"}},"HypermediaModel   ":{"description":"The aw hypermedia model.","type":"object","properties":{"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AdditionalInfo"}},"EncryptionKeyDataPayloadPagedSearchResultModel":{"description":"Representation of EncryptionKeyDataPayloadPagedSearchResultModel.","type":"object","properties":{"resultSet":{"description":"Array of returned account policy search results","type":"array","items":{"$ref":"#/definitions/EncryptionKeyDataPayloadModel"},"xml":{"name":"ResultSet"}},"DbSyncTime":{"format":"date-time","description":"last date time when polices obtained from DB","type":"string","xml":{"name":"DbSyncTime"}},"AdditionalInfo":{"$ref":"#/definitions/HypermediaModel   ","description":"Gets or sets Hypermedia content for the result","xml":{"name":"Hypermedia"}},"TotalResults":{"format":"int32","description":"Gets or sets Total Result","type":"integer","xml":{"name":"TotalResults"}}},"xml":{"name":"encryptionkeydatapayloadpagedsearchresult","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"resultSet":[{"deviceId":1234,"enrollmentUserId":123,"encryptionKey":"QA==","salt":"QA==","modifiedDate":"2018-04-19T19:34:59.2740382-04:00","id":1234,"uuid":"08d31565-7299-4919-9389-de6443fb12a8"}],"DbSyncTime":"2018-04-19T19:34:59.2740382-04:00","AdditionalInfo":{"Links":[],"id":1234,"uuid":"7c7ddd91-1cf1-470a-a53f-5a807a3d97b6"},"TotalResults":1}},"EncryptionKeyDataPayloadModel":{"description":"Model to represent the encryption key data information for email attachment.","type":"object","properties":{"deviceId":{"format":"int32","description":"Managed Device Id","type":"integer","xml":{"name":"DeviceId"}},"enrollmentUserId":{"format":"int32","description":"Enrollment user id","type":"integer","xml":{"name":"EnrollmentUserId"}},"encryptionKey":{"format":"byte","description":"Encryption Key","type":"string","xml":{"name":"EncryptionKey"}},"salt":{"format":"byte","description":"salt is used to encrypt/decrypt the encryption key","type":"string","xml":{"name":"Salt"}},"modifiedDate":{"format":"date-time","description":"date-time the encryption key was last updated","type":"string","xml":{"name":"ModifiedDate"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"encryptionkeydatapayload","namespace":"http://www.air-watch.com/webapi/resources"}},"AttachmentPolicyModel":{"description":"Policy defining how to handle attachments based on document type.","type":"object","properties":{"actionType":{"format":"int32","description":"action to take for attachment [Encrypt = 0, Block = 1, Allow = 2].","type":"integer","xml":{"name":"ActionType"}},"deviceType":{"format":"int32","description":"Device Type.","type":"integer","xml":{"name":"DeviceType"}},"deviceTypeName":{"description":"device platform name.","type":"string","xml":{"name":"DeviceTypeName"}},"attachmentTypeName":{"description":"attachment type.","type":"string","xml":{"name":"AttachmentTypeName"}},"mimeType":{"description":"mime type for the document.","type":"string","xml":{"name":"MimeType"}},"isManaged":{"description":"value indicating whether the policy is for managed or unmanaged devices?","type":"boolean","xml":{"name":"IsManaged"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AttachmentPolicy","namespace":"http://www.air-watch.com/webapi/resources"}},"AttachmentDevicePolicyModel":{"description":"Policy defining how to handle attachments based on device type.","type":"object","properties":{"deviceType":{"format":"int32","description":"Gets or sets DeviceType.","type":"integer","xml":{"name":"DeviceType"}},"allowSecureContentLocker":{"description":"Gets or sets a value indicating whether to allow attachment to be stored in the Secure Content Locker.","type":"boolean","xml":{"name":"AllowSecureContentLocker"}},"customBlockMessage":{"description":"Gets or sets a value indicating whether custom block message to be displayed in an email when one or more attachments fail compliance.","type":"string","xml":{"name":"CustomBlockMessage"}},"isManaged":{"description":"Gets or sets a value indicating whether the policy is for managed or unmanaged devices?","type":"boolean","xml":{"name":"IsManaged"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AttachmentDevicePolicy","namespace":"http://www.air-watch.com/webapi/resources"}},"AttachmentPolicyExcludedFileModel":{"description":"Policy defining the attachment extension to be excluded from .","type":"object","properties":{"deviceType":{"format":"int32","description":"Device Platform Type.","type":"integer","xml":{"name":"DeviceType"}},"fileExtension":{"description":"Inidcates whether File extension to be excluded from this LG Attachment Management.","type":"string","xml":{"name":"FileExtension"}},"isManaged":{"description":"Indicates whether the policy is for managed or unmanaged devices?","type":"boolean","xml":{"name":"IsManaged"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AttachmentPolicyExcludedFile","namespace":"http://www.air-watch.com/webapi/resources"}},"AttachmentPolicyModel ":{"description":"Policy defining how to handle attachments based on document type.","type":"object","properties":{"actionType":{"format":"int32","description":"action to take for attachment [Encrypt = 0, Block = 1, Allow = 2].","type":"integer","xml":{"name":"ActionType"}},"deviceType":{"format":"int32","description":"Device Type.","type":"integer","xml":{"name":"DeviceType"}},"deviceTypeName":{"description":"device platform name.","type":"string","xml":{"name":"DeviceTypeName"}},"attachmentTypeName":{"description":"attachment type.","type":"string","xml":{"name":"AttachmentTypeName"}},"mimeType":{"description":"mime type for the document.","type":"string","xml":{"name":"MimeType"}},"isManaged":{"description":"value indicating whether the policy is for managed or unmanaged devices?","type":"boolean","xml":{"name":"IsManaged"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AttachmentPolicy"}},"AttachmentDevicePolicyModel ":{"description":"Policy defining how to handle attachments based on device type.","type":"object","properties":{"deviceType":{"format":"int32","description":"Gets or sets DeviceType.","type":"integer","xml":{"name":"DeviceType"}},"allowSecureContentLocker":{"description":"Gets or sets a value indicating whether to allow attachment to be stored in the Secure Content Locker.","type":"boolean","xml":{"name":"AllowSecureContentLocker"}},"customBlockMessage":{"description":"Gets or sets a value indicating whether custom block message to be displayed in an email when one or more attachments fail compliance.","type":"string","xml":{"name":"CustomBlockMessage"}},"isManaged":{"description":"Gets or sets a value indicating whether the policy is for managed or unmanaged devices?","type":"boolean","xml":{"name":"IsManaged"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AttachmentDevicePolicy"}},"AttachmentPolicyExcludedFileModel ":{"description":"Policy defining the attachment extension to be excluded from .","type":"object","properties":{"deviceType":{"format":"int32","description":"Device Platform Type.","type":"integer","xml":{"name":"DeviceType"}},"fileExtension":{"description":"Inidcates whether File extension to be excluded from this LG Attachment Management.","type":"string","xml":{"name":"FileExtension"}},"isManaged":{"description":"Indicates whether the policy is for managed or unmanaged devices?","type":"boolean","xml":{"name":"IsManaged"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AttachmentPolicyExcludedFile"}},"GeneralAttachmentPolicyModel":{"description":"Policy defining how to handle attachments in general.","type":"object","properties":{"attachmentPolicies":{"description":"Gets or sets all the attachment policies.","type":"array","items":{"$ref":"#/definitions/AttachmentPolicyModel ","xml":{"name":"AttachmentPolicy"}},"xml":{"name":"AttachmentPolicies","wrapped":true}},"attachmentDevicePolicies":{"description":"Gets or sets all the attachment device policies","type":"array","items":{"$ref":"#/definitions/AttachmentDevicePolicyModel ","xml":{"name":"AttachmentDevicePolicy"}},"xml":{"name":"AttachmentDevicePolicies","wrapped":true}},"attachmentPolicyExcludedFilePolicies":{"description":"Gets or sets all the attachment policy excluded files","type":"array","items":{"$ref":"#/definitions/AttachmentPolicyExcludedFileModel ","xml":{"name":"AttachmentPolicyExcludedFile"}},"xml":{"name":"AttachmentPolicyExcludedFilePolicies","wrapped":true}},"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"GeneralAttachmentPolicy","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"attachmentPolicies":[{"actionType":1,"deviceType":2,"deviceTypeName":"iphone","attachmentTypeName":"pdf","mimeType":"image/gif","isManaged":false,"id":1234,"uuid":"986745fd-964a-4c99-95eb-c9b68a42cba6"}],"attachmentDevicePolicies":[{"deviceType":1,"allowSecureContentLocker":true,"customBlockMessage":"Text value","isManaged":true,"id":1234,"uuid":"48dfb5f9-8a8b-44d7-be8d-20a4a6e545a2"}],"attachmentPolicyExcludedFilePolicies":[{"deviceType":1,"fileExtension":"txt","isManaged":true,"id":1234,"uuid":"7f20e755-5906-4f51-ae26-cf133ff0e3d6"}],"Links":[],"id":1234,"uuid":"1fb697d4-f745-4f1e-b9af-3ef427e2cee0"}},"KeyValuePair[String,Boolean]":{"description":"Serializable Key-Value Pair","type":"object","properties":{"Key":{"description":"Gets or sets Key","type":"string","xml":{"name":"Key"}},"Value":{"description":"Gets or sets Value","type":"boolean","xml":{"name":"Value"}}},"xml":{"name":"KeyValuePair`2","namespace":"http://www.air-watch.com/webapi/resources"}},"KeyValuePair[String,Boolean] ":{"description":"Serializable Key-Value Pair","type":"object","properties":{"Key":{"description":"Gets or sets Key","type":"string","xml":{"name":"Key"}},"Value":{"description":"Gets or sets Value","type":"boolean","xml":{"name":"Value"}}},"xml":{"name":"AwMailClientDeviceWithMemComplianceStatus"}},"AwMailClientDeviceMemComplianceStatusResultModel":{"description":"Response model for GetAwMailClientdeviceMEMComplianceStatus call","type":"object","properties":{"AwMailClientDeviceWithMemComplianceStatus":{"description":"Gets or sets list of Aw Inbox devices with MEM compliance status","type":"array","items":{"$ref":"#/definitions/KeyValuePair[String,Boolean] ","xml":{"name":"AwMailClientDeviceWithMemComplianceStatus"}},"xml":{"name":"AwMailClientDeviceWithMemComplianceStatus","wrapped":true}}},"xml":{"name":"AwMailClientDeviceMemComplianceStatusResult","namespace":"http://www.air-watch.com/webapi/resources"}},"AWMailClientDeviceModel":{"description":"Model for AwInbox and Boxer Device","type":"object","properties":{"deviceappidentifier":{"description":"Gets or sets DeviceAppIdentifier","type":"string","xml":{"name":"DeviceAppIdentifier"}},"platform":{"format":"int32","description":"Gets or sets Platform","type":"integer","xml":{"name":"Platform"}},"deviceudid":{"description":"Gets or sets DeviceUdid","type":"string","xml":{"name":"DeviceUdid"}},"pushtoken":{"description":"Gets or sets PushToken","type":"string","xml":{"name":"PushToken"}},"appBundleId":{"description":"Gets or sets AppBundleId","type":"string","xml":{"name":"AppBundleId"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AwMailClientDevice","namespace":"http://www.air-watch.com/webapi/resources"}},"AWMailClientDeviceModel ":{"description":"Model for AwInbox and Boxer Device","type":"object","properties":{"deviceappidentifier":{"description":"Gets or sets DeviceAppIdentifier","type":"string","xml":{"name":"DeviceAppIdentifier"}},"platform":{"format":"int32","description":"Gets or sets Platform","type":"integer","xml":{"name":"Platform"}},"deviceudid":{"description":"Gets or sets DeviceUdid","type":"string","xml":{"name":"DeviceUdid"}},"pushtoken":{"description":"Gets or sets PushToken","type":"string","xml":{"name":"PushToken"}},"appBundleId":{"description":"Gets or sets AppBundleId","type":"string","xml":{"name":"AppBundleId"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AwMailClientDevice"}},"AwMailClientUserModel":{"description":"Represents an enrollment user who has Devices enrolled, that has AW Inbox OR Boxer installed in them","type":"object","properties":{"username":{"description":"Gets or sets Username.","type":"string","xml":{"name":"UserName"}},"emailaddress":{"description":"Gets or sets  user email address","type":"string","xml":{"name":"EmailAddress"}},"emaildomain":{"description":"Gets or sets email domain","type":"string","xml":{"name":"EmailDomain"}},"emailusername":{"description":"Gets or sets Email UserName of the user","type":"string","xml":{"name":"EmailUserName"}},"awmailclientdevices":{"description":"Gets or sets AwInbox and Boxer Devices used by the User","type":"array","items":{"$ref":"#/definitions/AWMailClientDeviceModel ","xml":{"name":"AwMailClientDevice"}},"xml":{"name":"AwMailClientDevices","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AwMailClientUser","namespace":"http://www.air-watch.com/webapi/resources"}},"AwMailClientUserModel ":{"description":"Represents an enrollment user who has Devices enrolled, that has AW Inbox OR Boxer installed in them","type":"object","properties":{"username":{"description":"Gets or sets Username.","type":"string","xml":{"name":"UserName"}},"emailaddress":{"description":"Gets or sets  user email address","type":"string","xml":{"name":"EmailAddress"}},"emaildomain":{"description":"Gets or sets email domain","type":"string","xml":{"name":"EmailDomain"}},"emailusername":{"description":"Gets or sets Email UserName of the user","type":"string","xml":{"name":"EmailUserName"}},"awmailclientdevices":{"description":"Gets or sets AwInbox and Boxer Devices used by the User","type":"array","items":{"$ref":"#/definitions/AWMailClientDeviceModel ","xml":{"name":"AwMailClientDevice"}},"xml":{"name":"AwMailClientDevices","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AwMailClientUser"}},"HypermediaModel    ":{"description":"The aw hypermedia model.","type":"object","properties":{"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AdditionalInfo"}},"AWMailClientUsersPagedSearchResultModel":{"description":"Model for AwInbox and Boxer Users with pagination.","type":"object","properties":{"AwMailClientUsers":{"description":"Gets or sets an array of returned AwInbox and Boxer Users","type":"array","items":{"$ref":"#/definitions/AwMailClientUserModel ","xml":{"name":"AwMailClientUser"}},"xml":{"name":"AwMailClientUsers","wrapped":true}},"AdditionalInfo":{"$ref":"#/definitions/HypermediaModel    ","description":"Gets or sets Hypermedia content for the result","xml":{"name":"Hypermedia"}},"TotalResults":{"format":"int32","description":"Gets or sets Total Result","type":"integer","xml":{"name":"TotalResults"}}},"xml":{"name":"AwMailClientUsersPagedSearchResult","namespace":"http://www.air-watch.com/webapi/resources"}},"ClassicSegSettingsCreateRequestV1Model":{"description":"This model is used to configure MEM flavor that uses Classic SEG.","required":["organizationGroupUuid"],"type":"object","properties":{"organizationGroupUuid":{"format":"uuid","description":"Organization Group UUID on which the MEM has been configured","type":"string","xml":{"name":"OrganizationGroupUuid"}},"friendlyName":{"description":"General Name of the Classic SEG configuration.","type":"string","xml":{"name":"FriendlyName"}},"emailType":{"format":"int32","description":"Type of Email Server","enum":[1,2,3,4,5,6,7],"type":"integer","xml":{"name":"EmailType"}},"exchangeVersion":{"format":"int32","description":"Version Of exchange server","enum":[1,2,3,4,5,6,7],"type":"integer","xml":{"name":"ExchangeVersion"}},"segConsoleUrl":{"description":"SEG server domain address.","type":"string","xml":{"name":"SegConsoleUrl"}},"useRecommendedSettings":{"description":"Indicates the use of recommended settings.","type":"boolean","xml":{"name":"UseRecommendedSettings"}},"isEnabled":{"description":"Value indicating whether the gateway is enabled or not","type":"boolean","xml":{"name":"IsEnabled"}},"segIgnoreSslErrorsWithExch":{"description":"Value indicating whether the gateway module will ignore SSL certificate errors received when proxying to the Exchange ActiveSync server","type":"boolean","xml":{"name":"SegIgnoreSslErrorsWithExch"}},"segIgnoreSslErrorsWithAw":{"description":"Value indicating whether the SEG Module will ignore SSL certificate errors received when communicating with API or Meg Queue.","type":"boolean","xml":{"name":"SegIgnoreSslErrorsWithAw"}},"segConsoleBasicAuthEnabled":{"description":"Value indicating whether basic authentication of SEG console is enabled.","type":"boolean","xml":{"name":"SegConsoleBasicAuthEnabled"}}},"example":{"organizationGroupUuid":"c4c28997-fc58-4fc6-a8e5-b8f456d793a0","friendlyName":"Classic SEG 1","emailType":1,"exchangeVersion":1,"segConsoleUrl":"http://server.com/segconsole/management.ashx","useRecommendedSettings":true,"isEnabled":true,"segIgnoreSslErrorsWithExch":false,"segIgnoreSslErrorsWithAw":false,"segConsoleBasicAuthEnabled":false}},"ClassicSegSettingsV1Model":{"description":"This model is used to configure MEM flavor that uses Classic SEG.","type":"object","properties":{"memConfigUuid":{"format":"uuid","description":"Unique identifier (GUID) of the configuration.","type":"string","xml":{"name":"MemConfigUuid"}},"organizationGroupUuid":{"format":"uuid","description":"Organization Group identifier of the Classic SEG configuration.","type":"string","xml":{"name":"OrganizationGroupUuid"}},"friendlyName":{"description":"General Name of the Classic SEG configuration.","type":"string","xml":{"name":"FriendlyName"}},"emailType":{"format":"int32","description":"Type of Email Server","enum":[1,2,3,4,5,6,7],"type":"integer","xml":{"name":"EmailType"}},"exchangeVersion":{"format":"int32","description":"Version of Exchange server","enum":[1,2,3,4,5,6,7],"type":"integer","xml":{"name":"ExchangeVersion"}},"segConsoleUrl":{"description":"SEG server domain address.","type":"string","xml":{"name":"SegConsoleUrl"}},"useRecommendedSettings":{"description":"Indicates the use of recommended settings.","type":"boolean","xml":{"name":"UseRecommendedSettings"}},"isEnabled":{"description":"Value indicating whether the gateway is enabled or not","type":"boolean","xml":{"name":"IsEnabled"}},"segIgnoreSslErrorsWithExch":{"description":"Value indicating whether the gateway module will ignore SSL certificate errors received when proxying to the Exchange ActiveSync server","type":"boolean","xml":{"name":"SegIgnoreSslErrorsWithExch"}},"segIgnoreSslErrorsWithAw":{"description":"Value indicating whether the SEG Module will ignore SSL certificate errors received when communicating with API or Meg Queue.","type":"boolean","xml":{"name":"SegIgnoreSslErrorsWithAw"}},"segConsoleBasicAuthEnabled":{"description":"Value indicating whether basic authentication of SEG console is enabled.","type":"boolean","xml":{"name":"SegConsoleBasicAuthEnabled"}}},"example":{"memConfigUuid":"8de96b58-d5e4-4015-ab68-c79710479095","organizationGroupUuid":"be8cacf0-873c-4028-85c1-55df6e3b8eef","friendlyName":"Classic SEG 1","emailType":1,"exchangeVersion":1,"segConsoleUrl":"https://server.com/segconsole/management.ashx","useRecommendedSettings":true,"isEnabled":true,"segIgnoreSslErrorsWithExch":false,"segIgnoreSslErrorsWithAw":false,"segConsoleBasicAuthEnabled":false}},"ClassicSegSettingsUpdateRequestV1Model":{"description":"This model is used to configure MEM flavor that uses Classic SEG.","required":["organizationGroupUuid"],"type":"object","properties":{"memConfigUuid":{"format":"uuid","description":"Unique identifier (GUID) of the configuration.","type":"string","xml":{"name":"MemConfigUuid"}},"organizationGroupUuid":{"format":"uuid","description":"Organization Group identifier of the Classic SEG configuration.","type":"string","xml":{"name":"OrganizationGroupUuid"}},"friendlyName":{"description":"General Name of the Classic SEG configuration.","type":"string","xml":{"name":"FriendlyName"}},"emailType":{"format":"int32","description":"Type of Email Server","enum":[1,2,3,4,5,6,7],"type":"integer","xml":{"name":"EmailType"}},"exchangeVersion":{"format":"int32","description":"Version of exchange server","enum":[1,2,3,4,5,6,7],"type":"integer","xml":{"name":"ExchangeVersion"}},"segConsoleUrl":{"description":"SEG server domain address.","type":"string","xml":{"name":"SegConsoleUrl"}},"useRecommendedSettings":{"description":"Indicates the use of recommended settings.","type":"boolean","xml":{"name":"UseRecommendedSettings"}},"isEnabled":{"description":"Value indicating whether the gateway is enabled or not","type":"boolean","xml":{"name":"IsEnabled"}},"segIgnoreSslErrorsWithExch":{"description":"Value indicating whether the gateway module will ignore SSL certificate errors received when proxying to the Exchange ActiveSync server","type":"boolean","xml":{"name":"SegIgnoreSslErrorsWithExch"}},"segIgnoreSslErrorsWithAw":{"description":"Value indicating whether the SEG Module will ignore SSL certificate errors received when communicating with API or Meg Queue.","type":"boolean","xml":{"name":"SegIgnoreSslErrorsWithAw"}},"segConsoleBasicAuthEnabled":{"description":"Value indicating whether basic authentication of SEG console is enabled.","type":"boolean","xml":{"name":"SegConsoleBasicAuthEnabled"}}},"example":{"memConfigUuid":"bc5efb2b-d6fc-4d83-bc5b-67172f47afba","organizationGroupUuid":"6ba50964-d038-4659-bf9b-a01097d29f15","friendlyName":"Classic SEG 1","emailType":1,"exchangeVersion":1,"segConsoleUrl":"https://server.com/segconsole/management.ashx","useRecommendedSettings":true,"isEnabled":true,"segIgnoreSslErrorsWithExch":false,"segIgnoreSslErrorsWithAw":false,"segConsoleBasicAuthEnabled":false}},"ComplianceRequestV1Model":{"description":"Model contains information to start the compliance engine.","type":"object","properties":{"memConfigurationUuids":{"description":"A list of MEM configuration Uuids.","type":"array","items":{"format":"uuid","type":"string"},"xml":{"name":"MemConfigurationUuids"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"example":{"memConfigurationUuids":["0c0430b6-22fd-4db6-a8db-d6144e7eb2eb"],"id":1234,"uuid":"6e966899-f1b9-4a7d-9096-f556d8a27338"}},"ComplianceResponseV1Model":{"description":"Model contains the basic information about the current status of the compliance engine.","type":"object","properties":{"status":{"description":"Current status of the email compliance engine.","type":"string","xml":{"name":"Status"}},"startedOn":{"format":"date-time","description":"Date and time when compliance engine was started.","type":"string","xml":{"name":"StartedOn"}},"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"Info","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"status":"Running","startedOn":"2018-04-19T19:34:59.5239438-04:00","Links":[],"id":1234,"uuid":"6fce7505-775e-4557-8eff-1e4f4ab4ca30"}},"ComplianceStateV1Model":{"description":"Model contains state information about the compliance engine.","type":"object","properties":{"taskIdentifier":{"description":"Free text description of the task.","type":"string","xml":{"name":"TaskIdentifier"}},"status":{"description":"Current status of the task (Running, Complete, Fail, Ignore, Success, Ignore )","type":"string","xml":{"name":"Status"}},"state":{"description":"State information or descriptive information about the task.","type":"string","xml":{"name":"State"}},"startedOn":{"format":"date-time","description":"Date and time when compliance engine was started.","type":"string","xml":{"name":"StartedOn"}},"startedBy":{"format":"int32","description":"Identifier of the user who started the compliance engine.","type":"integer","xml":{"name":"StartedBy"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"example":{"taskIdentifier":"Run Compliance","status":"Running","state":"Compliance engine is processing the last batch.","startedOn":"2018-04-19T19:34:59.555183-04:00","startedBy":2,"id":1234,"uuid":"7304e115-cf5b-47d4-82d3-8710fb2f18fe"}},"HypermediaModel     ":{"description":"The aw hypermedia model.","type":"object","properties":{"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AdditionalInfo"}},"DevicePolicyPagedSearchResultModel":{"description":"The device policy paged search result model.","type":"object","properties":{"resultSet":{"description":"Array of returned Device Policies","type":"array","items":{"$ref":"#/definitions/DevicePolicyModel"},"xml":{"name":"ResultSet"}},"DbSyncTime":{"format":"date-time","description":"Last time when policies were pulled from DB","type":"string","xml":{"name":"DbSyncTime"}},"AdditionalInfo":{"$ref":"#/definitions/HypermediaModel     ","description":"Gets or sets Hypermedia content for the result","xml":{"name":"Hypermedia"}},"TotalResults":{"format":"int32","description":"Gets or sets Total Result","type":"integer","xml":{"name":"TotalResults"}}},"xml":{"name":"DevicePolicyPagedSearchResultModel","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"resultSet":[{"awDeviceId":1234,"isManaged":false,"deviceType":0,"isCompromised":true,"isDataProtected":true,"isEnrolled":true,"daysSinceLastActivity":1,"isOsCompliant":true,"isModelCompliant":true,"easDeviceIdentifier":"Apq34ssks","mobileEmailDiagnosticsEnabled":true,"browserUriScheme":"awb://","browserUriSecureScheme":"awbs://","isNotMDMCompliant":true,"memConfigId":123,"memDeviceId":1234,"devicePolicyLoadStartTime":"2018-04-19T19:34:59.664524-04:00","devicePolicyLoadEndTime":"2018-04-19T19:34:59.664524-04:00","allowSync":true,"easProfileInstall":true,"deviceIdentifier":"Text value","fullDeviceIdentifier":"Apq34ssks","id":1234,"uuid":"f56ab743-3e41-448a-aeac-8eda3dfbaf4d"}],"DbSyncTime":"2018-04-19T19:34:59.664524-04:00","AdditionalInfo":{"Links":[],"id":1234,"uuid":"26694dd3-a177-4da5-8812-88045c0e0ec4"},"TotalResults":1}},"DevicePolicyModel":{"description":"The device policy model.","type":"object","properties":{"awDeviceId":{"format":"int32","description":"Internal airwatch managed or unmanaged device id","type":"integer","xml":{"name":"AwDeviceId"}},"isManaged":{"description":"Value indicating whether the device managed by AW","type":"boolean","xml":{"name":"IsManaged"}},"deviceType":{"format":"int32","description":"Type of device such as Apple, Android,...","enum":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,101,102,103,104],"type":"integer","xml":{"name":"DeviceType"}},"isCompromised":{"description":"Indicates whether the device compromised","type":"boolean","xml":{"name":"IsCompromised"}},"isDataProtected":{"description":"Indicates whether device adhere to data protection requirements","type":"boolean","xml":{"name":"IsDataProtected"}},"isEnrolled":{"description":"Indicates whether the device currently enrolled in MDM","type":"boolean","xml":{"name":"IsEnrolled"}},"daysSinceLastActivity":{"format":"int32","description":"Last recorded activity of the device in days","type":"integer","xml":{"name":"DaysSinceLastActivity"}},"isOsCompliant":{"description":"Indicates whether the device violate any defined operating system policies","type":"boolean","xml":{"name":"IsOsCompliant"}},"isModelCompliant":{"description":"Indicates whether the device violate any defined model policies","type":"boolean","xml":{"name":"IsModelCompliant"}},"easDeviceIdentifier":{"description":"Device identifier contained in EAS requests. e.g. for iOS device this will be \"Appl\" + serial number.","type":"string","xml":{"name":"EasDeviceIdentifier"}},"mobileEmailDiagnosticsEnabled":{"description":"Indicates whether the device is in Diagnostic Mode.","type":"boolean","xml":{"name":"MobileEmailDiagnosticsEnabled"}},"browserUriScheme":{"description":"Browser's URI scheme.","type":"string","readOnly":true,"xml":{"name":"BrowserUriScheme"}},"browserUriSecureScheme":{"description":"Browser's URI secure scheme.","type":"string","readOnly":true,"xml":{"name":"BrowserUriSecureScheme"}},"isNotMDMCompliant":{"description":"Indicates whether the device is Compliant or not.","type":"boolean","xml":{"name":"IsNotMDMCompliant"}},"memConfigId":{"format":"int64","description":"MemConfigId the payload belongs to","type":"integer","xml":{"name":"MemConfigId"}},"memDeviceId":{"format":"int64","description":"MemDeviceId the payload belongs to","type":"integer","xml":{"name":"MemDeviceId"}},"devicePolicyLoadStartTime":{"format":"date-time","description":"Date time for device policy load start","type":"string","xml":{"name":"DevicePolicyLoadStartTime"}},"devicePolicyLoadEndTime":{"format":"date-time","description":"Time for device policy load end","type":"string","xml":{"name":"DevicePolicyLoadEndTime"}},"allowSync":{"description":"Indicates whether the Mobile Email Gateway request allowed","type":"boolean","xml":{"name":"AllowSync"}},"easProfileInstall":{"description":"Determines whether EasProfileInstall was triggered for the device or not.","type":"boolean","xml":{"name":"EasProfileInstall"}},"deviceIdentifier":{"description":"Device identifier.  For managed devices this can be the serial number, AirWatch Device Identifier, or some other attribute.\r\nFor unmanaged devices this is the EAS Device Identifier.","type":"string","xml":{"name":"DeviceIdentifier"}},"fullDeviceIdentifier":{"description":"Full device Identifier. i.e. in case of Symbian \"IMEI\" + deviceIdentifier","type":"string","xml":{"name":"FullDeviceIdentifier"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"HypermediaModel      ":{"description":"The aw hypermedia model.","type":"object","properties":{"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AdditionalInfo"}},"EasDeviceTypePolicyPagedSearchResultModel":{"description":"The eas device type policy payload paged search result model.","type":"object","properties":{"resultSet":{"description":"Array of returned Eas device type policy payloads.","type":"array","items":{"$ref":"#/definitions/EasDeviceTypePolicyPayloadModel"},"xml":{"name":"ResultSet","wrapped":true}},"AdditionalInfo":{"$ref":"#/definitions/HypermediaModel      ","description":"Gets or sets Hypermedia content for the result","xml":{"name":"Hypermedia"}},"TotalResults":{"format":"int32","description":"Gets or sets Total Result","type":"integer","xml":{"name":"TotalResults"}}},"xml":{"name":"EasDeviceTypePolicyPagedSearchResult","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"resultSet":[{"easDeviceTypePolicyId":123,"easDeviceType":"ios","whitelisted":false,"allowSync":true,"id":1234,"uuid":"aaae1168-c392-48aa-bf2f-3d9f84ec605f"}],"AdditionalInfo":{"Links":[],"id":1234,"uuid":"def54252-19b0-4094-873b-fd9077f03bb6"},"TotalResults":1}},"EasDeviceTypePolicyPayloadModel":{"description":"The eas device type policy payload model.","type":"object","properties":{"easDeviceTypePolicyId":{"format":"int32","description":"Eas Device Type Policy ID","type":"integer","xml":{"name":"EasDeviceTypePolicyId"}},"easDeviceType":{"description":"Eas Device Type name","type":"string","xml":{"name":"EasDeviceType"}},"whitelisted":{"description":"Indicates whether this is EAS device type Whitelisted.","type":"boolean","xml":{"name":"Whitelisted"}},"allowSync":{"description":"Indicates whether the Mobile Email Gateway request allowed","type":"boolean","xml":{"name":"AllowSync"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"EasDeviceTypePolicyPayloadModel","namespace":"http://www.air-watch.com/webapi/resources"}},"EnrollmentUserEmailAttributesV1Model":{"description":"This model is used to retrieve email attributes of enrollment user.","type":"object","properties":{"enrollmentUserUuid":{"format":"uuid","description":"Unique identifier (GUID) of the enrollment user.","type":"string","xml":{"name":"EnrollmentUserUuid"}},"emailAddress":{"description":"Email address of the enrollment user.","type":"string","xml":{"name":"EmailAddress"}},"emailUserName":{"description":"Email user name of the enrollment user.","type":"string","xml":{"name":"EmailUserName"}},"emailPassword":{"description":"Password for the Email account of the enrollment user.","type":"string","xml":{"name":"EmailPassword"}},"emailAutoGeneratedPassword":{"description":"System generated password for the Email account of the enrollment user.","type":"string","xml":{"name":"EmailAutoGeneratedPassword"}},"emailAutoGeneratedPasswordLastReset":{"description":"Last date time when the system generated password was reset in the format ('YYYY-MM-DDThh:mm:ssZ')","type":"string","xml":{"name":"EmailAutoGeneratedPasswordLastReset"}}},"example":{"enrollmentUserUuid":"fe7477d4-aaa4-4d8d-8a2e-37ce24a6a8bd","emailAddress":"noreply@vmware.com","emailUserName":"emailUser1","emailPassword":"Password 1","emailAutoGeneratedPassword":"Password 2","emailAutoGeneratedPasswordLastReset":"2017-10-22T23:20:50.52Z"}},"GatewaySettingsModel":{"description":"Complex object containing all the required settings of SEG.","type":"object","properties":{"generalConfig":{"$ref":"#/definitions/GeneralConfigModel","description":"This model contains all general settings of the SEG.","xml":{"name":"GeneralConfig"}},"activeSyncPayloadReportingConfig":{"$ref":"#/definitions/ActiveSyncPayloadReportingModel","description":"This model contains gateway settings related to the ActiveSync payload.","xml":{"name":"ActiveSyncPayloadReportingConfig"}},"segHttpServerConfig":{"$ref":"#/definitions/SegHttpServerModel","description":"This model contains gateway settings related to HTTP listner of the SEG.","xml":{"name":"SegHttpServerConfig"}},"emailServerConfig":{"$ref":"#/definitions/EmailServerModel","description":"This model contains gateway settings related to the email server.","xml":{"name":"EmailServerConfig"}},"certAuthConfig":{"$ref":"#/definitions/CertificateAuthModel","description":"This model contains the gateway settings related to the Certificate Authentication.","xml":{"name":"CertificateAuthConfig"}},"consoleApiConfig":{"$ref":"#/definitions/ConsoleApiModel","description":"This model contains the gateway settings related to the Console API.","xml":{"name":"ConsoleApiConfig"}},"policyUpdateConfig":{"$ref":"#/definitions/PolicyUpdateModel","description":"This model contains the gateway settings related to the Policy update.","xml":{"name":"PolicyUpdateConfig"}},"contentTransformationConfig":{"$ref":"#/definitions/ContentTransformationModel","description":"This model contains the gateway settings related to content transformation of email.","xml":{"name":"ContentTransformationConfig"}},"jwtAuthConfig":{"$ref":"#/definitions/JwtAuthModel","description":"This model contains the gateway settings related to the JWT Authenication.","xml":{"name":"JwtAuthConfig"}},"clusterConfig":{"$ref":"#/definitions/ClusterModel","description":"This model contains the gateway settings related to the Clustering.","xml":{"name":"ClusterConfig"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"example":{"generalConfig":{"memConfigId":1,"easGatewayHostAndPortWithProtocol":"https://seg.acme.com","singlePolicyUpdateContextPath":"/segconsole/management.ashx","allowEmailUntilPolicyIsReady":true,"enableTestMode":false,"id":1234,"uuid":"69e9b50d-7689-4796-a9f8-66a12f668efa"},"activeSyncPayloadReportingConfig":{"reportingIntervalInSeconds":20,"transferRateToConsole":500,"logFilterCommands":["Text value"],"id":1234,"uuid":"552e087c-5925-486b-b5b5-c3bbe3efa0e4"},"segHttpServerConfig":{"segHttpServerPort":443,"segServerIsSsl":false,"uploadSslLocally":false,"httpsKeyStore":"Text value","httpsKeyStorePasscode":"Text value","id":1234,"uuid":"4f086928-67b2-4d4d-bc9b-692c7beb40a2"},"emailServerConfig":{"serverHostAndPort":"https://mail.acme.com","serverTimeoutInMillis":1200000,"serverConnectionPoolSize":50000,"ignoreSslErrorsWithExch":true,"id":1234,"uuid":"70eecdc2-8775-4ad2-8889-9e9ac408cfcd"},"certAuthConfig":{"clientCertTrustStore":"Local","clientCertTrustStorePasscode":"Text value","enableKCDAuthentication":false,"requireClientCert":false,"domainControllerHostName":"MyDController","targetSPN":"HTTP/myservice.","serviceAccountUsername":"RAHUL@domain.com.","serviceAccountPassword":"MyPassword","domainName":"MyDomain.com","id":1234,"uuid":"268b153a-f514-4418-9b27-3e61d28dfb7a"},"consoleApiConfig":{"awTenantCode":"Text value","ignoreSslErrorsWithAW":true,"transferRateToGateway":500,"serverTimeoutInMillis":40000,"serverConnectionPoolSize":20,"cmsCert":"Text value","cmsCertPasscode":"Text value","id":1234,"uuid":"80ba693c-7631-476f-a6cb-27b227449cd1"},"policyUpdateConfig":{"bulkUpdateCompletionThresholdInSeconds":600,"policyUpdateErrorRetryCount":3,"segConfigRetryIntervalInMinutes":5,"policyRefreshIntervalInMinutes":60,"deltaPolicyRefreshIntervalInMinutes":10,"enableDeltaSync":true,"id":1234,"uuid":"e271b17b-bb48-4aaf-9eeb-faaf87e42598"},"contentTransformationConfig":{"allowAttachmentUntilPolicyIsDataReady":false,"defaultBlockMessage":"Attachment removed by mobile email policy.","ignoreSMIMEContentTransform":false,"sharedSecretKey":"Text value","id":1234,"uuid":"6f84fe9b-d61c-4545-9ec1-5d785d817b90"},"jwtAuthConfig":{"publicKeyModulus":"Text value","publicKeyExponent":"Text value","issuer":"Text value","audience":"Text value","id":1234,"uuid":"776d710e-c871-4b57-8e2b-dd330b9b34e0"},"clusterConfig":{"clusterHosts":["Text value"],"distributedCachePort":5701,"clusterEnabled":false,"clusterPort":41232,"id":1234,"uuid":"f0dbf2a8-12eb-4da2-a75b-0dd10758a294"},"id":1234,"uuid":"faded070-1dbc-4398-8b8d-5242c51ec069"}},"GeneralConfigModel":{"description":"Gateway Setting Transport Model For General Configuration (Linux).","type":"object","properties":{"memConfigId":{"format":"int32","description":"Unique configuration id.","type":"integer","xml":{"name":"MemConfigId"}},"easGatewayHostAndPortWithProtocol":{"description":"SEG url.","type":"string","xml":{"name":"EasGatewayHostAndPortWithProtocol"}},"singlePolicyUpdateContextPath":{"description":"Context path of the SEG url.","type":"string","xml":{"name":"SinglePolicyUpdateContextPath"}},"allowEmailUntilPolicyIsReady":{"description":"Indicates whether gateway should allow email access until policy update is completed successfully atleast once.","type":"boolean","xml":{"name":"AllowEmailUntilPolicyIsReady"}},"enableTestMode":{"description":"Indicates whether to block any request or not.","type":"boolean","xml":{"name":"EnableTestMode"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"ActiveSyncPayloadReportingModel":{"description":"Gateway Setting Transport Model  For ActiveSync Payload Configuration (Linux).","type":"object","properties":{"reportingIntervalInSeconds":{"format":"int32","description":"Interval of reporting the ActiveSync payload to SEG in seconds.","type":"integer","xml":{"name":"PayloadReportingInterval"}},"transferRateToConsole":{"format":"int32","description":"Rate of transfer to console.","type":"integer","xml":{"name":"SegTranferRateToConsole"}},"logFilterCommands":{"description":"List of commands which are logged in SEG during ActiveSync requests.\r\n<value>\r\n1 = FolderSync, 2 = GetItemEstimate, 4 = Settings, \r\n8 = Provision, 16 = SendMail, 32 = SmartForward, \r\n64 = Smart Reply, 128 = GetAttachment, 256 = FolderCreate, \r\n512 = FolderDelete, 1024 = FolderUpdate, 2048 = MoveItems, 4096 = MeetingResponse, 8192 = Search, \r\n16384 = ItemOperations, 32768 = ResolveRecipients, \r\n65536 = ValidateCert, 131072 = Sync, 262144 = Ping\r\n</value>","type":"array","items":{"type":"string"},"xml":{"name":"LogFilterCommands"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"SegHttpServerModel":{"description":"Gateway Setting Transport Model For SEG HTTP Server Configuration (Linux).","type":"object","properties":{"segHttpServerPort":{"format":"int32","description":"Port on which SEG's HTTP listner is listening.","type":"integer","xml":{"name":"SegHttpServerPort"}},"segServerIsSsl":{"description":"Indicates whether HTTP listner is runnning on SSL.","type":"boolean","xml":{"name":"IsSegServerSsl"}},"uploadSslLocally":{"description":"Indicates whether SSL certificate is uploaded locally from console.","type":"boolean","xml":{"name":"UploadSslLocally"}},"httpsKeyStore":{"description":"SSL cert which is uploaded into console.","type":"string","xml":{"name":"HttpsKeyStore"}},"httpsKeyStorePasscode":{"description":"Password of the SSL cert uploaded.","type":"string","xml":{"name":"HttpsKeyStorePasscode"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"EmailServerModel":{"description":"Gateway Setting Transport Model For Email Server Configuration (Linux).","type":"object","properties":{"serverHostAndPort":{"description":"Email server url (host and port with protocol).","type":"string","xml":{"name":"EmailServerUrl"}},"serverTimeoutInMillis":{"format":"int32","description":"Timeout duration of email server.","type":"integer","xml":{"name":"EmailServerTimeout"}},"serverConnectionPoolSize":{"format":"int32","description":"Number of concurrent open sockets to email server.","type":"integer","xml":{"name":"EmailServerConnectionPoolSize"}},"ignoreSslErrorsWithExch":{"description":"Indicates whether gateway module will ignore SSL certificate errors when proxying to the Exchange active server.","type":"boolean","xml":{"name":"SegIgnoreSslErrorsWithExch"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"CertificateAuthModel":{"description":"Gateway Setting Transport Model For Certificate Authorization Configuration (Linux).","type":"object","properties":{"clientCertTrustStore":{"description":"Root certificate which issues client certificates used by SEG with KCD.","type":"string","xml":{"name":"CertAuthTrustStore"}},"clientCertTrustStorePasscode":{"description":"Password of the root certificate.","type":"string","xml":{"name":"CertAuthTrustStorePasscode"}},"enableKCDAuthentication":{"description":"Indicates use of the KCD authentication.","type":"boolean","xml":{"name":"SegEnableKcdAuthentication"}},"requireClientCert":{"description":"Indicates if basic authenication is allowed or not.","type":"boolean","xml":{"name":"RequireClientCert"}},"domainControllerHostName":{"description":"Domain controller name used to define Kerberos realm.","type":"string","xml":{"name":"SegDomainControllerName"}},"targetSPN":{"description":"Target SPN used to generate TGT in KCD authenication.","type":"string","xml":{"name":"SegTargetSpn"}},"serviceAccountUsername":{"description":"Service account username to generate TGT in KCD authenication.","type":"string","xml":{"name":"SegServiceAccountUsername"}},"serviceAccountPassword":{"description":"Service account password to generate TGT in KCD authenication.","type":"string","xml":{"name":"SegServiceAccountPassword"}},"domainName":{"description":"Domain used to defined the Kerbos realm.","type":"string","xml":{"name":"SegDomainName"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"ConsoleApiModel":{"description":"Gateway Setting Transport Model For Console Api Server Configuration (Linux).","type":"object","properties":{"awTenantCode":{"description":"AirWatch Tenant Code to access the API.","type":"string","xml":{"name":"AwTenantCode"}},"ignoreSslErrorsWithAW":{"description":"Indicates whether to ignore the SSL certificate errors when communicating with API or MEG Queue.","type":"boolean","xml":{"name":"SegIgnoreSslErrorsWithAw"}},"transferRateToGateway":{"format":"int32","description":"Rate of transactions with gateway.","type":"integer","xml":{"name":"SegTransferRateToGateway"}},"serverTimeoutInMillis":{"format":"int32","description":"Api server timeout in milliseconds.","type":"integer","xml":{"name":"ApiServerTimeout"}},"serverConnectionPoolSize":{"format":"int32","description":"Size of the connection pool of API server.","type":"integer","xml":{"name":"ApiServerConnectionPoolSize"}},"cmsCert":{"description":"CMS certificate used to access the API.","type":"string","xml":{"name":"CmsCertificate"}},"cmsCertPasscode":{"description":"Passcode to decrypt the CMS certificate.","type":"string","xml":{"name":"CmsCertificatePasscode"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"PolicyUpdateModel":{"description":"This model contains the gateway settings related to the Policy update.","type":"object","properties":{"bulkUpdateCompletionThresholdInSeconds":{"format":"int32","description":"Max time for bulk policy update. If bulk update process exceeds this time limit then the process is considered failed.","type":"integer","xml":{"name":"BulkUpdateCompletionThreshold"}},"policyUpdateErrorRetryCount":{"format":"int32","description":"No of times gateway should retry updating policy after it fails.","type":"integer","xml":{"name":"PolicyUpdateErrorRetryCount"}},"segConfigRetryIntervalInMinutes":{"format":"int32","description":"Interval to update gateway policy once it fails in minutes.","type":"integer","xml":{"name":"SegConfigPolicyRetryInterval"}},"policyRefreshIntervalInMinutes":{"format":"int32","description":"Interval to refresh gateway policy in minutes.","type":"integer","xml":{"name":"SegPolicyRefreshInterval"}},"deltaPolicyRefreshIntervalInMinutes":{"format":"int32","description":"Delta Sync interval to refresh gateway policy in minutes.","type":"integer","xml":{"name":"SegPolicyRefreshDeltaInterval"}},"enableDeltaSync":{"description":"Indicates if delta sync is enabled or not.","type":"boolean","xml":{"name":"SegEnableDeltaSync"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"ContentTransformationModel":{"description":"This model contains the gateway settings related to the Policy update.","type":"object","properties":{"allowAttachmentUntilPolicyIsDataReady":{"description":"Indicates whether attachment should be allowed or stripped.","type":"boolean","xml":{"name":"AllowAttachmentUntilPolicyIsDataReady"}},"defaultBlockMessage":{"description":"Default Message that will be added to the email body when an attachment is stripped.","type":"string","xml":{"name":"DefaultBlockMessage"}},"ignoreSMIMEContentTransform":{"description":"Indicates whether the SMIME context transformation will be ignored or not.","type":"boolean","xml":{"name":"SegIgnoreSmimeContentTransform"}},"sharedSecretKey":{"description":"Key to decrypt the attachment encryption.","type":"string","xml":{"name":"SharedSecretKey"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"JwtAuthModel":{"description":"This model contains the gateway settings related to the JWT Authenication.","type":"object","properties":{"publicKeyModulus":{"description":"Console public key modulus.","type":"string","xml":{"name":"JwtPublicKeyModulus"}},"publicKeyExponent":{"description":"Console public key exponent.","type":"string","xml":{"name":"JwtPublicKeyExponent"}},"issuer":{"description":"Issuer of the JWT key.","type":"string","xml":{"name":"JwtKeyIssuer"}},"audience":{"description":"Audience of the JWT key.","type":"string","xml":{"name":"JwtAudience"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"ClusterModel":{"description":"This model contains the gateway settings related to the Clustering.","type":"object","properties":{"clusterHosts":{"description":"List of hosts/nodes in the cluster.","type":"array","items":{"type":"string"},"xml":{"name":"ClusterHosts"}},"distributedCachePort":{"format":"int32","description":"Port used by distributed cache.","type":"integer","xml":{"name":"DistributedCachePort"}},"clusterEnabled":{"description":"Indicates if cluster is enabled or not.","type":"boolean","xml":{"name":"IsClusterEnabled"}},"clusterPort":{"format":"int32","description":"Port used to communicate with nodes over event bus.","type":"integer","xml":{"name":"ClusterPort"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"GatewayInstallationModel":{"description":"model of Gateway Installation Settings.","type":"object","properties":{"payloadType":{"description":"Type of the payload.","type":"string","xml":{"name":"PayloadType"}},"payload":{"$ref":"#/definitions/GatewaySettingsModel","description":"Complex object containing all the required settings of SEG.","xml":{"name":"Payload"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"example":{"payloadType":"SEG","payload":{"generalConfig":{"memConfigId":1,"easGatewayHostAndPortWithProtocol":"https://seg.acme.com","singlePolicyUpdateContextPath":"/segconsole/management.ashx","allowEmailUntilPolicyIsReady":true,"enableTestMode":false,"id":1234,"uuid":"66ebfd80-e9b2-4fdd-834b-c7967cfd79e6"},"activeSyncPayloadReportingConfig":{"reportingIntervalInSeconds":20,"transferRateToConsole":500,"logFilterCommands":["Text value"],"id":1234,"uuid":"72c9b858-7343-417c-ad7d-1d0bc35aad07"},"segHttpServerConfig":{"segHttpServerPort":443,"segServerIsSsl":false,"uploadSslLocally":false,"httpsKeyStore":"Text value","httpsKeyStorePasscode":"Text value","id":1234,"uuid":"c54b174a-6477-4015-a69f-fc99c097671f"},"emailServerConfig":{"serverHostAndPort":"https://mail.acme.com","serverTimeoutInMillis":1200000,"serverConnectionPoolSize":50000,"ignoreSslErrorsWithExch":true,"id":1234,"uuid":"f0a6ee42-5493-4885-8e14-6a99fdbc7605"},"certAuthConfig":{"clientCertTrustStore":"Local","clientCertTrustStorePasscode":"Text value","enableKCDAuthentication":false,"requireClientCert":false,"domainControllerHostName":"MyDController","targetSPN":"HTTP/myservice.","serviceAccountUsername":"RAHUL@domain.com.","serviceAccountPassword":"MyPassword","domainName":"MyDomain.com","id":1234,"uuid":"6bfe51e9-99b7-465a-bfeb-4478aa162cbe"},"consoleApiConfig":{"awTenantCode":"Text value","ignoreSslErrorsWithAW":true,"transferRateToGateway":500,"serverTimeoutInMillis":40000,"serverConnectionPoolSize":20,"cmsCert":"Text value","cmsCertPasscode":"Text value","id":1234,"uuid":"9a522544-b804-4f94-a64e-c0b6aa883915"},"policyUpdateConfig":{"bulkUpdateCompletionThresholdInSeconds":600,"policyUpdateErrorRetryCount":3,"segConfigRetryIntervalInMinutes":5,"policyRefreshIntervalInMinutes":60,"deltaPolicyRefreshIntervalInMinutes":10,"enableDeltaSync":true,"id":1234,"uuid":"744d0b50-6e54-46c0-ab26-5b6fffef8c31"},"contentTransformationConfig":{"allowAttachmentUntilPolicyIsDataReady":false,"defaultBlockMessage":"Attachment removed by mobile email policy.","ignoreSMIMEContentTransform":false,"sharedSecretKey":"Text value","id":1234,"uuid":"ae3e847c-fceb-41ed-8b31-157188ec500f"},"jwtAuthConfig":{"publicKeyModulus":"Text value","publicKeyExponent":"Text value","issuer":"Text value","audience":"Text value","id":1234,"uuid":"87a09782-aaaa-42e8-83ce-b03f367b3a04"},"clusterConfig":{"clusterHosts":["Text value"],"distributedCachePort":5701,"clusterEnabled":false,"clusterPort":41232,"id":1234,"uuid":"9dbd7ec7-5fa3-46cd-bd7f-bb24ef44cd00"},"id":1234,"uuid":"54710646-e444-436d-90f2-f55109a32aaa"},"id":1234,"uuid":"206105e7-da71-4cc4-b580-f1e6d41a438b"}},"GeneralAccessPolicyModel":{"description":"The general access policy model.","type":"object","properties":{"defaultEasDeviceTypePolicy":{"description":"Indicates the default behavior of EAS Device Type Policy","type":"boolean","xml":{"name":"DefaultEasDeviceTypePolicy"}},"requireEnrollment":{"description":"Indicates whether Device is required to be enrolled or not","type":"boolean","xml":{"name":"RequireEnrollment"}},"requireDataProtection":{"description":"Indicates whether Device must adhere to data protection requirements","type":"boolean","xml":{"name":"RequireDataProtection"}},"useManagedAttachmentPolicy":{"description":"Indicates specific document types are encrypted or blocked for managed devices.","type":"boolean","xml":{"name":"UseManagedAttachmentPolicy"}},"useUnmanagedAttachmentPolicy":{"description":"Indicates if unmanaged attachement policy is on or not.","type":"boolean","xml":{"name":"UseUnmanagedAttachmentPolicy"}},"unmanagedAttachmentEncryptionKey":{"format":"byte","description":"Indicates whether to encrypt/decrypt attachment for unmanaged devcies.","type":"string","xml":{"name":"UnmanagedAttachmentEncryptionKey"}},"blockCompromisedDevices":{"description":"Indicates whether to Block device that are compromised (e.g. Jailbroken)","type":"boolean","xml":{"name":"BlockCompromisedDevices"}},"blockInactiveDevices":{"description":"Indicates whether to Block requests coming from device that have been inactive for x number of days.","type":"boolean","xml":{"name":"BlockInactiveDevices"}},"daysBeforeInactive":{"format":"int32","description":"The number of days before a device is considered inactive.","type":"integer","xml":{"name":"DaysBeforeInactive"}},"blockDiscoveredEasDeviceTypes":{"description":"Indicates whether to block requests coming from unknown eas device types.","type":"boolean","xml":{"name":"BlockDiscoveredEasDeviceTypes"}},"defaultEmailClientPolicy":{"description":"Indicates the default access behavior for all email clients not explicitly allowed or blocked.","type":"boolean","xml":{"name":"DefaultEmailClientPolicy"}},"defaultEmailAccountPolicy":{"description":"Indicates the default access behavior for all email user accounts not explicitly allowed or blocked","type":"boolean","xml":{"name":"DefaultEmailAccountPolicy"}},"gatewayStatus":{"description":"Indicates whether gateway is in enable mode or bypass mode.","type":"boolean","xml":{"name":"GatewayStatus"}},"IsTestModeEnabled":{"description":"Indicates whether test mode is enabled or not.","type":"boolean","xml":{"name":"IsTestModeEnabled"}},"requireEasProfile":{"description":"Indicates whether require Eas profile is enabled in the current LG.","type":"boolean","xml":{"name":"RequireEasProfile"}},"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"GeneralAccessPolicy","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"defaultEasDeviceTypePolicy":true,"requireEnrollment":true,"requireDataProtection":true,"useManagedAttachmentPolicy":true,"useUnmanagedAttachmentPolicy":true,"unmanagedAttachmentEncryptionKey":"QA==","blockCompromisedDevices":true,"blockInactiveDevices":true,"daysBeforeInactive":8,"blockDiscoveredEasDeviceTypes":true,"defaultEmailClientPolicy":true,"defaultEmailAccountPolicy":true,"gatewayStatus":true,"IsTestModeEnabled":true,"requireEasProfile":true,"Links":[],"id":1234,"uuid":"7ce3b35e-a804-4cdb-8063-2235a25c8599"}},"ControllerModel":{"description":"Model to define the Controller and its components like Description, custom attributes and end points","type":"object","properties":{"name":{"description":"Gets or sets Name","type":"string","xml":{"name":"Name"}},"description":{"description":"Gets or sets Description","type":"string","xml":{"name":"Description"}},"endpoints":{"description":"Gets or sets EndPoints","type":"array","items":{"$ref":"#/definitions/EndPointModel"},"xml":{"name":"EndPoints"}},"endpointsErrorCount":{"format":"int32","description":"Gets or sets the total number of endpoint errors for a particular controller","type":"integer","xml":{"name":"EndpointsErrorCount"}},"modified":{"description":"Gets or sets a value indicating whether the controller contains a new endpoint","type":"boolean","xml":{"name":"Modified"}},"isinternal":{"description":"Gets or sets a value indicating whether the controller is interal","type":"boolean","xml":{"name":"IsInteral"}},"totalNewEndpoints":{"format":"int32","description":"Gets or sets the total number of new endpoints for a particular controller","type":"integer","xml":{"name":"TotalNewEndpoints"}}}},"EndPointModel":{"description":"Class to define the endpoints","type":"object","properties":{"isnew":{"description":"Gets or sets a value indicating whether it is a new endpoint","type":"boolean","xml":{"name":"IsNew"}},"isinternal":{"description":"Gets or sets a value indicating whether it is an internal endpoint","type":"boolean","xml":{"name":"IsInternal"}},"obsolete":{"description":"Gets or sets obsolete value if present","type":"string","xml":{"name":"Obsolete"}},"routeTemplate":{"description":"Gets or sets the routeTemplate","type":"string","xml":{"name":"RouteTemplate"}},"urisample":{"description":"Gets or sets urisample","type":"string","xml":{"name":"UriSample"}},"id":{"description":"Gets or sets Id","type":"string","xml":{"name":"Id"}},"endpointname":{"description":"Gets or sets Name","type":"string","xml":{"name":"EndpointName"}},"description":{"description":"Gets or sets Description","type":"string","xml":{"name":"Description"}},"method":{"description":"Gets or sets Method","type":"string","xml":{"name":"Method"}},"relativePath":{"description":"Gets or sets RelativePath","type":"string","xml":{"name":"RelativePath"}},"ResponseType":{"description":"Gets or sets ResponseType","type":"string","xml":{"name":"ResponseType"}},"endPointDetails":{"$ref":"#/definitions/EndPointDetailsModel","description":"Gets or sets EndPointDetails","xml":{"name":"EndPointDetails"}},"validationResults":{"$ref":"#/definitions/EndpointValidationResult","description":"Gets or sets validation results","xml":{"name":"ValidationResults"}},"validationErrorCount":{"format":"int32","description":"Gets or sets validation error count","type":"integer","xml":{"name":"ValidationErrorCount"}},"version":{"description":"Gets or sets version of endpoint if it exists","type":"string","xml":{"name":"Version"}}}},"EndPointDetailsModel":{"description":"Class to define the model for the endpoint","type":"object","properties":{"parameters":{"description":"Gets or sets Parameters","type":"array","items":{"$ref":"#/definitions/ParameterModel"},"xml":{"name":"Parameters"}},"queryStringParameters":{"description":"Gets or sets QueryStringParams","type":"array","items":{"$ref":"#/definitions/ParameterModel"},"xml":{"name":"QueryStringParams"}},"resourceDescription":{"$ref":"#/definitions/ModelDescription","description":"Gets or sets the {AW.WebApi.Common.Documentation.ModelDescriptions.ModelDescription} that describes the resource.","xml":{"name":"ResourceDescription"}},"sampleRequests":{"description":"Gets or sets the sample requests associated with the API.","type":"object","additionalProperties":{"type":"object"},"xml":{"name":"SampleRequests"}},"sampleResponses":{"description":"Gets or sets  sample responses associated with the API.","type":"object","additionalProperties":{"type":"object"},"xml":{"name":"SampleResponses"}},"sampleQueryString":{"description":"Gets or sets SampleQueryString","type":"string","xml":{"name":"SampleQueryString"}},"validationResults":{"$ref":"#/definitions/EndpointValidationResult","description":"Gets or sets validation results","xml":{"name":"ValidationResults"}}}},"EndpointValidationResult":{"description":"EndpointValidationResult class","type":"object","properties":{"isValid":{"description":"Gets or sets a value indicating whether IsValid","type":"boolean","xml":{"name":"IsValid"}},"errors":{"description":"Gets or sets Errors","type":"array","items":{"$ref":"#/definitions/EndpointValidationError"},"xml":{"name":"Errors"}}}},"ParameterModel":{"description":"Class to define the parameters","type":"object","properties":{"paramName":{"description":"Gets or sets Name","type":"string","xml":{"name":"Name"}},"paramType":{"description":"Gets or sets Type","type":"string","xml":{"name":"Type"}},"paramDescription":{"description":"Gets or sets Description","type":"string","xml":{"name":"Description"}},"paramSource":{"description":"Gets or sets Source","type":"string","xml":{"name":"Source"}}}},"ModelDescription":{"description":"Describes a type model.","type":"object","properties":{"modelDocumentation":{"type":"string","xml":{"name":"Documentation"}},"modelType":{"type":"string","xml":{"name":"ModelType"}},"modelName":{"type":"string","xml":{"name":"Name"}}}},"EndpointValidationError":{"description":"EndpointValidationError class","type":"object","properties":{"propertyName":{"description":"Gets or sets PropertyName","type":"string","xml":{"name":"PropertyName"}},"errorMessage":{"description":"Gets or sets ErrorMessage","type":"string","xml":{"name":"ErrorMessage"}}}},"EndpointIndexModel":{"description":"Endpoint Index Model","type":"object","properties":{"EndpointIndexId":{"description":"Gets or sets the endpoint index ID","type":"string","xml":{"name":"EndpointIndexId"}},"EndpointIndexDetail":{"$ref":"#/definitions/EndpointIndexDetailModel","description":"gets or sets the endpoint index details","xml":{"name":"EndpointIndexDetail"}}}},"EndpointIndexDetailModel":{"description":"Endpoint Index Detail Model","type":"object","properties":{"Title":{"description":"Gets or sets the title.","type":"string","xml":{"name":"Title"}},"Tag":{"description":"Gets or sets the tag.","type":"string","xml":{"name":"Tag"}},"HttpMethod":{"description":"Gets or sets the httpMethod.","type":"string","xml":{"name":"HttpMethod"}},"OperationId":{"description":"Gets or sets the operation ID.","type":"string","xml":{"name":"OperationId"}},"Description":{"description":"Gets or sets the description.","type":"string","xml":{"name":"Description"}}}},"HyperLinkPolicyModelV2":{"description":"This class acts as a response model for HyperLink Policy Model for version 2.","type":"object","properties":{"concurrencyId":{"description":"Concurrency Id.","type":"string","xml":{"name":"ConcurrencyId"}},"openHyperlinksInSecureApplication":{"description":"Indicates whether secure hyper links within email content to be opened within native brower","type":"boolean","xml":{"name":"OpenHyperLinksInSecureApplication"}},"modificationType":{"format":"int32","description":"Type of modification to be applied on hyperlinks","enum":[0,1,2],"type":"integer","xml":{"name":"ModificationType"}},"domain":{"description":"List of domains to open in Secure browser","type":"array","items":{"type":"string"},"xml":{"name":"Domain","wrapped":true}},"ignoreHyperlinkForIosAWInbox":{"description":"Indicates whether to Ignore Hyperlink transformation if IOS device has aiwatch inbox or boxer","type":"boolean","xml":{"name":"IgnoreHyperlinkForIos"}},"ignoreHyperlinkForAndroidAWInbox":{"description":"Indicates whether to Ignore Hyperlink transformation if Android device has aiwatch inbox or boxer","type":"boolean","xml":{"name":"IgnoreHyperlinkForAndroid"}},"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"Info","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"concurrencyId":"Text value","openHyperlinksInSecureApplication":true,"modificationType":0,"domain":["Text value"],"ignoreHyperlinkForIosAWInbox":true,"ignoreHyperlinkForAndroidAWInbox":true,"Links":[],"id":1234,"uuid":"619ef317-bf47-440b-8074-7d4b47b83a5f"}},"HyperLinkPolicyModel":{"description":"Model to represent HyperLinkPolicy","type":"object","properties":{"openHyperlinksInSecureApplication":{"description":"Indicates whether secure hyper links within email content to be opened within native brower","type":"boolean","xml":{"name":"OpenHyperLinksInSecureApplication"}},"modificationType":{"format":"int32","description":"Type of modification to be applied on hyperlinks","enum":[0,1,2],"type":"integer","xml":{"name":"ModificationType"}},"domain":{"description":"List of domains to open in Secure browser","type":"array","items":{"type":"string"},"xml":{"name":"Domain","wrapped":true}},"ignoreHyperlinkForIosAWInbox":{"description":"Indicates whether to Ignore Hyperlink transformation if IOS device has aiwatch inbox or boxer","type":"boolean","xml":{"name":"IgnoreHyperlinkForIos"}},"ignoreHyperlinkForAndroidAWInbox":{"description":"Indicates whether to Ignore Hyperlink transformation if Android device has aiwatch inbox or boxer","type":"boolean","xml":{"name":"IgnoreHyperlinkForAndroid"}},"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"Info","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"openHyperlinksInSecureApplication":true,"modificationType":0,"domain":["Text value"],"ignoreHyperlinkForIosAWInbox":true,"ignoreHyperlinkForAndroidAWInbox":true,"Links":[],"id":1234,"uuid":"2f77f4f6-785a-441b-9ecb-a9b0ddd186ac"}},"HypermediaModel       ":{"description":"The aw hypermedia model.","type":"object","properties":{"Links":{"description":"List of hypermedia link.","type":"array","items":{"$ref":"#/definitions/Link"},"readOnly":true,"xml":{"name":"Links","wrapped":true}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"AdditionalInfo"}},"MailClientPolicyPagedSearchResultModel":{"description":"Representation of MailClientPolicyPagedSearchResultModel","type":"object","properties":{"resultSet":{"description":"Array of returned mail client policy search results","type":"array","items":{"$ref":"#/definitions/MailClientPolicyModel"},"xml":{"name":"ResultSet","wrapped":true}},"AdditionalInfo":{"$ref":"#/definitions/HypermediaModel       ","description":"Gets or sets Hypermedia content for the result","xml":{"name":"Hypermedia"}},"TotalResults":{"format":"int32","description":"Gets or sets Total Result","type":"integer","xml":{"name":"TotalResults"}}},"xml":{"name":"MailClientPolicyPagedSearchResult","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"resultSet":[{"mailClientPolicyId":123,"mailClient":"AirWatch Boxer (Apple iPad; iOS 10.1.1) Version 4.2.0/944","type":0,"allowSync":false,"id":1234,"uuid":"befe532c-5a12-48c0-ba33-265b36ca1d8d"}],"AdditionalInfo":{"Links":[],"id":1234,"uuid":"c7898db0-57a5-4ec5-a20d-7aa5b0ae5bbe"},"TotalResults":1}},"MailClientPolicyModel":{"description":"Model to represent MailClientPolicy","type":"object","properties":{"mailClientPolicyId":{"format":"int32","description":"MailClient Policy ID","type":"integer","xml":{"name":"MailClientPolicyId"}},"mailClient":{"description":"Mail client name","type":"string","xml":{"name":"MailClient"}},"type":{"format":"int32","description":"Type of Mail client","enum":[0,2,3],"type":"integer","xml":{"name":"Type"}},"allowSync":{"description":"Indicates if the Mobile Email Gateway request should be allowed","type":"boolean","xml":{"name":"AllowSync"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}}},"MemConfigProfileV1Model":{"description":"This model has the details of the MemConfig and profile association","type":"object","properties":{"memConfigProfileId":{"format":"int32","description":"Unique Identifier for the MemConfig and Profile Association","type":"integer","xml":{"name":"MemConfigProfileId"}},"memConfigId":{"format":"int32","description":"Unique Identifier for the MemConfig","type":"integer","xml":{"name":"MemConfigId"}},"deviceProfileId":{"format":"int32","description":"Unique Identifier for the Profile Associated","type":"integer","xml":{"name":"DeviceProfileId"}}},"example":[{"memConfigProfileId":1,"memConfigId":2,"deviceProfileId":3}]},"ProfileV1Model":{"description":"This model has the Id of the profile to be added/removed association and the corresponding action","type":"object","properties":{"profileId":{"format":"uuid","description":"Unique Identifier for the profile","type":"string","xml":{"name":"ProfileId"}}},"example":[{"profileId":"442a49b2-ad56-4c4b-a21b-508fc3b0a678"}]},"MEMDeviceSearchResult":{"description":"This holds the resultset of MEM-Device search operation","type":"object","properties":{"MEMDevices":{"description":"List of MEM Devices","type":"array","items":{"$ref":"#/definitions/MEMDevice"},"xml":{"name":"MEMDevices","wrapped":true}},"Page":{"format":"int32","type":"integer","xml":{"name":"Page"}},"PageSize":{"format":"int32","type":"integer","xml":{"name":"PageSize"}},"Total":{"format":"int32","type":"integer","xml":{"name":"Total"}}},"xml":{"name":"MEMDeviceSearchResult","namespace":"http://www.air-watch.com/servicemodel/resources"},"example":{"MEMDevices":[{"MEMDeviceID":1,"EASDeviceID":"ApplCCQLR90LFFCJ","EmailAddress":"abc@xyz.com","FriendlyName":"qa1 iPhone iOS 9.3.5 FRC4","Status":"Allowed","Reason":"Compliant","Managed":"FALSE","EasDeviceType":"iPhone","Platform":"Apple"}],"Page":1,"PageSize":2,"Total":3}},"MEMDevice":{"description":"Contains information about Email Management Device","type":"object","properties":{"MEMDeviceID":{"format":"int32","description":"MEM Device Identifier","type":"integer","xml":{"name":"MEMDeviceID"}},"EASDeviceID":{"description":"EAS Device Identifier","type":"string","xml":{"name":"EASDeviceID"}},"EmailAddress":{"description":"Email Address of the user","type":"string","xml":{"name":"EmailAddress"}},"FriendlyName":{"description":"Device Friendly Name","type":"string","xml":{"name":"FriendlyName"}},"Status":{"description":"Status of the email-action commands with Email-Server","type":"string","xml":{"name":"Status"}},"Reason":{"description":"Reason which tells why the email-action commands were Blocked or Allowed","type":"string","xml":{"name":"Reason"}},"Managed":{"description":"Flag to specify whether device-email is managed or not\r\nValid values: TRUE, FALSE","type":"string","xml":{"name":"Managed"}},"EasDeviceType":{"description":"Specifies the EasDeviceType Name","type":"string","xml":{"name":"EasDeviceType"}},"Platform":{"description":"Device Platform, This value will be not null only for Managed Device. For Unmanaged Devices this will be null","type":"string","xml":{"name":"Platform"}}},"xml":{"name":"MEMDevice","namespace":"http://www.air-watch.com/servicemodel/resources"}},"MemDeviceModel":{"description":"Model containing all the attributes of a device related to MEM.","type":"object","properties":{"deviceUuid":{"format":"uuid","description":"Unique identifier of a managed device.","type":"string","xml":{"name":"DeviceUuid"}},"memDeviceId":{"format":"int32","description":"Unique identifier of a MEM enrolled device.","type":"integer","xml":{"name":"MemDeviceId"}},"deviceFriendlyName":{"description":"Friendly name of the device.","type":"string","xml":{"name":"DeviceFriendlyName"}},"easDeviceIdentifier":{"description":"Unique identifier of the mail client on the device.","type":"string","xml":{"name":"EasDeviceIdentifier"}},"easDeviceGuid":{"format":"uuid","description":"Unique identifier of the mail client on the device.","type":"string","xml":{"name":"EasDeviceGuid"}},"organizationGroupUuid":{"format":"uuid","description":"Unique identifier of an organization in which device is enrolled.","type":"string","xml":{"name":"OrganizationGroupUuid"}},"deviceTypeId":{"format":"int32","description":"Identifier of device type.","type":"integer","xml":{"name":"DeviceTypeId"}},"deviceTypeName":{"description":"Name of the device type.","type":"string","xml":{"name":"DeviceTypeName"}},"deviceIdentity":{"format":"int32","description":"Device identity in the email server.","type":"integer","xml":{"name":"DeviceIdentity"}},"deviceImei":{"description":"IMEI number of the device.","type":"string","xml":{"name":"DeviceImei"}},"deviceOs":{"description":"Operating system of the device.","type":"string","xml":{"name":"DeviceOs"}},"deviceUserAgent":{"description":"Mail client agent installed on the device.","type":"string","xml":{"name":"DeviceUserAgent"}},"agentReportedPackageName":{"description":"Package name of the agent on the device.","type":"string","xml":{"name":"AgentReportedPackageName"}},"isEnrolled":{"description":"Indicates if the device is enrolled or not.","type":"boolean","xml":{"name":"IsEnrolled"}},"isManaged":{"description":"Indicates if the device is managed or not.","type":"boolean","xml":{"name":"IsManaged"}},"isCompromised":{"description":"Indicates if the device is compromised or not.","type":"boolean","xml":{"name":"IsCompromised"}},"isOsCompliant":{"description":"Indicates if the device is OS compliant or not.","type":"boolean","xml":{"name":"IsOsCompliant"}},"isModelCompliant":{"description":"Indicates if the device is model compliant or not.","type":"boolean","xml":{"name":"IsModelCompliant"}},"isMdmCompliant":{"description":"Indicates if the device is MDM compliant or not.","type":"boolean","xml":{"name":"IsMdmCompliant"}},"emailAddress":{"description":"Email address of the user.","type":"string","xml":{"name":"EmailAddress"}},"mailboxIdentity":{"description":"Identity of the mailbox.","type":"string","xml":{"name":"MailboxIdentity"}},"mailboxDisplayName":{"description":"Display name of the mailbox.","type":"string","xml":{"name":"MailboxDisplayName"}},"accessState":{"description":"Indicates if the device can be accessed or not.","type":"boolean","xml":{"name":"AccessState"}},"isDiagnosticEnabled":{"description":"Indicates if the diagnostic is enabled or not.","type":"boolean","xml":{"name":"IsDiagnosticEnabled"}},"dateWhenDiagnosticWasEnabled":{"format":"date-time","description":"Date when diagnostic was enabled in YYYY-MM-DDTHH:MM:SSZ format.","type":"string","xml":{"name":"DateWhenDiagnosticWasEnabled"}},"createdOn":{"format":"date-time","description":"Date when the MEM device was created in YYYY-MM-DDTHH:MM:SSZ format.","type":"string","xml":{"name":"CreatedOn"}},"modifiedOn":{"format":"date-time","description":"Date when the MEM device was last modified in YYYY-MM-DDTHH:MM:SSZ format.","type":"string","xml":{"name":"ModifiedOn"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"example":[{"deviceUuid":"fd8a5fc5-55b5-4c31-93e2-36270277c33b","memDeviceId":1221,"deviceFriendlyName":"Iphone","easDeviceIdentifier":"A57B8F9C99904168B43F77D494309B76","easDeviceGuid":"dc88c604-58e6-49bf-9392-50f9a7fced7b","organizationGroupUuid":"cfaf16ec-58a0-4abc-9f99-0e36e6a5ae33","deviceTypeId":4,"deviceTypeName":"IPhone","deviceIdentity":5,"deviceImei":"990000862471854","deviceOs":"iOS 9.3.5 13G36","deviceUserAgent":"Apple-iPhone; AWInbox/iOS/2.5.9","agentReportedPackageName":"APPLE","isEnrolled":true,"isManaged":true,"isCompromised":true,"isOsCompliant":true,"isModelCompliant":true,"isMdmCompliant":true,"emailAddress":"acme@acme.com","mailboxIdentity":"acmeinbox2","mailboxDisplayName":"acmeBoxer","accessState":true,"isDiagnosticEnabled":true,"dateWhenDiagnosticWasEnabled":"2018-04-19T19:35:00.6172649-04:00","createdOn":"2018-04-19T19:35:00.6172649-04:00","modifiedOn":"2018-04-19T19:35:00.6172649-04:00","id":1234,"uuid":"f2d9322f-8372-4261-affa-6f1dde0e914c"}]},"PowerShellSettingsCreateRequestV1Model":{"description":"This model is used to create MEM flavor Configuration that uses Exchange PowerShell.","type":"object","properties":{"friendlyName":{"description":"General Name of the PowerShell configuration.","type":"string","xml":{"name":"FriendlyName"}},"enabled":{"description":"Indicates if the configuration is enabled.","type":"boolean","xml":{"name":"Enabled"}},"exchangeVersion":{"format":"int32","description":"Supported Exchange Version","enum":[1,2,3,4,5,6,7],"type":"integer","xml":{"name":"ExchangeVersion"}},"emailServer":{"description":"Exchange PowerShell server domain address.","type":"string","xml":{"name":"EmailServer"}},"emailServerAdminUser":{"description":"Exchange PowerShell server domain service account user name.","type":"string","xml":{"name":"EmailServerAdminUser"}},"emailServerAdminPassword":{"description":"Exchange PowerShell server domain service account user password.","type":"string","xml":{"name":"EmailServerAdminPassword"}},"authenticationMechanism":{"format":"int32","description":"Supported Authentication type for Exchange PowerShell.","enum":[0,1,2],"type":"integer","xml":{"name":"AuthenticationMechanism"}},"ignoreSslErrors":{"description":"Indicates whether the SSL errors should be ignored while interacting with Exchange.","type":"boolean","xml":{"name":"IgnoreSslErrors"}},"useServiceAccountCredentials":{"description":"Indicates whether the service account user's credentials to be used to create PowerShell session.","type":"boolean","xml":{"name":"UseServiceAccountCredentials"}},"viewEntireForest":{"description":"Indicates whether to set the PowerShell session to the entire active directory forest.","type":"boolean","xml":{"name":"ViewEntireForest"}}},"example":{"friendlyName":"PowerShell 1","enabled":true,"exchangeVersion":1,"emailServer":"https://server.com/powershell","emailServerAdminUser":"domain/serviceAccountUser","emailServerAdminPassword":"serviceAccountUserPassword","authenticationMechanism":0,"ignoreSslErrors":false,"useServiceAccountCredentials":false,"viewEntireForest":false}},"PowerShellSettingsSaveResponseV1Model":{"description":"This model is used to configure MEM flavor that uses Exchange PowerShell.","type":"object","properties":{"memConfigUuid":{"format":"uuid","description":"Unique identifier (GUID) of the configuration.","type":"string","xml":{"name":"MemConfigUuid"}},"organizationGroupUuid":{"format":"uuid","description":"Location Group identifier of the PowerShell configuration.","type":"string","xml":{"name":"OrganizationGroupUuid"}}},"example":{"memConfigUuid":"1abb9679-acfb-47a7-ae99-bde0ec2f12c6","organizationGroupUuid":"f85444e5-0efc-4f54-bb27-53d760ca782d"}},"PowerShellSettingsV1Model":{"description":"This model is used to configure MEM flavor that uses Exchange PowerShell.","type":"object","properties":{"memConfigUuid":{"format":"uuid","description":"Unique identifier (GUID) of the configuration.","type":"string","xml":{"name":"MemConfigUuid"}},"organizationGroupUuid":{"format":"uuid","description":"Location Group identifier of the PowerShell configuration.","type":"string","xml":{"name":"OrganizationGroupUuid"}},"friendlyName":{"description":"General Name of the PowerShell configuration.","type":"string","xml":{"name":"FriendlyName"}},"enabled":{"description":"Indicates if the configuration is enabled.","type":"boolean","xml":{"name":"Enabled"}},"useRecommendedSettings":{"description":"Indicates the use of recommended settings.","type":"boolean","xml":{"name":"UseRecommendedSettings"}},"exchangeVersion":{"format":"int32","description":"Supported Exchange Version","enum":[1,2,3,4,5,6,7],"type":"integer","xml":{"name":"ExchangeVersion"}},"emailServer":{"description":"Exchange PowerShell server domain address.","type":"string","xml":{"name":"EmailServer"}},"emailServerAdminUser":{"description":"Exchange PowerShell server domain service account user name.","type":"string","xml":{"name":"EmailServerAdminUser"}},"emailServerAdminPassword":{"description":"Exchange PowerShell server domain service account user password.","type":"string","xml":{"name":"EmailServerAdminPassword"}},"authenticationMechanism":{"format":"int32","description":"Supported Authentication type for Exchange PowerShell.","enum":[0,1,2],"type":"integer","xml":{"name":"AuthenticationMechanism"}},"filterDNs":{"description":"Semicolon separated filters for syncing mailboxes.","type":"string","xml":{"name":"FilterDNs"}},"customBaseDN":{"description":"Custom Base DN specified by the user when searching user groups.","type":"string","xml":{"name":"CustomBaseDN"}},"ignoreSslErrors":{"description":"Indicates whether the SSL errors should be ignored while interacting with Exchange.","type":"boolean","xml":{"name":"IgnoreSslErrors"}},"limitSyncResult":{"format":"int32","description":"Supported options for limiting sync mailboxes results","enum":[0,1,2],"type":"integer","xml":{"name":"LimitSyncResult"}},"syncBatchSize":{"format":"int32","description":"Number of records to sync in one pass.","type":"integer","xml":{"name":"SyncBatchSize"}},"useServiceAccountCredentials":{"description":"Indicates whether the service account user's credentials to be used to create PowerShell session.","type":"boolean","xml":{"name":"UseServiceAccountCredentials"}},"manageMailboxActiveSync":{"description":"Indicates whether to manage the Mailbox of the ActiveSync device user.","type":"boolean","xml":{"name":"ManageMailboxActiveSync"}},"viewEntireForest":{"description":"Indicates whether to set the PowerShell session to the entire active directory forest.","type":"boolean","xml":{"name":"ViewEntireForest"}},"removeActiveSyncPartnership":{"description":"Indicates whether to remove activesync partnership between the device and mailbox upon unenrollment.","type":"boolean","xml":{"name":"RemoveActiveSyncPartnership"}}},"example":{"memConfigUuid":"7d7e2883-a4b6-4c05-8897-29fae74ac842","organizationGroupUuid":"a08c0168-2b1f-4a5d-84da-1128f3a38041","friendlyName":"PowerShell 1","enabled":true,"useRecommendedSettings":true,"exchangeVersion":1,"emailServer":"https://server.com/powershell","emailServerAdminUser":"domain/serviceAccountUser","emailServerAdminPassword":"serviceAccountUserPassword","authenticationMechanism":0,"filterDNs":"user 1; user 2; user 3","customBaseDN":"OU=Group1,DC=MEM13,DC=ORG","ignoreSslErrors":false,"limitSyncResult":0,"syncBatchSize":25000,"useServiceAccountCredentials":false,"manageMailboxActiveSync":false,"viewEntireForest":false,"removeActiveSyncPartnership":false}},"PowerShellSettingsUpdateRequestV1Model":{"description":"This model is used to make changes to the existing MEM Configuration that uses Exchange PowerShell.","type":"object","properties":{"friendlyName":{"description":"General Name of the PowerShell configuration.","type":"string","xml":{"name":"FriendlyName"}},"enabled":{"description":"Indicates if the configuration is enabled.","type":"boolean","xml":{"name":"Enabled"}},"useRecommendedSettings":{"description":"Indicates the use of recommended settings.","type":"boolean","xml":{"name":"UseRecommendedSettings"}},"exchangeVersion":{"format":"int32","description":"Supported Exchange server version used in the configuration.","enum":[1,2,3,4,5,6,7],"type":"integer","xml":{"name":"ExchangeVersion"}},"emailServer":{"description":"Exchange PowerShell server domain address.","type":"string","xml":{"name":"EmailServer"}},"emailServerAdminUser":{"description":"Exchange PowerShell server domain service account user name.","type":"string","xml":{"name":"EmailServerAdminUser"}},"emailServerAdminPassword":{"description":"Exchange PowerShell server domain service account user password.","type":"string","xml":{"name":"EmailServerAdminPassword"}},"authenticationMechanism":{"format":"int32","description":"Supported Authentication type for Exchange PowerShell.","enum":[0,1,2],"type":"integer","xml":{"name":"AuthenticationMechanism"}},"filterDNs":{"description":"Semicolon separated filters for syncing mailboxes.","type":"string","xml":{"name":"FilterDNs"}},"customBaseDN":{"description":"Custom Base DN specified by the user when searching user groups.","type":"string","xml":{"name":"CustomBaseDN"}},"ignoreSslErrors":{"description":"Indicates whether the SSL errors should be ignored while interacting with Exchange.","type":"boolean","xml":{"name":"IgnoreSslErrors"}},"limitSyncResult":{"format":"int32","description":"Supported options for limiting sync mailboxes results","enum":[0,1,2],"type":"integer","xml":{"name":"LimitSyncResult"}},"syncBatchSize":{"format":"int32","description":"Number of records to sync in one pass.","type":"integer","xml":{"name":"SyncBatchSize"}},"useServiceAccountCredentials":{"description":"Indicates whether the service account user's credentials to be used to create PowerShell session.","type":"boolean","xml":{"name":"UseServiceAccountCredentials"}},"manageMailboxActiveSync":{"description":"Indicates whether to manage the Mailbox of the ActiveSync device user.","type":"boolean","xml":{"name":"ManageMailboxActiveSync"}},"viewEntireForest":{"description":"Indicates whether to set the PowerShell session to the entire active directory forest.","type":"boolean","xml":{"name":"ViewEntireForest"}},"removeActiveSyncPartnership":{"description":"Indicates whether to remove activesync partnership between the device and mailbox upon unenrollment.","type":"boolean","xml":{"name":"RemoveActiveSyncPartnership"}}},"example":{"friendlyName":"PowerShell 1","enabled":true,"useRecommendedSettings":true,"exchangeVersion":1,"emailServer":"https://server.com/powershell","emailServerAdminUser":"domain/serviceAccountUser","emailServerAdminPassword":"serviceAccountUserPassword","authenticationMechanism":0,"filterDNs":"user 1; user 2; user 3","customBaseDN":"OU=Group1,DC=MEM13,DC=ORG","ignoreSslErrors":false,"limitSyncResult":0,"syncBatchSize":25000,"useServiceAccountCredentials":false,"manageMailboxActiveSync":false,"viewEntireForest":false,"removeActiveSyncPartnership":false}},"SyncFiltersPolicyModel":{"description":"The sync filters policy model.","type":"object","properties":{"mailSyncAllow":{"description":"Indicates whether mail sync is allowed.","type":"boolean","xml":{"name":"MailSyncAllow"}},"calendarSyncAllow":{"description":"Indicates whether calendar sync is allowed.","type":"boolean","xml":{"name":"CalendarSyncAllow"}},"contactSyncAllow":{"description":"Indicates whether contact sync is allowed.","type":"boolean","xml":{"name":"ContactSyncAllow"}},"taskSyncAllow":{"description":"Indicates whether task sync is allowed.","type":"boolean","xml":{"name":"TaskSyncAllow"}},"noteSyncAllow":{"description":"Indicates whether note sync is allowed.","type":"boolean","xml":{"name":"NoteSyncAllow"}},"journalSyncAllow":{"description":"Indicates whether journal sync is allowed.","type":"boolean","xml":{"name":"JournalSyncAllow"}},"active":{"description":"Indicates whether policy is active.","type":"boolean","xml":{"name":"Active"}},"id":{"format":"int32","description":"Identifier","type":"integer","xml":{"name":"Id"}},"uuid":{"format":"uuid","description":"Gets or sets current objects UUID","type":"string","xml":{"name":"Uuid"}}},"xml":{"name":"SyncFiltersPolicy","namespace":"http://www.air-watch.com/webapi/resources"},"example":{"mailSyncAllow":true,"calendarSyncAllow":true,"contactSyncAllow":true,"taskSyncAllow":true,"noteSyncAllow":true,"journalSyncAllow":true,"active":true,"id":1234,"uuid":"4db6741a-9a5f-4c90-bd84-52b7e9859cfc"}}},"securityDefinitions":{"BasicAuth":{"type":"basic"},"ApiKeyAuth":{"type":"apiKey","description":"API Key","name":"aw-tenant-code","in":"header"},"GroupIdAuth":{"type":"apiKey","description":"Group ID","name":"aw-groupid","in":"header"},"OAuth":{"type":"oauth2","flow":"accessCode","authorizationUrl":"https://example.com/oauth/authorize","tokenUrl":"https://example.com/oauth/token","scopes":{"read":"Grants read access","write":"Grants write access","admin":"Grants read and write access to administrative information"}},"CmsAuth":{"type":"apiKey","description":"CMS Authentication","name":"Authorization","in":"header"}}}