{
    "paths": {
        "/cis/tagging/category/host": {
            "get": {
                "summary": "Returns information about the categories that have hosts as an attachable type. Warning: This operation is available as technical preview. It may be changed in a future release.",
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The list of categories that have hosts as an attachable type.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.category.host.list_result"
                        }
                    }
                },
                "tags": [
                    "tagging/category/host "
                ]
            }
        },
        "/cis/tagging/category/vm": {
            "get": {
                "summary": "Returns information about the categories that have virtual machines as an attachable type. Warning: This operation is available as technical preview. It may be changed in a future release.",
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The list of categories that have virtual machines as an attachable type.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.category.VM.list_result"
                        }
                    }
                },
                "tags": [
                    "tagging/category/VM "
                ]
            }
        },
        "/cis/tagging/tag/host": {
            "get": {
                "summary": "Returns information about the tags that can be attached to virtual machines. Warning: This operation is available as technical preview. It may be changed in a future release.",
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The list of tags that can be attached to hosts.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag.host.list_result"
                        }
                    }
                },
                "tags": [
                    "tagging/tag/host "
                ]
            }
        },
        "/cis/tagging/tag/vm": {
            "get": {
                "summary": "Returns information about the tags that can be attached to virtual machines. Warning: This operation is available as technical preview. It may be changed in a future release.",
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The list of tags that can be attached to virtual machines available on this vCenter server.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag.VM.list_result"
                        }
                    }
                },
                "tags": [
                    "tagging/tag/VM "
                ]
            }
        },
        "/cis/tasks": {
            "get": {
                "summary": "Returns information about at most 1000 visible (subject to permission checks) tasks matching the Tasks.FilterSpec. All tasks must be in the same provider.",
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Map of task identifier to information about the task.\nThe key in the result map will be an identifier for the resource type: com.vmware.cis.task.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tasks.list_result"
                        }
                    },
                    "400": {
                        "description": "if a task's state cannot be accessed or over 1000 tasks matching the Tasks.FilterSpec.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible_error"
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable_error"
                        }
                    }
                },
                "tags": [
                    "tasks "
                ]
            }
        },
        "/cis/tasks/{task}": {
            "get": {
                "summary": "Returns information about a task.",
                "operationId": "get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task identifier.\nThe parameter must be an identifier for the resource type: com.vmware.cis.task.",
                        "in": "path",
                        "name": "task",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "if the task's state cannot be accessed.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible_error"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the task is not found.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable_error"
                        }
                    },
                    "200": {
                        "description": "Information about the specified task.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tasks_result"
                        }
                    }
                },
                "tags": [
                    "tasks "
                ]
            }
        },
        "/cis/tasks/{task}?action=cancel": {
            "post": {
                "operationId": "cancel",
                "summary": "Cancel a running operation associated with the task. This is the best effort attempt. Operation may not be cancelled anymore once it reaches certain stage.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task identifier.\nThe parameter must be an identifier for the resource type: com.vmware.cis.task.",
                        "in": "path",
                        "name": "task",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "if the task is not cancelable.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported_error"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the task is not found.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable_error"
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "tasks "
                ]
            }
        },
        "/com/vmware/cis/session": {
            "delete": {
                "summary": "Terminates the validity of a session token. This is the equivalent of log out. \n A session identifier is expected as part of the request. \n\n\n",
                "operationId": "delete",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the session id is missing from the request or the corresponding session object cannot be found.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "503": {
                        "description": "if session deletion fails due to server specific issues, for example connection to a back end component is failing. Due to the security nature of this API further details will not be disclosed in the error. Please refer to component health information, administrative logs and product specific documentation for possible causes.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable_error"
                        }
                    }
                },
                "tags": [
                    "session "
                ]
            },
            "post": {
                "operationId": "create",
                "summary": "Creates a session with the API. This is the equivalent of login. This operation exchanges user credentials supplied in the security context for a session identifier that is to be used for authenticating subsequent calls. To authenticate subsequent calls clients are expected to include the session key.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Custom header to protect against CSRF attacks in browser based clients",
                        "in": "header",
                        "name": "vmware-use-header-authn",
                        "required": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created session identifier to be used for authenticating further requests.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.session.create_result"
                        }
                    },
                    "401": {
                        "description": "if the session creation fails due to request specific issues. Due to the security nature of the API the details of the error are not disclosed. \n Please check the following preconditions if using a SAML token to authenticate: \n\n   - the supplied token is delegate-able.\n   - the time of client and server system are synchronized.\n   - the token supplied is valid.\n   - if bearer tokens are used check that system configuration allows the API endpoint to accept such tokens.\n",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "503": {
                        "description": "if session creation fails due to server specific issues, for example connection to a back end component is failing. Due to the security nature of this API further details will not be disclosed in the error. Please refer to component health information, administrative logs and product specific documentation for possible causes.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable_error"
                        }
                    }
                },
                "tags": [
                    "session "
                ]
            }
        },
        "/com/vmware/cis/session?~action=get": {
            "post": {
                "operationId": "get",
                "summary": "Returns information about the current session. This operation expects a valid session identifier to be supplied. \n A side effect of invoking this operation may be a change to the session's last accessed time to the current time if this is supported by the session implementation. Invoking any other operation in the API will also update the session's last accessed time. \n\n This API is meant to serve the needs of various front end projects that may want to display the name of the user. Examples of this include various web based user interfaces and logging facilities.\n",
                "consumes": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Information about the session.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.session_result"
                        }
                    },
                    "401": {
                        "description": "if the session id is missing from the request or the corresponding session object cannot be found.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "503": {
                        "description": "if session retrieval fails due to server specific issues e.g. connection to back end component is failing. Due to the security nature of this API further details will not be disclosed in the error. Please refer to component health information, administrative logs and product specific documentation for possible causes.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable_error"
                        }
                    }
                },
                "tags": [
                    "session "
                ]
            }
        },
        "/com/vmware/cis/tagging/category": {
            "get": {
                "summary": "Enumerates the categories in the system. To invoke this {@term operation}, you need the read privilege on the individual categories. The {@term list} will only contain those categories for which you have read privileges.",
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The {@term list} of resource identifiers for the categories in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.category.list_result"
                        }
                    }
                },
                "tags": [
                    "tagging/category "
                ]
            },
            "post": {
                "operationId": "create",
                "summary": "Creates a category. To invoke this {@term operation}, you need the create category privilege.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.category_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The identifier of the created category.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.category.create_result"
                        }
                    },
                    "400": {
                        "description": "if any of the information in the {@param.name createSpec} is invalid.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.invalid_argument_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to create a category.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "tags": [
                    "tagging/category "
                ]
            }
        },
        "/com/vmware/cis/tagging/category/id:{category_id}": {
            "delete": {
                "summary": "Deletes an existing category. To invoke this {@term operation}, you need the delete privilege on the category.",
                "operationId": "delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of category to be deleted.",
                        "in": "path",
                        "name": "category_id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to delete the category.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the category for the given {@param.name categoryId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/category "
                ]
            },
            "get": {
                "summary": "Fetches the category information for the given category identifier. In order to view the category information, you need the read privilege on the category.",
                "operationId": "get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input category.",
                        "in": "path",
                        "name": "category_id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The {@link CategoryModel} that corresponds to {@param.name categoryId}.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.category_result"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to read the category.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the category for the given {@param.name categoryId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/category "
                ]
            },
            "patch": {
                "operationId": "update",
                "summary": "Updates an existing category. To invoke this {@term operation}, you need the edit privilege on the category.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the category to be updated.",
                        "in": "path",
                        "name": "category_id",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.category_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any of the information in the {@param.name updateSpec} is invalid.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.invalid_argument_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to update the category.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the category for the given {@param.name categoryId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/category "
                ]
            }
        },
        "/com/vmware/cis/tagging/category/id:{category_id}?~action=add-to-used-by": {
            "post": {
                "operationId": "add_to_used_by",
                "summary": "Adds the {@param.name usedByEntity} to the {@link CategoryModel#usedBy} subscribers {@term set} for the specified category. If the {@param.name usedByEntity} is already in the {@term set}, then this becomes an idempotent no-op. To invoke this {@term operation}, you need the modify {@link CategoryModel#usedBy} privilege on the category.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input category.",
                        "in": "path",
                        "name": "category_id",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.category_add_to_used_by"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": "if you do not have the privilege to add an entity to the {@link CategoryModel#usedBy} field.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the category for the given {@param.name categoryId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/category "
                ]
            }
        },
        "/com/vmware/cis/tagging/category/id:{category_id}?~action=remove-from-used-by": {
            "post": {
                "operationId": "remove_from_used_by",
                "summary": "Removes the {@param.name usedByEntity} from the {@link CategoryModel#usedBy} subscribers {@term set}. If the {@param.name usedByEntity} is not using this category, then this becomes a no-op. To invoke this {@term operation}, you need the modify {@link CategoryModel#usedBy} privilege on the category.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input category.",
                        "in": "path",
                        "name": "category_id",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.category_remove_from_used_by"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": "if you do not have the privilege to remove an entity from the {@link CategoryModel#usedBy} field.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the category for the given {@param.name categoryId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/category "
                ]
            }
        },
        "/com/vmware/cis/tagging/category/id:{category_id}?~action=revoke-propagating-permissions": {
            "post": {
                "operationId": "revoke_propagating_permissions",
                "summary": "Revokes all propagating permissions on the given category. You should then attach a direct permission with tagging privileges on the given category. To invoke this {@term operation}, you need category related privileges (direct or propagating) on the concerned category.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input category.",
                        "in": "path",
                        "name": "category_id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": "if you do not have the privilege to revoke propagating permissions on the category.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the category for the given {@param.name categoryId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/category "
                ]
            }
        },
        "/com/vmware/cis/tagging/category?~action=list-used-categories": {
            "post": {
                "operationId": "list_used_categories",
                "summary": "Enumerates all categories for which the {@param.name usedByEntity} is part of the {@link CategoryModel#usedBy} subscribers {@term set}. To invoke this {@term operation}, you need the read privilege on the individual categories.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.category_list_used_categories"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The {@term list} of resource identifiers for the categories in the system that are used by {@param.name usedByEntity}.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.category.list_used_categories_result"
                        }
                    }
                },
                "tags": [
                    "tagging/category "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag": {
            "get": {
                "summary": "Enumerates the tags in the system. To invoke this {@term operation}, you need read privilege on the individual tags. The {@term list} will only contain tags for which you have read privileges.",
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The {@term list} of resource identifiers for the tags in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag.list_result"
                        }
                    }
                },
                "tags": [
                    "tagging/tag "
                ]
            },
            "post": {
                "operationId": "create",
                "summary": "Creates a tag. To invoke this {@term operation}, you need the create tag privilege on the input category.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The identifier of the created tag.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag.create_result"
                        }
                    },
                    "400": {
                        "description": "if any of the input information in the {@param.name createSpec} is invalid.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.invalid_argument_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to create tag.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the category for in the given {@param.name createSpec} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag-association/id:{tag_id}?~action=attach": {
            "post": {
                "operationId": "attach",
                "summary": "Attaches the given tag to the input object. The tag needs to meet the cardinality ({@link CategoryModel#cardinality}) and associability ({@link CategoryModel#associableTypes}) criteria in order to be eligible for attachment. If the tag is already attached to the object, then this {@term operation} is a no-op and an error will not be thrown. To invoke this {@term operation}, you need the attach tag privilege on the tag and the read privilege on the object.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input tag.",
                        "in": "path",
                        "name": "tag_id",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association_attach"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the input tag is not eligible to be attached to this object or if the {@param.name objectId} is not valid.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.invalid_argument_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to attach the tag or do not have the privilege to read the object.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the tag for the given {@param.name tagId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag_association "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag-association/id:{tag_id}?~action=attach-tag-to-multiple-objects": {
            "post": {
                "operationId": "attach_tag_to_multiple_objects",
                "summary": "Attaches the given tag to the input objects. If a tag is already attached to the object, then the individual {@term operation} is a no-op and an error will not be added to {@link BatchResult#errorMessages}. To invoke this {@term operation}, you need the attach tag privilege on the tag and the read privilege on each object.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input tag.",
                        "in": "path",
                        "name": "tag_id",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association_attach_tag_to_multiple_objects"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The outcome of the batch {@term operation} and the {@term list} of error messages ({@link BatchResult#errorMessages}) describing attachment failures.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.attach_tag_to_multiple_objects_result"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the attach tag privilege on the tag.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the tag for the given {@param.name tagId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag_association "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag-association/id:{tag_id}?~action=detach": {
            "post": {
                "operationId": "detach",
                "summary": "Detaches the tag from the given object. If the tag is already removed from the object, then this {@term operation} is a no-op and an error will not be thrown. To invoke this {@term operation}, you need the attach tag privilege on the tag and the read privilege on the object.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input tag.",
                        "in": "path",
                        "name": "tag_id",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association_detach"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to detach the tag or do not have the privilege to read the given object.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the tag for the given {@param.name tagId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag_association "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag-association/id:{tag_id}?~action=detach-tag-from-multiple-objects": {
            "post": {
                "operationId": "detach_tag_from_multiple_objects",
                "summary": "Detaches the given tag from the input objects. If a tag is already removed from the object, then the individual {@term operation} is a no-op and an error will not be added to {@link BatchResult#errorMessages}. To invoke this {@term operation}, you need the attach tag privilege on the tag and the read privilege on each object.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input tag.",
                        "in": "path",
                        "name": "tag_id",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association_detach_tag_from_multiple_objects"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The outcome of the batch {@term operation} and the {@term list} of error messages ({@link BatchResult#errorMessages}) describing detachment failures.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.detach_tag_from_multiple_objects_result"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the attach tag privilege on the tag.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the tag for the given tag does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag_association "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag-association/id:{tag_id}?~action=list-attached-objects": {
            "post": {
                "operationId": "list_attached_objects",
                "summary": "Fetches the {@term list} of attached objects for the given tag. To invoke this {@term operation}, you need the read privilege on the input tag. Only those objects for which you have the read privilege will be returned.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input tag.",
                        "in": "path",
                        "name": "tag_id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The {@term list} of attached object identifiers.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.list_attached_objects_result"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to read the tag.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the tag for the given {@param.name tagId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag_association "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag-association?~action=attach-multiple-tags-to-object": {
            "post": {
                "operationId": "attach_multiple_tags_to_object",
                "summary": "Attaches the given tags to the input object. If a tag is already attached to the object, then the individual {@term operation} is a no-op and an error will not be added to {@link BatchResult#errorMessages}. To invoke this {@term operation}, you need the read privilege on the object and the attach tag privilege on each tag.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association_attach_multiple_tags_to_object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The outcome of the batch {@term operation} and the {@term list} of error messages ({@link BatchResult#errorMessages}) describing attachment failures.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.attach_multiple_tags_to_object_result"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to read the object.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag_association "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag-association?~action=detach-multiple-tags-from-object": {
            "post": {
                "operationId": "detach_multiple_tags_from_object",
                "summary": "Detaches the given tags from the input object. If a tag is already removed from the object, then the individual {@term operation} is a no-op and an error will not be added to {@link BatchResult#errorMessages}. To invoke this {@term operation}, you need the read privilege on the object and the attach tag privilege each tag.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association_detach_multiple_tags_from_object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The outcome of the batch {@term operation} and the {@term list} of error messages ({@link BatchResult#errorMessages}) describing detachment failures.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.detach_multiple_tags_from_object_result"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to read the object.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag_association "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag-association?~action=list-attachable-tags": {
            "post": {
                "operationId": "list_attachable_tags",
                "summary": "Fetches the {@term list} of attachable tags for the given object, omitting the tags that have already been attached. Criteria for attachability is calculated based on tagging cardinality ({@link CategoryModel#cardinality}) and associability ({@link CategoryModel#associableTypes}) constructs. To invoke this {@term operation}, you need the read privilege on the input object. The {@term list} will only contain those tags for which you have read privileges.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association_list_attachable_tags"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The {@term list} of tag identifiers that are eligible to be attached to the given object.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.list_attachable_tags_result"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to read the object.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag_association "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag-association?~action=list-attached-objects-on-tags": {
            "post": {
                "operationId": "list_attached_objects_on_tags",
                "summary": "Fetches the {@term list} of {@link TagToObjects} describing the input tag identifiers and the objects they are attached to. To invoke this {@term operation}, you need the read privilege on each input tag. The {@link TagToObjects#objectIds} will only contain those objects for which you have the read privilege.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association_list_attached_objects_on_tags"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The {@term list} of the tag identifiers to all object identifiers that each tag is attached to.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.list_attached_objects_on_tags_result"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag_association "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag-association?~action=list-attached-tags": {
            "post": {
                "operationId": "list_attached_tags",
                "summary": "Fetches the {@term list} of tags attached to the given object. To invoke this {@term operation}, you need the read privilege on the input object. The {@term list} will only contain those tags for which you have the read privileges.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association_list_attached_tags"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The {@term list} of all tag identifiers that correspond to the tags attached to the given object.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.list_attached_tags_result"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to read the object.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag_association "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag-association?~action=list-attached-tags-on-objects": {
            "post": {
                "operationId": "list_attached_tags_on_objects",
                "summary": "Fetches the {@term list} of {@link ObjectToTags} describing the input object identifiers and the tags attached to each object. To invoke this {@term operation}, you need the read privilege on each input object. The {@link ObjectToTags#tagIds} will only contain those tags for which you have the read privilege.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association_list_attached_tags_on_objects"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The {@term list} of the object identifiers to all tag identifiers that are attached to that object.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.list_attached_tags_on_objects_result"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag_association "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag/id:{category_id}?~action=list-tags-for-category": {
            "post": {
                "operationId": "list_tags_for_category",
                "summary": "Enumerates all tags for the given category. To invoke this {@term operation}, you need the read privilege on the given category and the individual tags in that category.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input category.",
                        "in": "path",
                        "name": "category_id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The {@term list} of resource identifiers for the tags in the given input category.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag.list_tags_for_category_result"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to read the category.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the category for the given {@param.name categoryId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag/id:{tag_id}": {
            "delete": {
                "summary": "Deletes an existing tag. To invoke this {@term operation}, you need the delete privilege on the tag.",
                "operationId": "delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input tag.",
                        "in": "path",
                        "name": "tag_id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to delete the tag.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the tag for the given {@param.name tagId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag "
                ]
            },
            "get": {
                "summary": "Fetches the tag information for the given tag identifier. To invoke this {@term operation}, you need the read privilege on the tag in order to view the tag info.",
                "operationId": "get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input tag.",
                        "in": "path",
                        "name": "tag_id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The {@link TagModel} that corresponds to {@param.name tagId}.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_result"
                        }
                    },
                    "403": {
                        "description": "if the user does not have the privilege to read the tag.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the tag for the given {@param.name tagId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag "
                ]
            },
            "patch": {
                "operationId": "update",
                "summary": "Updates an existing tag. To invoke this {@term operation}, you need the edit privilege on the tag.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input tag.",
                        "in": "path",
                        "name": "tag_id",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any of the input information in the {@param.name updateSpec} is invalid.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.invalid_argument_error"
                        }
                    },
                    "403": {
                        "description": "if you do not have the privilege to update the tag.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the tag for the given {@param.name tagId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag/id:{tag_id}?~action=add-to-used-by": {
            "post": {
                "operationId": "add_to_used_by",
                "summary": "Adds the {@param.name usedByEntity} to the {@link TagModel#usedBy} subscribers {@term set}. If the {@param.name usedByEntity} is already in the {@term set}, then this becomes a no-op. To invoke this {@term operation}, you need the modify {@link TagModel#usedBy} privilege on the tag.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input tag.",
                        "in": "path",
                        "name": "tag_id",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_add_to_used_by"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": "if you do not have the privilege to add an entity to the {@link TagModel#usedBy} field.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the tag for the given {@param.name tagId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag/id:{tag_id}?~action=remove-from-used-by": {
            "post": {
                "operationId": "remove_from_used_by",
                "summary": "Removes the {@param.name usedByEntity} from the {@link TagModel#usedBy} subscribers set. If the {@param.name usedByEntity} is not using this tag, then this becomes a no-op. To invoke this {@term operation}, you need modify {@link TagModel#usedBy} privilege on the tag.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input tag.",
                        "in": "path",
                        "name": "tag_id",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_remove_from_used_by"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": "if you do not have the privilege to remove an entity from the {@link TagModel#usedBy} field.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the tag for the given {@param.name tagId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag/id:{tag_id}?~action=revoke-propagating-permissions": {
            "post": {
                "operationId": "revoke_propagating_permissions",
                "summary": "Revokes all propagating permissions on the given tag. You should then attach a direct permission with tagging privileges on the given tag. To invoke this {@term operation}, you need tag related privileges (direct or propagating) on the concerned tag.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier of the input tag.",
                        "in": "path",
                        "name": "tag_id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": "if you do not have the privilege to revoke propagating permissions on the tag.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the tag for the given {@param.name tagId} does not exist in the system.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found_error"
                        }
                    }
                },
                "tags": [
                    "tagging/tag "
                ]
            }
        },
        "/com/vmware/cis/tagging/tag?~action=list-used-tags": {
            "post": {
                "operationId": "list_used_tags",
                "summary": "Enumerates all tags for which the {@param.name usedByEntity} is part of the {@link TagModel#usedBy} subscribers {@term set}. To invoke this {@term operation}, you need the read privilege on the individual tags.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag_list_used_tags"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The {@term list} of resource identifiers for the tags in the system that are used by {@param.name usedByEntity}.",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.cis.tagging.tag.list_used_tags_result"
                        }
                    }
                },
                "tags": [
                    "tagging/tag "
                ]
            }
        }
    },
    "basePath": "/rest",
    "info": {
        "description": "",
        "version": "2.0.0",
        "termsOfService": "http://swagger.io/terms/",
        "title": "cis"
    },
    "swagger": "2.0",
    "host": "",
    "schemes": [
        "https",
        "http"
    ],
    "tags": [],
    "definitions": {
        "com.vmware.cis.session.create_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "format": "password"
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.session.info": {
            "type": "object",
            "properties": {
                "user": {
                    "description": "Fully qualified name of the end user that created the session, for example Administrator@vsphere.local. A typical use case for this information is in Graphical User Interfaces (GUI) or logging systems to visualize the identity of the current user.",
                    "type": "string"
                },
                "last_accessed_time": {
                    "description": "Last time this session was used by passing the session key for invoking an API.",
                    "type": "string",
                    "format": "date-time"
                },
                "created_time": {
                    "description": "Time when the session was created.",
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "user",
                "last_accessed_time",
                "created_time"
            ]
        },
        "com.vmware.cis.session_result": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/com.vmware.cis.session.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.category.VM.list_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.cis.tagging.category.VM.summary"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.category.VM.summary": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description of the category. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                },
                "category": {
                    "description": "Identifier of the category. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the category. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                }
            },
            "required": [
                "description",
                "category",
                "name"
            ]
        },
        "com.vmware.cis.tagging.category.create_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.category.create_spec": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "The description of the category.",
                    "type": "string"
                },
                "cardinality": {
                    "description": "The associated cardinality ({@enum.values Cardinality}) of the category.",
                    "$ref": "#/definitions/com.vmware.cis.tagging.category_model.cardinality"
                },
                "category_id": {
                    "description": "The identifier of the category. If specified, the category will be created with this identifier. This has to be of the category ManagedObject Id format urn:vmomi:InventoryServiceCategory:<id>:GLOBAL The <id> cannot contain special character ':'",
                    "type": "string"
                },
                "name": {
                    "description": "The display name of the category.",
                    "type": "string"
                },
                "associable_types": {
                    "description": "Object types to which this category's tags can be attached.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                }
            },
            "required": [
                "description",
                "cardinality",
                "name",
                "associable_types"
            ]
        },
        "com.vmware.cis.tagging.category.host.list_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.cis.tagging.category.host.summary"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.category.host.summary": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description of the category. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                },
                "category": {
                    "description": "Identifier of the category. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the category. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                }
            },
            "required": [
                "description",
                "category",
                "name"
            ]
        },
        "com.vmware.cis.tagging.category.list_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.category.list_used_categories_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.category.update_spec": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "The description of the category.",
                    "type": "string"
                },
                "cardinality": {
                    "description": "The associated cardinality ({@enum.values Cardinality}) of the category.",
                    "$ref": "#/definitions/com.vmware.cis.tagging.category_model.cardinality"
                },
                "name": {
                    "description": "The display name of the category.",
                    "type": "string"
                },
                "associable_types": {
                    "description": "Object types to which this category's tags can be attached. <p> The {@term set} of associable types cannot be updated incrementally. For example, if {@link #associableTypes} originally contains {A,B,C} and you want to add D, then you need to pass {A,B,C,D} in your update specification. You also cannot remove any item from this {@term set}. For example, if you have {A,B,C}, then you cannot remove say {A} from it. Similarly, if you start with an empty {@term set}, then that implies that you can tag any object and hence you cannot later pass say {A}, because that would be restricting the type of objects you want to tag. Thus, associable types can only grow and not shrink.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                }
            }
        },
        "com.vmware.cis.tagging.category_add_to_used_by": {
            "type": "object",
            "properties": {
                "used_by_entity": {
                    "type": "string",
                    "description": "The name of the user to be added to the {@link CategoryModel#usedBy} {@term set}."
                }
            },
            "required": [
                "used_by_entity"
            ]
        },
        "com.vmware.cis.tagging.category_create": {
            "type": "object",
            "properties": {
                "create_spec": {
                    "description": "Specification for the new category to be created.",
                    "$ref": "#/definitions/com.vmware.cis.tagging.category.create_spec"
                }
            },
            "required": [
                "create_spec"
            ]
        },
        "com.vmware.cis.tagging.category_list_used_categories": {
            "type": "object",
            "properties": {
                "used_by_entity": {
                    "type": "string",
                    "description": "The field on which the results will be filtered."
                }
            },
            "required": [
                "used_by_entity"
            ]
        },
        "com.vmware.cis.tagging.category_model": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique identifier of the category.",
                    "type": "string"
                },
                "cardinality": {
                    "description": "The associated cardinality ({@enum.values Cardinality}) of the category.",
                    "$ref": "#/definitions/com.vmware.cis.tagging.category_model.cardinality"
                },
                "used_by": {
                    "description": "The {@term set} of users that can use this category. To add users to this, you need to have the edit privilege on the category. Similarly, to unsubscribe from this category, you need the edit privilege on the category. You should not modify other users subscription from this {@term set}.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "description": {
                    "description": "The description of the category.",
                    "type": "string"
                },
                "associable_types": {
                    "description": "The types of objects that the tags in this category can be attached to. If the {@term set} is empty, then tags can be attached to all types of objects. This field works only for objects that reside in Inventory Service (IS). For non IS objects, this check is not performed today and hence a tag can be attached to any non IS object.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "name": {
                    "description": "The display name of the category.",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "cardinality",
                "used_by",
                "description",
                "associable_types",
                "name"
            ]
        },
        "com.vmware.cis.tagging.category_model.cardinality": {
            "type": "string",
            "description": "The {@name Cardinality} {@term enumerated type} defines the number of tags in a category that can be assigned to an object.",
            "enum": [
                "SINGLE",
                "MULTIPLE"
            ]
        },
        "com.vmware.cis.tagging.category_remove_from_used_by": {
            "type": "object",
            "properties": {
                "used_by_entity": {
                    "type": "string",
                    "description": "The name of the user to be removed from the {@link CategoryModel#usedBy} {@term set}."
                }
            },
            "required": [
                "used_by_entity"
            ]
        },
        "com.vmware.cis.tagging.category_result": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/com.vmware.cis.tagging.category_model"
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.category_update": {
            "type": "object",
            "properties": {
                "update_spec": {
                    "description": "Specification to update the category.",
                    "$ref": "#/definitions/com.vmware.cis.tagging.category.update_spec"
                }
            },
            "required": [
                "update_spec"
            ]
        },
        "com.vmware.cis.tagging.tag.VM.list_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.cis.tagging.tag.VM.summary"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag.VM.summary": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description of the tag. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                },
                "tag": {
                    "description": "Identifier of the tag. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                },
                "category_name": {
                    "description": "Name of the category of which this tag is part. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the tag. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                }
            },
            "required": [
                "description",
                "tag",
                "category_name",
                "name"
            ]
        },
        "com.vmware.cis.tagging.tag.create_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag.create_spec": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "The description of the tag.",
                    "type": "string"
                },
                "category_id": {
                    "description": "The unique identifier of the parent category in which this tag will be created.",
                    "type": "string"
                },
                "name": {
                    "description": "The display name of the tag. The name must be unique within its category.",
                    "type": "string"
                },
                "tag_id": {
                    "description": "The identifier of the tag. If specified, tag will be created with the specified identifier. This has to be of the tag ManagedObject Id format urn:vmomi:InventoryServiceTag:<id>:GLOBAL The <id> cannot contain special character ':'",
                    "type": "string"
                }
            },
            "required": [
                "description",
                "category_id",
                "name"
            ]
        },
        "com.vmware.cis.tagging.tag.host.list_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.cis.tagging.tag.host.summary"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag.host.summary": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description of the tag. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                },
                "tag": {
                    "description": "Identifier of the tag. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                },
                "category_name": {
                    "description": "Name of the category of which this tag is part. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the tag. Warning: This attribute is available as technical preview. It may be changed in a future release.",
                    "type": "string"
                }
            },
            "required": [
                "description",
                "tag",
                "category_name",
                "name"
            ]
        },
        "com.vmware.cis.tagging.tag.list_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag.list_tags_for_category_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag.list_used_tags_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag.update_spec": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "The description of the tag.",
                    "type": "string"
                },
                "name": {
                    "description": "The display name of the tag.",
                    "type": "string"
                }
            }
        },
        "com.vmware.cis.tagging.tag_add_to_used_by": {
            "type": "object",
            "properties": {
                "used_by_entity": {
                    "type": "string",
                    "description": "The name of the user to be added to the {@link TagModel#usedBy} {@term set}."
                }
            },
            "required": [
                "used_by_entity"
            ]
        },
        "com.vmware.cis.tagging.tag_association.attach_multiple_tags_to_object_result": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.batch_result"
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag_association.attach_tag_to_multiple_objects_result": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.batch_result"
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag_association.batch_result": {
            "type": "object",
            "properties": {
                "success": {
                    "description": "This is true if the batch {@term operation} completed without any errors. Otherwise it is false and all or some {@term operations} have failed.",
                    "type": "boolean"
                },
                "error_messages": {
                    "description": "The {@term list} of error messages.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "success",
                "error_messages"
            ]
        },
        "com.vmware.cis.tagging.tag_association.detach_multiple_tags_from_object_result": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.batch_result"
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag_association.detach_tag_from_multiple_objects_result": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.batch_result"
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag_association.list_attachable_tags_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag_association.list_attached_objects_on_tags_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.tag_to_objects"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag_association.list_attached_objects_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag_association.list_attached_tags_on_objects_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.cis.tagging.tag_association.object_to_tags"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag_association.list_attached_tags_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag_association.object_to_tags": {
            "type": "object",
            "properties": {
                "object_id": {
                    "description": "The identifier of the object.",
                    "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                },
                "tag_ids": {
                    "description": "The identifiers of the related tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "object_id",
                "tag_ids"
            ]
        },
        "com.vmware.cis.tagging.tag_association.tag_to_objects": {
            "type": "object",
            "properties": {
                "object_ids": {
                    "description": "The identifiers of the related objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                    }
                },
                "tag_id": {
                    "description": "The identifier of the tag.",
                    "type": "string"
                }
            },
            "required": [
                "object_ids",
                "tag_id"
            ]
        },
        "com.vmware.cis.tagging.tag_association_attach": {
            "type": "object",
            "properties": {
                "object_id": {
                    "description": "The identifier of the input object.",
                    "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                }
            },
            "required": [
                "object_id"
            ]
        },
        "com.vmware.cis.tagging.tag_association_attach_multiple_tags_to_object": {
            "type": "object",
            "properties": {
                "object_id": {
                    "description": "The identifier of the input object.",
                    "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The identifiers of the input tags."
                }
            },
            "required": [
                "object_id",
                "tag_ids"
            ]
        },
        "com.vmware.cis.tagging.tag_association_attach_tag_to_multiple_objects": {
            "type": "object",
            "properties": {
                "object_ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                    },
                    "description": "The identifiers of the input objects."
                }
            },
            "required": [
                "object_ids"
            ]
        },
        "com.vmware.cis.tagging.tag_association_detach": {
            "type": "object",
            "properties": {
                "object_id": {
                    "description": "The identifier of the input object.",
                    "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                }
            },
            "required": [
                "object_id"
            ]
        },
        "com.vmware.cis.tagging.tag_association_detach_multiple_tags_from_object": {
            "type": "object",
            "properties": {
                "object_id": {
                    "description": "The identifier of the input object.",
                    "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The identifiers of the input tags."
                }
            },
            "required": [
                "object_id",
                "tag_ids"
            ]
        },
        "com.vmware.cis.tagging.tag_association_detach_tag_from_multiple_objects": {
            "type": "object",
            "properties": {
                "object_ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                    },
                    "description": "The identifiers of the input objects."
                }
            },
            "required": [
                "object_ids"
            ]
        },
        "com.vmware.cis.tagging.tag_association_list_attachable_tags": {
            "type": "object",
            "properties": {
                "object_id": {
                    "description": "The identifier of the input object.",
                    "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                }
            },
            "required": [
                "object_id"
            ]
        },
        "com.vmware.cis.tagging.tag_association_list_attached_objects_on_tags": {
            "type": "object",
            "properties": {
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The identifiers of the input tags."
                }
            },
            "required": [
                "tag_ids"
            ]
        },
        "com.vmware.cis.tagging.tag_association_list_attached_tags": {
            "type": "object",
            "properties": {
                "object_id": {
                    "description": "The identifier of the input object.",
                    "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                }
            },
            "required": [
                "object_id"
            ]
        },
        "com.vmware.cis.tagging.tag_association_list_attached_tags_on_objects": {
            "type": "object",
            "properties": {
                "object_ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                    },
                    "description": "The identifiers of the input objects."
                }
            },
            "required": [
                "object_ids"
            ]
        },
        "com.vmware.cis.tagging.tag_create": {
            "type": "object",
            "properties": {
                "create_spec": {
                    "description": "Specification for the new tag to be created.",
                    "$ref": "#/definitions/com.vmware.cis.tagging.tag.create_spec"
                }
            },
            "required": [
                "create_spec"
            ]
        },
        "com.vmware.cis.tagging.tag_list_used_tags": {
            "type": "object",
            "properties": {
                "used_by_entity": {
                    "type": "string",
                    "description": "The field on which the results will be filtered."
                }
            },
            "required": [
                "used_by_entity"
            ]
        },
        "com.vmware.cis.tagging.tag_model": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique identifier of the tag.",
                    "type": "string"
                },
                "category_id": {
                    "description": "The identifier of the parent category in which this tag will be created.",
                    "type": "string"
                },
                "used_by": {
                    "description": "The {@term set} of users that can use this tag. To add users to this, you need to have the edit privilege on the tag. Similarly, to unsubscribe from this tag, you need the edit privilege on the tag. You should not modify other users subscription from this {@term set}.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "name": {
                    "description": "The display name of the tag.",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the tag.",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "category_id",
                "used_by",
                "name",
                "description"
            ]
        },
        "com.vmware.cis.tagging.tag_remove_from_used_by": {
            "type": "object",
            "properties": {
                "used_by_entity": {
                    "type": "string",
                    "description": "The name of the user to be removed from the {@link TagModel#usedBy} {@term set}."
                }
            },
            "required": [
                "used_by_entity"
            ]
        },
        "com.vmware.cis.tagging.tag_result": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/com.vmware.cis.tagging.tag_model"
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tagging.tag_update": {
            "type": "object",
            "properties": {
                "update_spec": {
                    "description": "Specification to update the tag.",
                    "$ref": "#/definitions/com.vmware.cis.tagging.tag.update_spec"
                }
            },
            "required": [
                "update_spec"
            ]
        },
        "com.vmware.cis.task.info": {
            "type": "object",
            "properties": {
                "user": {
                    "description": "Name of the user who performed the operation.\nThis field will be unset if the operation is performed by the system.",
                    "type": "string"
                },
                "result": {
                    "description": "Result of the operation. If an operation reports partial results before it completes, this field could be set before the CommonInfo.status has the value SUCCEEDED. The value could change as the operation progresses.\nThis field will be unset if the operation does not return a result or if the result is not available at the current step of the operation.",
                    "type": "opaque"
                },
                "operation": {
                    "description": "Identifier of the operation associated with the task.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vapi.operation. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vapi.operation.",
                    "type": "string"
                },
                "progress": {
                    "description": "Progress of the operation.\nThis field is optional and it is only relevant when the value of #status is one of RUNNING, BLOCKED, SUCCEEDED, or FAILED.",
                    "$ref": "#/definitions/com.vmware.cis.task.progress"
                },
                "description": {
                    "description": "Description of the operation associated with the task.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "parent": {
                    "description": "Parent of the current task.\nThis field will be unset if the task has no parent.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.cis.task. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.cis.task.",
                    "type": "string"
                },
                "error": {
                    "description": "Description of the error if the operation status is \"FAILED\".\nIf unset the description of why the operation failed will be included in the result of the operation (see Info.result).",
                    "type": "string"
                },
                "end_time": {
                    "description": "Time when the operation is completed.\nThis field is optional and it is only relevant when the value of CommonInfo.status is one of SUCCEEDED or FAILED.",
                    "type": "string",
                    "format": "date-time"
                },
                "target": {
                    "description": "Identifier of the target created by the operation or an existing one the operation performed on.\nThis field will be unset if the operation has no target or multiple targets.",
                    "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                },
                "cancelable": {
                    "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses.",
                    "type": "boolean"
                },
                "status": {
                    "description": "Status of the operation associated with the task.",
                    "$ref": "#/definitions/com.vmware.cis.task.status"
                },
                "service": {
                    "description": "Identifier of the service containing the operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vapi.service. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vapi.service.",
                    "type": "string"
                },
                "start_time": {
                    "description": "Time when the operation is started.\nThis field is optional and it is only relevant when the value of CommonInfo.status is one of RUNNING, BLOCKED, SUCCEEDED, or FAILED.",
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "operation",
                "description",
                "cancelable",
                "status",
                "service"
            ]
        },
        "com.vmware.cis.task.progress": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Message about the work progress.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "total": {
                    "description": "Total amount of the work for the operation.",
                    "type": "integer",
                    "format": "int64"
                },
                "completed": {
                    "description": "The amount of work completed for the operation. The value can only be incremented.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "message",
                "total",
                "completed"
            ]
        },
        "com.vmware.cis.task.status": {
            "type": "string",
            "description": "The Status enumerated type defines the status values that can be reported for an operation.",
            "enum": [
                "PENDING",
                "RUNNING",
                "BLOCKED",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "com.vmware.cis.tasks.list_result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.cis.task.info"
                            }
                        }
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.cis.tasks_result": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/com.vmware.cis.task.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "com.vmware.vapi.std.dynamic_ID": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of resource being identified (for example {@code com.acme.Person}). <p> {@term Services} that contain {@term operations} for creating and deleting resources typically contain a {@term constant} specifying the resource type for the resources being created and deleted. The API metamodel metadata {@term services} include a {@term service} that allows retrieving all the known resource types.",
                    "type": "string"
                },
                "id": {
                    "description": "The identifier for a resource whose type is specified by {@link #type}.",
                    "type": "string"
                }
            },
            "required": [
                "type",
                "id"
            ]
        },
        "com.vmware.vapi.std.errors.already_exists": {
            "type": "object",
            "properties": {
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error.type"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "messages"
            ]
        },
        "com.vmware.vapi.std.errors.already_exists_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.already_exists"
                }
            }
        },
        "com.vmware.vapi.std.errors.error": {
            "type": "object",
            "properties": {
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error.type"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "messages"
            ]
        },
        "com.vmware.vapi.std.errors.error.type": {
            "type": "string",
            "description": "Enumeration of all standard errors. Used as discriminator in protocols that have no standard means for transporting the error type, e.g. REST.",
            "enum": [
                "ERROR",
                "ALREADY_EXISTS",
                "ALREADY_IN_DESIRED_STATE",
                "CANCELED",
                "CONCURRENT_CHANGE",
                "FEATURE_IN_USE",
                "INTERNAL_SERVER_ERROR",
                "INVALID_ARGUMENT",
                "INVALID_ELEMENT_CONFIGURATION",
                "INVALID_ELEMENT_TYPE",
                "INVALID_REQUEST",
                "NOT_ALLOWED_IN_CURRENT_STATE",
                "NOT_FOUND",
                "OPERATION_NOT_FOUND",
                "RESOURCE_BUSY",
                "RESOURCE_IN_USE",
                "RESOURCE_INACCESSIBLE",
                "SERVICE_UNAVAILABLE",
                "TIMED_OUT",
                "UNABLE_TO_ALLOCATE_RESOURCE",
                "UNAUTHENTICATED",
                "UNAUTHORIZED",
                "UNEXPECTED_INPUT",
                "UNSUPPORTED",
                "UNVERIFIED_PEER"
            ]
        },
        "com.vmware.vapi.std.errors.error_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                }
            }
        },
        "com.vmware.vapi.std.errors.invalid_argument": {
            "type": "object",
            "properties": {
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error.type"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "messages"
            ]
        },
        "com.vmware.vapi.std.errors.invalid_argument_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.invalid_argument"
                }
            }
        },
        "com.vmware.vapi.std.errors.not_allowed_in_current_state": {
            "type": "object",
            "properties": {
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error.type"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "messages"
            ]
        },
        "com.vmware.vapi.std.errors.not_allowed_in_current_state_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                }
            }
        },
        "com.vmware.vapi.std.errors.not_found": {
            "type": "object",
            "properties": {
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error.type"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "messages"
            ]
        },
        "com.vmware.vapi.std.errors.not_found_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                }
            }
        },
        "com.vmware.vapi.std.errors.resource_inaccessible": {
            "type": "object",
            "properties": {
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error.type"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "messages"
            ]
        },
        "com.vmware.vapi.std.errors.resource_inaccessible_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                }
            }
        },
        "com.vmware.vapi.std.errors.service_unavailable": {
            "type": "object",
            "properties": {
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error.type"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "messages"
            ]
        },
        "com.vmware.vapi.std.errors.service_unavailable_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                }
            }
        },
        "com.vmware.vapi.std.errors.unauthenticated": {
            "type": "object",
            "properties": {
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error.type"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "messages"
            ]
        },
        "com.vmware.vapi.std.errors.unauthenticated_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                }
            }
        },
        "com.vmware.vapi.std.errors.unauthorized": {
            "type": "object",
            "properties": {
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error.type"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "messages"
            ]
        },
        "com.vmware.vapi.std.errors.unauthorized_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                }
            }
        },
        "com.vmware.vapi.std.errors.unsupported": {
            "type": "object",
            "properties": {
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error.type"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "messages"
            ]
        },
        "com.vmware.vapi.std.errors.unsupported_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported"
                }
            }
        },
        "com.vmware.vapi.std.localizable_message": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.",
                    "type": "string"
                },
                "default_message": {
                    "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog.",
                    "type": "string"
                },
                "args": {
                    "description": "Positional arguments to be substituted into the message template. This list will be empty if the message uses named arguments or has no arguments.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ]
        }
    }
}