{
  "swagger": "2.0",
  "info": {
    "version": "1",
    "title": "AirWatch Mobile Device Management REST API",
    "description": "AirWatch Mobile Device Management REST API V1"
  },
  "host": "apimain.ssdevrd.com",
  "basePath": "/api/mdm",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/devices/{id}/apps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Retrieves application details of the device identified by device ID.",
        "description": "v1",
        "operationId": "Apps_DeviceAppsById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/apps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Retrieves application details of the device identified by alternate id.",
        "description": "v1",
        "operationId": "Apps_DeviceAppsByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/adminapps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Retrieves Admin applications details for passed DeviceID.",
        "description": "v1",
        "operationId": "Apps_AdminAppDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/cachesettings/configuration": {
      "post": {
        "tags": [
          "CacheSettings"
        ],
        "summary": "Retrieves the Config XML for both MAG and VPN.",
        "operationId": "CacheSettings_GetCacheSettingsConfiguration",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "encryptionPassword",
            "in": "body",
            "description": "Random string passed by the caller for hashing",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayEncryptionModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/education/cart": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Saves a cart with device serials to a specified location group",
        "operationId": "Cart_SaveCart",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "cart",
            "in": "body",
            "description": "Details of the cart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CartModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/education/cart/{cartid}": {
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Deletes a cart with device serials to a specified location group",
        "operationId": "Cart_DeleteCart",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "cartid",
            "in": "path",
            "description": "CartId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/catalog/settings": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "New - Retrieve direct enrollment settings for the requested User/Group ID.",
        "operationId": "Catalog_Settings",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/certificates": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Retrieves certificate details of the device identified by device ID.",
        "description": "v1",
        "operationId": "Certificates_GetCertificatesByDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/certificates": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Retrieves certificate details of the device identified by the alternate id.",
        "description": "v1",
        "operationId": "Certificates_GetCertificatesByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/education/class/{id}": {
      "delete": {
        "tags": [
          "Class"
        ],
        "summary": "Deletes the specified class.",
        "operationId": "Class_Delete",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The class identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationGroupId",
            "in": "query",
            "description": "The location group id where you want to delete the class.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/education/class": {
      "get": {
        "tags": [
          "Class"
        ],
        "summary": "Load class details",
        "operationId": "Class_LoadClass",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "locationGroupId",
            "in": "query",
            "description": "The location group id where you want to load the class.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "classId",
            "in": "query",
            "description": "The id of class whose details you want to load.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Class"
        ],
        "summary": "Save class details",
        "operationId": "Class_SaveClass",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "classModel",
            "in": "body",
            "description": "The class model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClassModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/education/devices/{id}/apps": {
      "get": {
        "tags": [
          "ClassAssignment"
        ],
        "summary": "Provides list of applications that can be assigned to user's device",
        "operationId": "ClassAssignment_LoadApplicationsToBeShownForCurrentUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/education/classassignment": {
      "post": {
        "tags": [
          "ClassAssignment"
        ],
        "summary": "Assign apps to carts through class",
        "operationId": "ClassAssignment_AssignAppsToCarts",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "classAssignmentRequest",
            "in": "body",
            "description": "Assignment details for a class",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClassAssignmentRequestModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{deviceId}/commands": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Executes command for device.",
        "description": "v1",
        "operationId": "Commands_Execute",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The AirWatch device id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customCommandModel",
            "in": "body",
            "description": "Model containing the command XML passed to the API.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomCommandModel"
            }
          },
          {
            "name": "command",
            "in": "query",
            "description": "The command to execute [Lock, EnterpriseWipe, DeviceWipe, DeviceQuery, ClearPasscode, SyncDevice, StopAirPlay, ScheduleOsUpdate, CustomMdmCommand].",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/commands": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Executes command for device by alternate id.",
        "description": "v1",
        "operationId": "Commands_ExecuteByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "customCommandModel",
            "in": "body",
            "description": "Model containing the command XML passed to the API.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomCommandModel"
            }
          },
          {
            "name": "command",
            "in": "query",
            "description": "The command to execute [Lock, EnterpriseWipe, DeviceWipe, DeviceQuery, ClearPasscode, SyncDevice, StopAirPlay, ScheduleOsUpdate].",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/commands/finddevice": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Executes finddevice command for device by alternate id.",
        "description": "v1",
        "operationId": "Commands_ExecuteFindDeviceByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "findDevice",
            "in": "body",
            "description": "The find device request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindDevice"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/commands/renamedevice": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Executes RenameDevice command for device by alternate id.",
        "operationId": "Commands_ExecuteRenameDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The alternate id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "body",
            "description": "New passcode value which needs to be set in the device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/commands/changepasscode": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Executes change passcode command for device id",
        "description": "v1",
        "operationId": "Commands_ExecuteChangeDevicePasscode",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The alternate id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "passcode",
            "in": "body",
            "description": "New passcode value which needs to be set in the device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicePasscode"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/commands/changepasscode": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Executes command for device by alternate id.",
        "description": "v1",
        "operationId": "Commands_ExecuteChangeDevicePasscodeByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "passcode",
            "in": "body",
            "description": "The change passcode request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicePasscode"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber].",
            "required": false,
            "type": ""
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/commands/changeorganizationgroup": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Changes the organization group to which, the device identifeied by the alternate id, is assigned.",
        "description": "v1",
        "operationId": "Commands_ChangeOrganizationGroupByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id of the device.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The new organization group ID.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{deviceid}/commands/startairplay": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Executes start airplay for a specific device.",
        "description": "v1",
        "operationId": "Commands_ExecuteStartAirPlay",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceid",
            "in": "path",
            "description": "The AirWatch device id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startAirPlay",
            "in": "body",
            "description": "Start airplay for a device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartAirPlay"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/commands/remotecontrol": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Initiates the remote control action for the device identified by device ID, by sending the command string to Device-Agent through AWCM.",
        "description": "v1",
        "operationId": "Commands_ExecuteRemoteControl",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/commands/changeorganizationgroup/{organizationgroupid}": {
      "put": {
        "tags": [
          "Commands"
        ],
        "summary": "Changes the organization group to which the device is assigned.",
        "description": "v1",
        "operationId": "Commands_ChangeOrganizationGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch device id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "organizationgroupid",
            "in": "path",
            "description": "The new organization group id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/commands/scheduleosupdate": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Executes the Schedule Os Update command on specified iOS device which is supervised, DEP and has version &gt;= 9",
        "description": "v1",
        "operationId": "Commands_ExecuteScheduleOsUpdateByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchby",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber, EasId, DeviceId].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "installaction",
            "in": "query",
            "description": "The install action type [Default, DownloadOnly, InstallASAP].",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/commands/bulk": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Executes command for device by alternate id.",
        "operationId": "Commands_BulkExecute",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "The bulk input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "command",
            "in": "query",
            "description": "The command to execute [EnterpriseWipe, LockDevice, ScheduleOsUpdate].",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchby",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber].",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/commands/bulk/scheduleosupdate": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Executes the Schedule Os Update command on list of iOS devices which are supervised, DEP and has version &gt;= 9",
        "operationId": "Commands_BulkExecuteScheduleOsUpdate",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "The bulk input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "searchby",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber, EasId, DeviceId].",
            "required": false,
            "type": "string"
          },
          {
            "name": "installaction",
            "in": "query",
            "description": "Install action type [Default, DownloadOnly, InstallASAP].",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{deviceId}/commands/vm": {
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Sends an VM command to multiple vminstances of a device",
        "description": "v1",
        "operationId": "Commands_VmInstanceCommand",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple VmInstance Ids.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "vmcommand",
            "in": "query",
            "description": "The command for VmInstances to execute [VmLock, VmUnlock, VmWipe].",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/compliance": {
      "get": {
        "tags": [
          "Compliance"
        ],
        "summary": "Retrieves compliance details of the device identified by device ID.",
        "description": "v1",
        "operationId": "Compliance_GetComplianceByDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/compliance": {
      "get": {
        "tags": [
          "Compliance"
        ],
        "summary": "Retrieves compliance details of the device identified by the alternate ID.",
        "description": "v1",
        "operationId": "Compliance_GetComplianceByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/complianceattributes/organizationgroupcomplianceattributes": {
      "get": {
        "tags": [
          "ComplianceAttributes"
        ],
        "summary": "Gets the list compliance attributes configured for an organizational group based on the vendor name.",
        "operationId": "ComplianceAttributes_GetComplianceAttributesByOrganizationGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "vendorname",
            "in": "query",
            "description": "The vendor name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/complianceattributes/devicecomplianceattributes": {
      "put": {
        "tags": [
          "ComplianceAttributes"
        ],
        "summary": "Saves a list of compliance attributes for a list of devices.\r\nAlso, evaluates compliance status for devices if admin has setup policies for these devices.",
        "operationId": "ComplianceAttributes_SaveDeviceComplianceAttributes",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceComplianceAttributeListModel",
            "in": "body",
            "description": "The list of compliance attributes for a list of devices.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceComplianceAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/complianceattributes/vendordetails/{id}": {
      "get": {
        "tags": [
          "ComplianceAttributes"
        ],
        "summary": "New - Retrieves the Vendor Details By Vendor details Id.",
        "operationId": "ComplianceAttributes_GetVendorDetailsByVendorDetailsId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vendor details Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "ComplianceAttributes"
        ],
        "summary": "New - Updates the Vendor Details for a given vendor in AirWatch.",
        "operationId": "ComplianceAttributes_UpdateVendor",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vendor details Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "vendorDetail",
            "in": "body",
            "description": "The vendor Detail.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorDetailsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "ComplianceAttributes"
        ],
        "summary": "New - Deletes the Vendor details by vendor details Id.",
        "operationId": "ComplianceAttributes_DeleteVendor",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vendor details Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/complianceattributes/vendordetails": {
      "post": {
        "tags": [
          "ComplianceAttributes"
        ],
        "summary": "New - Creates a vendor containing compliance attributes in AirWatch, to support Airwatch's integration with MSA partners.\r\nfor finding and remediating unauthorized or vulnerable applications, and configuration of endpoint security controls.",
        "operationId": "ComplianceAttributes_CreateVendor",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "vendorDetails",
            "in": "body",
            "description": "Vendor details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorDetailsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/compliancepolicy/search": {
      "get": {
        "tags": [
          "CompliancePolicy"
        ],
        "summary": "Searches for the CompliancePolicies with the search parameters passed",
        "operationId": "CompliancePolicy_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogid",
            "in": "query",
            "description": "Organization group id which is similar to selected organization group selected in console.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Maximum results which should be returned in each page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/content": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Retrieves the content details of the device identified by device ID.",
        "description": "v1",
        "operationId": "Contents_GetContentsByDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/content": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Retrieves the content details of the device identified by alternate ID.",
        "description": "v1",
        "operationId": "Contents_GetContentsByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/compromisereason": {
      "get": {
        "tags": [
          "DeviceCompromiseReason"
        ],
        "summary": "Gets the device compromised reason for the passed deviceId .",
        "operationId": "DeviceCompromiseReason_GetCompromisedReasonForDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "DeviceCompromiseReason"
        ],
        "summary": "Inserts compromise reason code for a specified device.",
        "operationId": "DeviceCompromiseReason_InsertCompromiseReasonCode",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "DeviceId.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "compromiseReasonList",
            "in": "body",
            "description": "The compromise Reason List.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCompromiseReasonList"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/customattribute/search": {
      "get": {
        "tags": [
          "DeviceCustomAttributes"
        ],
        "summary": "Searches for device custom attributes.",
        "description": "v1",
        "operationId": "DeviceCustomAttributes_DeviceCustomAttributeSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OrganizationGroup to be searched, user's OG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "deviceid",
            "in": "query",
            "description": "Device ID to search for",
            "required": false,
            "type": "integer"
          },
          {
            "name": "serialnumber",
            "in": "query",
            "description": "Device Serial Number to search for",
            "required": false,
            "type": "string"
          },
          {
            "name": "modifiedfrom",
            "in": "query",
            "description": "DateTime, Filters the custom attributes which are modified by after this datetime",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modifiedtill",
            "in": "query",
            "description": "DateTime, Filters the custom attributes which are modified by before this datetime",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "int, End of window a custom attribute was seen",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "DateTime, End of window a custom attribute was seen",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/customattribute/changereport": {
      "get": {
        "tags": [
          "DeviceCustomAttributes"
        ],
        "summary": "Searches for changes made to device custom attributes.",
        "description": "v1",
        "operationId": "DeviceCustomAttributes_DeviceCustomAttributeChangeReport",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OrganizationGroup to be searched, user's OG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "deviceid",
            "in": "query",
            "description": "Device ID to search for",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startdate",
            "in": "query",
            "description": "DateTime, Start of window to look for a custom attribute.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "enddate",
            "in": "query",
            "description": "DateTime, End of window a custom attribute was seen",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "int, End of window a custom attribute was seen",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "DateTime, End of window a custom attribute was seen",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/customattributes": {
      "put": {
        "tags": [
          "DeviceCustomAttributes"
        ],
        "summary": "Updates the device custom attribute value if already present for a device, else adds the same to the device",
        "description": "v1",
        "operationId": "DeviceCustomAttributes_UpdateCustomAttributes",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom Attribute name and value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "DeviceCustomAttributes"
        ],
        "summary": "Deletes the device custom attributes",
        "description": "v1",
        "operationId": "DeviceCustomAttributes_DeleteCustomAttributesForDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom attribute list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteDeviceCustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/serialnumber/{serialnumber}/customattributes": {
      "put": {
        "tags": [
          "DeviceCustomAttributes"
        ],
        "summary": "Updates the device custom attribute value if already present for a device, else adds the same to the device",
        "description": "v1",
        "operationId": "DeviceCustomAttributes_UpdateCustomAttributesBySerialNr",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "Device Serialnumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom Attribute name and value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "DeviceCustomAttributes"
        ],
        "summary": "Deletes the device custom attributes",
        "description": "v1",
        "operationId": "DeviceCustomAttributes_DeleteCustomAttributesBySerialNr",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "Device Serialnumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom attribute list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteDeviceCustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/assetnumber/{assetnumber}/customattributes": {
      "put": {
        "tags": [
          "DeviceCustomAttributes"
        ],
        "summary": "Updates the device custom attribute value if already present for a device, else adds the same to the device",
        "description": "v1",
        "operationId": "DeviceCustomAttributes_UpdateCustomAttributesByAssetNr",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "assetnumber",
            "in": "path",
            "description": "Device Assetnumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom Attribute name and value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/dep/profiles/{profileUuid}": {
      "get": {
        "tags": [
          "DeviceEnrollmentProgramV1"
        ],
        "summary": "New - Get DEP profile based on the profile UUID.",
        "operationId": "DeviceEnrollmentProgramV1_ViewSharedMdmProfileData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "profileUuid",
            "in": "path",
            "description": "The DEP profile uuid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "DeviceEnrollmentProgramV1"
        ],
        "summary": "New - Edit an existing DEP profile.",
        "operationId": "DeviceEnrollmentProgramV1_EditDepProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "depProfileModel",
            "in": "body",
            "description": "The dep profile model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MdmEnrollmentProgramApiModel"
            }
          },
          {
            "name": "profileUuid",
            "in": "path",
            "description": "The DEP profile Uuid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "DeviceEnrollmentProgramV1"
        ],
        "summary": "New - Delete DEP profile based on the profile UUID.",
        "operationId": "DeviceEnrollmentProgramV1_DeleteMdmEnrollmentProgramData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "profileUuid",
            "in": "path",
            "description": "The DEP profile uuid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/dep/profiles": {
      "post": {
        "tags": [
          "DeviceEnrollmentProgramV1"
        ],
        "summary": "New - Add a new DEP profile.",
        "operationId": "DeviceEnrollmentProgramV1_AddDepProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "depProfileModel",
            "in": "body",
            "description": "The dep profile model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MdmEnrollmentProgramApiModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/dep/certificates/{certId}": {
      "get": {
        "tags": [
          "DeviceEnrollmentProgramV1"
        ],
        "summary": "New - Get DEP certificate to upload in the DEP portal.",
        "operationId": "DeviceEnrollmentProgramV1_GetDepCertificate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "certId",
            "in": "path",
            "description": "The certificate id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/dep/certificates/{organizationGroupId}": {
      "post": {
        "tags": [
          "DeviceEnrollmentProgramV1"
        ],
        "summary": "New - Generate a new DEP certificate.",
        "operationId": "DeviceEnrollmentProgramV1_SaveDepCertificate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "organizationGroupId",
            "in": "path",
            "description": "The organization Group Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/dep/accounts/{organizationGroupId}": {
      "post": {
        "tags": [
          "DeviceEnrollmentProgramV1"
        ],
        "summary": "New - Create a new DEP account for the organization group ID.",
        "operationId": "DeviceEnrollmentProgramV1_SaveDepAuthenticationEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "organizationGroupId",
            "in": "path",
            "description": "The location Group Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "depAccountCreationModel",
            "in": "body",
            "description": "The dep Account Creation Model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DepAccountCreationApiModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "DeviceEnrollmentProgramV1"
        ],
        "summary": "New - Deletes DEP and associated DEP profiles for the given organization group ID.",
        "operationId": "DeviceEnrollmentProgramV1_DeleteDepAuthenticationEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "organizationGroupId",
            "in": "path",
            "description": "The organization Group Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/dep/groups/{groupUuid}/devices": {
      "get": {
        "tags": [
          "DeviceEnrollmentProgramV1"
        ],
        "summary": "New - Gets all Apple Device Enrollment Program devices at organization group.",
        "description": "Returns all the Apple Device Enrollment Program devices that have been synced into AirWatch for the given organization group.",
        "operationId": "DeviceEnrollmentProgramV1_GetDepDevices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "groupUuid",
            "in": "path",
            "description": "Organization group UUID to perform the operation on.(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeviceEnrollmentProgramDevicesResponseV1Model"
              }
            }
          },
          "404": {
            "description": "1. {5053 : Device Enrollment Program account not found for the given organization group UUID.}2. {5054 : No organization group found for the given organization group UUID.}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DeviceEnrollmentProgramV1"
        ],
        "summary": "New - Fetches or syncs Apple Device Enrollment Program devices at organization group.",
        "description": "Fetches or syncs devices from the Apple server associated with the token uploaded in the given organization group based on the action flag.",
        "operationId": "DeviceEnrollmentProgramV1_ReconcileDepDevices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "groupUuid",
            "in": "path",
            "description": "Organization group UUID to perform the operation on.(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "description": "Action flag is used to determine if the fetch or sync action must be performed for the devices.(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "api/mdm/dep/groups/{groupUuid}/devices",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "1. {5055 : Action can be either Sync or Fetch.}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          },
          "404": {
            "description": "1. {5053 : Device Enrollment Program account not found for the given organization group UUID.}2. {5054 : No organization group found for the given organization group UUID.}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      }
    },
    "/devices/{id}/finddevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Find command to the device identified by device ID.",
        "description": "v1",
        "operationId": "Devices_FindDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "findDevice",
            "in": "body",
            "description": "The command parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindDevice"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/finddevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Find command to the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_FindDeviceByMacAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "findDevice",
            "in": "body",
            "description": "The command parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindDevice"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/finddevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Find command to the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_FindDeviceBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "findDevice",
            "in": "body",
            "description": "The command parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindDevice"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/finddevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Find command to the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_FindDeviceByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "findDevice",
            "in": "body",
            "description": "The command parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindDevice"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/sendmessage": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a push notification to the device identified by device ID. If not enrolled, sends an SMS message instead.",
        "description": "v1",
        "operationId": "Devices_SendMessage",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "genericMessage",
            "in": "body",
            "description": "The message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/sendmessage": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a push notification to the device identified by MAC address. If not enrolled, sends an SMS message instead.",
        "description": "v1",
        "operationId": "Devices_SendMessageByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "genericMessage",
            "in": "body",
            "description": "The message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/sendmessage": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a push notification to the device identified by UDID. If not enrolled, sends an SMS message instead.",
        "description": "v1",
        "operationId": "Devices_SendMessageByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "genericMessage",
            "in": "body",
            "description": "The message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/sendmessage": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a push notification to the device identified by serial number. If not enrolled, sends an SMS message instead.",
        "description": "v1",
        "operationId": "Devices_SendMessageBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "genericMessage",
            "in": "body",
            "description": "The message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/changepasscode": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Changes the passcode of device which is used for unlocking it",
        "description": "v1",
        "operationId": "Devices_ChangeDevicePasscode",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device identifier for which passcode needs to be changed",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "passcode",
            "in": "body",
            "description": "New passcode value which needs to be set in the device",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicePasscode"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves information about multiple devices identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetDevicesByBulkMacAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple device MAC addresses.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves information about multiple devices identified by serial number.",
        "description": "v1",
        "operationId": "Devices_GetDevicesByBulkSerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple device serial numbers.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves information about multiple devices identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetDevicesByBulkUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple device UDIDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/sendmessage/sms": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an SMS to multiple devices identified by device ID.",
        "description": "v1",
        "operationId": "Devices_BulkSendMessageSms",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "smsMessage",
            "in": "body",
            "description": "An object containing the message and phone number, and multiple device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmsMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/sendmessage/sms": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an SMS to multiple devices identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_BulkSendMessageSmsByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "smsMessage",
            "in": "body",
            "description": "An object containing the message and phone number, and multiple MAC addresses.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmsMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/sendmessage/sms": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an SMS to multiple devices identified by UDID.",
        "description": "v1",
        "operationId": "Devices_BulkSendMessageSmsByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "smsMessage",
            "in": "body",
            "description": "An object containing the message and phone number, and multiple UDIDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmsMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/sendmessage/sms": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an SMS to multiple devices identified by serial number.",
        "description": "v1",
        "operationId": "Devices_BulkSendMessageSmsBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "smsMessage",
            "in": "body",
            "description": "An object containing the message and phone number, and multiple serial numbers.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmsMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/enterprisewipe": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an Enterprise Wipe command to multiple devices identified by device ID.",
        "description": "v1",
        "operationId": "Devices_BulkEnterpriseWipe",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple AirWatch device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/enterprisewipe": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an Enterprise Wipe command to multiple devices identified by device ID.",
        "description": "v1",
        "operationId": "Devices_BulkEnterpriseWipeByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple device MAC addresses.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/enterprisewipe": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an Enterprise Wipe command to multiple devices identified by UDID.",
        "description": "v1",
        "operationId": "Devices_BulkEnterpriseWipeByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple device UDIDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/enterprisewipe": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an Enterprise Wipe command to multiple devices identified by serial number.",
        "description": "v1",
        "operationId": "Devices_BulkEnterpriseWipeBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple device serial numbers.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/lockdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Lock command to multiple devices identified by device ID.",
        "description": "v1",
        "operationId": "Devices_BulkLockDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple AirWatch device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/lockdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Lock command to multiple devices identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_BulkLockDeviceByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple MAC addresses.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/lockdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Lock command to multiple devices identified by UDID.",
        "description": "v1",
        "operationId": "Devices_BulkLockDeviceByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple UDIDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/lockdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Lock command to multiple devices identified by serial number.",
        "description": "v1",
        "operationId": "Devices_BulkLockDeviceBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple serial numbers.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/gps": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the GPS coordinates of multiple devices identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_BulkGpsCoordinatesByDeviceByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input of containing multiple MAC addresses.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/gps": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the GPS coordinates of multiple devices identified by UDID.",
        "description": "v1",
        "operationId": "Devices_BulkGpsCoordinatesByDeviceByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input of containing multiple UDIDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/gps": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the GPS coordinates of multiple devices identified by serial number.",
        "description": "v1",
        "operationId": "Devices_BulkGpsCoordinatesByDeviceBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input of containing multiple serial numbers.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/delete": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes multiple devices identified by AirWatch device ID.",
        "description": "v1",
        "operationId": "Devices_BulkDeleteDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple AirWatch device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/delete": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes multiple devices identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_BulkDeleteDeviceByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple MAC addresses.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/delete": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes multiple devices identified by UDID.",
        "description": "v1",
        "operationId": "Devices_BulkDeleteDeviceByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple UDIDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/unenroll": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Unenrolls multiple devices identified by UDID.",
        "description": "v1",
        "operationId": "Devices_BulkUnenrollDeviceByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple UDIDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/serialnumber/delete": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes multiple devices identified by serial number.",
        "description": "v1",
        "operationId": "Devices_BulkDeleteDeviceBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple serial numbers.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/sendmessage/push": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a push message to multiple devices identified by AirWatch device ID.",
        "description": "v1",
        "operationId": "Devices_BulkSendMessagePush",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "pushNotificationMessage",
            "in": "body",
            "description": "An object containing the message to send and multiple AirWatch device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushNotificationMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/sendmessage/push": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a push message to multiple devices identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_BulkSendMessagePushByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "pushNotificationMessage",
            "in": "body",
            "description": "An object containing the message to send and multiple MAC addresses.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushNotificationMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/sendmessage/push": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a push message to multiple devices identified by UDID.",
        "description": "v1",
        "operationId": "Devices_BulkSendMessagePushByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "pushNotificationMessage",
            "in": "body",
            "description": "An object containing the message to send and multiple UDIDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushNotificationMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/sendmessage/push": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a push message to multiple devices identified by serial number.",
        "description": "v1",
        "operationId": "Devices_BulkSendMessagePushBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "pushNotificationMessage",
            "in": "body",
            "description": "An object containing the message to send and multiple serial numbers.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushNotificationMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/sendmessage/email": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an email to the users of multiple devices identified by AirWatch device ID.",
        "description": "v1",
        "operationId": "Devices_BulkSendMessageEmail",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "emailMessage",
            "in": "body",
            "description": "An object containing the message to send and multiple AirWatch device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/sendmessage/email": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an email to the users of multiple devices identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_BulkSendMessageEmailByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "emailMessage",
            "in": "body",
            "description": "An object containing the message to send and multiple MAC addresses.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/sendmessage/email": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an email to the users of multiple devices identified by UDID.",
        "description": "v1",
        "operationId": "Devices_BulkSendMessageEmailByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "emailMessage",
            "in": "body",
            "description": "An object containing the message to send and multiple UDIDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/sendmessage/email": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an email to the users of multiple devices identified by serial number.",
        "description": "v1",
        "operationId": "Devices_BulkSendMessageEmailBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "emailMessage",
            "in": "body",
            "description": "An object containing the message to send and multiple serial numbers.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/changeenrollmentuser/{enrollmentuserid}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Changes the enrollment user associated with the device to a user passed",
        "description": "v1",
        "operationId": "Devices_ChangeEnrollmentUserById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch Device Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "enrollmentuserid",
            "in": "path",
            "description": "Enrollment User Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/changeenrollmentuser/{enrollmentuserid}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Changes the enrollment user associated with the device to a user passed",
        "description": "v1",
        "operationId": "Devices_ChangeEnrollmentUserByMacAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "Device Mac address",
            "required": true,
            "type": "string"
          },
          {
            "name": "enrollmentuserid",
            "in": "path",
            "description": "Enrollment User Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/changeenrollmentuser/{enrollmentuserid}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Changes the enrollment user associated with the device to a user passed",
        "description": "v1",
        "operationId": "Devices_ChangeEnrollmentUserByUdId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "Device Udid",
            "required": true,
            "type": "string"
          },
          {
            "name": "enrollmentuserid",
            "in": "path",
            "description": "Enrollment User Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/changeenrollmentuser/{enrollmentuserid}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Changes the enrollment user associated with the device to a user passed",
        "description": "v1",
        "operationId": "Devices_ChangeEnrollmentUserBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "Device Serial-Number",
            "required": true,
            "type": "string"
          },
          {
            "name": "enrollmentuserid",
            "in": "path",
            "description": "Enrollment User Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/remotecontrol": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Initiates the remote control action for the device identified by device ID, by sending the command string to Device-Agent through AWCM.",
        "description": "v1",
        "operationId": "Devices_DeviceRemoteControl",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch Device Identifier for which remote control action needs to be initiated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/remotecontrol": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Initiates the remote control action for the device identified by UDID, by sending the command string to Device-Agent through AWCM.",
        "description": "v1",
        "operationId": "Devices_DeviceRemoteControlByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "UDID of the Device for which remote control action needs to be initiated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/remotecontrol": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Initiates the remote control action for the device identified by Serial Number, by sending the command string to Device-Agent through AWCM.",
        "description": "v1",
        "operationId": "Devices_DeviceRemoteControlBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "Serial number of the Device for which remote control action needs to be initiated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/remotecontrol": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Initiates the remote control action for the device identified by MAC Address, by sending the command string to Device-Agent through AWCM.",
        "description": "v1",
        "operationId": "Devices_DeviceRemoteControlByAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "MAC Address of the Device for which remote control action needs to be initiated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/changeorganizationgroup/{organizationgroupid}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Changes the organization group to which the device is assigned.",
        "description": "v1",
        "operationId": "Devices_ChangeOrganizationGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "path",
            "description": "The new Organization group ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/applyapplock": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Apply App Lock",
        "description": "v1",
        "operationId": "Devices_ApplyAppLock",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applyAppLock",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplyAppLock"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/removeapplock": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Remove App Lock",
        "description": "v1",
        "operationId": "Devices_RemoveAppLock",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "removeAppLock",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveAppLock"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{deviceId}/tags": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves all the tags assigned to the device.",
        "description": "v1",
        "operationId": "Devices_TagsForDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The AirWatch Device id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{deviceId}/commands/finddevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Executes find device command for device by device id.",
        "description": "v1",
        "operationId": "Devices_ExecuteFindDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The alternate id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "findDevice",
            "in": "body",
            "description": "The find device request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindDevice"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/commands/remotecontrol": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Initiates the remote control action for the device identified by the AirWatch device ID, by sending the command string to Device-Agent through AWCM.",
        "description": "v1",
        "operationId": "Devices_ExecuteRemoteControl",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch Device Identifier for which remote control action needs to be initiated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/organizationgroup": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Changes the organization group to which, the device identifeied by the alternate id, is assigned.",
        "description": "v1",
        "operationId": "Devices_ChangeOrganizationGroupByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber].",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ogid",
            "in": "query",
            "description": "The new organization group ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/updatecustomattributes": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Updates the device custom attribute value if already present for a device, else adds the same to the device",
        "description": "v1",
        "operationId": "Devices_UpdateCustomAttributes",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch Device Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom Attribute name and value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/deletecustomattributes": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes the device custom attributes",
        "description": "v1",
        "operationId": "Devices_DeleteCustomAttributesForDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch Device identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom attribute list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/updatecustomattributes": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Updates the device custom attribute value if already present for a device, else adds the same to the device",
        "description": "v1",
        "operationId": "Devices_UpdateCustomAttributesBySerialNr",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "Device Serialnumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom Attribute name and value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/assetnumber/{assetnumber}/updatecustomattributes": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Updates the device custom attribute value if already present for a device, else adds the same to the device",
        "description": "v1",
        "operationId": "Devices_UpdateCustomAttributesByAssetNr",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "assetnumber",
            "in": "path",
            "description": "Device Assetnumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom Attribute name and value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/deletecustomattributes": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes the device custom attributes",
        "description": "v1",
        "operationId": "Devices_DeleteCustomAttributesBySerialNr",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "Device Serialnumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "customAttributes",
            "in": "body",
            "description": "Custom attribute list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCustomAttributeListModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/retrieveremotesessiondetails": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves Device Remote Session Information",
        "description": "v1",
        "operationId": "Devices_RetrieveDeviceRemoteSessionDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OrganizationGroup to be searched, user's OG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Page size.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "sessionrangefrom",
            "in": "query",
            "description": "DateTime, Filters the device remote session information starting from this datetime",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "sessionrangetill",
            "in": "query",
            "description": "DateTime, Filters the device remote session information till this datetime",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumberexceptions/search": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Returns the device details for which there is a mismatch in the serial number passed during registration and enrollment",
        "operationId": "Devices_LoadDeviceSerialNrExceptions",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "organization group identifier under which we need to search for the devices",
            "required": false,
            "type": "string"
          },
          {
            "name": "seensince",
            "in": "query",
            "description": "DateTime, filters devices where lastseen falls on/after this seensince time",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "seentill",
            "in": "query",
            "description": "DateTime, filters devices where lastseen falls on/before this seenbefore time",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "customattributeslist",
            "in": "query",
            "description": "Custom attribute names seperated by comma(,).",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/enrolleddevicescount": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves Count of all enrolled devices based on any or all of the following OG id, Tag Name,and devices registered after 'SeenSince' datetime until the 'SeenTill' datetime.",
        "operationId": "Devices_FilterEnrolledDevicesCount",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "description": "Http Request",
            "required": true,
            "type": "object"
          },
          {
            "name": "filterCriteria",
            "in": "body",
            "description": "Filter Entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCountFilterCriteriaRequestModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ogs/{og_id}/devices/audit": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "API to get the Device Events status history like Unenrolled or Deleted of an organization group and its child.",
        "operationId": "Devices_LoadDeviceEventHistory",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "og_id",
            "in": "path",
            "description": "organization Group code",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/vminstances": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets the details of all the VM Instances that are present on the device whose Device Id is passed.",
        "operationId": "Devices_GetVmInstancesByDeviceId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{deviceid}/profileversion/{profileversionid}/vmusbrestrictions": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets the USB Restriction Policy details for the VM Instance whose Device ID and Profile Version ID is passed.",
        "operationId": "Devices_GetUsbRestrictionsForVmInstancesByDeviceProfileId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceid",
            "in": "path",
            "description": "Device Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "profileversionid",
            "in": "path",
            "description": "Profile Version Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/appleuser": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Saves Devices's current logged in User.",
        "operationId": "Devices_SaveDeviceCurrentLoggedInUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "devicePersonMap",
            "in": "body",
            "description": "The device to person mapping i.e. the current user logged in with the device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicePersonMapModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{deviceId}/rmcapablities": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Saves the Remote Management Capablities for a specified Device",
        "operationId": "Devices_SaveRMCapablities",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device for which RM capablities are sent",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rmCapabilitiesModel",
            "in": "body",
            "description": "Deserialized value of RM capabilities",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceRMCababilitiesModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          },
          {
            "name": "aw-group-id",
            "in": "header",
            "description": "Group ID",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{deviceId}/groups/{organizationGroupId}/loggedinusers": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets all logged in users on the device",
        "operationId": "Devices_GetLoggedInUsers",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "organizationGroupId",
            "in": "path",
            "description": "The location group of the device",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/workspaceenrollmentrestrictions": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Checks whether the Enrollment is allowed for Workspace devices based on the current Enrollment Restrictions",
        "operationId": "Devices_CheckForWorkspaceEnrollmentRestrictions",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "workspaceEnrollmentRestrictionsModel",
            "in": "body",
            "description": "Workspace Enrollment Restriction model containing LocationGroupID, EnrollmentUserID, PlatformID, UDID, Device Model, OS and OEM Info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceEnrollmentRestrictionsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/appstatus": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "New - Gets App Status for a combination of input elements",
        "description": "v1",
        "operationId": "Devices_GetAppStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber etc].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "query",
            "description": "GroupId is LG's custmer code",
            "required": false,
            "type": "string"
          },
          {
            "name": "bundleId",
            "in": "query",
            "description": "App Bundle Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "App version",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "query",
            "description": "Device Type",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/generateOneTimeToken": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "API endpoint to generate the one time token. Currently used by GB- Direct enrollment to get HMAC for WS One app.",
        "operationId": "Devices_GenerateOnetimeToken",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "bundleId",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get Device details by Device ID",
        "description": "v1",
        "operationId": "Devices_GetById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device ID of the Device",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Devices"
        ],
        "summary": "Edit the device details identified by Device Id",
        "description": "v1",
        "operationId": "Devices_EditDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device Identifier for which details needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "device",
            "in": "body",
            "description": "Device details which needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Delete Device details by Device ID",
        "description": "v1",
        "operationId": "Devices_Delete",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device ID of the Device",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/editdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Edit the device details identified by Device Id",
        "description": "v1",
        "operationId": "Devices_EditDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device Identifier for which details needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "device",
            "in": "body",
            "description": "Device details which needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/bulk": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes multiple devices identified by device ID or alternate ID.",
        "description": "v1",
        "operationId": "Devices_BulkDeleteDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "searchby",
            "in": "query",
            "description": "OPTIONAL. The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber] If not included, device id is used.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/search": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Searches for devices using the query information provided.",
        "description": "v1",
        "operationId": "Devices_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "description": "Enrolled username.",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Device model.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Device platform.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastseen",
            "in": "query",
            "description": "Last seen date string.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "ownership",
            "in": "query",
            "description": "Ownership.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lgid",
            "in": "query",
            "description": "OrganizationGroup to be searched, user's OG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "compliantstatus",
            "in": "query",
            "description": "Complaint status.",
            "required": false,
            "type": "string"
          },
          {
            "name": "seensince",
            "in": "query",
            "description": "Specifies the date filter for device search, which retrieves the devices that are seen after this date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Values ASC or DESC. Defaults to ASC.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/managedsettings": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sets the managed settings for an iOS device based on alternate id.",
        "description": "v1",
        "operationId": "Devices_ManagedSettingsForDeviceByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "settings",
            "in": "body",
            "description": "Managed settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceManagedSettings"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [DeviceId, Macaddress, Udid, Serialnumber, ImeiNumber, EasId].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id of the device.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/generateapptoken": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_GenerateAppToken",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "generateAppTokensettings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateAppToken"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/extensivesearch": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Search results containing the Devices and their Product assignment information.",
        "description": "v1",
        "operationId": "Devices_DeviceExtensiveSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OrganizationGroup to be searched, user's OG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Device platform.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startdatetime",
            "in": "query",
            "description": "Filters devices such that devices with last seen after this date will be returned",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "enddatetime",
            "in": "query",
            "description": "Filters devices such that devices with last seen till this date will be returned",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "deviceid",
            "in": "query",
            "description": "Device Identifier",
            "required": false,
            "type": "integer"
          },
          {
            "name": "customattributeslist",
            "in": "query",
            "description": "Custom attribute names.",
            "required": false,
            "type": "string"
          },
          {
            "name": "enrollmentstatus",
            "in": "query",
            "description": "Fileters devices based on their EnrollmentStatus [Enrolled, EnterpriseWipePending, DeviceWipePending, Unenrolled].",
            "required": false,
            "type": "string"
          },
          {
            "name": "statuschangestarttime",
            "in": "query",
            "description": "Filters the devices for which EnrollmentStatus has changes from enrollmentstatuschangefrom datetime",
            "required": false,
            "type": "string"
          },
          {
            "name": "statuschangeendtime",
            "in": "query",
            "description": "Filters the devices for which EnrollmentStatus has changes till enrollmentstatuschangeto datetime",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/litesearch": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Search results containing the Devices and their Product assignment information.",
        "description": "v1",
        "operationId": "Devices_DeviceExtensiveSearchLite",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OrganizationGroup to be searched, user's OG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Device platform.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "seensince",
            "in": "query",
            "description": "Filters devices such that devices with last seen after this date will be returned",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "seentill",
            "in": "query",
            "description": "Filters devices such that devices with last seen till this date will be returned",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "deviceid",
            "in": "query",
            "description": "Device Identifier",
            "required": false,
            "type": "integer"
          },
          {
            "name": "customattributeslist",
            "in": "query",
            "description": "Custom attribute names.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get Device details by Alternate ID",
        "description": "v1",
        "operationId": "Devices_GetByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Devices"
        ],
        "summary": "Edit the device details identified by Device UDID",
        "description": "v1",
        "operationId": "Devices_EditDeviceByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "device",
            "in": "body",
            "description": "Device details which needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves information about multiple devices identified by the specified Id type.",
        "description": "v1",
        "operationId": "Devices_BulkGetDevicesByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes Device details by Device ID",
        "description": "v1",
        "operationId": "Devices_DeleteByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/id": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves information about multiple devices identified by device ID.",
        "description": "v1",
        "operationId": "Devices_GetDevicesById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing multiple AirWatch device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/bulksettings": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieve limits for bulk actions.",
        "description": "v1",
        "operationId": "Devices_GetBulkSettings",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/devicecountinfo": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves Device Count Information which are Categorised by Device Info like Platform, EnrollmentStatus, Ownership etc..",
        "description": "v1",
        "operationId": "Devices_GetDeviceCountDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OrganizationGroup to be searched, user's OG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/remotesessiondetails": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves Device Remote Session Information",
        "description": "v1",
        "operationId": "Devices_GetDeviceRemoteSessionDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OrganizationGroup to be searched, user's OG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Page size.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startdatetime",
            "in": "query",
            "description": "DateTime, Filters the device remote session information starting from this datetime",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "enddatetime",
            "in": "query",
            "description": "DateTime, Filters the device remote session information till this datetime",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/udid/{udid}/deviceenrollmentstatus": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves Device status based on the device identifier(UDID)",
        "description": "v1",
        "operationId": "Devices_GetDeviceEnrollmentStatusbyUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "Unique device identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "DeviceUDID",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/devicerecord": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "New - Creates a device record in the database based on the information supplied in the request model",
        "operationId": "Devices_CreateDeviceRecord",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceRecordRequest",
            "in": "body",
            "description": "Request model containing the device information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceRecordRequestMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/macaddress/{macaddress}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves information about the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetByMacAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_DeleteByAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves information about the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID to search for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_DeleteByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "Udid of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves information about the device identified by device serial number.",
        "description": "v1",
        "operationId": "Devices_GetBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_DeleteBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "Serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/editdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Edit the device details identified by Device UDID",
        "description": "v1",
        "operationId": "Devices_EditDeviceByUdId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "Device UDID for which details needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "device",
            "in": "body",
            "description": "Device details which needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/editdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Edit the device details identified by Device Serial Number",
        "description": "v1",
        "operationId": "Devices_EditDeviceBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "Device serial number for which details needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "device",
            "in": "body",
            "description": "Device details which needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/editdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Edit the device details identified by Device MAC Address",
        "description": "v1",
        "operationId": "Devices_EditDeviceByMacAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "Device mac address for which details needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "device",
            "in": "body",
            "description": "Device details which needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/apps": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves application details of the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_DeviceAppsByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/apps": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves application details of the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_DeviceAppsByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/apps": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves application details of the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_DeviceAppsBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/user": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the user details of the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_DeviceUserBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/profiles": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the profile details of the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetProfilesByDeviceMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/profiles": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the profile details of the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetProfilesByDeviceUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/profiles": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the profile details of the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_GetProfilesByDeviceSerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/content": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the content details of the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetContentsByDeviceMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/content": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the content details of the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetContentsByDeviceUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The udid of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/content": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the content details of the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_GetContentsByDeviceSerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/certificates": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves certificate details of the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetCertificateByDeviceMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/certificates": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves certificate details of the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetCertificateByDeviceUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/certificates": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves certificate details of the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_GetCertificateByDeviceSerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/eventlog": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the event log of the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetEventLogsByDeviceMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "severity",
            "in": "query",
            "description": "The event severity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dayrange",
            "in": "query",
            "description": "The day range.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/eventlog": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the event log of the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetEventLogsByDeviceUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "severity",
            "in": "query",
            "description": "The event severity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dayrange",
            "in": "query",
            "description": "The day range.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/eventlog": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the event log of the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_GetEventLogsByDeviceSerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "severity",
            "in": "query",
            "description": "The event severity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dayrange",
            "in": "query",
            "description": "The day range.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/gps": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the GPS coordinates of the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetGpsCoordinatesByDeviceMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dayRange",
            "in": "query",
            "description": "The day range.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/gps": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the GPS coordinates of the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetGpsCoordinatesByDeviceUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dayRange",
            "in": "query",
            "description": "The day range.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/gps": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the GPS coordinates of the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_GetGpsCoordinatesByDeviceSerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dayRange",
            "in": "query",
            "description": "The day range.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/user": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the user details of the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_DeviceUserByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/user": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the user details of the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_DeviceUserByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/security": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the security information of the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetDeviceSecurityInfoByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/security": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the security information of the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetDeviceSecurityInfoByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/security": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the security information of the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_GetDeviceSecurityInfoSerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/network": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the network information of the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetDeviceNetworkInfoByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/network": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the network information of the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetDeviceNetworkInfoByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/network": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the network information of the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_GetDeviceNetworkInfoBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/compliance": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves compliance details of the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetDeviceComplianceByMacaddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/compliance": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves compliance details of the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetDeviceComplianceByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/compliance": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves compliance details of the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_GetDeviceComplianceSerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/notes": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the notes for the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetDeviceNotesByMacaddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The device's MAC address",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/notes": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the notes for the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetDeviceNotesByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/notes": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves the notes for the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_GetDeviceNotesBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/notes/{noteId}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves a particular note for the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetDeviceNoteByMacaddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes a note for the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_DeleteNoteByMacaddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/notes/{noteId}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves a particular note for the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetDeviceNoteByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes a note for the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_DeleteNoteByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/notes/{noteId}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves a particular note for the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_GetDeviceNoteBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes a note for the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_DeleteNoteBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{deviceId}/addNote": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Creates a note for the device identified by device ID.",
        "description": "v1",
        "operationId": "Devices_CreateNotes",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceNotes",
            "in": "body",
            "description": "The DeviceNotes resource to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNotes"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/addNote": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Creates a note for the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_CreateNotesByMacaddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceNotes",
            "in": "body",
            "description": "The DeviceNotes resource to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNotes"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/addNote": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Creates a note for the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_CreateNotesByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceNotes",
            "in": "body",
            "description": "The DeviceNotes resource to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNotes"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/addNote": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Creates a note for the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_CreateNotesBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceNotes",
            "in": "body",
            "description": "The DeviceNotes resource to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNotes"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{deviceId}/notes/{noteId}/update": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Updates a note for the device identified by device ID.",
        "description": "v1",
        "operationId": "Devices_UpdateNotes",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceNotes",
            "in": "body",
            "description": "Resource containing the note details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNotes"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/notes/{noteId}/update": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Updates a note for the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_UpdateNotesByMacaddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceNotes",
            "in": "body",
            "description": "Resource containing the note details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNotes"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/notes/{noteId}/update": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Updates a note for the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_UpdateNotesByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceNotes",
            "in": "body",
            "description": "Resource containing the note details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNotes"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/notes/{noteId}/update": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Updates a note for the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_UpdateNotesBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceNotes",
            "in": "body",
            "description": "Resource containing the note details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNotes"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/createofflinedevice/{token}/token": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Creates an Offline Device Record",
        "description": "v1",
        "operationId": "Devices_CreateOfflineDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "EnrollmentToken Value",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/query": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an Query command to the device identified by device ID.",
        "description": "v1",
        "operationId": "Devices_DeviceQuery",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/query": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an Query command to the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_DeviceQueryByMacAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/query": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an Query command to the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_DeviceQueryByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/query": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an Query command to the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_DeviceQueryBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/clearpasscode": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Clear Passcode command to the device identified by device ID.",
        "description": "v1",
        "operationId": "Devices_ClearPasscode",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/clearpasscode": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Clear Passcode command to the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_ClearPasscodeByMacAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/clearpasscode": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Clear Passcode command to the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_ClearPasscodeByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/clearpasscode": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Clear Passcode command to the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_ClearPasscodeBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/lockdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Lock command to the device identified by device ID.",
        "description": "v1",
        "operationId": "Devices_LockDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/lockdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Lock command to the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_LockDeviceByMacAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/lockdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Lock command to the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_LockDeviceByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/lockdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Lock command to the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_LockDeviceBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/enterprisewipe": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an Enterprise Wipe command to the device identified by device ID.",
        "description": "v1",
        "operationId": "Devices_EnterpriseWipe",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/devicewipe": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Wipe command to the device identified by device ID.",
        "description": "v1",
        "operationId": "Devices_DeviceWipe",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/sendmessage/push": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a push message to the device identified by device ID.",
        "description": "v1",
        "operationId": "Devices_SendMessagePush",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pushMessage",
            "in": "body",
            "description": "The message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/sendmessage/push": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a push message to the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_SendMessagePushByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pushMessage",
            "in": "body",
            "description": "The message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/sendmessage/push": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a push message to the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_SendMessagePushByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pushMessage",
            "in": "body",
            "description": "The message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/sendmessage/push": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a push message to the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_SendMessagePushBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pushMessage",
            "in": "body",
            "description": "The message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/sendmessage/email": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an email to the user of the device identified by device ID.",
        "description": "v1",
        "operationId": "Devices_SendMessageEmail",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "body",
            "description": "The email to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/sendmessage/email": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an email to the user of the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_SendMessageEmailByMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "body",
            "description": "The email to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/sendmessage/email": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an email to the user of the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_SendMessageEmailByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "body",
            "description": "The email to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/sendmessage/email": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an email to the user of the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_SendMessageEmailBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "body",
            "description": "The email to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/sendmessage/sms": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an SMS to the device identified by device ID.",
        "description": "v1",
        "operationId": "Devices_SendMessageSms",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sms",
            "in": "body",
            "description": "The SMS message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sms"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/sendmessage/sms": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an SMS to the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_SendMessageSmsMac",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sms",
            "in": "body",
            "description": "The SMS message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sms"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/sendmessage/sms": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an SMS to the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_SendMessageSmsSerialnumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sms",
            "in": "body",
            "description": "The SMS message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sms"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/sendmessage/sms": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an SMS to the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_SendMessageSmsUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sms",
            "in": "body",
            "description": "The SMS message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sms"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/syncdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Sync command to the device identified by device ID.",
        "description": "v1",
        "operationId": "Devices_SyncDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AirWatch device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/syncdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Sync command to the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_SyncDeviceByMacAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/syncdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Sync command to the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_SyncDeviceByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/syncdevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Sync command to the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_SyncDeviceBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/enrollmentstatus": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves enrollment details for the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_GetEnrollmentStatusByMacAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/enrollmentstatus": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves enrollment details for the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_GetEnrollmentStatusByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/enrollmentstatus": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Retrieves enrollment details for the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_GetEnrollmentStatusBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/enterprisewipe": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an Enterprise Wipe command to the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_EnterpriseWipeByMacAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/enterprisewipe": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an Enterprise Wipe command to the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_EnterpriseWipeByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/enterprisewipe": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends an Enterprise Wipe command to the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_EnterpriseWipeBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/macaddress/{macaddress}/devicewipe": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Wipe command to the device identified by MAC address.",
        "description": "v1",
        "operationId": "Devices_DeviceWipeByMacAddress",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "macaddress",
            "in": "path",
            "description": "The MAC address of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/udid/{udid}/devicewipe": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Wipe command to the device identified by UDID.",
        "description": "v1",
        "operationId": "Devices_DeviceWipeByUdid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "The UDID of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/serialnumber/{serialnumber}/devicewipe": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sends a Wipe command to the device identified by serial number.",
        "description": "v1",
        "operationId": "Devices_DeviceWipeBySerialNumber",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serialnumber",
            "in": "path",
            "description": "The serial number of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/devices/{id}/smartgroups": {
      "get": {
        "tags": [
          "DeviceSmartGroups"
        ],
        "summary": "Retrieves all the smart groups associated with the device",
        "description": "v1",
        "operationId": "DeviceSmartGroups_GetSmartGroupsAssignedToDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Device Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/education/groups/{id}": {
      "put": {
        "tags": [
          "Education"
        ],
        "summary": "To enable education for an organization group",
        "operationId": "Education_EnableEducation",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "educationModel",
            "in": "body",
            "description": "The education Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EducationModel"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Location Group ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Education"
        ],
        "summary": "To disable education for given Location group",
        "operationId": "Education_DisableEducation",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location group ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Education"
        ],
        "summary": "Modify Education Account settings like ClassSource or Maximum Resident Users.",
        "operationId": "Education_ChangeEducationAccountSettings",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The education Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EducationModel"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The location group ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/education/groups/{id}/EducationAccount": {
      "get": {
        "tags": [
          "Education"
        ],
        "summary": "Load education account details",
        "operationId": "Education_LoadEducationAccount",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Location group id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/enrollmentstatus": {
      "get": {
        "tags": [
          "EnrollmentStatus"
        ],
        "summary": "Retrieves enrollment details for the device identified by device ID.",
        "description": "v1",
        "operationId": "EnrollmentStatus_GetEnrollmentStatusByDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/enrollmentstatus": {
      "get": {
        "tags": [
          "EnrollmentStatus"
        ],
        "summary": "Retrieves enrollment details for the device identified by the alternate ID.",
        "description": "v1",
        "operationId": "EnrollmentStatus_GetEnrollmentStatusByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/enterpriseintegration/ldap": {
      "post": {
        "tags": [
          "EnterpriseIntegrationV1"
        ],
        "summary": "API to configure ldap\r\n            \r\nLdapServerType:\r\nActive Directory: 0, Other LDAP: 1, Novelle Directory: 2, Lotus Domino: 3, None: 4\r\n\r\nEncryptionType:\r\nNone: 1, SSL: 2, Start TLS: 3\r\n\r\nAuthenticationType:\r\nAnonymous: 1, Basic: 2, Digest: 3, Kerberos: 4, NTLM: 5, GSS-NEGOTIATE: 6\r\n\r\nObjectIdentifierDataType:\r\nString: 0, Binary: 2\r\n\r\nDisabledStatusAttributeType:\r\nFlag Bit Match: 0, Value Exact Match: 1\r\n\r\nUserLdapAttributes(Default attribute mapping will be populated if not specified)\r\n\r\nUserLdapAttributes InternalAttributeID:\r\nObject Identifier: 11, Username: 1, Member Of: 32, Full Name: 20, Display Name: 21, \r\nFirst Name: 2, Middle Name: 3, Last Name: 4, Email Address: 5, Email UserName: 6, \r\nMobile Phone: 22, Phone Number: 7, Distinguished Name: 8, User Principal Name: 9, \r\nDepartment: 24, Status: 10, Lockout time: 23, Object Class: 12, Last Modified: 19, \r\nBinding Attribute: 34, Employee ID: 35, Cost Center: 36, Manager Distinguished Name: 37, \r\nCustom Attribute 1: 25, Custom Attribute 2: 26, Custom Attribute 3: 27, Custom Attribute 4: 28, Custom Attribute 5: 29\r\n\r\nUserLdapAttributes DataType(Only for user custom attributes, Leave blank for other attributes):\r\nString: 0, DateTime: 1\r\n\r\nGroupLdapAttributes(Default attribute mapping will be populated if not specified)\r\n\r\nGroupLdapAttributes InternalAttributeID:\r\nObject Identifier: 13, Name: 14, Member: 15, Common Name: 16, \r\nMember Of: 33, Distinguished Name: 17, Group Object Class: 18, Organizational Unit: 30, \r\nOrganizational Unit Object Class: 31, Last Modified: 51\r\n\r\nGroupLdapAttributes DataType(Leave blank)\r\n\r\nChildPermission:\r\nInherit: 1, Override: 2, Inherit or Override: 3\r\n\r\nGroupMemberSearchType:\r\nUserAttributeMemberOf: 0, GroupAttributeMember: 1\r\n\r\nGroupDirectoryUserSearchType:\r\nDistinguishedName: 0, RelativeDistinguishedName: 1",
        "operationId": "EnterpriseIntegrationV1_ConfigureLDAP",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "description": "Http request message",
            "required": true,
            "type": "object"
          },
          {
            "name": "ldapIntegrationRequest",
            "in": "body",
            "description": "ldap integration model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LdapDefinitionModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/enterpriseintegration/vidm": {
      "post": {
        "tags": [
          "EnterpriseIntegrationV1"
        ],
        "summary": "API to configure vIDM\r\n\r\nVIDMAttributes(Default attribute mapping will be populated if not specified)\r\n\r\nVIDMAttributes InternalAttributeID:\r\nUserName: 1, FirstName: 2, MiddleName: 3, LastName: 4, EmailAddress: 5, EmailUserName: 6, \r\nPrimaryTelephone: 7, DistinguishedName: 8, UserPrincipalName: 9, Status: 10, UserObjectIdentifier: 11, \r\nUserObjectClass: 12, UserLastModified: 19, FullName: 20, DisplayName: 21, MobilePhone: 22, LockoutTime: 23, \r\nDepartment: 24, CustomAttribute1: 25, CustomAttribute2: 26, CustomAttribute3: 27, CustomAttribute4: 28, Custom Attribute 5: 29, \r\nUserMemberOf: 32, UserBindingAttribute: 34, EmployeeIdentifier: 35, CostCenter: 36, ManagerDistinguishedName: 37, Domain: 38",
        "operationId": "EnterpriseIntegrationV1_ConfigureVIDM",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "description": "Http request message",
            "required": true,
            "type": "object"
          },
          {
            "name": "integrationRequest",
            "in": "body",
            "description": "vIDM integration model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VIDMIntegrationModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/eventlog": {
      "get": {
        "tags": [
          "EventLog"
        ],
        "summary": "Retrieves the event log of the device identified by device ID.",
        "description": "v1",
        "operationId": "EventLog_GetEventLogsByDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "severity",
            "in": "query",
            "description": "The event severity. [emergency, alert, critical, error, warning, notice, information, debug]",
            "required": false,
            "type": "string"
          },
          {
            "name": "dayrange",
            "in": "query",
            "description": "The day range.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/eventlog": {
      "get": {
        "tags": [
          "EventLog"
        ],
        "summary": "Retrieves the event log of the device identified by the alternate ID.",
        "description": "v1",
        "operationId": "EventLog_GetEventLogsByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "severity",
            "in": "query",
            "description": "The event severity. [emergency, alert, critical, error, warning, notice, information, debug]",
            "required": false,
            "type": "string"
          },
          {
            "name": "dayrange",
            "in": "query",
            "description": "The day range.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/gateway/sync": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "summary": "Retrieves list of devices that are clients to Airwatch Tunnel.",
        "description": "v1",
        "operationId": "Gateway_GetDeviceSyncDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "query",
            "description": "Udid of the device",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "description": "Bundle ID of client application",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/gateway/configuration": {
      "post": {
        "tags": [
          "Gateway"
        ],
        "summary": "Retrieves the Config XML for both MAG and VPN. Change this to GET when ever it is possible",
        "description": "v1",
        "operationId": "Gateway_GetGatewaySettingsConfiguration",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "encryptionPassword",
            "in": "body",
            "description": "GatewayEncryptionModel for certificate password. Hence a Post. Cannot pass the certificate password as query string.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayEncryptionModel"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "ApplicationType - mag or vpn",
            "required": false,
            "type": "string"
          },
          {
            "name": "locationgroupcode",
            "in": "query",
            "description": "Location group code",
            "required": false,
            "type": "integer"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "Location group id ",
            "required": false,
            "type": "integer"
          },
          {
            "name": "versionid",
            "in": "query",
            "description": "Application version id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/gateway/tunnelsettings": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "summary": "Retrieves the system code settings for Mobile Access Gateway.",
        "description": "v1",
        "operationId": "Gateway_GetTunnelSettings",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/gateway/magsettings": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "summary": "Retrieves the system code settings for Mobile Access Gateway.",
        "operationId": "Gateway_GetMagSettings",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/gateway/adaptiveauthmappedapps": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "summary": "Retrieves the list of applications which have RSA Adaptive Authentication Enabled.",
        "operationId": "Gateway_AdaptiveAuthAppsSync",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/gateway/awtunnel/deployment": {
      "post": {
        "tags": [
          "Gateway"
        ],
        "summary": "New - Creates Tunnel Statistics record.",
        "operationId": "Gateway_CreateTunnelStatistics",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tunnelStatistics",
            "in": "body",
            "description": "The Tunnel Statistics request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TunnelStatisticsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/gps": {
      "get": {
        "tags": [
          "GPS"
        ],
        "summary": "Retrieves the GPS coordinates of the device identified by device ID.",
        "description": "v1",
        "operationId": "GPS_GetGpsCoordinatesByDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dayRange",
            "in": "query",
            "description": "The number of days for which to retrieve GPS coordinates",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/gps": {
      "get": {
        "tags": [
          "GPS"
        ],
        "summary": "Retrieves the GPS coordinates of the device identified by alternate id.",
        "description": "v1",
        "operationId": "GPS_GetGpsCoordinatesByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "dayRange",
            "in": "query",
            "description": "The number of days for which to retrieve GPS coordinates",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "GPS"
        ],
        "summary": "Executes bulk gps coordinates by device and alternate id.",
        "description": "v1",
        "operationId": "GPS_ExecuteBulkGpsCoordinatesByDeviceByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input of containing multiple alternate ids.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber].",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/gps/search": {
      "post": {
        "tags": [
          "GPS"
        ],
        "summary": "Retrieves the GPS coordinates of multiple devices within the specified day range.",
        "description": "v1",
        "operationId": "GPS_BulkGpsCoordinatesSearchByDeviceIdentifiers",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input of containing multiple Device Identifiers.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "searchby",
            "in": "query",
            "description": "Search by Device Identifier types (DeviceId, MacAddress, Udid, SerialNumber, and ImeiNumber).",
            "required": false,
            "type": "string"
          },
          {
            "name": "startdatetime",
            "in": "query",
            "description": "Start Date time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "enddatetime",
            "in": "query",
            "description": "End Date time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "daterange",
            "in": "query",
            "description": "Number of days in which range device location details needs to be returned.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/gps/status": {
      "get": {
        "tags": [
          "GPS"
        ],
        "summary": "Gets Device GPS and LocationService status, when PrivacySetting for the Device Enrolled Location Group allows to collect GPS data.",
        "operationId": "GPS_GpsAndLocationServicestatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device for which GPS status is retrived",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/help/controllers": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "Get the list of Api controllers",
        "operationId": "Help_GetControllers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/help/endpoints/{endpointId}": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "Gets the details about an endpoint",
        "operationId": "Help_GetEndPointById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "Example:\"GET-activesync-ping\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/help/controllers/{id}": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "Gets the controller endpoints",
        "operationId": "Help_GetControllerById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "controller name",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/help/controllers/endpoints/index": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "Retrieve the index form for endpoints to be used for searching",
        "operationId": "Help_GetEndpointIndex",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/education/memberassignment": {
      "post": {
        "tags": [
          "MemberAssignment"
        ],
        "summary": "Maps a roster person to enrollment user",
        "operationId": "MemberAssignment_SavePersonEnrollmentUserMap",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "personEnrollmentUser",
            "in": "body",
            "description": "Mapping details for roster person and enrollment user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PersonEnrollmentUser"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/messages/push": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends a push message to the device identified by device ID.",
        "description": "v1",
        "operationId": "Messages_SendPush",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pushMessage",
            "in": "body",
            "description": "The message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/messages/email": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends an email to the user of the device identified by device ID.",
        "description": "v1",
        "operationId": "Messages_SendEmail",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "email",
            "in": "body",
            "description": "The email to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/messages/sms": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends an SMS to the device identified by device ID.",
        "description": "v1",
        "operationId": "Messages_SendSms",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sms",
            "in": "body",
            "description": "The SMS message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sms"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/messages/push": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends a push message to the device identified by alternate id.",
        "description": "v1",
        "operationId": "Messages_SendPushByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "pushMessage",
            "in": "body",
            "description": "The message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushMessage"
            }
          },
          {
            "name": "searchby",
            "in": "query",
            "description": "The alternate id type [DeviceId, Macaddress, Udid, Serialnumber, ImeiNumber].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/messages/email": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends an email to the user of the device identified by alternate id.",
        "description": "v1",
        "operationId": "Messages_SendEmailByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "The email to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          {
            "name": "searchby",
            "in": "query",
            "description": "The alternate id type [DeviceId, Macaddress, Udid, Serialnumber, ImeiNumber].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/messages/sms": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends an SMS to the device identified by alternate id.",
        "description": "v1",
        "operationId": "Messages_SendSmsByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "sms",
            "in": "body",
            "description": "The SMS message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sms"
            }
          },
          {
            "name": "searchby",
            "in": "query",
            "description": "The alternate id type [DeviceId, Macaddress, Udid, Serialnumber, ImeiNumber].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/messages/bulkpush": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends a push message to multiple devices identified by alternate ID.",
        "description": "v1",
        "operationId": "Messages_SendBulkPushByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "pushNotificationMessage",
            "in": "body",
            "description": "An object containing the message to send and multiple device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushNotificationMessage"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [DeviceId, Macaddress, Udid, Serialnumber, ImeiNumber].",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/messages/bulkemail": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends an email to the users of multiple devices identified by ID.",
        "description": "v1",
        "operationId": "Messages_SendBulkEmailByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "emailMessage",
            "in": "body",
            "description": "An object containing the message to send and multiple device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailMessage"
            }
          },
          {
            "name": "searchby",
            "in": "query",
            "description": "The alternate id type [DeviceId, Macaddress, Udid, Serialnumber, ImeiNumber].",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/messages/{id}/message": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends a push notification to the device identified by device ID. If not enrolled, sends an SMS message instead.",
        "description": "v1",
        "operationId": "Messages_SendMessage",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The alternate id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "genericMessage",
            "in": "body",
            "description": "The message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericMessage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/messages/message": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends a push notification to the device identified by alternate ID. If not enrolled, sends an SMS message instead.",
        "description": "v1",
        "operationId": "Messages_SendMessageByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "genericMessage",
            "in": "body",
            "description": "The message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericMessage"
            }
          },
          {
            "name": "searchby",
            "in": "query",
            "description": "The alternate id type [DeviceId, Macaddress, Udid, Serialnumber].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/messages/bulksms": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends an SMS to multiple devices identified by alternate ID.",
        "description": "v1",
        "operationId": "Messages_SendBulkMessageSmsByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "smsMessage",
            "in": "body",
            "description": "An array containing the message and phone number, and multiple device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmsMessage"
            }
          },
          {
            "name": "searchby",
            "in": "query",
            "description": "The alternate id type [DeviceId, Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/network": {
      "get": {
        "tags": [
          "Network"
        ],
        "summary": "Retrieves the network information of the device identified by device ID.",
        "description": "v1",
        "operationId": "Network_GetNetworkInfoByDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/network": {
      "get": {
        "tags": [
          "Network"
        ],
        "summary": "Retrieves the network information of the device identified by the alternate ID.",
        "description": "v1",
        "operationId": "Network_GetNetworkInfoByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/networkinfosearch": {
      "get": {
        "tags": [
          "Network"
        ],
        "summary": "Return Device network information along with corresponding Device ID.",
        "description": "v1",
        "operationId": "Network_NetworkInfoSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "description": "Enrolled username.",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Device model.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Device platform.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastseen",
            "in": "query",
            "description": "Last seen date string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownership",
            "in": "query",
            "description": "Ownership.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lgid",
            "in": "query",
            "description": "LocationGroup to be searched, user's LG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "compliantstatus",
            "in": "query",
            "description": "Complaint status.",
            "required": false,
            "type": "string"
          },
          {
            "name": "seensince",
            "in": "query",
            "description": "Specifies the date filter for device search, which retrieves the devices that are seen after this date",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Values ASC or DESC. Defaults to ASC.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/notes": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieves the notes for the device identified by device ID.",
        "description": "v1",
        "operationId": "Notes_GetNotesByDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{deviceId}/notes/{noteId}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieves a particular note for the device identified by device ID.",
        "description": "v1",
        "operationId": "Notes_GetDeviceNote",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Notes"
        ],
        "summary": "Updates a note for the device identified by device ID.",
        "description": "v1",
        "operationId": "Notes_UpdateNotes",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceNotes",
            "in": "body",
            "description": "Resource containing the note details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNotes"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Deletes a note for the device identified by device ID.",
        "description": "v1",
        "operationId": "Notes_DeleteNote",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{deviceId}/notes": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Creates a note for the device identified by device ID.",
        "description": "v1",
        "operationId": "Notes_CreateNotes",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceNotes",
            "in": "body",
            "description": "The DeviceNotes resource to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNotes"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/notes": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieves the notes for the device identified by alternate id.",
        "description": "v1",
        "operationId": "Notes_GetDeviceNotesByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Creates a note for the device identified by alternate id.",
        "description": "v1",
        "operationId": "Notes_CreateNotesByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceNotes",
            "in": "body",
            "description": "The DeviceNotes resource to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNotes"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/notes/{noteId}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieves a particular note for the device identified by alternate id.",
        "description": "v1",
        "operationId": "Notes_GetDeviceNoteByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Notes"
        ],
        "summary": "Updates a note for the device identified by alternate id.",
        "description": "v1",
        "operationId": "Notes_UpdateNotesByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceNotes",
            "in": "body",
            "description": "Resource containing the note details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNotes"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Deletes a note for the device identified by alternate id.",
        "description": "v1",
        "operationId": "Notes_DeleteNoteByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "noteId",
            "in": "path",
            "description": "The note ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/peripherals/printer/{deviceID}": {
      "get": {
        "tags": [
          "Peripherals"
        ],
        "summary": "Gets the printer by identifier.",
        "operationId": "Peripherals_GetPrinterById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/peripherals/printers/{locationGroupID}": {
      "get": {
        "tags": [
          "Peripherals"
        ],
        "summary": "Gets the printer by location group identifier.",
        "operationId": "Peripherals_GetPrinterByLocationGroupID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "locationGroupID",
            "in": "path",
            "description": "The location group identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/peripherals/service": {
      "post": {
        "tags": [
          "Peripherals"
        ],
        "summary": "Creates the print server.",
        "operationId": "Peripherals_CreatePrintServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "printServer",
            "in": "body",
            "description": "The print server.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrintServerInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Peripherals"
        ],
        "summary": "Registers the print server.",
        "operationId": "Peripherals_RegisterPrintServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "printServer",
            "in": "body",
            "description": "The print server.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterPrintServerInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/peripherals/printer": {
      "post": {
        "tags": [
          "Peripherals"
        ],
        "summary": "Enrolls the printer.",
        "operationId": "Peripherals_EnrollPrinter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "printerDevice",
            "in": "body",
            "description": "The printer device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnrollPrintServerInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/devicecategories": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Device Category List",
        "description": "v1",
        "operationId": "PickLists_GetDeviceCategoryList",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/devicetypes": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Device Type List",
        "description": "v1",
        "operationId": "PickLists_GetDeviceTypeList",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/platforms/{platform}/operatingsystems": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets the list of Operating Systems for the specified paltform",
        "description": "v1",
        "operationId": "PickLists_GetOperatingSystemList",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "description": "Platform",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/ownershiptypes": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Ownership Type List",
        "description": "v1",
        "operationId": "PickLists_GetOwnershipTypeList",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/platforms/{platform}/devicemodels": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Device Model List by Platform",
        "description": "v1",
        "operationId": "PickLists_GetDeviceModelList",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "description": "Platform",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/organizationgroups/{ogid}/certificateauthorities": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Certificate Authority List by OgId",
        "description": "v1",
        "operationId": "PickLists_GetCertificateAuthorityList",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogid",
            "in": "path",
            "description": "OgId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/platforms/{platform}/vpntypes": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Vpn Types by Platform",
        "description": "v1",
        "operationId": "PickLists_GetVpnType",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "description": "Platform",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/organizationgroups/{ogid}/certificateauthorities/{certificateAuthorityId}/certificatetemplates": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Certificate Templates List for Certificate Authority",
        "description": "v1",
        "operationId": "PickLists_GetCertificateTemplatesListForCertificateAuthority",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogid",
            "in": "path",
            "description": "Og Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "certificateAuthorityId",
            "in": "path",
            "description": "Certificate Authority Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/organizationgroups/{ogid}/timefencingschedules": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Allowed Time Fencing Schedules by Og Id",
        "description": "v1",
        "operationId": "PickLists_GetAllowedTimeFencingScheduleIdsByLg",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogid",
            "in": "path",
            "description": "Og Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/organizationgroups/{ogid}/geofencingareas": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Geo Fencing Areas by Og Id",
        "description": "v1",
        "operationId": "PickLists_GetAllowedGeoFencingAreaIdsByLg",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogid",
            "in": "path",
            "description": "Og Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidpasscodecontent": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Passcode Content for Android",
        "description": "v1",
        "operationId": "PickLists_GetPasscodeContentForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidgraceperiodforpasscodechange": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Android Grace Period for Passcode change",
        "description": "v1",
        "operationId": "PickLists_GetGracePeriodForPasscodeChangeForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidemailsyncintervals": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets E-Mail Sync Intervals for android",
        "description": "v1",
        "operationId": "PickLists_GetEmailSyncIntervalForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidmaxmailstoshow": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Maximum E-mails to show for Android",
        "description": "v1",
        "operationId": "PickLists_GetMaxMailsToShowForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidincomingmailserverprotocol": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Incomming Mail Server Protocol for android",
        "description": "v1",
        "operationId": "PickLists_GetIncomingMailServerProtocolForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidoutgoingmailserverprotocol": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Outgoing Mail Server Protocol for android",
        "description": "v1",
        "operationId": "PickLists_GetOutgoingMailServerProtocolForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidrestrictiondataconnection": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Restriction Data Connection for Android",
        "description": "v1",
        "operationId": "PickLists_GetRestrictionDataconnectionForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidminwifisecurity": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Minimum Wifi Security for Android",
        "description": "v1",
        "operationId": "PickLists_GetMinWifiSecurityForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidfontsize": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Font Size for Android",
        "description": "v1",
        "operationId": "PickLists_GetFontSizeForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidwifisecuritytype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Security Type for Android Wifi",
        "description": "v1",
        "operationId": "PickLists_GetSecurityTypeForAndroidWifi",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidwifisfatype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets sfa Type for Androie Wifi",
        "description": "v1",
        "operationId": "PickLists_GetSfaTypeForAndroidWifi",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidwifitfatype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Tfa Type for Android Wifi",
        "description": "v1",
        "operationId": "PickLists_GetTfaTypeForAndroidWifi",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideasmailclient": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Mail Client for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasMailClientForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideaspastdaysofmailtosync": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas past days of mail to sync for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasPastDaysOfMailToSyncForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideassyncinterval": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Sync Interval for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasSyncIntervalForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideaspastdaysofcalendartosync": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas past days of calendar to sync for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasPastDaysOfCalendarToSyncForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideasauthenticationtype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Authentication Type for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasAuthenticationTypeForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideaspasscodecomplexity": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Passcode Complexity for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasPasscodeComplexityForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideasminimumpasscodelength": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Minimum Passcode length for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasMinimumPasscodeLengthForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideasmaximumpasscodeage": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Maximum Passcode Age for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasMaximumPasscodeAgeForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideasautolock": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Auto Lock for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasAutoLockForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideasrestrictiontype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Restriction Type for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasRestrictionTypeForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideaspeaktime": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Peak Time for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasPeakTimeForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideassyncschedule": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Sync Schedule for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasSyncScheduleForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideascontactsapplication": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Contacts Application for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasContactsApplicationForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androideascalendarapplication": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Calendar Application for Android",
        "description": "v1",
        "operationId": "PickLists_GetEasCalendarApplicationForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidvpnikeidtype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Vpn IKE ID Type for Android",
        "description": "v1",
        "operationId": "PickLists_GetVpnIkeIdTypeForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidcredentialsource": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Credential Source for Android",
        "description": "v1",
        "operationId": "PickLists_GetCredentialSourceForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/androidsmimecertificatetype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets SMIME certificate type for Android",
        "description": "v1",
        "operationId": "PickLists_GetSmimeCertificateTypeForAndroid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/applepasscodeautolock": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Passcode auto lock for Apple",
        "description": "v1",
        "operationId": "PickLists_GetPasscodeAutoLockForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/applepasscodegraceperiod": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Passcode Grace Period for Apple",
        "description": "v1",
        "operationId": "PickLists_GetPasscodeGracePeriodForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/applesafariacceptcookies": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Safari Accept Cookies for Apple",
        "description": "v1",
        "operationId": "PickLists_GetSafariAcceptCookiesForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleratingregion": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Rating Region for apple",
        "description": "v1",
        "operationId": "PickLists_GetRatingRegionForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleratingmovies": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Rating Movies for Apple",
        "description": "v1",
        "operationId": "PickLists_GetRatingMoviesForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleratingtvshows": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Rating Tv Shows for Apple",
        "description": "v1",
        "operationId": "PickLists_GetRatingTvShowsForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleratingapps": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Rating Apps for Apple",
        "description": "v1",
        "operationId": "PickLists_GetRatingAppsForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleemailaccounttype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Email Account Type for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEmailAccountTypeForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleincomingmailserverauthentication": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Incoming Mail Server Authentication for Apple",
        "description": "v1",
        "operationId": "PickLists_GetIncomingMailServerAuthenticationForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleoutgoingmailserverauthentication": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Outgoing Mail Server Authentication for Apple",
        "description": "v1",
        "operationId": "PickLists_GetOutgoingMailServerAuthenticationForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/applevpnauthenticationmethod": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Vpn Authentication Method for Apple",
        "description": "v1",
        "operationId": "PickLists_GetVpnAuthenticationMethodForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleproxytype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Proxy Type for Apple",
        "description": "v1",
        "operationId": "PickLists_GetProxyTypeForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleuserauthenticationtype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets User Authentication Type for Apple",
        "description": "v1",
        "operationId": "PickLists_GetUserAuthenticationTypeForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/applemachineauthentication": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Machine Authentication for Apple",
        "description": "v1",
        "operationId": "PickLists_GetMachineAuthenticationForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleencryptionlevel": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Vpn Encryption Level for Apple",
        "description": "v1",
        "operationId": "PickLists_GetVpnEncryptionLevelForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/applewifisecuritytype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Wifi Security Type for Apple",
        "description": "v1",
        "operationId": "PickLists_GetWifiSecurityTypeForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/applewifiproxytype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Wifi Proxy Type for Apple",
        "description": "v1",
        "operationId": "PickLists_GetWifiProxyTypeForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/applewifiinneridentity": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Inner Identity for Apple",
        "description": "v1",
        "operationId": "PickLists_GetInnerIdentityForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleeaspastdaysofmailtosync": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Eas Past Days of Mail to Sync for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEasPastDaysOfMailToSyncForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleeasawemailclientsyncinterval": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets EAS AW Email Client Sync Interval for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEasAwEmailClientSyncIntervalForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleeasawemailclientemailnotifications": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets EAS AW Email Client Email Notifications for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEasAwEmailClientEmailNotificationsForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleeasawemailclientpastdaysofmailtosync": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets EAS AW Email Client Past Days of Mail to Sync for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEasAwEmailClientPastDaysOfMailToSyncForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleeasawemailclientpastdaysofcalendartosync": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets EAS AW Email Client Past Days of Calendar to Sync for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEasAwEmailClientPastDaysOfCalendarToSyncForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleeasawemailclientpasscodetype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets EAS AW Email Client Passcode Type for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEasAwEmailClientPasscodeTypeForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleeasawemailclientcomplexity": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets EAS AW Email Client Complexity for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEasAwEmailClientComplexityForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleeasawemailclienthistory": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets EAS AW Email Client History for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEasAwEmailClientHistoryForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleeasawemailclientmaximumfailedattempts": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets EAS AW Email Cleint Maximum Failed Attempts for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEasAwEmailClientMaxNumberOfFailedAttemptsForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleeasnitrodesktouchdownpastdaysofmailtosync": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets EAS Nitro Desk Touch Down Past Days of Mails to Sync for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEasNitroDeskTouchDownPastDaysOfMailToSyncForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleeasnitrodesktouchdownpastdaysofcalendartosync": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets EAS Nitro Desk Touch Down Past Days of Calendar to Sync for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEasNitroDeskTouchDownPastDaysOfCalendarToSyncForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleeasnitrodesktouchdownauthenticationtype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets EAS Nitro Desk Touch Down Authentication Type for Apple",
        "description": "v1",
        "operationId": "PickLists_GetEasNitroDeskTouchDownAuthenticationTypeForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/applecredentialsource": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Credential Source for Apple",
        "description": "v1",
        "operationId": "PickLists_GetCredentialSourceForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/applecredentialsmime": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Credential Smime for Apple",
        "description": "v1",
        "operationId": "PickLists_GetCredentialSmimeForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/applescepcredentialsource": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Scep Credential Source for Apple",
        "description": "v1",
        "operationId": "PickLists_GetScepCredentialSourceForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appletouchdowncredentialsource": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Touch Down Credential Source for Apple",
        "description": "v1",
        "operationId": "PickLists_GetTouchDownCredentialSourceForApple",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxpasscodeautolock": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Passcode Auto Lock for AppleOsX",
        "description": "v1",
        "operationId": "PickLists_GetPasscodeAutoLockForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxvpnencryptionlevel": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns valid Encryption Levels for AppleOsx platform.",
        "description": "v1",
        "operationId": "PickLists_GetVpnEncryptionLevelForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxvpnuserauthentication/{vpnType}": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Valid UserAuthentication for the specified VpnType.",
        "description": "v1",
        "operationId": "PickLists_GetVpnUserAuthenticationForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "vpnType",
            "in": "path",
            "description": "Vpn Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxvpnmachineauthentication": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Valid MachineAuthentication For AppleOsX Platform.",
        "description": "v1",
        "operationId": "PickLists_GetVpnMachineAuthenticationForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxvpnondemandtypes": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns VPN OnDemandTypes for AppleOsX platform.",
        "description": "v1",
        "operationId": "PickLists_GetVpnOnDemandTypeForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxvpnproxy": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns VPN proxy types for AppleOsX Platform",
        "description": "v1",
        "operationId": "PickLists_GetVpnProxyForAppleOsXPlatform",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxcredentialsource": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns valid CredentialSorces for AppleOsX platform.",
        "description": "v1",
        "operationId": "PickLists_GetCredentialSourceForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxscepcredentialsource": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns valid Scep CredentialSorces for AppleOsX platform.",
        "description": "v1",
        "operationId": "PickLists_GetScepCredentialSourceForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxemailaccounttype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns valid Email Account types for AppleOsX Platform.",
        "description": "v1",
        "operationId": "PickLists_GetEmailAccountTypeForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxemailauthenticationtype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns valid Email Authentication Types for AppleOsX Platform",
        "description": "v1",
        "operationId": "PickLists_GetEmailAuthenticationTypeForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxrestrictionallowedapplications": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns List of Allowed applications for AppleOsX Platform.",
        "description": "v1",
        "operationId": "PickLists_GetRestrictionAllowedApplicationsForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxrestrictionallowedwidgets": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns List of Allowed widgets for AppleOsX Platform.",
        "description": "v1",
        "operationId": "PickLists_GetRestrictionAllowedWidgetsForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxnetworkinterface": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Valid Network Interfaces for AppleOsX Platform.",
        "description": "v1",
        "operationId": "PickLists_GetNetworkInterfaceForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxnetworksecuritytype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Valid Security Types for AppleOsX Platform.",
        "description": "v1",
        "operationId": "PickLists_GetNetworkSecurityTypeForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxnetworkinneridentity": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Valid Inner Identity for AppleOsX Platform.",
        "description": "v1",
        "operationId": "PickLists_GetNetworkInnerIdentityForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/appleosxnetworkproxytype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Valid ProxyTypes for AppleOsX Platform.",
        "description": "v1",
        "operationId": "PickLists_GetNetworkProxyTypesForAppleOsX",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowspcwificonnectiontype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Valid Wifi Connection Types for Windows PC platform.",
        "description": "v1",
        "operationId": "PickLists_GetWifiConnectionTypeForWindowsPc",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowspcwificonnectionmode": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Valid Wifi Connection Modes for Windows PC platform.",
        "description": "v1",
        "operationId": "PickLists_GetWifiConnectionModeForWindowsPc",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowspcwifisecuritytype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Valid Wifi Security Types for Windows PC platform.",
        "description": "v1",
        "operationId": "PickLists_GetWifiSecurityTypeForWindowsPc",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowspcwifiencryptiontype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Valid Wifi Encryption Types for Windows PC platform.",
        "description": "v1",
        "operationId": "PickLists_GetWifiEncryptionForWindowsPc",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowspccredentialsource": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Crdential Source for Windows PC platform.",
        "description": "v1",
        "operationId": "PickLists_GetCredentialSourceForWindowsPc",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowspccredentialstorelocation": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Crdential Store Location for Windows PC platform.",
        "description": "v1",
        "operationId": "PickLists_GetCredentialStoreLocationForWindowsPc",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowspccredentialcertificatestore": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Crdential Certificate Store for Windows PC platform.",
        "description": "v1",
        "operationId": "PickLists_GetCredentialCertificateStoreForWindowsPc",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowspcencryptedvolume": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Encrypted volume for Windows PC platform.",
        "description": "v1",
        "operationId": "PickLists_GetEncryptedVolumeForWindowsPc",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowspcupdatesource": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Windows Update Source for Windows PC platform.",
        "description": "v1",
        "operationId": "PickLists_GetWindowsUpdateSourceForWindowsPc",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowspcimportantupdates": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Important Updates for Windows PC platform.",
        "description": "v1",
        "operationId": "PickLists_GetImportantUpdatesForWindowsPc",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/winrtrestrictionlocationoptions": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Valid Restrictions Location Options for WinRT platform.",
        "operationId": "PickLists_GetRestrictionsLocationOptionsForWinRt",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/winrtrestrictionuseraccountcontrolsettingoptions": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Returns Valid Restrictions UserAccountControlSetting Options for WinRT platform.",
        "operationId": "PickLists_GetRestrictionsUserAccountControlSettingOptionsForWinRt",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowsmobilecredentialsource": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Credential Source for WindowsMobile",
        "description": "v1",
        "operationId": "PickLists_GetCredentialSourceForWindowsMobile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowsmobilecertificatestore": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Certificate Store for WindowsMobile",
        "description": "v1",
        "operationId": "PickLists_GetCertificateStoreForWindowsMobile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/windowsmobilewifisecuritytype": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Security Type for Windows Mobile Wifi",
        "description": "v1",
        "operationId": "PickLists_GetSecurityTypeForWindowsMobileWifi",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/picklists/platforms/{platform}/getoperatingsystems": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets the list of Operating Systems for the specified paltform",
        "description": "v1",
        "operationId": "PickLists_GetOperatingSystems",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "description": "Platform",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/picklists/platforms/{platform}/getdevicemodels": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Device Model List by Platform",
        "description": "v1",
        "operationId": "PickLists_GetDeviceModels",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "description": "Platform",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/picklists/organizationGroups/{ogId}/getcertificateauthorities": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Certificate Authority List by OgId",
        "description": "v1",
        "operationId": "PickLists_GetCertificateAuthorities",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogId",
            "in": "path",
            "description": "OgId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/picklists/platforms/{platform}/getvpntypes": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Vpn Types by Platform",
        "description": "v1",
        "operationId": "PickLists_GetVpnTypeList",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "description": "Platform",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/picklists/organizationgroups/{ogId}/certificateauthorities/{certificateAuthorityId}/getcertificatetemplates": {
      "get": {
        "tags": [
          "PickLists"
        ],
        "summary": "Gets Certificate Templates List for Certificate Authority",
        "description": "v1",
        "operationId": "PickLists_GetCertificateTemplatesForCertificateAuthority",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogId",
            "in": "path",
            "description": "Og Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "certificateAuthorityId",
            "in": "path",
            "description": "Certificate Authority Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Get",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Put",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Post",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Delete",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "head": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Head",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Patch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/cached": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetCached",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/concurrency": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetRequestQueryValue",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/cached/query": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetPagedResultFromCache",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/enrollmentuser": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_TestEnrollmentUserRoleType",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-group-id",
            "in": "header",
            "description": "Group ID",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/adminuser": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_TestAdminUserRoleType",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/internal": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_TestInternal",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/emptymodel": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetEmptyModel",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/resources": {
      "put": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_PutToReturnModel",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_SetLocationHeader",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_PatchToReturnModel",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/content": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetContent",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/policies": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Save policies for Blueprint",
        "operationId": "Policies_SavePolicies",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "profilePoliciesEntity",
            "in": "body",
            "description": "Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfilePoliciesEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/policyengine/devices/{deviceId}": {
      "put": {
        "tags": [
          "PolicyEngineV1"
        ],
        "summary": "New - process all the applicable products for a device",
        "description": "It processes all the applicable products for an input device. Performs necessary checks and updates device product compliance status, views inventory and creates content for the device. Also, updates job statistics.",
        "operationId": "PolicyEngineV1_ProcessDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "device id that needs to be processed by Policy Engine(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "fastTrack",
            "in": "query",
            "description": "fast track flag is to prioritize tasks like install application and intall file actions over other tasks",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "1. {5002 : Device not found for specified id: deviceId}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          },
          "422": {
            "description": "1012 - Unprocessable Entity1. {fastTrack : fastTrack should be boolean}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      }
    },
    "/policyengine/products/{productId}/devices/{deviceId}": {
      "get": {
        "tags": [
          "PolicyEngineV1"
        ],
        "summary": "New - gets the device product compliance status",
        "description": "It returns the device product compliance status e.g. (Unknown, Compliant, NonCompliantInProgress, NonCompliantFailed, NonCompliantTimedOut, NonCompliantMustPush, NonCompliantDependent, NonCompliantOutRank, UndeterminedOffline)",
        "operationId": "PolicyEngineV1_GetDeviceProductComplianceStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "product id whose status needs to be returned(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "device id whose status needs to be returned(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceProductComplianceStatusV1Model"
            }
          },
          "404": {
            "description": "1. {5050 : Product not found for specified id: productId}2. {5002 : Device not found for specified id: deviceId}3. {5051 : Compliance Status not found for productId: {productId} and deviceId: {deviceId}}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PolicyEngineV1"
        ],
        "summary": "New - process a product for a device",
        "description": "It processes a product for an input device. Performs necessary checks and updates device product compliance status, views inventory and creates content for the device. Also, updates job statistics.",
        "operationId": "PolicyEngineV1_ProcessDeviceProduct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "product id that needs to be processed by Policy Engine(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "device id that needs to be processed by Policy Engine(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "fastTrack",
            "in": "query",
            "description": "fast track flag is to prioritize tasks like install application and intall file actions over other tasks",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DeviceProductResponseV1Model"
            }
          },
          "404": {
            "description": "1. {5050 : Product not found for specified id: productId}2. {5002 : Device not found for specified id: deviceId}3. {5051 : Compliance Status not found for productId: {productId} and deviceId: {deviceId}}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          },
          "422": {
            "description": "1012 - Unprocessable Entity1. {fastTrack : fastTrack should be boolean}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      }
    },
    "/policyengine/products/{productId}": {
      "patch": {
        "tags": [
          "PolicyEngineV1"
        ],
        "summary": "New - process a product to activate/deactivate for all the applicable devices",
        "description": "For activate, It processes the input product for all the devices in assigned smart groups. It also updates device product compliance status and job statistics. For deactivate, It updates the queued jobs of the input product and mark them for deletion. Also, gets the list of delivered jobs for the input product and updates device product job status to be cancelled.",
        "operationId": "PolicyEngineV1_ProcessProduct",
        "consumes": [
          "application/json",
          "application/json-patch+json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "product id that needs to be processed by Policy Engine(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "patchModel",
            "in": "body",
            "description": "product model for payload(Required)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchDocument[ProductsPatchV1Model]"
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "force flag for activate product to decide whether to force reprocess device product job or not",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fastTrack",
            "in": "query",
            "description": "fast track flag is to prioritize tasks like install application and intall file actions over other tasks",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "1. {5050 : Product not found for specified id: productId}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          },
          "422": {
            "description": "1012 - Unprocessable Entity1. {force : force should be boolean}2. {fastTrack : fastTrack should be boolean}3. {operations : only replace is supported}4. {status : status should be boolean}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      }
    },
    "/policyengine/productset/{productSetId}/devices/{deviceId}": {
      "put": {
        "tags": [
          "PolicyEngineV1"
        ],
        "summary": "New - process a device for a product Set",
        "description": "It processes a product set for an input device. Performs necessary checks and updates device product compliance status, views inventory and creates content for the device. Also, updates job statistics.",
        "operationId": "PolicyEngineV1_ProcessDeviceProductSet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "productSetId",
            "in": "path",
            "description": "product set id that needs to be processed by Policy Engine(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "device id that needs to be processed by Policy Engine(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "fastTrack",
            "in": "query",
            "description": "fast track flag is to prioritize tasks like install application and intall file actions over other tasks",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "1. {5051 : ProductSet not found for specified id: productSetId}2. {5002 : Device not found for specified id: deviceId}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          },
          "422": {
            "description": "1012 - Unprocessable Entity1. {fastTrack : fastTrack should be boolean}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      }
    },
    "/policyengine/productset/{productSetId}": {
      "put": {
        "tags": [
          "PolicyEngineV1"
        ],
        "summary": "New - process a product set for all the applicable devices",
        "description": "It processes the input product set for all the devices in assigned smart groups. It also updates device product compliance status and job statistics.",
        "operationId": "PolicyEngineV1_ProcessProductSet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "productSetId",
            "in": "path",
            "description": "product set id that needs to be processed by Policy Engine(Required)",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "description": "force flag for activate product set to decide whether to force reprocess device product job or not",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fastTrack",
            "in": "query",
            "description": "fast track flag is to prioritize tasks like install application and intall file actions over other tasks",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "1. {5051 : ProductSet not found for specified id: productSetId}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          },
          "422": {
            "description": "1012 - Unprocessable Entity1. {force: force should be boolean}2. {fastTrack : fastTrack should be boolean}",
            "schema": {
              "$ref": "#/definitions/BaseExceptionModel"
            }
          }
        }
      }
    },
    "/privacy/{groupId}/{ownership}": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "Loads the privacy details of the device located at location group and have ownership.\r\nThe details are based upon the privacy settings at the location group",
        "operationId": "Privacy_GetPrivacyDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The group where the privacy settings should be retrieved from",
            "required": true,
            "type": "string"
          },
          {
            "name": "ownership",
            "in": "path",
            "description": "The ownership of the device for which the privacy settings should be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/privacy/{deviceIdentifier}": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "Retrieves the privacy details of the device given the device Udid.\r\nThe details are based upon the privacy settings at the location group where the device is enrolled",
        "operationId": "Privacy_GetPrivacyDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceIdentifier",
            "in": "path",
            "description": "The device identifier available after enrollment",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/fileactionretrieve": {
      "get": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Get specified Product file actions.",
        "description": "v1",
        "operationId": "ProductComponentsV1_RetrieveFileActionByName",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization group id which is similar to selected organization group selected in console.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform Name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/filesactionssearch": {
      "get": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Searches for the Files/Actions with the search parameters passed",
        "description": "v1",
        "operationId": "ProductComponentsV1_SearchFilesActions",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization group id which is similar to selected organization group selected in console.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform Name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastmodifiedon",
            "in": "query",
            "description": "DateTime, Filters the result where Files/Actions modified date is greater than or equal to lastmodifiedon value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "lastmodifiedtill",
            "in": "query",
            "description": "DateTime, Filters the result where Files/Actions modified date is lesser than or equal to lastmodifiedtill value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/timeconditionsearch": {
      "get": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Searchs for TimeConditions with the specified parameters.",
        "description": "v1",
        "operationId": "ProductComponentsV1_TimeConditionSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization group id which is similar to selected organization group selected in console.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "DateTime, Filters the result where TimeCondition modified date is greater than or equal to starttime value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "DateTime, Filters the result where TimeCondition modified date is lesser than or equal to endtime value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/fileconditionsearch": {
      "get": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Searchs for FileConditions with the specified parameters.",
        "description": "v1",
        "operationId": "ProductComponentsV1_FileConditionSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization group id which is similar to selected organization group selected in console.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "DateTime, Filters the result where FileCondition modified date is greater than or equal to starttime value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "DateTime, Filters the result where FileCondition modified date is lesser than or equal to endtime value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/conditionsearch": {
      "get": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Returns available conditions for the specified platform.",
        "description": "v1",
        "operationId": "ProductComponentsV1_ConditionSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization group id which is similar to selected organization group selected in console.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/timesconditions": {
      "get": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Get specified Product time conditions.",
        "description": "v1",
        "operationId": "ProductComponentsV1_GetTimeConditionByProductId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Product.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/condition": {
      "delete": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Delete productprovisioning condition",
        "description": "v1",
        "operationId": "ProductComponentsV1_DeleteCondition",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization group id which is similar to selected organization group selected in console.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Condition ID",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/fileactions": {
      "get": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Get specified Product file actions.",
        "description": "v1",
        "operationId": "ProductComponentsV1_GetFileActionsByProductId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Product.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/profiles": {
      "get": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Returns the list of Profiles which are assigned to the passed ProductId.",
        "description": "v1",
        "operationId": "ProductComponentsV1_GetProfileByProductId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Product.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/productdownloadandinstallstatistics": {
      "get": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Retrieves the product installation and download statistics",
        "description": "v1",
        "operationId": "ProductComponentsV1_RetrieveProductDownloadAndInstallStatistics",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization group identifier.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "DateTime, Filters the result where Product's Last modified date on device is greater than or equal to starttime value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "DateTime, Filters the result where Product's Last modified date on device is lesser than or equal to endtime value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Maximum results which should be returned in each page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/maintainFileAction": {
      "post": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Creates  or updates a file action",
        "description": "v1",
        "operationId": "ProductComponentsV1_MaintainFileAction",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "maintainFileActionInput",
            "in": "body",
            "description": "XML representing file action and location group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaintainFileActionInputEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/fileaction/{id}": {
      "delete": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Delete Device details by Device ID",
        "description": "v1",
        "operationId": "ProductComponentsV1_DeleteFileAction",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device ID of the Device",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/maintainCondition": {
      "post": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Creates  or updates a condition",
        "description": "v1",
        "operationId": "ProductComponentsV1_MaintainCondition",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "maintainConditionInputEntity",
            "in": "body",
            "description": "Object representing Condition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaintainConditionInputEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/provisioningqueuecounts": {
      "get": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Report back information pertaining to the policy engine",
        "description": "v1",
        "operationId": "ProductComponentsV1_ProvisioningQueueCounts",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "location group ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/DevicesProcessedPE": {
      "get": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Report back device counts pertaining to the policy engine",
        "description": "v1",
        "operationId": "ProductComponentsV1_DevicesProcessedPe",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "location group ID.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startdate",
            "in": "query",
            "description": "start datetime.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "enddate",
            "in": "query",
            "description": "end datetime.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/maintainEventAction": {
      "post": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Create or update an Event/Action",
        "description": "v1",
        "operationId": "ProductComponentsV1_MaintainEventAction",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "maintainEventActionInput",
            "in": "body",
            "description": "XML representing event/action and location group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaintainEventActionInputEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/eventactionslist": {
      "get": {
        "tags": [
          "ProductComponentsV1"
        ],
        "summary": "Searches for the Event Actions with the search parameters passed",
        "description": "v1",
        "operationId": "ProductComponentsV1_EventActionsList",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization group id which is similar to selected organization group selected in console.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/productfiles/importProductZip": {
      "post": {
        "tags": [
          "ProductFiles"
        ],
        "summary": "Creates a product at the specified OG using the data provided in the request.",
        "operationId": "ProductFiles_ImportProductZip",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "query",
            "description": "The name of the file being uploaded.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The id of the organization group where the product needs to be created.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/productfiles/exportProductZip": {
      "get": {
        "tags": [
          "ProductFiles"
        ],
        "summary": "Exports a product at the specified OG using the data provided in the request.",
        "operationId": "ProductFiles_ExportProductZip",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Device policy Id.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/productsets/pushproductsetonpolicyengine": {
      "post": {
        "tags": [
          "ProductSetV1"
        ],
        "summary": "Pushes the productSet onto the product policy engine",
        "description": "v1",
        "operationId": "ProductSetV1_PushProductSetOnPolicyEngine",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "productSetID",
            "in": "query",
            "description": "Product Set ID.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fasttrack",
            "in": "query",
            "description": "Should the device be fast tracked",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/productsets/ActivateProductInProductSet": {
      "post": {
        "tags": [
          "ProductSetV1"
        ],
        "summary": "Activates a product in a productset",
        "description": "v1",
        "operationId": "ProductSetV1_ActivateProductInProductSet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "productSetID",
            "in": "query",
            "description": "Product Set ID.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productID",
            "in": "query",
            "description": "Product Id.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/productsets/DeactivateProductInProductSet": {
      "post": {
        "tags": [
          "ProductSetV1"
        ],
        "summary": "Deactivates a product in a productset",
        "description": "v1",
        "operationId": "ProductSetV1_DeactivateProductInProductSet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "productSetID",
            "in": "query",
            "description": "Product Set ID.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productID",
            "in": "query",
            "description": "Product Id.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/productsets/maintainProductSet": {
      "post": {
        "tags": [
          "ProductSetV1"
        ],
        "summary": "Creates or updates a product set",
        "description": "v1",
        "operationId": "ProductSetV1_MaintainProductSet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "maintainProductSetInputEntity",
            "in": "body",
            "description": "input representing product set, location group  and insertOnly flag",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaintainProductSetInputEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/productsets/MaintainProductInProductSet": {
      "post": {
        "tags": [
          "ProductSetV1"
        ],
        "summary": "Adds a product to or modifies an existing product in a productset",
        "description": "v1",
        "operationId": "ProductSetV1_MaintainProductInProductSet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "maintainProductInProductSetInputEntity",
            "in": "body",
            "description": "input representing product to be added or modified in a product set, location group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaintainProductInProductSetInputEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/productsets/RemoveProductFromProductSet/{ogId}/{productSetIdOrName}/{productIdOrName}": {
      "delete": {
        "tags": [
          "ProductSetV1"
        ],
        "summary": "Deletes a product from a productset",
        "operationId": "ProductSetV1_RemoveProductFromProductSet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "ogId",
            "in": "path",
            "description": "The location group of the ProductSet",
            "required": true,
            "type": "string"
          },
          {
            "name": "productSetIdOrName",
            "in": "path",
            "description": "Product Set containing the product to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "name": "productIdOrName",
            "in": "path",
            "description": "The product to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/productsets/ProductSetInquiry": {
      "get": {
        "tags": [
          "ProductSetV1"
        ],
        "summary": "Retrieves information about a productSet \r\nincludeing a list of products with",
        "operationId": "ProductSetV1_ProductSetInquiry",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "OrganizationGroupID",
            "in": "query",
            "description": "OrganizationGroupID",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ProductSetName",
            "in": "query",
            "description": "ProductSetName",
            "required": false,
            "type": "string"
          },
          {
            "name": "ProductSetID",
            "in": "query",
            "description": "ProductSetID",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/productsets/RankAllProductsInProductSet": {
      "post": {
        "tags": [
          "ProductSetV1"
        ],
        "summary": "Reranks all products in a productset",
        "description": "v1",
        "operationId": "ProductSetV1_RankAllProductsInProductSet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "rankAllProductsInProductSetInputEntity",
            "in": "body",
            "description": "input representing product rankings in a product set, location group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RankAllProductsInProductSetInputEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/compliant": {
      "get": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Returns the details of the Devices which are Product Compliant .",
        "description": "v1",
        "operationId": "ProductsV1_ProductCompliantDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identfier of the Product of which ProductCompliant Device details needs to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/inprogress": {
      "get": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Returns the details of the Device for which Provisioning is In-Progress.",
        "description": "v1",
        "operationId": "ProductsV1_InprogressProductDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identfier of the Product.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/failed": {
      "get": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Returns the details of the Device for which Provisioning is Failed.",
        "description": "v1",
        "operationId": "ProductsV1_FailedProductDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identfier of the Product.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/assigned": {
      "get": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Returns the details of the Device for which Provisioning is Assigned.",
        "description": "v1",
        "operationId": "ProductsV1_AssignedProductDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identfier of the Product.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "seensince",
            "in": "query",
            "description": "Filters devices such that devices with last seen after this date will be returned.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/activate": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Activates the product",
        "description": "v1",
        "operationId": "ProductsV1_Activate",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of Product which needs to be activated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{productid}/addconditions": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Adds passed Download and Install Conditions to specified Product.",
        "description": "v1",
        "operationId": "ProductsV1_AddConditionsToProduct",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "productid",
            "in": "path",
            "description": "Identifier of the Product to which conditions to be added.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "conditions",
            "in": "body",
            "description": "Conditions to be added to Product.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Conditions"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/addsmartgroup/{smartgroupid}": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Adds SmartGroup to the specified Product.",
        "description": "v1",
        "operationId": "ProductsV1_AddSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identfier of the Product to which SmartGroup needs to be assigned.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartgroupid",
            "in": "path",
            "description": "Identfier of the Smart Group which needs to be assigned to the Product.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/copy": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Copies the existing product to create a new product with the details passed in input, i.e. name and organizationgroupid",
        "description": "v1",
        "operationId": "ProductsV1_CopyProduct",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identfier of the Product from which copy has to be made",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "product",
            "in": "body",
            "description": "Product details for the new product to be created, i.e. name and managedbyorganizationgroupid",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/create": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Creates a new Product.",
        "description": "v1",
        "operationId": "ProductsV1_CreateProduct",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "description": "Product resource to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/deactivate": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Deactivates the product",
        "description": "v1",
        "operationId": "ProductsV1_Deactivate",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identfier of the product which needs to be deactivated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Get specified Product.",
        "description": "v1",
        "operationId": "ProductsV1_GetProductByProductId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Product to be deleted.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Deletes specified Product.",
        "description": "v1",
        "operationId": "ProductsV1_DeleteProduct",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Product to be deleted.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/devicehealthcheck": {
      "get": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Returns the details of the device health which satisfies the search parameters specified in the request.",
        "description": "v1",
        "operationId": "ProductsV1_DeviceHealthCheckSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OrganizationGroupId to search for.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "organizationgroupname",
            "in": "query",
            "description": "OrganizationGroup name to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customattributes",
            "in": "query",
            "description": "Custom Attribute name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Order results by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorts the result based on this attribute, i.e. ASC for Ascending order 'DESC' for descending order.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page index.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{appid}/assignments": {
      "get": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Get the product details with application id",
        "description": "v1",
        "operationId": "ProductsV1_GetProducts",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "description": "Product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/reprocessProduct": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Initiates a reprocessing of a product or product and device(s) by the policy engine.\r\nSupports a reprocess and a forced reprocess",
        "description": "v1",
        "operationId": "ProductsV1_ReprocessProduct",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "reprocessProductInputEntity",
            "in": "body",
            "description": "Object representing reprocessing details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReprocessProductInputEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/maintainProduct": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Creates or updates a product",
        "description": "v1",
        "operationId": "ProductsV1_MaintainProduct",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "maintainProductInputEntity",
            "in": "body",
            "description": "Object representing product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaintainProductInputEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{deviceid}/offlineprovisioning": {
      "get": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Generates an offline provisioning zip or tar.gz file for an offline device.",
        "description": "v1",
        "operationId": "ProductsV1_OfflineProvisioning",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceid",
            "in": "path",
            "description": "Device Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/extensivesearch": {
      "get": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Returns the details of Products which satisfies the search parameter.",
        "description": "v1",
        "operationId": "ProductsV1_ProductExtensiveSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/provisioningjobs": {
      "get": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Returns jobs and associated products",
        "description": "v1",
        "operationId": "ProductsV1_ProvisioningJobs",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization group id which is similar to selected organization group selected in console.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "deviceid",
            "in": "query",
            "description": "Device Id.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "modifieddatefrom",
            "in": "query",
            "description": "Modified date from.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modifieddateto",
            "in": "query",
            "description": "Modified date to.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Maximum results which should be returned in each page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/pushdeviceandpolicyonqueue": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Pushes the device and policy onto the product policy engine",
        "description": "v1",
        "operationId": "ProductsV1_PushDeviceAndPolicyOnPolicyEngine",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceid",
            "in": "query",
            "description": "DeviceId to insert.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "devicepolicyid",
            "in": "query",
            "description": "PolicyId to insert.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fasttrack",
            "in": "query",
            "description": "Should the device be fast tracked (0 or 1).",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/pushdeviceonqueue": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Pushes the device onto the product policy engine",
        "description": "v1",
        "operationId": "ProductsV1_PushDeviceOnPolicyEngine",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "DeviceId to insert.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fasttrack",
            "in": "query",
            "description": "Should the device be fast tracked (0 or 1).",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/removesmartgroup/{smartgroupid}": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Removes SmartGroup from the specified Product.",
        "description": "v1",
        "operationId": "ProductsV1_RemoveSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identfier of the Product from which SmartGroup needs to be removed.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartgroupid",
            "in": "path",
            "description": "Identfier of the Smart Group which needs to be removed from the Product.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/search": {
      "get": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Searches for the products with the search parameters passed",
        "description": "v1",
        "operationId": "ProductsV1_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Product name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization group id which is similar to selected organization group selected in console.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "managedbyorganizationgroupid",
            "in": "query",
            "description": "Managed by organization group id of the product.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "smartgroupid",
            "in": "query",
            "description": "Smart Group Identifier.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Maximum results which should be returned in each page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orders the results by this attribute.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorts the result based on this attribute, i.e. ASC for Ascending order 'DESC' for descending order.",
            "required": false,
            "type": "string"
          },
          {
            "name": "modifiedfrom",
            "in": "query",
            "description": "DateTime, Filters the result where product modified date is greater or equal to modifiedfrom value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modifiedtill",
            "in": "query",
            "description": "DateTime, Filters the result where product modified date is less or equal to modifiedtill value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/setinstalltime": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Sets the condition for the product, install time.",
        "description": "v1",
        "operationId": "ProductsV1_SetProductInstallTime",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifer for which the Install time has to be specified",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "installTime",
            "in": "body",
            "description": "DateTime in UTC and 24 hour format. The required format is YYYYMMDD HH:MM.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstallTime"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}/update": {
      "post": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Updates the product details",
        "description": "v1",
        "operationId": "ProductsV1_UpdateProduct",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "product",
            "in": "body",
            "description": "Details of product to be edited",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/products/jobstatuschangetimestamp": {
      "get": {
        "tags": [
          "ProductsV1"
        ],
        "summary": "Returns the details of job status changes along with timestamps for those changes, for a device, a product, or a job.",
        "description": "v1",
        "operationId": "ProductsV1_JobStatusChangeTimestamp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "ID of the Organization Group where Device/Product/Job under question is present..",
            "required": false,
            "type": "integer"
          },
          {
            "name": "deviceid",
            "in": "query",
            "description": "evice ID of the device for which the job status change timestamp is desired.",
            "required": false,
            "type": "string"
          },
          {
            "name": "productid",
            "in": "query",
            "description": "Product ID of the product for which the job status change timestamp is desired.",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobid",
            "in": "query",
            "description": "Job ID of the job for which the job status change timestamp is desired.",
            "required": false,
            "type": "string"
          },
          {
            "name": "modifieddatefrom",
            "in": "query",
            "description": "The start date of the duration for which the job status change timestamp is desired. If none is provided, all the results since enrollment will be shown.",
            "required": false,
            "type": "string"
          },
          {
            "name": "modifieddateto",
            "in": "query",
            "description": "The start date of the duration for which the job status change timestamp is desired. If none is provided, all the results since enrollment will be shown.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page index.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/profiles": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Retrieves the profile details of the device identified by device ID.",
        "description": "v1",
        "operationId": "Profiles_GetProfilesByDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/profiles": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Retrieves the profile details of the device identified by alternate ID.",
        "description": "v1",
        "operationId": "Profiles_GetProfilesByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/commands/installprofile": {
      "post": {
        "tags": [
          "Profiles"
        ],
        "summary": "Queue up installation command for interactive profiles for a device by partly or fully overriding payload settings values provided as a part of body.",
        "description": "v1",
        "operationId": "Profiles_ExecuteInstallProfileCommands",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "payloads",
            "in": "body",
            "description": "Array of payload bodies",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PayloadModel"
              }
            }
          },
          {
            "name": "profileid",
            "in": "query",
            "description": "Profile id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/commands/removeprofile": {
      "post": {
        "tags": [
          "Profiles"
        ],
        "summary": "Queue up the remove profile command for a particular device.",
        "description": "v1",
        "operationId": "Profiles_ExecuteRemoveProfileCommands",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileid",
            "in": "query",
            "description": "Profile id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{udid}/{deviceType}/commands/installprofile/profiletypes/{profileType}": {
      "post": {
        "tags": [
          "Profiles"
        ],
        "summary": "API to Install Profile will enable profile install of a particular type. Added for Greenbox integration.",
        "description": "v1",
        "operationId": "Profiles_InstallProfilesByType",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "Device Udid",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "path",
            "description": "Device Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileType",
            "in": "path",
            "description": "profile type",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{udid}/{deviceType}/profiletypes/{profileType}": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Get Assigned Profile Payload Types",
        "operationId": "Profiles_GetAssignedProfilePayloadTypes",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "Device UDID",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "path",
            "description": "Device Platform Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileType",
            "in": "path",
            "description": "Profile Payload Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profiles/platforms/{platform}/payloads/{payload}/getpayloadkeys": {
      "get": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Gets PayloadKeys for the specified Platform and Payload",
        "description": "v1",
        "operationId": "ProfilesV1_GetPayloadKeys",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "description": "Platform Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "path",
            "description": "Payload Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/profiles/{profileId}": {
      "get": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Gets Device Profile Details identified by the Profile Id",
        "description": "v1",
        "operationId": "ProfilesV1_GetDeviceProfileDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "description": "Profile Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/profiles/platforms/android/create": {
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Creates an ANDROID Device Profile",
        "description": "v1",
        "operationId": "ProfilesV1_CreateAndroidDeviceProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceProfile",
            "in": "body",
            "description": "AndroidDeviceProfileEntity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AndroidDeviceProfileEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/profiles/platforms/apple/create": {
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Creates an APPLE Device Profile",
        "description": "v1",
        "operationId": "ProfilesV1_CreateAppleDeviceProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceProfile",
            "in": "body",
            "description": "AppleDeviceProfileEntity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppleDeviceProfileEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/profiles/platforms/android/update": {
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Updates an ANDROID Device Profile",
        "description": "v1",
        "operationId": "ProfilesV1_UpdateAndroidDeviceProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceProfile",
            "in": "body",
            "description": "AndroidDeviceProfileEntity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AndroidDeviceProfileEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/profiles/platforms/apple/update": {
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Updates an APPLE Device Profile",
        "description": "v1",
        "operationId": "ProfilesV1_UpdateAppleDeviceProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "deviceProfile",
            "in": "body",
            "description": "AppleDeviceProfileEntity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppleDeviceProfileEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/profiles/search": {
      "get": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Searches for all profiles applicable using the query information provided.",
        "description": "v1",
        "operationId": "ProfilesV1_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Assignment Type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "profilename",
            "in": "query",
            "description": "Profile Name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group ID.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Smart Group Identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownership",
            "in": "query",
            "description": "Ownership Type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "modifiedfrom",
            "in": "query",
            "description": "DateTime, Filters the result where Profile modified date is greater than or equal to modifiedfrom value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modifiedtill",
            "in": "query",
            "description": "DateTime, Filters the result where Profile modified date is less than or equal to modifiedtill value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby parameter name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Values ASC or DESC. Defaults to ASC.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Maximum results which should be returned in each page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/profiles/{profileid}/install": {
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Installs the profile on the device identified by the query information provided.",
        "description": "v1",
        "operationId": "ProfilesV1_InstallProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "profileid",
            "in": "path",
            "description": "profileid.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceInfo",
            "in": "body",
            "description": "Device details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceInfo"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profiles/{profileid}/remove": {
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Removes the profile from the device identified by the query information provided.",
        "description": "v1",
        "operationId": "ProfilesV1_RemoveProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "profileid",
            "in": "path",
            "description": "profileid.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceInfo",
            "in": "body",
            "description": "Device details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceInfo"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profiles/platforms/windowsmobile": {
      "put": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "New - Updates a Windows Mobile profile",
        "description": "Updates a Windows Mobile profile.",
        "operationId": "ProfilesV1_UpdateWindowsMobileDeviceProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Windows Mobile profile details to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WindowsMobileDeviceProfileEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "New - Creates a Windows Mobile profile",
        "description": "Creates a Windows Mobile profile.  Can create Credentials and WiFi payloads.",
        "operationId": "ProfilesV1_CreateWindowsMobileDeviceProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Windows Mobile profile details to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WindowsMobileDeviceProfileEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profiles/{profileid}/activate": {
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Activates a Device Profile identified by the Profile Id",
        "description": "v1",
        "operationId": "ProfilesV1_ActivateProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "profileid",
            "in": "path",
            "description": "Profile Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profiles/{profileid}/deactivate": {
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "De-Activates a Device Profile identified by the Profile Id",
        "description": "v1",
        "operationId": "ProfilesV1_DeactivateProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "profileid",
            "in": "path",
            "description": "Profile Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profiles/{profileid}": {
      "delete": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Deletes the Device Profile identified by the Profile Id",
        "description": "v1",
        "operationId": "ProfilesV1_DeleteDeviceProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "profileid",
            "in": "path",
            "description": "Profile Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profiles/uploadcertificate": {
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Uploads certificate into Airwatch [Both .pfx and cer formats]",
        "description": "v1",
        "operationId": "ProfilesV1_UploadCertificate",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "certificate",
            "in": "body",
            "description": "Certificate resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profiles/MaintainCustomAttributeProfile": {
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Creates an CustomAttribute Device Profile For QNX and Windows Mobile",
        "description": "v1",
        "operationId": "ProfilesV1_MaintainCustomAttributeProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "customAttributeDeviceProfile",
            "in": "body",
            "description": "CustomAttributeProfileEntity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomAttributeProfileEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profiles/GetPayloadXml": {
      "get": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Gets payload Xml for given combination of inputs",
        "description": "v1",
        "operationId": "ProfilesV1_GetPayloadXml",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber etc].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "DeviceProfileVersionId; This is not a mandatory parameter",
            "required": false,
            "type": ""
          },
          {
            "name": "type",
            "in": "query",
            "description": "Bundle Id",
            "required": false,
            "type": ""
          },
          {
            "name": "type",
            "in": "query",
            "description": "Configuration Type",
            "required": false,
            "type": ""
          },
          {
            "name": "type",
            "in": "query",
            "description": "Device Type",
            "required": false,
            "type": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profiles/Barcode": {
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Generates a staging barcode sheet.",
        "description": "v1",
        "operationId": "ProfilesV1_GenerateBarcode",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "generateBarcodeEntity",
            "in": "body",
            "description": "generateBarcodeEntity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateBarcodeEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profiles/smartgroups": {
      "post": {
        "tags": [
          "ProfilesV1"
        ],
        "summary": "Assign multiple Profiles to Smart Groups",
        "operationId": "ProfilesV1_AssignProfilesToSmartGroups",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "smartGroupProfilesAssignment",
            "in": "body",
            "description": "List of Smart Group Id's and Profile Id's for assignment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmartGroupProfilesAssignmentModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/relayservers": {
      "put": {
        "tags": [
          "RelayServersV1"
        ],
        "summary": "New - Update the details existing relay server",
        "operationId": "RelayServersV1_UpdateRelayServer",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "relayServerDetails",
            "in": "body",
            "description": "Details of the relay server to be added.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelayServerDetailsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "RelayServersV1"
        ],
        "summary": "New - Creates a new relay server provided valid values are given.",
        "operationId": "RelayServersV1_AddRelayServer",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "relayServerDetails",
            "in": "body",
            "description": "Details of the relay server to be added.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelayServerDetailsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/relayservers/{serverId}": {
      "get": {
        "tags": [
          "RelayServersV1"
        ],
        "summary": "New - Gets details of existing relay server",
        "operationId": "RelayServersV1_GetServerDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serverId",
            "in": "path",
            "description": "Relay server id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "RelayServersV1"
        ],
        "summary": "New - Delete the relay server",
        "operationId": "RelayServersV1_DeleteRelayServer",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "serverId",
            "in": "path",
            "description": "Id of the relay server",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/relayservers/bulk": {
      "post": {
        "tags": [
          "RelayServersV1"
        ],
        "summary": "New - Creates a new relay server provided valid values are given.",
        "operationId": "RelayServersV1_AddRelayServersInBulk",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "relayServerDetailsList",
            "in": "body",
            "description": "List of details of the relay server to be added.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelayServerDetailsModel"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/education/rostersync/{groupid}": {
      "get": {
        "tags": [
          "RosterSync"
        ],
        "summary": "Checks roster sync status of the education account",
        "description": "v1",
        "operationId": "RosterSync_CheckRosterSyncStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "groupid",
            "in": "path",
            "description": "Location Group ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "RosterSync"
        ],
        "summary": "Queues a message to perform roster account sync of the education account",
        "description": "v1",
        "operationId": "RosterSync_QueueRosterSyncMessage",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "groupid",
            "in": "path",
            "description": "Location Group ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/security": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Retrieves the security information of the device identified by device ID.",
        "description": "v1",
        "operationId": "Security_GetDeviceSecurityInfo",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/security": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Retrieves the security information of the device identified by device ID.",
        "description": "v1",
        "operationId": "Security_GetDeviceSecurityInfoByAlternateid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/securityinfosearch": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Searches for Device Security Information.",
        "description": "v1",
        "operationId": "Security_DeviceSecurityInfoSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OrganizationGroup to be searched, user's OG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user",
            "in": "query",
            "description": "Enrolled username.",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Device model.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Device platform.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "lastseen",
            "in": "query",
            "description": "Last seen date string.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "ownership",
            "in": "query",
            "description": "Ownership.",
            "required": false,
            "type": "string"
          },
          {
            "name": "compliantstatus",
            "in": "query",
            "description": "Complaint status [True or False].",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "seensince",
            "in": "query",
            "description": "Specifies the date filter for device search, which retrieves the devices that are seen after this date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Page size.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/smartgroups/{id}": {
      "get": {
        "tags": [
          "SmartGroups"
        ],
        "summary": "Retrieves the Smart Group Details.",
        "description": "v1",
        "operationId": "SmartGroups_LoadSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The SmartGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "SmartGroups"
        ],
        "summary": "Updates the details of the specified Smart Group.",
        "description": "v1",
        "operationId": "SmartGroups_UpdateSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The SmartGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartGroup",
            "in": "body",
            "description": "The SmartGroup details to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmartGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "SmartGroups"
        ],
        "summary": "Deletes the Smart Group identified by the Resource Identifier.",
        "description": "v1",
        "operationId": "SmartGroups_Delete",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The SmartGroup Identifier..",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "SmartGroups"
        ],
        "summary": "New - Updates the Users and User Groups of the specified Smart Group.",
        "description": "v1",
        "operationId": "SmartGroups_PatchSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The SmartGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartGroup",
            "in": "body",
            "description": "The SmartGroup details to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmartGroupPatchModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/smartgroups": {
      "post": {
        "tags": [
          "SmartGroups"
        ],
        "summary": "Creates a smart group in Airwatch.",
        "description": "v1",
        "operationId": "SmartGroups_CreateSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "smartGroup",
            "in": "body",
            "description": "SmartGroup details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmartGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/smartgroups/search": {
      "get": {
        "tags": [
          "SmartGroups"
        ],
        "summary": "Searches for smart groups using the query information provided.",
        "description": "v1",
        "operationId": "SmartGroups_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "SmartGroup name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group identifier.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "managedbyorganizationgroupid",
            "in": "query",
            "description": "Smart group managing organization group identifier.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "modifiedfrom",
            "in": "query",
            "description": "DateTime, Filters the result where SmartGroup modified date is greater or equal to modifiedfrom value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modifiedtill",
            "in": "query",
            "description": "DateTime, Filters the result where SmartGroup modified date is less or equal to modifiedtill value.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Order by column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Values ASC or DESC. Defaults to ASC.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/smartgroups/{smartgroupid}/devices": {
      "get": {
        "tags": [
          "SmartGroups"
        ],
        "summary": "Retrieves the device-details in the smart group.",
        "description": "v1",
        "operationId": "SmartGroups_GetDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "smartgroupid",
            "in": "path",
            "description": "SmartGroup Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "seensince",
            "in": "query",
            "description": "Filters the devices in the smart group seen after the seensince datetime.",
            "required": false,
            "type": "string"
          },
          {
            "name": "seentill",
            "in": "query",
            "description": "Filters the devices in the smart group seen before the seentill datetime.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/smartgroups/{id}/apps": {
      "get": {
        "tags": [
          "SmartGroups"
        ],
        "summary": "Gets List of Apps assigned to Smart Group",
        "operationId": "SmartGroups_GetAppsBySmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Smart Group Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/smartgroups/{id}/resources": {
      "get": {
        "tags": [
          "SmartGroups"
        ],
        "summary": "New - Get the list of entities assigned to a smart group.",
        "operationId": "SmartGroups_GetAssignedEntitiesDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SmartGroupID to fetch the entities assigned to it.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/smartgroups/{id}/delete": {
      "delete": {
        "tags": [
          "SmartGroups"
        ],
        "summary": "Deletes the Smart Group identified by the Resource Identifier.",
        "description": "v1",
        "operationId": "SmartGroups_DeleteSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The SmartGroup Identifier..",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/smartgroups/create": {
      "post": {
        "tags": [
          "SmartGroups"
        ],
        "summary": "Creates a smart group in AirWatch.",
        "description": "v1",
        "operationId": "SmartGroups_CreateSg",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "smartGroup",
            "in": "body",
            "description": "SmartGroup details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmartGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/smartgroups/{id}/update": {
      "post": {
        "tags": [
          "SmartGroups"
        ],
        "summary": "Updates the details of the specified Smart Group.",
        "description": "v1",
        "operationId": "SmartGroups_UpdateSg",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The SmartGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartGroup",
            "in": "body",
            "description": "The SmartGroup details to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmartGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/staging": {
      "put": {
        "tags": [
          "StagingV1"
        ],
        "summary": "New - Update the already existing staging bundle.",
        "operationId": "StagingV1_UpdateStagingBundle",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "stagingDetails",
            "in": "body",
            "description": "Details of the staging bundle to be added.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StagingDetailsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "StagingV1"
        ],
        "summary": "New - Creates a new staging bundle provided valid values are given.",
        "operationId": "StagingV1_AddStagingBundle",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "stagingDetails",
            "in": "body",
            "description": "Details of the staging bunlde to be added.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StagingDetailsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/staging/{stagingId}": {
      "get": {
        "tags": [
          "StagingV1"
        ],
        "summary": "New - Gets the staging bundle identified by the staging bundle id provided it is valid",
        "operationId": "StagingV1_GetStagingDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "stagingId",
            "in": "path",
            "description": "Valid staging bundle id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "StagingV1"
        ],
        "summary": "New - Delete the staging bundle identified by the staging bundle id provided it is valid",
        "operationId": "StagingV1_DeleteStagingBundle",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "stagingId",
            "in": "path",
            "description": "Valid staging bundle id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/addtag": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Adds a tag",
        "description": "v1",
        "operationId": "Tags_AddTag",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "body",
            "description": "Tag information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/{tagId}/update": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Updates a tag.",
        "description": "v1",
        "operationId": "Tags_UpdateTag",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "The tag ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tag",
            "in": "body",
            "description": "Resource containing tag details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/{tagId}": {
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Deletes a tag.",
        "description": "v1",
        "operationId": "Tags_DeleteTag",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "The tag ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/{tagId}/devices": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Retrieves all the devices with the specified tag.",
        "description": "v1",
        "operationId": "Tags_DevicesForTag",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "The tag ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "lastSeen",
            "in": "query",
            "description": "Date Last Seen",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/{tagid}/adddevices": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Add devices to the tag.",
        "description": "v1",
        "operationId": "Tags_AddDevicesToTag",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagid",
            "in": "path",
            "description": "Tag id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "addDevices",
            "in": "body",
            "description": "Deviceids to be added to the tag.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/{tagid}/removedevices": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Remove devices from the tag.",
        "description": "v1",
        "operationId": "Tags_RemoveDevicesFromTag",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagid",
            "in": "path",
            "description": "Tag id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "removeDevices",
            "in": "body",
            "description": "Deviceids to be removed from tag.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/search": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Retrieves all the Tags matching the search criteria.",
        "description": "v1",
        "operationId": "Tags_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Tag name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization group identifier.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "tagtype",
            "in": "query",
            "description": "Tag type id.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/{tagId}/teachingdevices": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Returns device details and device user info for a given tag",
        "description": "v1",
        "operationId": "Tags_GetTeachingDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "The tag ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/{tagId}/addwebsite": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Add Website to Tag.",
        "description": "v1",
        "operationId": "Tags_AddWebsite",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "website",
            "in": "body",
            "description": "Website details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Website"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/{tagId}/assets": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Returns asset info for a given tag",
        "description": "v1",
        "operationId": "Tags_GetAssetsByTagId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "The tag ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/{tagId}/deleteasset": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Deletes a particular asset for a given tag",
        "description": "v1",
        "operationId": "Tags_DeleteAssetFromTag",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "The tag ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "assetId",
            "in": "query",
            "description": "Asset IDs to be removed from the tag.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/{tagId}/unlock": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Command Unlock",
        "description": "v1",
        "operationId": "Tags_Unlock",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "unlock",
            "in": "body",
            "description": "Commands to devices",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnlockCommand"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tags/{tagId}/lock": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Command Lock",
        "description": "v1",
        "operationId": "Tags_Lock",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "lock",
            "in": "body",
            "description": "Commands to devices",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LockCommand"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tagsblob/{tagId}/addcontent": {
      "post": {
        "tags": [
          "TagsBlob"
        ],
        "summary": "Add Content to Tag.",
        "description": "v1",
        "operationId": "TagsBlob_AddContent",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Asset Name (with extension)",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationGroupId",
            "in": "query",
            "description": "OG where blob will be created",
            "required": false,
            "type": "integer"
          },
          {
            "name": "hidden",
            "in": "query",
            "description": "Is the content hidden",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Asset type",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tagsblob/{tagId}/downloadcontent/{assetId}": {
      "get": {
        "tags": [
          "TagsBlob"
        ],
        "summary": "Downloads content by asset id.",
        "description": "v1",
        "operationId": "TagsBlob_DownloadContent",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "assetId",
            "in": "path",
            "description": "Asset Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/telecom/devices/search": {
      "get": {
        "tags": [
          "TelecomDevices"
        ],
        "summary": "Searches for telecom devices to get all types of telecom usages made along with device information using the query information provided.",
        "operationId": "TelecomDevices_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "lastseen",
            "in": "query",
            "description": "Search devices by Last seen string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Search devices by OrganizationGroupid, user's OG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Search devices by Device platform, allows multiple platforms search with , seperated. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownership",
            "in": "query",
            "description": "Search devices by Device Ownership, allows multiple ownership types search with , seperated. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "planid",
            "in": "query",
            "description": "Search devices by PlanId.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "smsusage",
            "in": "query",
            "description": "Search devices by SMS Usage.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "datausage",
            "in": "query",
            "description": "Search devices by Data Usage in MB.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "voiceusage",
            "in": "query",
            "description": "Search devices by Voice Usage",
            "required": false,
            "type": "integer"
          },
          {
            "name": "personaldatastartrange",
            "in": "query",
            "description": "Search devices by Personal Data Start Range in MB.",
            "required": false,
            "type": ""
          },
          {
            "name": "personaldataendrange",
            "in": "query",
            "description": "Search devices by Personal Data End Range in MB.",
            "required": false,
            "type": ""
          },
          {
            "name": "corporatedatastartrange",
            "in": "query",
            "description": "Search devices by Corporate Data Start Range in MB.",
            "required": false,
            "type": ""
          },
          {
            "name": "corporatedataendrange",
            "in": "query",
            "description": "Search devices by Corporate Data End Range in MB.",
            "required": false,
            "type": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Values ASC or DESC. Defaults to ASC.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/telecom/devices/roaming/search": {
      "get": {
        "tags": [
          "TelecomDevices"
        ],
        "summary": "Searches for roaming telecom devices to get all types of telecom roaming usages made along with device information using the query information provided.",
        "operationId": "TelecomDevices_SearchRoaming",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "lastseen",
            "in": "query",
            "description": "Search devices by Last seen string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Search devices by OrganizationGroupid, user's OG is considered if not sent.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Search devices by Device platform, allows multiple platforms search with , seperated. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownership",
            "in": "query",
            "description": "Search devices by Device Ownership, allows multiple ownership types search with , seperated. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "planid",
            "in": "query",
            "description": "Search devices by PlanId.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "roaminghistory",
            "in": "query",
            "description": "Search devices by roaming history.",
            "required": false,
            "type": "string"
          },
          {
            "name": "roamingdatausage",
            "in": "query",
            "description": "Search devices by roaming Data Usage in MB.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "roamingstatus",
            "in": "query",
            "description": "Search devices by roaming status, allows multiple platforms search with , seperated for advanced telecom.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Values ASC or DESC. Defaults to ASC.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/telecom/devices/usage": {
      "get": {
        "tags": [
          "TelecomDevices"
        ],
        "summary": "Searches for telecom device voice/data/message logs using the query information provided.",
        "operationId": "TelecomDevices_GetUsageByDeviceId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "usagetype",
            "in": "query",
            "description": "Search by device usage type [voice, data, message]",
            "required": false,
            "type": "string"
          },
          {
            "name": "startdate",
            "in": "query",
            "description": "Search by start date, datetime is not in UTC",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "enddate",
            "in": "query",
            "description": "Search by end date, datetime is not in UTC",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Values ASC or DESC. Defaults to ASC.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/telecom/devices/usagehistory": {
      "get": {
        "tags": [
          "TelecomDevices"
        ],
        "summary": "Searches for telecom device usage history by device using the query information provided.",
        "operationId": "TelecomDevices_SearchCellCardDailyUsageHistoryByDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "organization group id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber, EasId, DeviceId]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "phonenumber",
            "in": "query",
            "description": "Search by device phone number",
            "required": false,
            "type": "string"
          },
          {
            "name": "startdate",
            "in": "query",
            "description": "Search by start date, datetime is not in UTC",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "enddate",
            "in": "query",
            "description": "Search by end date, datetime is not in UTC",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Values ASC or DESC. Defaults to ASC.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/telecom/devices/bulkusagehistory": {
      "get": {
        "tags": [
          "TelecomDevices"
        ],
        "summary": "Searches for telecom device usage history by organization group using the query information provided.",
        "operationId": "TelecomDevices_SearchCellCardDailyUsageHistoryByOrganizationGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Search by organization group id.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "enddate",
            "in": "query",
            "description": "Search by date, if not provided current UTC date is considered.",
            "required": false,
            "type": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Values ASC or DESC. Defaults to ASC.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tunnel/restrictiontypes/profiles/{id}": {
      "get": {
        "tags": [
          "TunnelAccessRestriction"
        ],
        "summary": "The saved  profile's  tunnel restriction type",
        "operationId": "TunnelAccessRestriction_ProfileTunnelRestrictionType",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "VPN Profile Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tunnel/accessrestrictions": {
      "post": {
        "tags": [
          "TunnelAccessRestriction"
        ],
        "summary": "Save the Tunnel Access Restrictions",
        "operationId": "TunnelAccessRestriction_SaveAppsTunnelRestriction",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "tunnelAccessRestrictionSaveRequest",
            "in": "body",
            "description": "Tunnel Access Restriction Save Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TunnelAccessRestrictionSaveRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tunnel/accessrestrictions/gateway/{id}": {
      "get": {
        "tags": [
          "TunnelAccessRestriction"
        ],
        "summary": "Get the Tunnel Access Restrictions by  GatewayId",
        "operationId": "TunnelAccessRestriction_LoadTunnelAccessRestrictions",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GateWay Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tunnel/accessrestrictions/applicationtypes/{applicationtype}/applications/{app}/deployments/{deployment}": {
      "get": {
        "tags": [
          "TunnelAccessRestriction"
        ],
        "summary": "Gets the tunnel access restrictions based on application type, app-id and deployment parameter",
        "operationId": "TunnelAccessRestriction_LoadTunnelRestrictionByAppIdDeploymentId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationtype",
            "in": "path",
            "description": "application Type",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "app",
            "in": "path",
            "description": "App Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deployment",
            "in": "path",
            "description": "Deployment Parameter Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tunnel/accessrestrictions/applicationtypes/{applicationtype}/applications/{id}": {
      "get": {
        "tags": [
          "TunnelAccessRestriction"
        ],
        "summary": "Gets the tunnel access restrictions based on application type and app-id",
        "operationId": "TunnelAccessRestriction_LoadTunnelRestrictionByAppId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationtype",
            "in": "path",
            "description": "application Type",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Application Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "TunnelAccessRestriction"
        ],
        "summary": "deletes the tunnel access restrictions based on application type, app-id and deployment parameter",
        "operationId": "TunnelAccessRestriction_DeleteTunnelAccessRestriction",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationtype",
            "in": "path",
            "description": "application Type",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Application Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deploymentparameter",
            "in": "query",
            "description": "The Deployment Parameter Id for internal apps.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tunnel/accessrestrictions/nsxsecuritygroups/gateway/{id}": {
      "get": {
        "tags": [
          "TunnelAccessRestriction"
        ],
        "summary": "Gets the nsx security group",
        "operationId": "TunnelAccessRestriction_GetNsxSecurityGroups",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "gateway Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tunnel/trafficrules": {
      "get": {
        "tags": [
          "TunnelTrafficRules"
        ],
        "summary": "Gets the Traffic rules configured at the Location group",
        "operationId": "TunnelTrafficRules_TunnelTrafficRules",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "locationGroup",
            "in": "query",
            "description": "location group id.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tunnel/servertrafficrules": {
      "post": {
        "tags": [
          "TunnelTrafficRules"
        ],
        "summary": "Save the server traffic rules for the location group.",
        "operationId": "TunnelTrafficRules_ServerTunnelTrafficRules",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "trafficRulesmodel",
            "in": "body",
            "description": "{AW.Mdm.Api.Model.TunnelTrafficRules.TunnelTrafficRulesModel}\r\n            traffic rule model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TunnelTrafficRulesModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/tunnel/devicetrafficrules": {
      "post": {
        "tags": [
          "TunnelTrafficRules"
        ],
        "summary": "Save the device traffic rules for the location group.",
        "operationId": "TunnelTrafficRules_DeviceTunnelTrafficRules",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "trafficRulesmodel",
            "in": "body",
            "description": "{AW.Mdm.Api.Model.TunnelTrafficRules.TunnelTrafficRulesModel}\r\n            traffic rule model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TunnelTrafficRulesModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/updates": {
      "get": {
        "tags": [
          "Update"
        ],
        "summary": "Retrieves Update details of the device identified by device ID.",
        "description": "v1",
        "operationId": "Update_GetUpdatesByDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The specific page number to get.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Max records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Update"
        ],
        "summary": "Performs approve/unapprove action on the device for the update",
        "description": "v1",
        "operationId": "Update_PerformUpdateAction",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "revisionId",
            "in": "query",
            "description": "Revision Id of the update",
            "required": false,
            "type": "integer"
          },
          {
            "name": "command",
            "in": "query",
            "description": "Action to be taken on the update Supported Values ApproveUpdate,UnApproveUpdate",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/updates/search": {
      "get": {
        "tags": [
          "Updates"
        ],
        "summary": "New - Search for updates",
        "operationId": "Updates_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "details",
            "in": "query",
            "description": "Filters the result by finding here mentioned text in details/title of updates",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroup",
            "in": "query",
            "description": "Organization Group identifier.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "publishedsince",
            "in": "query",
            "description": "DateTime, Filters the result where update published/created date falls on or after this ",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "publishedtill",
            "in": "query",
            "description": "DateTime, Filters the result where update published/created date falls on or before this.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Filters results based on platform specified.",
            "required": false,
            "type": "string"
          },
          {
            "name": "classification",
            "in": "query",
            "description": "Filters results based on this classification type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/updates/{id}/devicecounts": {
      "get": {
        "tags": [
          "Updates"
        ],
        "summary": "New - Returns the device counts for update corresponding to different status of installation/assignment",
        "operationId": "Updates_DeviceCountsForUpdateByStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Update identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/updates/{id}": {
      "get": {
        "tags": [
          "Updates"
        ],
        "summary": "New - Returns device update details for the given identifier",
        "operationId": "Updates_UpdateDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identifier of an update",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Updates"
        ],
        "summary": "New - Performs device update command provided in the input, for the device(s) mentioned in the request body",
        "operationId": "Updates_DeviceUpdateActions",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device update revision id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bulkInput",
            "in": "body",
            "description": "List of Device id(s) for which device update command needs to be sent",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "command",
            "in": "query",
            "description": "Device Update command i.e. ApproveUpdate/UnApproveUpdate",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/updates/{id}/eula": {
      "get": {
        "tags": [
          "Updates"
        ],
        "summary": "New - Returns device update EULA details for the given identifier",
        "operationId": "Updates_GetEulaDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identifier of an update",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language in which the eula description is returned. Example: en, fr, es, ja-nec, zh-cn, pt-br etc., Default: en (English)",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Updates"
        ],
        "summary": "New - Accepts the device update EULA for the given identifier",
        "operationId": "Updates_AcceptEula",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identifier of an update",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/updates/{id}/assignments": {
      "put": {
        "tags": [
          "Updates"
        ],
        "summary": "New - Edit assignment between update and smart group(s).",
        "description": "v1",
        "operationId": "Updates_EditAssignment",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Update Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "updateAssignment",
            "in": "body",
            "description": "Update Assignment Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceUpdateAssignmentModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Updates"
        ],
        "summary": "New - Create assignment between update and smart group(s).",
        "description": "v1",
        "operationId": "Updates_CreateAssignment",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Update Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "updateAssignment",
            "in": "body",
            "description": "Update Assignment Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceUpdateAssignmentModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/updates/{id}/search": {
      "get": {
        "tags": [
          "Updates"
        ],
        "summary": "New - Search devices based on status of specific udpate",
        "operationId": "Updates_SearchDevicesByUpdateStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Update Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filters the result based on the update status. Supported statues: Assigned,Approved,Available,PendingInstall,PendingReboot,Installed,Failed",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchtext",
            "in": "query",
            "description": "Filters the result by finding here mentioned text in device user name, friendly name, ownership, organization group name",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroup",
            "in": "query",
            "description": "Organization Group identifier.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves the user details of the device identified by device ID.",
        "description": "v1",
        "operationId": "Users_GetDeviceUserById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/{id}/enrollmentuser/{enrollmentuserid}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Changes the enrollment user associated with the device to a user passed",
        "description": "v1",
        "operationId": "Users_ChangeEnrollmentUserById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "enrollmentuserid",
            "in": "path",
            "description": "Enrollment User Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves the user details of the device identified by the alternate ID.",
        "description": "v1",
        "operationId": "Users_GetDeviceUserByAlternateid",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/users/organizationgrouphierarchy/username/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns the approved OG for Enrollment User to enroll to depending upon the query information passed in the request",
        "operationId": "Users_OrganizationGroupHierarchy",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Enrollment user's username",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "query",
            "description": "Customer code or the group ID for the Location Group",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/devices/enrollmentuser/{enrollmentuserid}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Changes the enrollment user associated with the device to a user passed",
        "description": "v1",
        "operationId": "Users_ChangeEnrollmentUserByAlternateId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "enrollmentuserid",
            "in": "path",
            "description": "Enrollment User Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber]",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Device alternate id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/websense/ping": {
      "get": {
        "tags": [
          "WebSense"
        ],
        "summary": "Get method for WebSense to ping",
        "operationId": "WebSense_Ping",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profiles/websenserequest/{requestid}": {
      "post": {
        "tags": [
          "WebsenseProfile"
        ],
        "summary": "Installing WebSense Profile into Device",
        "description": "v1",
        "operationId": "WebsenseProfile_InstallWebsenseProfile",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "requestid",
            "in": "path",
            "description": "Websense Request Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileContent",
            "in": "body",
            "description": "Profile Content",
            "required": true,
            "schema": {
              "$ref": "#/definitions/XElement"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    }
  },
  "definitions": {
    "RequestQuery": {
      "description": "Implementation for RequestQuery",
      "type": "object",
      "properties": {}
    },
    "DeviceAppsResult": {
      "type": "object",
      "properties": {
        "DeviceApps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceApplicationInfo"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "DeviceApplicationInfo": {
      "type": "object",
      "properties": {
        "ApplicationName": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "BuildVersion": {
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "DeviceId": {
          "$ref": "#/definitions/EntityReference"
        },
        "Size": {
          "type": "string"
        },
        "ApplicationIdentifier": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "IsManaged": {
          "type": "boolean"
        },
        "AppVersion": {
          "type": "string"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {
        "ApplicationName": "test",
        "Version": "test",
        "BuildVersion": "test",
        "Status": 0,
        "Size": "test",
        "ApplicationIdentifier": "test",
        "Type": "test",
        "IsManaged": true,
        "AppVersion": "test"
      }
    },
    "EntityReference": {
      "type": "object",
      "properties": {
        "Id": {
          "$ref": "#/definitions/EntityId"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "EntityId": {
      "type": "object",
      "properties": {
        "Value": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "Value": 1
      }
    },
    "DeviceAdminAppsResultModel": {
      "description": "The device admin apps result model.",
      "type": "object",
      "properties": {
        "DeviceAdminApps": {
          "description": "Gets or sets the device admin apps.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceAdminAppInfoModel"
          }
        }
      }
    },
    "DeviceAdminAppInfoModel": {
      "description": "The device admin app info model.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "Version": {
          "description": "Gets or sets the version.",
          "type": "string"
        },
        "Identifier": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "Version": "test",
        "Identifier": "test"
      }
    },
    "GatewayEncryptionModel": {
      "description": "Gateway Configuration Information",
      "type": "object",
      "properties": {
        "randomString": {
          "description": "Gets or sets Random String",
          "type": "string"
        },
        "Links": {
          "description": "Gets the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "randomString": "test",
        "Links": [],
        "id": 1
      }
    },
    "Link": {
      "description": "The link.",
      "type": "object",
      "properties": {
        "Rel": {
          "description": "Gets or sets the relational links.",
          "type": "string"
        },
        "Href": {
          "description": "Gets or sets the HREF.",
          "type": "string"
        },
        "Title": {
          "description": "Gets or sets the title.",
          "type": "string"
        }
      },
      "example": {
        "Rel": "test",
        "Href": "test",
        "Title": "test"
      }
    },
    "CartModel": {
      "description": "Device Information",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets The name of the cart.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets The description of the cart. What this cart is used for, etc. for future reference to the admin",
          "type": "string"
        },
        "DeviceSerialNumbers": {
          "description": "Gets or sets  The serial numbers of devices that belong to this cart",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "TagId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets The unique tag id that is associated with this cart"
        },
        "SmartGroupId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets the smart group identifier."
        },
        "EduAccountId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets the edu account identifier."
        },
        "RootLocationGroupId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets the root location group identifier."
        }
      },
      "example": {
        "Name": "test",
        "Description": "test",
        "DeviceSerialNumbers": [
          "test"
        ]
      }
    },
    "EntityKey": {
      "type": "object",
      "properties": {
        "_value": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Value": 1
      }
    },
    "IActionResult": {
      "description": "interface for HttpActionResult",
      "type": "object",
      "properties": {
        "RequestQuery": {
          "$ref": "#/definitions/IRequestQuery",
          "description": "Gets or sets the RequestQuery"
        },
        "RequestMessage": {
          "description": "Gets or sets the RequestMessage",
          "type": "object",
          "example": {
            "Version": {
              "Major": 1,
              "Minor": 1,
              "Build": -1,
              "Revision": -1,
              "MajorRevision": -1,
              "MinorRevision": -1
            },
            "Method": {
              "Method": "GET"
            },
            "RequestUri": "http://air-watch.com",
            "Headers": [],
            "Properties": {}
          }
        },
        "HttpStatusCode": {
          "format": "int32",
          "description": "Gets or sets HttpStatusCode",
          "enum": [
            100,
            101,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            300,
            300,
            301,
            301,
            302,
            302,
            303,
            303,
            304,
            305,
            306,
            307,
            307,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            426,
            500,
            501,
            502,
            503,
            504,
            505
          ],
          "type": "integer"
        },
        "Model": {
          "description": "Gets or sets Model",
          "type": "object",
          "example": {}
        },
        "Stream": {
          "$ref": "#/definitions/Stream",
          "description": "Gets or sets Stream"
        },
        "ByteArray": {
          "format": "byte",
          "description": "Gets or sets ByteArray",
          "type": "string"
        },
        "FileName": {
          "description": "Gets or sets FileName {Will be set in the content-disposition header}",
          "type": "string"
        },
        "MediaType": {
          "description": "Gets or sets MediaType",
          "type": "string"
        },
        "OnStreamAvailable": {
          "description": "Gets or sets OnStreamAvailable",
          "type": "object"
        },
        "ETagHeaderValue": {
          "$ref": "#/definitions/EntityTagHeaderValue",
          "description": "Gets or sets ResponseHeaders"
        },
        "LocationHeaderValue": {
          "description": "Gets or sets LocationHeaderValue",
          "type": "string"
        }
      }
    },
    "IRequestQuery": {
      "description": "Interface for IAwRequestQuery\r\nThis will hold all the required data for a request. Will be filled from ModelBinder",
      "type": "object",
      "properties": {
        "QueryParams": {
          "description": "Gets or sets Query Parameters. For e.g. any query string parameters will be extracted to key,value pair and stored here.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "TenantContext": {
          "$ref": "#/definitions/ITenantContext",
          "description": "Gets or sets IAwTenantContext. Will hold the tenant details, which will be filled as part of the tenant validation handler"
        },
        "RequestMethod": {
          "$ref": "#/definitions/HttpMethod",
          "description": "Gets or sets RequestMethod. Will be used to write custom rules"
        },
        "ActionName": {
          "description": "Gets or sets ActionName",
          "type": "string"
        },
        "AllowedUriQueryChars": {
          "description": "Gets or sets allowed Characters in Query String.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Stream": {
      "type": "object",
      "properties": {
        "__identity": {
          "type": "object",
          "example": {}
        }
      }
    },
    "EntityTagHeaderValue": {
      "type": "object",
      "properties": {
        "Tag": {
          "type": "string",
          "readOnly": true
        },
        "IsWeak": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ITenantContext": {
      "description": "Contract for TenantContext. Will be exposed from RequestQuery and will be injected to every controller actions and Business method",
      "type": "object",
      "properties": {
        "TenantCode": {
          "description": "Gets or sets TenantCode. Uniquely identify the tenant for the request",
          "type": "string"
        },
        "OrganizationgroupId": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets Organization Group ID"
        }
      }
    },
    "HttpMethod": {
      "type": "object",
      "properties": {
        "Method": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EnrollmentGroupingSettingsModel": {
      "description": "The settings model.",
      "type": "object",
      "properties": {
        "enrollmentSettings": {
          "$ref": "#/definitions/EnrollmentSettingsModel",
          "description": "The enrollment settings."
        }
      },
      "example": {}
    },
    "EnrollmentSettingsModel": {
      "description": "The enrollment settings model.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "Gets or sets the group id.",
          "type": "string"
        },
        "enrollmentMode": {
          "format": "int32",
          "description": "Gets or sets the group assignment type",
          "type": "integer"
        },
        "isDirectEnrollment": {
          "description": "Gets or sets a value indicating whether is direct enrollment.",
          "type": "boolean"
        },
        "mdmEnrollUrl": {
          "description": "Gets or sets the mdm enroll url.",
          "type": "string"
        }
      },
      "example": {
        "groupId": "test",
        "enrollmentMode": 1,
        "isDirectEnrollment": true,
        "mdmEnrollUrl": "test"
      }
    },
    "DeviceCertificateSearchResult": {
      "type": "object",
      "properties": {
        "DeviceCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCertificate"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeviceCertificate": {
      "type": "object",
      "properties": {
        "FirstSampleTime": {
          "type": "string"
        },
        "LastSampleTime": {
          "type": "string"
        },
        "IsIdentity": {
          "type": "string"
        },
        "DeviceId": {
          "$ref": "#/definitions/EntityReference"
        },
        "CertificateLoaded": {
          "format": "int64",
          "type": "integer"
        },
        "Error": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "ExpiresOn": {
          "type": "string"
        },
        "IssuedBy": {
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {
        "FirstSampleTime": "test",
        "LastSampleTime": "test",
        "IsIdentity": "test",
        "CertificateLoaded": 1,
        "Error": "test",
        "Name": "test",
        "ExpiresOn": "test",
        "IssuedBy": "test",
        "Status": 0
      }
    },
    "ClassModel": {
      "description": "The class model.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name.",
          "maxLength": 40,
          "minLength": 1,
          "type": "string"
        },
        "enrollmentstudentuserids": {
          "description": "Gets or sets the assigned students enrollment ids.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "enrollmentteacheruserids": {
          "description": "Gets or sets the assigned teachers enrollemnt ids.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "enrollmentstudentusergroupids": {
          "description": "Gets or sets the assigned students group ids.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "enrollmentteacherusergroupids": {
          "description": "Gets or sets the assigned teachers group ids.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "classuniqueidentifier": {
          "description": "Gets or sets the Class Unique Identifier.",
          "type": "string"
        },
        "isedit": {
          "description": "Gets or sets a value indicating whether is edit.",
          "type": "boolean"
        },
        "userid": {
          "format": "int32",
          "description": "Gets or sets the UserId.",
          "type": "integer"
        },
        "educationaccountmodel": {
          "$ref": "#/definitions/EducationAccountModel",
          "description": "Gets or sets Education Account Model."
        },
        "coursemodel": {
          "$ref": "#/definitions/CourseModel",
          "description": "Gets or sets Course Model."
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "name": "test",
        "enrollmentstudentuserids": [
          1
        ],
        "enrollmentteacheruserids": [
          1
        ],
        "enrollmentstudentusergroupids": [
          1
        ],
        "enrollmentteacherusergroupids": [
          1
        ],
        "classuniqueidentifier": "test",
        "isedit": true,
        "userid": 1,
        "id": 1
      }
    },
    "EducationAccountModel": {
      "description": "The education model.",
      "type": "object",
      "properties": {
        "locationGroupId": {
          "format": "int32",
          "description": "Gets or sets the location group identifier.",
          "type": "integer"
        },
        "name": {
          "description": "Gets or sets the education account name.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "locationGroupId": 1,
        "name": "test",
        "id": 1
      }
    },
    "CourseModel": {
      "description": "The course model.",
      "type": "object",
      "properties": {
        "courseuniqueidentifier": {
          "description": "Gets or sets the Course Unique Identifier.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "courseuniqueidentifier": "test",
        "id": 1
      }
    },
    "ClassAssignmentRequestModel": {
      "description": "Class Assignment request model",
      "type": "object",
      "properties": {
        "Apps": {
          "description": "Gets or sets List of App IDs",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Carts": {
          "description": "Gets or sets List of Cart IDs",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ClassId": {
          "format": "int32",
          "description": "Gets or sets Class ID",
          "type": "integer"
        },
        "LocationGroupId": {
          "format": "int32",
          "description": "Gets or sets Location Group ID",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Apps": [
          1
        ],
        "Carts": [
          1
        ],
        "ClassId": 1,
        "LocationGroupId": 1,
        "id": 1
      }
    },
    "ClassAssignmentResponseModel": {
      "description": "Class Assignment request model",
      "type": "object",
      "properties": {
        "InEligibleApps": {
          "description": "Gets or sets List of App IDs that are ineligible for the given set of carts and LG",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "InEligibleCarts": {
          "description": "Gets or sets List of Cart IDs that are ineligible for the given class",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "AppsLackOfLicense": {
          "description": "Gets or sets List of App IDs that don't have enough licenses",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "AssignedCarts": {
          "description": "Gets or sets List of Cart IDs that are successfully assigned to class",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "AssignedApps": {
          "description": "Gets or sets List of App IDs that are successfully assigned to class",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "InEligibleApps": [
          1
        ],
        "InEligibleCarts": [
          1
        ],
        "AppsLackOfLicense": [
          1
        ],
        "AssignedCarts": [
          1
        ],
        "AssignedApps": [
          1
        ],
        "id": 1
      }
    },
    "CustomCommandModel": {
      "description": "The custom command model.",
      "type": "object",
      "properties": {
        "CommandXml": {
          "description": "Gets or sets the command xml.",
          "maxLength": 2000,
          "minLength": 1,
          "type": "string"
        }
      },
      "example": {
        "CommandXml": "test"
      }
    },
    "FindDevice": {
      "type": "object",
      "properties": {
        "Platform": {
          "type": "string"
        },
        "Application": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "NumberOfRepetitions": {
          "type": "string"
        },
        "GapBetweenRepetitions": {
          "type": "string"
        }
      },
      "example": {
        "Platform": "test",
        "Application": "test",
        "Message": "test",
        "NumberOfRepetitions": "test",
        "GapBetweenRepetitions": "test"
      }
    },
    "DeviceName": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test"
      }
    },
    "DevicePasscode": {
      "type": "object",
      "properties": {
        "Passcode": {
          "type": "string"
        }
      },
      "example": {
        "Passcode": "test"
      }
    },
    "StartAirPlay": {
      "type": "object",
      "properties": {
        "DestinationName": {
          "type": "string"
        },
        "DestinationDeviceId": {
          "type": "string"
        },
        "Passcode": {
          "type": "string"
        },
        "Scantime": {
          "type": "string"
        }
      },
      "example": {
        "DestinationName": "test",
        "DestinationDeviceId": "test",
        "Passcode": "test",
        "Scantime": "test"
      }
    },
    "BulkInput": {
      "type": "object",
      "properties": {
        "BulkValues": {
          "$ref": "#/definitions/BulkValues"
        }
      },
      "example": {}
    },
    "BulkValues": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BulkResponse": {
      "type": "object",
      "properties": {
        "TotalItems": {
          "format": "int32",
          "type": "integer"
        },
        "AcceptedItems": {
          "format": "int32",
          "type": "integer"
        },
        "FailedItems": {
          "format": "int32",
          "type": "integer"
        },
        "Faults": {
          "$ref": "#/definitions/Faults"
        }
      },
      "example": {
        "TotalItems": 1,
        "AcceptedItems": 1,
        "FailedItems": 1
      }
    },
    "Faults": {
      "type": "object",
      "properties": {
        "Fault": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fault"
          }
        }
      }
    },
    "Fault": {
      "type": "object",
      "properties": {
        "ErrorCode": {
          "format": "int32",
          "type": "integer"
        },
        "ItemValue": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      },
      "example": {
        "ErrorCode": 1,
        "ItemValue": "test",
        "Message": "test"
      }
    },
    "DeviceComplianceSearchResult": {
      "type": "object",
      "properties": {
        "DeviceCompliance": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCompliance"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeviceCompliance": {
      "type": "object",
      "properties": {
        "CompliantStatus": {
          "type": "boolean"
        },
        "PolicyName": {
          "type": "string"
        },
        "PolicyDetail": {
          "type": "string"
        },
        "LastComplianceCheck": {
          "format": "date-time",
          "type": "string"
        },
        "NextComplianceCheck": {
          "format": "date-time",
          "type": "string"
        },
        "ActionTaken": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComplianceActionTaken"
          }
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      }
    },
    "ComplianceActionTaken": {
      "type": "object",
      "properties": {
        "ActionType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15
          ],
          "type": "integer"
        }
      },
      "example": {
        "ActionType": 0
      }
    },
    "OrganizationGroupComplianceAttributeListModel": {
      "description": "The organization group compliance attribute list model.",
      "type": "object",
      "properties": {
        "ComplianceAttributes": {
          "description": "Gets or sets the organization group compliance attributes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrganizationGroupComplianceAttributeModel"
          }
        }
      }
    },
    "OrganizationGroupComplianceAttributeModel": {
      "description": "The organization group compliance attribute model.",
      "type": "object",
      "properties": {
        "FriendlyName": {
          "description": "Gets or sets the friendly name.",
          "type": "string"
        },
        "Key": {
          "description": "Gets or sets the attribute key.",
          "type": "string"
        },
        "OperatorTypes": {
          "description": "Gets or sets the operator types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Values": {
          "description": "Gets or sets the attribute values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeviceComplianceAttributeListModel": {
      "description": "The device compliance attribute list model.",
      "type": "object",
      "properties": {
        "DeviceComplianceAttributes": {
          "description": "Gets or sets the list of device compliance attributes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceComplianceAttributeModel"
          }
        }
      }
    },
    "DeviceComplianceAttributeModel": {
      "description": "The device compliance attribute model.",
      "type": "object",
      "properties": {
        "SerialNumber": {
          "description": "Gets or sets the device serial number.",
          "type": "string"
        },
        "ComplianceAttributes": {
          "description": "The compliance attributes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComplianceAttributeModel"
          }
        }
      }
    },
    "ComplianceAttributeModel": {
      "description": "The compliance attribute model.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "Value": {
          "description": "Gets or sets the attribute value.",
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "Value": "test"
      }
    },
    "VendorDetailsModel": {
      "description": "Vendor Details model.",
      "type": "object",
      "properties": {
        "VendorDetailsId": {
          "format": "int32",
          "description": "The Vendor Details Id.",
          "type": "integer"
        },
        "VendorName": {
          "description": "The Vendor Name.",
          "type": "string"
        },
        "ApiKey": {
          "description": "The Api Key.",
          "type": "string"
        },
        "AttributeCount": {
          "format": "int32",
          "description": "count of attributes associated with the vendor.",
          "type": "integer"
        },
        "ComplianceAttributes": {
          "description": "The compliance attributes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrganizationGroupComplianceAttributeModel"
          }
        }
      }
    },
    "CompliancePolicySearchResult": {
      "type": "object",
      "properties": {
        "CompliancePolicy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompliancePolicyDetails"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "CompliancePolicy": [
          {
            "DevicePolicyId": 1,
            "Name": "test",
            "Description": "test",
            "IsActive": true,
            "RootLocationGroupName": "test",
            "RootLocationGroupId": 1,
            "Platform": "test",
            "CompliantDevices": 1,
            "NonCompliantDevices": 1,
            "AssignedDevices": 1
          }
        ],
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "CompliancePolicyDetails": {
      "type": "object",
      "properties": {
        "DevicePolicyId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "RootLocationGroupName": {
          "type": "string"
        },
        "RootLocationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "Platform": {
          "type": "string"
        },
        "CompliantDevices": {
          "format": "int32",
          "type": "integer"
        },
        "NonCompliantDevices": {
          "format": "int32",
          "type": "integer"
        },
        "AssignedDevices": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "DevicePolicyId": 1,
        "Name": "test",
        "Description": "test",
        "IsActive": true,
        "RootLocationGroupName": "test",
        "RootLocationGroupId": 1,
        "Platform": "test",
        "CompliantDevices": 1,
        "NonCompliantDevices": 1,
        "AssignedDevices": 1
      }
    },
    "DeviceContentSearchResult": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "$ref": "#/definitions/EntityReference"
        },
        "DeviceContents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceContentInfo"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeviceContentInfo": {
      "type": "object",
      "properties": {
        "ContentName": {
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "DownloadPriority": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "DeployMode": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "ContentType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            33,
            34
          ],
          "type": "integer"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {
        "ContentName": "test",
        "Status": 0,
        "DownloadPriority": 0,
        "DeployMode": 0,
        "ContentType": 0
      }
    },
    "DeviceCompromiseReasonList": {
      "description": "The device compromise reason list.",
      "type": "object",
      "properties": {
        "DeviceCompromiseReasonCodes": {
          "description": "The device compromise reason codes.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "DeviceCompromiseReasonResultModel": {
      "description": "The device compromise reason result model.",
      "type": "object",
      "properties": {
        "DeviceCompromiseReason": {
          "description": "Gets or sets the device compromise reason.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCompromiseReasonInfoModel"
          }
        }
      }
    },
    "DeviceCompromiseReasonInfoModel": {
      "description": "The device compromise reason info model.",
      "type": "object",
      "properties": {
        "Reason": {
          "description": "Gets or sets the reason.",
          "type": "string"
        },
        "Severity": {
          "description": "Gets or sets the severity.",
          "type": "string"
        }
      },
      "example": {
        "Reason": "test",
        "Severity": "test"
      }
    },
    "DeviceCustomAttributeSearchResult": {
      "type": "object",
      "properties": {
        "Devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCustomAttributeDetails"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeviceCustomAttributeDetails": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "Udid": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "EnrollmentUserName": {
          "type": "string"
        },
        "AssetNumber": {
          "type": "string"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttribute"
          }
        }
      }
    },
    "CustomAttribute": {
      "type": "object",
      "properties": {
        "Name": {
          "pattern": "^[^*:?\"<>|\\\\/;,\\[\\]\\(\\)]+$",
          "type": "string"
        },
        "Value": {
          "pattern": "^[^*:?\"<>|\\\\/;,\\[\\]\\(\\)]+$",
          "type": "string"
        },
        "Source": {
          "type": "string"
        },
        "Application": {
          "pattern": "^[^*:?\"<>|\\\\/;,\\[\\]\\(\\)]+$",
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "Value": "test",
        "Source": "test",
        "Application": "test"
      }
    },
    "DeviceCustomAttributeChangeReportResult": {
      "type": "object",
      "properties": {
        "DeviceCustomAttributeChanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCustomAttributeChange"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "DeviceCustomAttributeChanges": [
          {
            "DeviceID": "test",
            "FriendlyName": "test",
            "CustomAttributeChanges": [
              {
                "CustomAttributeName": "test",
                "OldValue": "test",
                "NewValue": "test",
                "ModifiedDate": "test",
                "LocationGroupID": "test",
                "LocationGroupName": "test",
                "ApplicationGroup": "test",
                "Source": "test"
              }
            ]
          }
        ],
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "DeviceCustomAttributeChange": {
      "type": "object",
      "properties": {
        "DeviceID": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "CustomAttributeChanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeChange"
          }
        }
      },
      "example": {
        "DeviceID": "test",
        "FriendlyName": "test",
        "CustomAttributeChanges": [
          {
            "CustomAttributeName": "test",
            "OldValue": "test",
            "NewValue": "test",
            "ModifiedDate": "test",
            "LocationGroupID": "test",
            "LocationGroupName": "test",
            "ApplicationGroup": "test",
            "Source": "test"
          }
        ]
      }
    },
    "CustomAttributeChange": {
      "type": "object",
      "properties": {
        "CustomAttributeName": {
          "type": "string"
        },
        "OldValue": {
          "type": "string"
        },
        "NewValue": {
          "type": "string"
        },
        "ModifiedDate": {
          "type": "string"
        },
        "LocationGroupID": {
          "type": "string"
        },
        "LocationGroupName": {
          "type": "string"
        },
        "ApplicationGroup": {
          "type": "string"
        },
        "Source": {
          "type": "string"
        }
      },
      "example": {
        "CustomAttributeName": "test",
        "OldValue": "test",
        "NewValue": "test",
        "ModifiedDate": "test",
        "LocationGroupID": "test",
        "LocationGroupName": "test",
        "ApplicationGroup": "test",
        "Source": "test"
      }
    },
    "DeviceCustomAttributeListModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeNameValueAppGroupModel"
          }
        }
      },
      "example": {
        "CustomAttributes": [
          {}
        ]
      }
    },
    "CustomAttributeNameValueAppGroupModel": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "ApplicationGroup": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {}
    },
    "DeleteDeviceCustomAttributeListModel": {
      "type": "object",
      "properties": {
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeleteCustomAttributeDomainModel"
          }
        }
      },
      "example": {
        "CustomAttributes": [
          {}
        ]
      }
    },
    "DeleteCustomAttributeDomainModel": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "ApplicationGroup": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {}
    },
    "MdmEnrollmentProgramApiModel": {
      "description": "The mdm enrollment program api model.",
      "type": "object",
      "properties": {
        "SharedMdmProfileDataId": {
          "format": "int32",
          "description": "Gets or sets the shared mdm profile data id.",
          "type": "integer"
        },
        "DepAuthenticationId": {
          "format": "int32",
          "description": "Gets or sets the dep authentication id.",
          "type": "integer"
        },
        "ProfileName": {
          "description": "Gets or sets the profile name.",
          "type": "string"
        },
        "ProfileUuid": {
          "description": "Gets or sets the profile uuid.",
          "type": "string"
        },
        "Department": {
          "description": "Gets or sets the department.",
          "maxLength": 125,
          "minLength": 1,
          "type": "string"
        },
        "SupportNumber": {
          "description": "Gets or sets the support number.",
          "type": "string"
        },
        "RequireMdmEnrollment": {
          "description": "Gets or sets a value indicating whether require mdm enrollment.",
          "type": "boolean"
        },
        "SuperviseDevices": {
          "description": "Gets or sets a value indicating whether supervise devices.",
          "type": "boolean"
        },
        "IsMultiUser": {
          "description": "Gets or sets a value indicating whether is multi user.",
          "type": "boolean"
        },
        "IsMdmRemovable": {
          "description": "Gets or sets a value indicating whether is mdm removable.",
          "type": "boolean"
        },
        "TokenLocationGroupId": {
          "format": "int32",
          "description": "Gets or sets the token location group id.",
          "type": "integer"
        },
        "HdnTokenId": {
          "format": "int32",
          "description": "Gets or sets the hdn token id.",
          "type": "integer"
        },
        "DevicePairing": {
          "description": "Gets or sets a value indicating whether device pairing.",
          "type": "boolean"
        },
        "SkipLocationServices": {
          "description": "Gets or sets a value indicating whether skip location services.",
          "type": "boolean"
        },
        "SkipRestoringFromBackup": {
          "description": "Gets or sets a value indicating whether skip restoring from backup.",
          "type": "boolean"
        },
        "SkipAndroid": {
          "description": "Gets or sets a value indicating whether skip android.",
          "type": "boolean"
        },
        "SkipSigningWithAppleId": {
          "description": "Gets or sets a value indicating whether skip signing with apple id.",
          "type": "boolean"
        },
        "SkipTermsofUse": {
          "description": "Gets or sets a value indicating whether skip termsof use.",
          "type": "boolean"
        },
        "SkipSiri": {
          "description": "Gets or sets a value indicating whether skip siri.",
          "type": "boolean"
        },
        "SkipDiagnostics": {
          "description": "Gets or sets a value indicating whether skip diagnostics.",
          "type": "boolean"
        },
        "SkipPasscode": {
          "description": "Gets or sets a value indicating whether skip passcode.",
          "type": "boolean"
        },
        "SkipRegistration": {
          "description": "Gets or sets a value indicating whether skip registration.",
          "type": "boolean"
        },
        "StagingMode": {
          "format": "int32",
          "description": "Gets or sets the staging mode.",
          "type": "integer"
        },
        "EnrollmentUsername": {
          "description": "Gets or sets the enrollment username.",
          "type": "string"
        },
        "DeviceOwnershipId": {
          "format": "int32",
          "description": "Gets or sets the device ownership id.",
          "type": "integer"
        },
        "DefaultEnrollmentUserId": {
          "format": "int32",
          "description": "Gets or sets the default enrollment user id.",
          "type": "integer"
        },
        "DeviceLocationGroupId": {
          "format": "int32",
          "description": "Gets or sets the device location group id.",
          "type": "integer"
        },
        "AssignProfile": {
          "description": "Gets or sets a value indicating whether assign profile.",
          "type": "boolean"
        },
        "AutoAssignDefaultProfile": {
          "description": "Gets or sets a value indicating whether auto assign default profile.",
          "type": "boolean"
        },
        "AuthenticationRequired": {
          "description": "Gets or sets a value indicating whether authentication required.",
          "type": "boolean"
        },
        "SessionId": {
          "description": "Gets or sets the session id.",
          "type": "string"
        },
        "OrgMagic": {
          "description": "Gets or sets the org magic (A string that uniquely identifies various services that are managed by a single organization).",
          "type": "string"
        },
        "CustomPromptRequired": {
          "description": "Gets or sets a value indicating whether custom prompt required.",
          "type": "boolean"
        },
        "MessageTemplateId": {
          "format": "int32",
          "description": "Gets or sets the message template id.",
          "type": "integer"
        },
        "SkipApplePay": {
          "description": "Gets or sets a value indicating whether skip apple pay.",
          "type": "boolean"
        },
        "SkipZoom": {
          "description": "Gets or sets a value indicating whether skip zoom.",
          "type": "boolean"
        },
        "SkipBiometric": {
          "description": "Gets or sets a value indicating whether skip biometric.",
          "type": "boolean"
        },
        "AwaitConfiguration": {
          "description": "Gets or sets a value indicating whether await configuration.",
          "type": "boolean"
        },
        "HostPairingCertificateIDs": {
          "description": "Gets or sets the host pairing certificate i ds.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "CertificateIds": {
          "description": "Gets or sets the certificate ids.",
          "type": "string"
        },
        "SkipPrimarySetupAccountCreation": {
          "description": "Gets or sets a value indicating whether skip primary setup account creation.",
          "type": "boolean"
        },
        "AccountType": {
          "description": "Gets or sets a value indicating whether account type.",
          "type": "boolean"
        },
        "UserName": {
          "description": "Gets or sets the user name.",
          "type": "string"
        },
        "FullName": {
          "description": "Gets or sets the full name.",
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets the password.",
          "type": "string"
        },
        "Hidden": {
          "description": "Gets or sets a value indicating whether hidden.",
          "type": "boolean"
        },
        "SkipFileVault": {
          "description": "Gets or sets a value indicating whether skip file vault.",
          "type": "boolean"
        },
        "SkipDisplayTone": {
          "description": "Gets or sets a value indicating whether skip display tone on setup assistant for iOS device",
          "type": "boolean"
        },
        "AutoAdvanceSetup": {
          "description": "Gets or sets a value indicating whether auto advance setup on tvOS devices.",
          "type": "boolean"
        },
        "SkipHomeButtonSensitivity": {
          "description": "Skips the home button sensitivity screen during iOS setup assistant",
          "type": "boolean"
        },
        "SkipTapToSetup": {
          "description": "Skips the tap to setup screen during tvOS setup assistant",
          "type": "boolean"
        },
        "SkipScreenSaver": {
          "description": "Skips the screensaver screen during tvOS setup assistant",
          "type": "boolean"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "SharedMdmProfileDataId": 1,
        "DepAuthenticationId": 1,
        "ProfileName": "test",
        "ProfileUuid": "test",
        "Department": "test",
        "SupportNumber": "test",
        "RequireMdmEnrollment": true,
        "SuperviseDevices": true,
        "IsMultiUser": true,
        "IsMdmRemovable": true,
        "TokenLocationGroupId": 1,
        "HdnTokenId": 1,
        "DevicePairing": true,
        "SkipLocationServices": true,
        "SkipRestoringFromBackup": true,
        "SkipAndroid": true,
        "SkipSigningWithAppleId": true,
        "SkipTermsofUse": true,
        "SkipSiri": true,
        "SkipDiagnostics": true,
        "SkipPasscode": true,
        "SkipRegistration": true,
        "StagingMode": 1,
        "EnrollmentUsername": "test",
        "DeviceOwnershipId": 1,
        "DefaultEnrollmentUserId": 1,
        "DeviceLocationGroupId": 1,
        "AssignProfile": true,
        "AutoAssignDefaultProfile": true,
        "AuthenticationRequired": true,
        "SessionId": "test",
        "OrgMagic": "test",
        "CustomPromptRequired": true,
        "MessageTemplateId": 1,
        "SkipApplePay": true,
        "SkipZoom": true,
        "SkipBiometric": true,
        "AwaitConfiguration": true,
        "HostPairingCertificateIDs": [
          1
        ],
        "CertificateIds": "test",
        "SkipPrimarySetupAccountCreation": true,
        "AccountType": true,
        "UserName": "test",
        "FullName": "test",
        "Password": "test",
        "Hidden": true,
        "SkipFileVault": true,
        "SkipDisplayTone": true,
        "AutoAdvanceSetup": true,
        "SkipHomeButtonSensitivity": true,
        "SkipTapToSetup": true,
        "SkipScreenSaver": true,
        "id": 1
      }
    },
    "DepAccountCreationApiModel": {
      "description": "The dep certificate model.",
      "type": "object",
      "properties": {
        "CertificateId": {
          "format": "int64",
          "description": "Gets or sets the certificate ID.",
          "type": "integer"
        },
        "TokenId": {
          "format": "int32",
          "description": "Gets or sets the token id.",
          "type": "integer"
        }
      },
      "example": {
        "CertificateId": 1,
        "TokenId": 1
      }
    },
    "DeviceEnrollmentProgramDevicesResponseV1Model": {
      "description": "Response model to return a list of Device Enrollment Program devices",
      "type": "object",
      "properties": {
        "deviceFriendlyName": {
          "description": "Friendly name of the device.",
          "type": "string"
        },
        "deviceSerialNumber": {
          "description": "Serial number of the device.",
          "type": "string"
        },
        "deviceImei": {
          "description": "IMEI number of the device.",
          "type": "string"
        },
        "deviceOwnership": {
          "description": "Ownership type for the device",
          "type": "string"
        },
        "username": {
          "description": "The username the device is assigned to.",
          "type": "string"
        },
        "enrollmentStatus": {
          "description": "Current enrollment status of the device.",
          "type": "string"
        },
        "deviceModel": {
          "description": "The model of the device",
          "type": "string"
        },
        "profileUuid": {
          "description": "UUID of the Device Enrollment Program profile.",
          "type": "string"
        },
        "deviceAssetNumber": {
          "description": "Asset number of the device.",
          "type": "string"
        },
        "organizationGroupName": {
          "description": "The organization group name the device is assigned to.",
          "type": "string"
        },
        "profileName": {
          "description": "The name of the Device Enrollment Program profile.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "deviceFriendlyName": "MBAIR 13.3 CTO",
        "deviceSerialNumber": "C07SVPASGXH8",
        "deviceImei": "990000862471854",
        "deviceOwnership": "Corporate Dedicated",
        "username": "Test User",
        "enrollmentStatus": "Enrolled",
        "deviceModel": "MacBook Air",
        "profileUuid": "244DFC6DB1A962D6A15717CB1EE61AE0",
        "deviceAssetNumber": "2XG5SFG",
        "organizationGroupName": "Test Organization Group",
        "profileName": "tvOS DEP Profile",
        "id": 1
      }
    },
    "BaseExceptionModel": {
      "description": "Base model for exception",
      "type": "object",
      "properties": {
        "errorCode": {
          "format": "int32",
          "description": "Application error code",
          "type": "integer"
        },
        "message": {
          "description": "Friendly error message",
          "type": "object",
          "example": {}
        },
        "activityId": {
          "format": "uuid",
          "description": "TransactionId of the request",
          "type": "string"
        }
      },
      "example": {
        "errorCode": 1001,
        "message": "Friendly error message",
        "activityId": "618e7cab-c5f8-4689-afba-7a9384e246dc"
      }
    },
    "GenericMessage": {
      "type": "object",
      "properties": {
        "MessageBody": {
          "type": "string"
        },
        "MessageType": {
          "type": "string"
        },
        "ApplicationName": {
          "type": "string"
        }
      },
      "example": {
        "MessageBody": "test",
        "MessageType": "test",
        "ApplicationName": "test"
      }
    },
    "DeviceSearchResult": {
      "type": "object",
      "properties": {
        "Devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Device"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Device": {
      "type": "object",
      "properties": {
        "Udid": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "MacAddress": {
          "type": "string"
        },
        "Imei": {
          "type": "string"
        },
        "EasId": {
          "type": "string"
        },
        "AssetNumber": {
          "type": "string"
        },
        "DeviceFriendlyName": {
          "type": "string"
        },
        "LocationGroupId": {
          "$ref": "#/definitions/EntityReference"
        },
        "LocationGroupName": {
          "type": "string"
        },
        "UserId": {
          "$ref": "#/definitions/EntityReference"
        },
        "UserName": {
          "type": "string"
        },
        "UserEmailAddress": {
          "type": "string"
        },
        "Ownership": {
          "type": "string"
        },
        "PlatformId": {
          "$ref": "#/definitions/EntityReference"
        },
        "Platform": {
          "type": "string"
        },
        "ModelId": {
          "$ref": "#/definitions/EntityReference"
        },
        "Model": {
          "type": "string"
        },
        "OperatingSystem": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        },
        "LastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "EnrollmentStatus": {
          "type": "string"
        },
        "ComplianceStatus": {
          "type": "string"
        },
        "CompromisedStatus": {
          "type": "boolean"
        },
        "LastEnrolledOn": {
          "format": "date-time",
          "type": "string"
        },
        "LastComplianceCheckOn": {
          "format": "date-time",
          "type": "string"
        },
        "LastCompromisedCheckOn": {
          "format": "date-time",
          "type": "string"
        },
        "ComplianceSummary": {
          "$ref": "#/definitions/ComplianceSummary"
        },
        "IsSupervised": {
          "type": "boolean"
        },
        "DeviceMCC": {
          "$ref": "#/definitions/DeviceMcc"
        },
        "IsRemoteManagementEnabled": {
          "type": "string"
        },
        "DataEncryptionYN": {
          "type": "string"
        },
        "AcLineStatus": {
          "format": "int32",
          "type": "integer"
        },
        "VirtualMemory": {
          "format": "int64",
          "type": "integer"
        },
        "OEMInfo": {
          "type": "string"
        },
        "DeviceCapacity": {
          "format": "double",
          "type": "number"
        },
        "AvailableDeviceCapacity": {
          "format": "double",
          "type": "number"
        },
        "LastSystemSampleTime": {
          "format": "date-time",
          "type": "string"
        },
        "IsDeviceDNDEnabled": {
          "type": "boolean"
        },
        "IsDeviceLocatorEnabled": {
          "type": "boolean"
        },
        "IsCloudBackupEnabled": {
          "type": "boolean"
        },
        "IsActivationLockEnabled": {
          "type": "boolean"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      }
    },
    "ComplianceSummary": {
      "type": "object",
      "properties": {
        "DeviceCompliance": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCompliance"
          }
        }
      }
    },
    "DeviceMcc": {
      "type": "object",
      "properties": {
        "SIMMCC": {
          "type": "string"
        },
        "CurrentMCC": {
          "type": "string"
        }
      },
      "example": {
        "SIMMCC": "test",
        "CurrentMCC": "test"
      }
    },
    "SmsMessage": {
      "type": "object",
      "properties": {
        "MessageBody": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        },
        "BulkValues": {
          "$ref": "#/definitions/BulkValues"
        }
      },
      "example": {
        "MessageBody": "test",
        "PhoneNumber": "test"
      }
    },
    "GpsCoordinate": {
      "type": "object",
      "properties": {
        "SampleTime": {
          "type": "string"
        },
        "Latitude": {
          "type": "string"
        },
        "Longitude": {
          "type": "string"
        },
        "Elevation": {
          "type": "string"
        },
        "Speed": {
          "type": "string"
        },
        "Note": {
          "type": "string"
        },
        "DeviceId": {
          "$ref": "#/definitions/EntityId"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {
        "SampleTime": "test",
        "Latitude": "test",
        "Longitude": "test",
        "Elevation": "test",
        "Speed": "test",
        "Note": "test"
      }
    },
    "PushNotificationMessage": {
      "type": "object",
      "properties": {
        "MessageBody": {
          "type": "string"
        },
        "Application": {
          "type": "string"
        },
        "MessageType": {
          "type": "string"
        },
        "BulkValues": {
          "$ref": "#/definitions/BulkValues"
        }
      },
      "example": {
        "MessageBody": "test",
        "Application": "test",
        "MessageType": "test"
      }
    },
    "EmailMessage": {
      "type": "object",
      "properties": {
        "MessageBody": {
          "type": "string"
        },
        "ToAddress": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "BulkValues": {
          "$ref": "#/definitions/BulkValues"
        }
      },
      "example": {
        "MessageBody": "test",
        "ToAddress": "test",
        "Subject": "test"
      }
    },
    "ApplyAppLock": {
      "type": "object",
      "properties": {
        "BundleId": {
          "type": "string"
        },
        "TargetBundleId": {
          "type": "string"
        },
        "BulkInput": {
          "$ref": "#/definitions/BulkInput"
        },
        "UnlockTime": {
          "type": "string"
        },
        "ExecutablePath": {
          "type": "string"
        },
        "Arguments": {
          "type": "string"
        },
        "AppUserModelId": {
          "type": "string"
        }
      },
      "example": {
        "BundleId": "test",
        "TargetBundleId": "test",
        "UnlockTime": "test",
        "ExecutablePath": "test",
        "Arguments": "test",
        "AppUserModelId": "test"
      }
    },
    "RemoveAppLock": {
      "type": "object",
      "properties": {
        "BulkInput": {
          "$ref": "#/definitions/BulkInput"
        }
      },
      "example": {}
    },
    "TagsModel": {
      "description": "Gateway Configuration Information",
      "type": "object",
      "properties": {
        "Tag": {
          "description": "Tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagResponseModel"
          }
        }
      }
    },
    "TagResponseModel": {
      "description": "This entity represents Profile attributes.",
      "type": "object",
      "properties": {
        "TagName": {
          "description": "TagName",
          "type": "string"
        },
        "DateTagged": {
          "format": "date-time",
          "type": "string"
        },
        "TagAvatar": {
          "type": "string"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      }
    },
    "DeviceRemoteSessionsResult": {
      "type": "object",
      "properties": {
        "RemoteSessions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceRemoteSessionDetails"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "RemoteSessions": [
          {
            "DeviceID": 1,
            "SerialNumber": "test",
            "FriendlyName": "test",
            "EnrollmentUserName": "test",
            "AdminUserName": "test",
            "SessionStartTime": "test",
            "SessionEndTime": "test"
          }
        ],
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "DeviceRemoteSessionDetails": {
      "type": "object",
      "properties": {
        "DeviceID": {
          "format": "int32",
          "type": "integer"
        },
        "SerialNumber": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "EnrollmentUserName": {
          "type": "string"
        },
        "AdminUserName": {
          "type": "string"
        },
        "SessionStartTime": {
          "type": "string"
        },
        "SessionEndTime": {
          "type": "string"
        }
      },
      "example": {
        "DeviceID": 1,
        "SerialNumber": "test",
        "FriendlyName": "test",
        "EnrollmentUserName": "test",
        "AdminUserName": "test",
        "SessionStartTime": "test",
        "SessionEndTime": "test"
      }
    },
    "DeviceSerializationExceptionSearchResult": {
      "type": "object",
      "properties": {
        "DeviceSerialNrException": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceSerialNrException"
          }
        }
      },
      "example": {
        "DeviceSerialNrException": [
          {
            "FriendlyName": "test",
            "DeviceID": "test",
            "EnrollmentUserName": "test",
            "AssetNumber": "test",
            "SerialNumber": "test",
            "DeviceUDID": "test",
            "CustomAttributes": [
              {
                "Name": "test",
                "Value": "test",
                "ApplicationGroup": "test"
              }
            ]
          }
        ]
      }
    },
    "DeviceSerialNrException": {
      "type": "object",
      "properties": {
        "FriendlyName": {
          "type": "string"
        },
        "DeviceID": {
          "type": "string"
        },
        "EnrollmentUserName": {
          "type": "string"
        },
        "AssetNumber": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "DeviceUDID": {
          "type": "string"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCustomAttribute"
          }
        }
      },
      "example": {
        "FriendlyName": "test",
        "DeviceID": "test",
        "EnrollmentUserName": "test",
        "AssetNumber": "test",
        "SerialNumber": "test",
        "DeviceUDID": "test",
        "CustomAttributes": [
          {
            "Name": "test",
            "Value": "test",
            "ApplicationGroup": "test"
          }
        ]
      }
    },
    "DeviceCustomAttribute": {
      "type": "object",
      "properties": {
        "Name": {
          "pattern": "^[^*:?\"<>|\\\\/;,\\[\\]\\(\\)]+$",
          "type": "string"
        },
        "Value": {
          "pattern": "^[^*:?\"<>|\\\\/;,\\[\\]\\(\\)]+$",
          "type": "string"
        },
        "ApplicationGroup": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "Value": "test",
        "ApplicationGroup": "test"
      }
    },
    "DeviceCountFilterCriteriaRequestModel": {
      "description": "Enrolled Devices Count Model",
      "type": "object",
      "properties": {
        "OrganizationGroupId": {
          "description": "Gets or sets the OrganizationGroupId",
          "type": "string"
        },
        "TagName": {
          "description": "Gets or sets the TagName",
          "type": "string"
        },
        "DeviceSeenSince": {
          "description": "Gets or sets the DeviceSeenSince",
          "type": "string"
        },
        "DeviceSeenTill": {
          "description": "Gets or sets the DeviceSeenTill",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "OrganizationGroupId": "test",
        "TagName": "test",
        "DeviceSeenSince": "test",
        "DeviceSeenTill": "test",
        "id": 1
      }
    },
    "DeviceCountFilterCriteriaResponseModel": {
      "description": "Enrolled Devices Count Model",
      "type": "object",
      "properties": {
        "DevicesCount": {
          "format": "int32",
          "description": "Gets or sets the count of enrolled devices",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "DevicesCount": 1,
        "id": 1
      }
    },
    "DeviceEventsStatusHistoryWithNextPageUriModel": {
      "description": "The device status history.",
      "type": "object",
      "properties": {
        "Devices": {
          "description": "Gets or sets the devices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceEventsStatusHistoryEntryModel"
          }
        },
        "NextPage": {
          "description": "Gets or sets the next page.",
          "type": "string"
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Devices": [
          {
            "SerialNumber": "test",
            "DeviceName": "test",
            "Events": [
              {
                "UserName": "test",
                "DateTime": "test",
                "Status": "test"
              }
            ]
          }
        ],
        "NextPage": "test",
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "DeviceEventsStatusHistoryEntryModel": {
      "description": "DeviceStatusHistoryEntryModel has the event status value of an Device based on serial number.",
      "type": "object",
      "properties": {
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "DeviceName": {
          "description": "Gets or sets the device name.",
          "type": "string"
        },
        "Events": {
          "description": "Gets or sets the events.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceEventStatusHistoryEntryDetailsModel"
          }
        }
      },
      "example": {
        "SerialNumber": "test",
        "DeviceName": "test",
        "Events": [
          {
            "UserName": "test",
            "DateTime": "test",
            "Status": "test"
          }
        ]
      }
    },
    "DeviceEventStatusHistoryEntryDetailsModel": {
      "description": "The device status history entry event details.",
      "type": "object",
      "properties": {
        "UserName": {
          "description": "Gets or sets the user name.",
          "type": "string"
        },
        "DateTime": {
          "description": "Gets or sets the date time.",
          "type": "string"
        },
        "Status": {
          "description": "Gets or sets the status.",
          "type": "string"
        }
      },
      "example": {
        "UserName": "test",
        "DateTime": "test",
        "Status": "test"
      }
    },
    "DeviceVmInstanceModel": {
      "description": "Device VM Instance Model.",
      "type": "object",
      "properties": {
        "vmInstanceId": {
          "format": "int64",
          "description": "Gets or sets the VM Instance Id.",
          "type": "integer"
        },
        "instanceId": {
          "description": "Gets or sets a unique 32-bit key that is dynamically generated for each instance i.e. Instance Id.",
          "type": "string"
        },
        "deviceId": {
          "format": "int32",
          "description": "Gets or sets the Device ID.",
          "type": "integer"
        },
        "profileVersionId": {
          "format": "int32",
          "description": "Gets or sets a Profile Version Id which corresponds to all the attributes associated with the instance records.",
          "type": "integer"
        },
        "sampleTime": {
          "format": "date-time",
          "description": "Gets or sets the Sample Time for the VM Instance.",
          "type": "string"
        },
        "transmitTime": {
          "format": "date-time",
          "description": "Gets or sets the Transmit Time.",
          "type": "string"
        },
        "vmInstanceName": {
          "description": "Gets or sets the VM Instance's Name.",
          "type": "string"
        },
        "vmInstanceState": {
          "format": "int32",
          "description": "Gets or sets the VM Instance's State.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19
          ],
          "type": "integer"
        },
        "downloadPercentage": {
          "format": "int32",
          "description": "Gets or sets the download percentage of the VM Instance.",
          "type": "integer"
        },
        "expirationDate": {
          "format": "date-time",
          "description": "Gets or sets the Expiration Date of the VM Instance.",
          "type": "string"
        },
        "offlineTimeLimit": {
          "format": "int64",
          "description": "Gets or sets the Offline Time Limit for the VM Instance.",
          "type": "integer"
        },
        "copyAndPaste": {
          "description": "Gets or sets a value indicating whether Copy and Paste is allowed for this Instance Record or not.",
          "type": "string"
        },
        "dragAndDrop": {
          "description": "Gets or sets a value indicating whether Drag and Drop is allowed for this Instance Record or not.",
          "type": "string"
        },
        "folderSharing": {
          "description": "Gets or sets a value indicating whether Folder Sharing is allowed for this Instance Record or not.",
          "type": "string"
        },
        "memorySettings": {
          "description": "Gets or sets a value indicating whether Memory Settings is allowed for this Instance Record or not.",
          "type": "string"
        },
        "cpuSettings": {
          "description": "Gets or sets a value indicating whether CPU Settings is allowed for this Instance Record or not.",
          "type": "string"
        },
        "serverUrl": {
          "description": "Gets or sets a value of Server URL for this Instance Record.",
          "type": "string"
        },
        "usbRestrictions": {
          "description": "Gets or sets a value indicating whether USB Restrictions is allowed for this Instance Record.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "DeviceVmInstanceUsbRestrictionsModel": {
      "description": "Device Vm Instance USB Restrictions Model",
      "type": "object",
      "properties": {
        "profileVersionId": {
          "format": "int32",
          "description": "Gets or sets a value for the Profile Version Id that corresponds to all the profile setting values.",
          "type": "integer"
        },
        "audio": {
          "description": "Gets or sets a value for the Audio settings for the VM Instance.",
          "type": "string"
        },
        "communicationAndCdc": {
          "description": "Gets or sets a value for the Communication and CDC settings for the VM Instance.",
          "type": "string"
        },
        "physical": {
          "description": "Gets or sets a value for the Physical settings for the VM Instance.",
          "type": "string"
        },
        "image": {
          "description": "Gets or sets a value for the Image settings for the VM Instance.",
          "type": "string"
        },
        "printer": {
          "description": "Gets or sets a value for the Printer settings for the VM Instance.",
          "type": "string"
        },
        "massStorage": {
          "description": "Gets or sets a value for the Mass Storage settings for the VM Instance.",
          "type": "string"
        },
        "smartCard": {
          "description": "Gets or sets a value for the Smart Card settings for the VM Instance.",
          "type": "string"
        },
        "contentSecurity": {
          "description": "Gets or sets a value for the Content Security settings for the VM Instance.",
          "type": "string"
        },
        "video": {
          "description": "Gets or sets a value for the Video settings for the VM Instance.",
          "type": "string"
        },
        "wirelessController": {
          "description": "Gets or sets a value for the Wireless Controller settings for the VM Instance.",
          "type": "string"
        },
        "miscellaneous": {
          "description": "Gets or sets a value for the Miscellaneous settings for the VM Instance.",
          "type": "string"
        },
        "vendorName": {
          "description": "Gets or sets a value for the Vendor Name for the VM Instance.",
          "type": "string"
        },
        "vendorId": {
          "description": "Gets or sets a value for the Vendor Id for the VM Instance.",
          "type": "string"
        },
        "productId": {
          "description": "Gets or sets a value for the Product Id for the VM Instance.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "profileVersionId": 1,
        "audio": "test",
        "communicationAndCdc": "test",
        "physical": "test",
        "image": "test",
        "printer": "test",
        "massStorage": "test",
        "smartCard": "test",
        "contentSecurity": "test",
        "video": "test",
        "wirelessController": "test",
        "miscellaneous": "test",
        "vendorName": "test",
        "vendorId": "test",
        "productId": "test",
        "id": 1
      }
    },
    "DevicePersonMapModel": {
      "description": "Device person map Information",
      "type": "object",
      "properties": {
        "DeviceId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets the Device Id that this user has logged in to"
        },
        "ManagedAppleIdentifier": {
          "description": "Gets or sets The managed apple id that is currently using this device",
          "type": "string"
        }
      },
      "example": {
        "ManagedAppleIdentifier": "test"
      }
    },
    "DeviceRMCababilitiesModel": {
      "description": "DeviceRMCababilitiesModel.",
      "type": "object",
      "properties": {
        "RmVersion": {
          "description": "Gets or sets  RmVersion",
          "type": "string"
        },
        "RmVendorid": {
          "format": "int32",
          "description": "Gets or sets RmVendorid",
          "type": "integer"
        },
        "RmconnectionMode": {
          "format": "int32",
          "description": "Gets or sets RmconnectionMode",
          "type": "integer"
        },
        "RmpayloadHeaderVersion": {
          "format": "int32",
          "description": "Gets or sets RmpayloadHeaderVersion",
          "type": "integer"
        },
        "RmTcpSecurityMode": {
          "description": "Gets or sets a value indicating whether it is True if Non-ECB and False if ECB.",
          "type": "boolean"
        }
      }
    },
    "LoggedInUsersModel": {
      "description": "The logged in users model.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name of the logged in user.",
          "type": "string"
        },
        "AppleID": {
          "description": "Gets or sets the apple id.",
          "type": "string"
        },
        "IsActiveUser": {
          "description": "Gets or sets a value indicating whether is active user.",
          "type": "boolean"
        },
        "HasDataToSync": {
          "description": "Gets or sets a value indicating whether has data to sync.",
          "type": "boolean"
        },
        "DataQuota": {
          "format": "double",
          "description": "Gets or sets the data quota.",
          "type": "number"
        },
        "DataUsed": {
          "format": "double",
          "description": "Gets or sets the data used.",
          "type": "number"
        },
        "SampleTime": {
          "format": "date-time",
          "description": "Gets or sets the sample time.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "WorkspaceEnrollmentRestrictionsModel": {
      "description": "WorkspaceEnrollmentRestrictionsModel.",
      "type": "object",
      "properties": {
        "locationgroupid": {
          "format": "int32",
          "description": "Gets or sets The Location group ID",
          "type": "integer"
        },
        "enrollmentuserid": {
          "format": "int32",
          "description": "Gets or sets The Enrollment User ID",
          "type": "integer"
        },
        "platformid": {
          "format": "int32",
          "description": "Gets or sets The Platform ID",
          "type": "integer"
        },
        "udid": {
          "description": "Gets or sets The UDID",
          "type": "string"
        },
        "devicemodel": {
          "description": "Gets or sets The Device Model",
          "type": "string"
        },
        "devicemodelidentifier": {
          "description": "Gets or sets The Device Model",
          "type": "string"
        },
        "deviceoperatingsystem": {
          "description": "Gets or sets The Device Operating System",
          "type": "string"
        },
        "deviceoeminfo": {
          "description": "Gets or sets The Device OEM Info",
          "type": "string"
        }
      },
      "example": {
        "locationgroupid": 1,
        "enrollmentuserid": 1,
        "platformid": 1,
        "udid": "test",
        "devicemodel": "test",
        "devicemodelidentifier": "test",
        "deviceoperatingsystem": "test",
        "deviceoeminfo": "test"
      }
    },
    "WorkspaceEnrollmentRestrictionsResponseModel": {
      "description": "WorkspaceEnrollmentRestrictionsResponseModel",
      "type": "object",
      "properties": {
        "isenrollmentallowed": {
          "format": "int32",
          "description": "Gets or sets the Is Enrollment Allowed",
          "type": "integer"
        },
        "reason": {
          "description": "Gets or sets the reason",
          "type": "string"
        }
      },
      "example": {
        "isenrollmentallowed": 1,
        "reason": "test"
      }
    },
    "AppStatusModel": {
      "description": "AppStatusModel",
      "type": "object",
      "properties": {
        "appstatus": {
          "format": "int32",
          "description": "Gets or sets AppStatus",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "devicestatus": {
          "description": "Dictionary containing setting name and value for Status Endpoint data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceStatusMessage"
          }
        },
        "authentication": {
          "$ref": "#/definitions/DeviceAppStatusAuthDetailsModel",
          "description": "Authentication details"
        }
      },
      "example": {
        "appstatus": 0,
        "devicestatus": [
          {
            "setting": "test",
            "value": "test"
          }
        ]
      }
    },
    "DeviceStatusMessage": {
      "type": "object",
      "properties": {
        "setting": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "example": {
        "setting": "test",
        "value": "test"
      }
    },
    "DeviceAppStatusAuthDetailsModel": {
      "description": "Device AppStatus Auth Details Model",
      "type": "object",
      "properties": {
        "ssoenabled": {
          "description": "Indicates whether SSO is enabled for the OG or not",
          "type": "boolean"
        },
        "authenticationurl": {
          "description": "Authentication Url;",
          "type": "string"
        }
      },
      "example": {
        "ssoenabled": true,
        "authenticationurl": "test"
      }
    },
    "DeviceOneTimeTokenModel": {
      "description": "WorkspaceEnrollmentRestrictionsModel.",
      "type": "object",
      "properties": {
        "oneTimeToken": {
          "description": "Gets or sets The Location group ID",
          "type": "string"
        },
        "deviceServicesUrl": {
          "description": "Gets or sets The Location group ID",
          "type": "string"
        },
        "authenticationType": {
          "format": "int32",
          "description": "Auth type for one time token",
          "type": "integer"
        },
        "authenticationGroup": {
          "description": "Auth group for one time token generated",
          "type": "string"
        }
      },
      "example": {
        "oneTimeToken": "test",
        "deviceServicesUrl": "test",
        "authenticationType": 1,
        "authenticationGroup": "test"
      }
    },
    "DeviceManagedSettings": {
      "type": "object",
      "properties": {
        "VoiceRoamingAllowed": {
          "type": "boolean"
        },
        "DataRoamingAllowed": {
          "type": "boolean"
        },
        "PersonalHotspotAllowed": {
          "type": "boolean"
        }
      },
      "example": {
        "VoiceRoamingAllowed": true,
        "DataRoamingAllowed": true,
        "PersonalHotspotAllowed": true
      }
    },
    "GenerateAppToken": {
      "type": "object",
      "properties": {
        "AdminUserId": {
          "format": "int32",
          "type": "integer"
        },
        "ExpiryHours": {
          "format": "int32",
          "type": "integer"
        },
        "ExpiryMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "TokenLength": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "AdminUserId": 1,
        "ExpiryHours": 1,
        "ExpiryMinutes": 1,
        "TokenLength": 1
      }
    },
    "GenerateAppTokenResult": {
      "type": "object",
      "properties": {
        "AuthorizationToken": {
          "type": "string"
        },
        "ExpiresOn": {
          "type": "string"
        },
        "IsTokenCreated": {
          "type": "boolean"
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "AuthorizationToken": "test",
        "ExpiresOn": "test",
        "IsTokenCreated": true,
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "DeviceExtensiveSearchResult": {
      "type": "object",
      "properties": {
        "Devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceDetailsExt"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeviceDetailsExt": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "Udid": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "DeviceFriendlyName": {
          "type": "string"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "UserName": {
          "type": "string"
        },
        "LastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "EnrollmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "Compliant": {
          "type": "boolean"
        },
        "AssetNumber": {
          "type": "string"
        },
        "EnrollmentStatus": {
          "type": "string"
        },
        "UnEnrolledDate": {
          "format": "date-time",
          "type": "string"
        },
        "DeviceNetworkInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceNetworkInfo"
          }
        },
        "Products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceProduct"
          }
        },
        "SmartGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceSmartGroup"
          }
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCustomAttribute"
          }
        }
      }
    },
    "DeviceNetworkInfo": {
      "type": "object",
      "properties": {
        "ConnectionType": {
          "type": "string"
        },
        "IPAddress": {
          "type": "string"
        },
        "MACAddress": {
          "type": "string"
        }
      },
      "example": {
        "ConnectionType": "test",
        "IPAddress": "test",
        "MACAddress": "test"
      }
    },
    "DeviceProduct": {
      "type": "object",
      "properties": {
        "ProductId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        }
      },
      "example": {
        "ProductId": 1,
        "Name": "test",
        "Status": "test"
      }
    },
    "DeviceSmartGroup": {
      "type": "object",
      "properties": {
        "SmartGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "SmartGroupId": 1,
        "Name": "test"
      }
    },
    "DeviceExtensiveLiteSearchResult": {
      "type": "object",
      "properties": {
        "Devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceExtLite"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeviceExtLite": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "Udid": {
          "type": "string"
        },
        "DeviceFriendlyName": {
          "type": "string"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceNetworkInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceNetworkInfo"
          }
        },
        "LastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCustomAttribute"
          }
        }
      }
    },
    "BulkSettings": {
      "type": "object",
      "properties": {
        "SendMessage": {
          "format": "int32",
          "type": "integer"
        },
        "EnterpriseWipe": {
          "format": "int32",
          "type": "integer"
        },
        "DeleteDevice": {
          "format": "int32",
          "type": "integer"
        },
        "GPS": {
          "format": "int32",
          "type": "integer"
        },
        "LockDevice": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "SendMessage": 1,
        "EnterpriseWipe": 1,
        "DeleteDevice": 1,
        "GPS": 1,
        "LockDevice": 1
      }
    },
    "DeviceCountSummary": {
      "type": "object",
      "properties": {
        "TotalDevices": {
          "format": "int32",
          "type": "integer"
        },
        "Security": {
          "$ref": "#/definitions/DeviceCountBySecurity"
        },
        "Ownership": {
          "$ref": "#/definitions/DeviceCountByOwnership"
        },
        "Platforms": {
          "$ref": "#/definitions/DeviceCountByPlatforms"
        },
        "EnrollmentStatus": {
          "$ref": "#/definitions/DeviceCountByEnrollmentStatus"
        }
      },
      "example": {
        "TotalDevices": 1
      }
    },
    "DeviceCountBySecurity": {
      "type": "object",
      "properties": {
        "Compromised": {
          "format": "int32",
          "type": "integer"
        },
        "NoPasscode": {
          "format": "int32",
          "type": "integer"
        },
        "NotEncrypted": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Compromised": 1,
        "NoPasscode": 1,
        "NotEncrypted": 1
      }
    },
    "DeviceCountByOwnership": {
      "type": "object",
      "properties": {
        "CorporateDedicated": {
          "format": "int32",
          "type": "integer"
        },
        "CorporateShared": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeOwned": {
          "format": "int32",
          "type": "integer"
        },
        "Undefined": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "CorporateDedicated": 1,
        "CorporateShared": 1,
        "EmployeeOwned": 1,
        "Undefined": 1
      }
    },
    "DeviceCountByPlatforms": {
      "type": "object",
      "properties": {
        "WindowsMobile": {
          "format": "int32",
          "type": "integer"
        },
        "Apple": {
          "format": "int32",
          "type": "integer"
        },
        "BlackBerry": {
          "format": "int32",
          "type": "integer"
        },
        "Symbian": {
          "format": "int32",
          "type": "integer"
        },
        "Android": {
          "format": "int32",
          "type": "integer"
        },
        "Athena": {
          "format": "int32",
          "type": "integer"
        },
        "Motorola": {
          "format": "int32",
          "type": "integer"
        },
        "WindowsPhone": {
          "format": "int32",
          "type": "integer"
        },
        "WindowsPC": {
          "format": "int32",
          "type": "integer"
        },
        "AppleOsX": {
          "format": "int32",
          "type": "integer"
        },
        "WindowsPhone8": {
          "format": "int32",
          "type": "integer"
        },
        "WindowsRT": {
          "format": "int32",
          "type": "integer"
        },
        "BlackBerry10": {
          "format": "int32",
          "type": "integer"
        },
        "AppleTv": {
          "format": "int32",
          "type": "integer"
        },
        "QNX": {
          "format": "int32",
          "type": "integer"
        },
        "ChromeBook": {
          "format": "int32",
          "type": "integer"
        },
        "MaxTypeValue": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "WindowsMobile": 1,
        "Apple": 1,
        "BlackBerry": 1,
        "Symbian": 1,
        "Android": 1,
        "Athena": 1,
        "Motorola": 1,
        "WindowsPhone": 1,
        "WindowsPC": 1,
        "AppleOsX": 1,
        "WindowsPhone8": 1,
        "WindowsRT": 1,
        "BlackBerry10": 1,
        "AppleTv": 1,
        "QNX": 1,
        "ChromeBook": 1,
        "MaxTypeValue": 1
      }
    },
    "DeviceCountByEnrollmentStatus": {
      "type": "object",
      "properties": {
        "Enrolled": {
          "format": "int32",
          "type": "integer"
        },
        "Unenrolled": {
          "format": "int32",
          "type": "integer"
        },
        "Registered": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Enrolled": 1,
        "Unenrolled": 1,
        "Registered": 1
      }
    },
    "CurrentEnrollmentStatus": {
      "type": "object",
      "properties": {
        "EnrollmentStatus": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14
          ],
          "type": "integer"
        },
        "DeviceManagedBy": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "Username": {
          "type": "string"
        },
        "Domain": {
          "type": "string"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {
        "EnrollmentStatus": 0,
        "DeviceManagedBy": 0,
        "Username": "test",
        "Domain": "test"
      }
    },
    "DeviceRecordRequestMessage": {
      "description": "Device Record Request Message",
      "type": "object",
      "properties": {
        "DeviceUid": {
          "description": "Device Uid",
          "type": "string"
        },
        "DeviceImei": {
          "description": "Device IMEI",
          "type": "string"
        },
        "DeviceSerialNumber": {
          "description": "Device Serial Number",
          "type": "string"
        },
        "DeviceMacAddress": {
          "description": "Device Mac Address",
          "type": "string"
        },
        "DeviceAssetNumber": {
          "description": "Device Asset Number",
          "type": "string"
        },
        "Platform": {
          "format": "int32",
          "description": "Device Platform",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            100,
            101,
            102,
            103,
            104,
            105,
            200
          ],
          "type": "integer"
        },
        "Product": {
          "description": "Product",
          "type": "string"
        },
        "Model": {
          "description": "Model",
          "type": "string"
        },
        "Compromised": {
          "description": "Compromised status",
          "type": "boolean"
        },
        "OsVersion": {
          "description": "Os Version",
          "type": "string"
        },
        "OsMajorVersion": {
          "format": "int32",
          "description": "Os Major Version",
          "type": "integer"
        },
        "OsMinorVersion": {
          "format": "int32",
          "description": "Os Minor Version",
          "type": "integer"
        },
        "EnrollmentCategory": {
          "format": "int32",
          "description": "Type of enrollment",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "AccessRights": {
          "description": "The Access Rights of the device.",
          "type": "string"
        },
        "Enterprise": {
          "description": "Is there an enterprise service running on the device",
          "type": "boolean"
        },
        "EnrollmentUserId": {
          "format": "int32",
          "description": "Enrollment User Id",
          "type": "integer"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "description": "Organization Group Id",
          "type": "integer"
        },
        "DeviceManagedBy": {
          "format": "int32",
          "description": "Gets or sets the device managed by.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "DeviceEnrollmentStatus": {
          "format": "int32",
          "description": "Gets or sets the device enrollment status.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14
          ],
          "type": "integer"
        }
      },
      "example": {
        "DeviceUid": "test",
        "DeviceImei": "test",
        "DeviceSerialNumber": "test",
        "DeviceMacAddress": "test",
        "DeviceAssetNumber": "test",
        "Platform": 0,
        "Product": "test",
        "Model": "test",
        "Compromised": true,
        "OsVersion": "test",
        "OsMajorVersion": 1,
        "OsMinorVersion": 1,
        "EnrollmentCategory": 0,
        "AccessRights": "test",
        "Enterprise": true,
        "EnrollmentUserId": 1,
        "OrganizationGroupId": 1
      }
    },
    "DeviceUserSearchResult": {
      "type": "object",
      "properties": {
        "DeviceUser": {
          "$ref": "#/definitions/User"
        }
      },
      "example": {}
    },
    "User": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Status": {
          "type": "boolean"
        },
        "Email": {
          "type": "string"
        },
        "SecurityType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "ContactNumber": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "MobileNumber": {
          "type": "string"
        },
        "MessageType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            -1
          ],
          "type": "integer"
        },
        "EmailUserName": {
          "type": "string"
        },
        "Group": {
          "type": "string"
        },
        "LocationGroupId": {
          "type": "string"
        },
        "Role": {
          "type": "string"
        },
        "EnrolledDevicesCount": {
          "type": "string"
        },
        "MessageTemplateId": {
          "type": "string"
        },
        "CustomAttribute1": {
          "type": "string"
        },
        "CustomAttribute2": {
          "type": "string"
        },
        "CustomAttribute3": {
          "type": "string"
        },
        "CustomAttribute4": {
          "type": "string"
        },
        "CustomAttribute5": {
          "type": "string"
        },
        "ExternalId": {
          "type": "string"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      }
    },
    "DeviceProfileSearchResult": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "$ref": "#/definitions/EntityReference"
        },
        "DeviceProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceProfileApiEntity"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeviceProfileApiEntity": {
      "type": "object",
      "properties": {
        "Status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "LocationGroupId": {
          "$ref": "#/definitions/EntityReference"
        },
        "CurrentVersion": {
          "format": "int32",
          "type": "integer"
        },
        "AssignmentType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {
        "Status": 0,
        "Name": "test",
        "Description": "test",
        "CurrentVersion": 1,
        "AssignmentType": 0
      }
    },
    "DeviceEventLogSearchResult": {
      "type": "object",
      "properties": {
        "DeviceEventLogEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceEventLogEntry"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeviceEventLogEntry": {
      "type": "object",
      "properties": {
        "EventDataList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventData"
          }
        },
        "Severity": {
          "type": "string"
        },
        "TimeStamp": {
          "type": "string"
        },
        "Source": {
          "type": "string"
        },
        "Event": {
          "type": "string"
        },
        "AdminAccount": {
          "type": "string"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {
        "Severity": "test",
        "TimeStamp": "test",
        "Source": "test",
        "Event": "test",
        "AdminAccount": "test"
      }
    },
    "EventData": {
      "type": "object",
      "properties": {
        "EventDataType": {
          "type": "string"
        },
        "OldValue": {
          "type": "string"
        },
        "NewValue": {
          "type": "string"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {
        "EventDataType": "test",
        "OldValue": "test",
        "NewValue": "test"
      }
    },
    "DeviceSecurityInfo": {
      "type": "object",
      "properties": {
        "IsCompromised": {
          "type": "boolean"
        },
        "DataProtectionEnabled": {
          "type": "boolean"
        },
        "BlockLevelEncryption": {
          "type": "boolean"
        },
        "FileLevelEncryption": {
          "type": "boolean"
        },
        "IsPasscodePresent": {
          "type": "boolean"
        },
        "IsPasscodeCompliant": {
          "type": "boolean"
        },
        "PasscodeLockGracePeriod": {
          "format": "int32",
          "type": "integer"
        },
        "PasscodeLockGracePeriodEnforced": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "IsCompromised": true,
        "DataProtectionEnabled": true,
        "BlockLevelEncryption": true,
        "FileLevelEncryption": true,
        "IsPasscodePresent": true,
        "IsPasscodeCompliant": true,
        "PasscodeLockGracePeriod": 1,
        "PasscodeLockGracePeriodEnforced": 1
      }
    },
    "DeviceNetworkInfoEntityModel": {
      "type": "object",
      "properties": {
        "PhoneNumber": {
          "type": "string"
        },
        "RoamingStatus": {
          "type": "boolean"
        },
        "DataRoamingEnabled": {
          "type": "boolean"
        },
        "VoiceRoamingEnabled": {
          "type": "boolean"
        },
        "IPAddress": {
          "$ref": "#/definitions/DeviceIPAddress"
        },
        "CellularNetworkInfo": {
          "$ref": "#/definitions/DeviceCellularNetworkInfo"
        },
        "WifiInfo": {
          "$ref": "#/definitions/DeviceWifiInfo"
        }
      },
      "example": {
        "PhoneNumber": "test",
        "RoamingStatus": true,
        "DataRoamingEnabled": true,
        "VoiceRoamingEnabled": true
      }
    },
    "DeviceIPAddress": {
      "type": "object",
      "properties": {
        "WifiIPAddress": {
          "type": "string"
        },
        "CellularIPAddress": {
          "type": "string"
        },
        "EthernetIPAddress": {
          "type": "string"
        }
      },
      "example": {
        "WifiIPAddress": "test",
        "CellularIPAddress": "test",
        "EthernetIPAddress": "test"
      }
    },
    "DeviceCellularNetworkInfo": {
      "type": "object",
      "properties": {
        "CellularTechnology": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "CurrentOperator": {
          "type": "string"
        },
        "CurrentSIM": {
          "type": "string"
        },
        "ApprovedSims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceSimCard"
          }
        },
        "CarrierVersion": {
          "type": "string"
        },
        "SignalStrength": {
          "type": "string"
        },
        "DeviceMCC": {
          "$ref": "#/definitions/DeviceMcc"
        },
        "DeviceMNC": {
          "$ref": "#/definitions/DeviceMnc"
        }
      },
      "example": {
        "CurrentOperator": "test",
        "CurrentSIM": "test",
        "ApprovedSims": [
          {
            "SimCardId": "test"
          }
        ],
        "CarrierVersion": "test",
        "SignalStrength": "test"
      }
    },
    "DeviceWifiInfo": {
      "type": "object",
      "properties": {
        "WifiMacAddress": {
          "type": "string"
        },
        "SignalStrength": {
          "type": "string"
        }
      },
      "example": {
        "WifiMacAddress": "test",
        "SignalStrength": "test"
      }
    },
    "DeviceSimCard": {
      "type": "object",
      "properties": {
        "SimCardId": {
          "type": "string"
        }
      },
      "example": {
        "SimCardId": "test"
      }
    },
    "DeviceMnc": {
      "type": "object",
      "properties": {
        "SimMNC": {
          "type": "string"
        },
        "CurrentMNC": {
          "type": "string"
        }
      },
      "example": {
        "SimMNC": "test",
        "CurrentMNC": "test"
      }
    },
    "DeviceNotesSearchResult": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "$ref": "#/definitions/EntityReference"
        },
        "DeviceNotes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceNotes"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeviceNotes": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "Note": {
          "type": "string"
        },
        "CreatedOn": {
          "type": "string"
        },
        "ModifiedOn": {
          "type": "string"
        }
      },
      "example": {
        "Id": 1,
        "DeviceId": 1,
        "Note": "test",
        "CreatedOn": "test",
        "ModifiedOn": "test"
      }
    },
    "OfflineDeviceEntity": {
      "type": "object",
      "properties": {
        "DeviceRecordId": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {
        "DeviceRecordId": 1
      }
    },
    "PushMessage": {
      "type": "object",
      "properties": {
        "MessageBody": {
          "type": "string"
        },
        "Application": {
          "type": "string"
        },
        "MessageType": {
          "type": "string"
        }
      },
      "example": {
        "MessageBody": "test",
        "Application": "test",
        "MessageType": "test"
      }
    },
    "Email": {
      "type": "object",
      "properties": {
        "MessageBody": {
          "type": "string"
        },
        "ToAddress": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "example": {
        "MessageBody": "test",
        "ToAddress": "test",
        "Subject": "test"
      }
    },
    "Sms": {
      "type": "object",
      "properties": {
        "MessageBody": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        }
      },
      "example": {
        "MessageBody": "test",
        "PhoneNumber": "test"
      }
    },
    "DeviceEnrollmentInfo": {
      "type": "object",
      "properties": {
        "EnrollmentStatus": {
          "type": "string"
        },
        "LastEnrolledOn": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      }
    },
    "SmartGroupsAssignedToDeviceResult": {
      "type": "object",
      "properties": {
        "SmartGroup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupAssignedToDevice"
          }
        }
      }
    },
    "SmartGroupAssignedToDevice": {
      "type": "object",
      "properties": {
        "SmartGroupId": {
          "$ref": "#/definitions/EntityId"
        },
        "SmartGroupName": {
          "type": "string"
        }
      },
      "example": {
        "SmartGroupName": "test"
      }
    },
    "EducationModel": {
      "description": "Education account model",
      "type": "object",
      "properties": {
        "EnableEducation": {
          "description": "Gets or sets the operation to be performed on the education account. Can be set to enable/disable.",
          "type": "boolean"
        },
        "ClassSource": {
          "format": "int32",
          "description": "Gets or sets the class Source of education account.",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "MaximumResidentUsers": {
          "format": "int32",
          "description": "Gets or sets  Maximum Resident Users when ClassSource is Apple. Default Value is 10.",
          "type": "integer"
        }
      },
      "example": {
        "EnableEducation": true,
        "ClassSource": 0,
        "MaximumResidentUsers": 1
      }
    },
    "LdapDefinitionModel": {
      "description": "Represents ldap definition model",
      "type": "object",
      "properties": {
        "GroupId": {
          "description": "Gets or sets location group ID",
          "type": "string"
        },
        "LdapServerType": {
          "format": "int32",
          "description": "Gets or sets ldap server type.",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "LdapServer": {
          "description": "Gets or sets ldap server address",
          "type": "string"
        },
        "EncryptionType": {
          "format": "int32",
          "description": "Gets or sets ldap encryption type\r\nNone: 1, SSL: 2, Start TLS: 3",
          "type": "integer"
        },
        "Port": {
          "format": "int32",
          "description": "Gets or sets ldap server port number",
          "type": "integer"
        },
        "VerifySslCertificate": {
          "description": "Gets or sets flag indicates whether verify ssl certificate is enabled",
          "type": "boolean"
        },
        "ProtocolVersion": {
          "format": "int32",
          "description": "Gets or sets ldap protocol version",
          "type": "integer"
        },
        "UseServiceAccountCredentials": {
          "description": "Gets or sets flag indicates whether to use service account credentials",
          "type": "boolean"
        },
        "AuthenticationType": {
          "format": "int32",
          "description": "Gets or sets authentication type for ldap binding",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "AuthenticationUsername": {
          "description": "Gets or sets authentication username for ldap binding",
          "type": "string"
        },
        "AuthenticationPassword": {
          "description": "Gets or sets authentication password for ldap binding",
          "type": "string"
        },
        "LdapDefinitionDomainMappings": {
          "description": "Gets or sets ldap definition domain mappings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LdapDefinitionDomainMappingModel"
          }
        },
        "IsTrustBetweenDomains": {
          "description": "Gets or sets flag indicates whether there is trust between domains",
          "type": "boolean"
        },
        "SearchSubdomains": {
          "description": "Gets or sets flag indicates whether to search subdomains",
          "type": "boolean"
        },
        "ConnectionTimeout": {
          "format": "int32",
          "description": "Gets or sets ldap connection timeout in seconds",
          "type": "integer"
        },
        "RequestTimeout": {
          "format": "int32",
          "description": "Gets or sets ldap request timeout in seconds",
          "type": "integer"
        },
        "UseNullBaseDnForSearch": {
          "description": "Gets or sets flag indicates whether to use base dn for search",
          "type": "boolean"
        },
        "UseRecursiveOidForEnrollment": {
          "description": "Gets or sets flag indicates whether to use recursive OID for group search during enrollment",
          "type": "boolean"
        },
        "UseRecursiveOidForGroupSync": {
          "description": "Gets or sets flag indicates whether to use recursive OID for group sync",
          "type": "boolean"
        },
        "ObjectIdentifierDataType": {
          "format": "int32",
          "description": "Gets or sets ldap object identifier data type\r\nString: 0, Binary: 2",
          "type": "integer"
        },
        "IsSortControlSupported": {
          "description": "Gets or sets flag indicates whether or not sort control is supported",
          "type": "boolean"
        },
        "UserObjectClass": {
          "description": "Gets or sets ldap user object class",
          "type": "string"
        },
        "UserSearchFilter": {
          "description": "Gets or sets ldap user search filter",
          "type": "string"
        },
        "UserAutoMerge": {
          "description": "Gets or sets flag indicates whether user auto merge is enabled",
          "type": "boolean"
        },
        "AutoSyncUserStatus": {
          "description": "Gets or sets flag indicates whether auto sync user status is enabled",
          "type": "boolean"
        },
        "DisabledStatusValue": {
          "description": "Gets or sets ldap disabled status value",
          "type": "string"
        },
        "DisabledStatusAttributeType": {
          "format": "int32",
          "description": "Gets or sets ldap disabled status attribute type\r\nFlag Bit Match: 0, Value Exact Match: 1",
          "type": "integer"
        },
        "EnableCustomAttributes": {
          "description": "Gets or sets flag indicates whether custom attributes are enabled",
          "type": "boolean"
        },
        "UserLdapAttributes": {
          "description": "Gets or sets ldap user attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LdapAttributeModel"
          }
        },
        "GroupObjectClass": {
          "description": "Gets or sets ldap group object class",
          "type": "string"
        },
        "OrganizationalUnitObjectClass": {
          "description": "Gets or sets ldap organization unit object class",
          "type": "string"
        },
        "GroupSearchFilter": {
          "description": "Gets or sets ldap group search filter",
          "type": "string"
        },
        "GroupAutoSync": {
          "description": "Gets or sets flag indicates whether group auto sync is enabled",
          "type": "boolean"
        },
        "GroupAutoMerge": {
          "description": "Gets or sets flag indicates whether group auto merge is enabled",
          "type": "boolean"
        },
        "GroupMaximumAllowableChanges": {
          "format": "int32",
          "description": "Gets or sets ldap group maximum allowable changes",
          "type": "integer"
        },
        "GroupMemberSearchType": {
          "format": "int32",
          "description": "Gets or sets the attribute name of membership identification for a member in directory",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "GroupDirectoryUserSearchType": {
          "format": "int32",
          "description": "Gets or sets the attribute used to search a member by group",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "EnableIncrementalSync": {
          "description": "Gets or sets flag indicates whether incremental sync is enabled",
          "type": "boolean"
        },
        "EnableDnsSrv": {
          "description": "Gets or sets flag indicates whether DNS SRV is enabled",
          "type": "boolean"
        },
        "UpdateFriendlyName": {
          "description": "Gets or sets flag indicates whether to update friendly name",
          "type": "boolean"
        },
        "GroupLdapAttributes": {
          "description": "Gets or sets ldap group attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LdapAttributeModel"
          }
        },
        "ChildPermission": {
          "format": "int32",
          "description": "Gets or sets ldap child permission setting",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "UserAuthenticationType": {
          "description": "Gets or sets the user authentication type.",
          "type": "boolean"
        },
        "IdentityProvider": {
          "$ref": "#/definitions/IdentityProviderModel",
          "description": "Gets or sets the Identity provider details"
        }
      },
      "example": {
        "GroupId": "test",
        "LdapServer": "test",
        "EncryptionType": 1,
        "Port": 1,
        "VerifySslCertificate": true,
        "ProtocolVersion": 1,
        "UseServiceAccountCredentials": true,
        "AuthenticationUsername": "test",
        "AuthenticationPassword": "test",
        "LdapDefinitionDomainMappings": [
          {
            "Domain": "test",
            "LdapServerName": "test",
            "UserBaseDn": "test",
            "GroupBaseDn": "test",
            "DeviceBaseDn": "test"
          }
        ],
        "IsTrustBetweenDomains": true,
        "SearchSubdomains": true,
        "ConnectionTimeout": 1,
        "RequestTimeout": 1,
        "UseNullBaseDnForSearch": true,
        "UseRecursiveOidForEnrollment": true,
        "UseRecursiveOidForGroupSync": true,
        "ObjectIdentifierDataType": 1,
        "IsSortControlSupported": true,
        "UserObjectClass": "test",
        "UserSearchFilter": "test",
        "UserAutoMerge": true,
        "AutoSyncUserStatus": true,
        "DisabledStatusValue": "test",
        "DisabledStatusAttributeType": 1,
        "EnableCustomAttributes": true,
        "UserLdapAttributes": [
          {
            "InternalAttributeID": 0,
            "ExternalName": "test"
          }
        ],
        "GroupObjectClass": "test",
        "OrganizationalUnitObjectClass": "test",
        "GroupSearchFilter": "test",
        "GroupAutoSync": true,
        "GroupAutoMerge": true,
        "GroupMaximumAllowableChanges": 1,
        "EnableIncrementalSync": true,
        "EnableDnsSrv": true,
        "UpdateFriendlyName": true,
        "GroupLdapAttributes": [
          {
            "InternalAttributeID": 0,
            "ExternalName": "test"
          }
        ],
        "UserAuthenticationType": true
      }
    },
    "LdapDefinitionDomainMappingModel": {
      "description": "Represents ldap definition domain mapping model",
      "type": "object",
      "properties": {
        "Domain": {
          "description": "Gets or sets domain",
          "type": "string"
        },
        "LdapServerName": {
          "description": "Gets or sets ldap server name",
          "type": "string"
        },
        "UserBaseDn": {
          "description": "Gets or sets user base dn",
          "type": "string"
        },
        "GroupBaseDn": {
          "description": "Gets or sets group base dn",
          "type": "string"
        },
        "DeviceBaseDn": {
          "description": "Gets or sets device base dn",
          "type": "string"
        }
      },
      "example": {
        "Domain": "test",
        "LdapServerName": "test",
        "UserBaseDn": "test",
        "GroupBaseDn": "test",
        "DeviceBaseDn": "test"
      }
    },
    "LdapAttributeModel": {
      "description": "Represents ldap attribute model",
      "type": "object",
      "properties": {
        "InternalAttributeID": {
          "format": "int32",
          "description": "Gets or sets internal attribute id",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51
          ],
          "type": "integer"
        },
        "ExternalName": {
          "description": "Gets or sets ldap attribute external name",
          "type": "string"
        },
        "DataType": {
          "format": "int32",
          "description": "Gets or sets ldap attribute data type",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        }
      },
      "example": {
        "InternalAttributeID": 0,
        "ExternalName": "test"
      }
    },
    "IdentityProviderModel": {
      "description": "Represents the Identity provider model",
      "type": "object",
      "properties": {
        "LdapDefinitionId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Ldap Identifier for the given AAD"
        },
        "LocationGroupId": {
          "description": "Location group where the given AAD is defined",
          "type": "string"
        },
        "TenantId": {
          "description": "Unique Identifier of the tenant in Azure Active Directory.",
          "type": "string"
        },
        "TenantName": {
          "description": "TenantName for the Azure Active Directory.",
          "type": "string"
        },
        "ClientId": {
          "description": "Unique Identifier used by the application to identify itself with Azure Active Directory.",
          "type": "string"
        },
        "ClientSecret": {
          "description": "The App Key is a credential used by the application to authenticate to Azure AD.",
          "type": "string"
        },
        "Hosted": {
          "format": "int32",
          "description": "Indicates where the Identity Provider is hosted for the associated tenant.",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        }
      },
      "example": {
        "LocationGroupId": "test",
        "TenantId": "test",
        "TenantName": "test",
        "ClientId": "test",
        "ClientSecret": "test"
      }
    },
    "LdapConfigurationResultModel": {
      "description": "Represents ldap configuration result model",
      "type": "object",
      "properties": {
        "LdapDefinitionId": {
          "format": "int32",
          "description": "Gets or sets ldap definition id",
          "type": "integer"
        }
      },
      "example": {
        "LdapDefinitionId": 1
      }
    },
    "VIDMIntegrationModel": {
      "description": "Represents vidm integration model",
      "type": "object",
      "properties": {
        "GroupId": {
          "description": "Gets or sets location group ID",
          "type": "string"
        },
        "ServerUrl": {
          "description": "Gets or sets vIDM server url",
          "type": "string"
        },
        "UserName": {
          "description": "Gets or sets vIDM admin username",
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets vIDM admin password",
          "type": "string"
        },
        "DirectoryName": {
          "description": "Gets or sets vIDM directory name",
          "type": "string"
        },
        "ImmediateSync": {
          "description": "Gets or sets a value indicating whether to start a sync to targeted vIDM immediately or not",
          "type": "boolean"
        },
        "VIDMAttributes": {
          "description": "Gets or sets vIDM attribute",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VIDMAttributeModel"
          }
        },
        "EnableLocalSync": {
          "description": "Gets or sets a value indicating whether enable local sync",
          "type": "boolean"
        }
      },
      "example": {
        "GroupId": "test",
        "ServerUrl": "test",
        "UserName": "test",
        "Password": "test",
        "DirectoryName": "test",
        "ImmediateSync": true,
        "VIDMAttributes": [
          {
            "InternalAttributeID": 0,
            "ExternalName": "test"
          }
        ],
        "EnableLocalSync": true
      }
    },
    "VIDMAttributeModel": {
      "description": "Represents vidm attribute model",
      "type": "object",
      "properties": {
        "InternalAttributeID": {
          "format": "int32",
          "description": "Gets or sets internal attribute id",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51
          ],
          "type": "integer"
        },
        "ExternalName": {
          "description": "Gets or sets vidm attribute external name",
          "type": "string"
        }
      },
      "example": {
        "InternalAttributeID": 0,
        "ExternalName": "test"
      }
    },
    "VidmConfigurationResultModel": {
      "description": "Represents ldap configuration result model",
      "type": "object",
      "properties": {
        "VidmIntegrationId": {
          "format": "int32",
          "description": "Gets or sets vidm integration id",
          "type": "integer"
        }
      },
      "example": {
        "VidmIntegrationId": 1
      }
    },
    "DeviceSyncData": {
      "description": "Device Sync Information",
      "type": "object",
      "properties": {
        "LocationGroup": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets Location Group Id"
        },
        "Id": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets DeviceId"
        },
        "DeviceType": {
          "format": "int32",
          "description": "Gets or sets DeviceType",
          "type": "integer"
        },
        "DeviceUid": {
          "description": "Gets or sets Device UDID",
          "type": "string"
        },
        "BundleId": {
          "description": "Gets or sets Bundle ID",
          "type": "string"
        },
        "CertificateNotBeforeDate": {
          "description": "Gets or sets Not Before Date of certificate.\r\nFormat : yyyy-mm-ddThh:mm:ssZ DateTime.ToString(\"s\", System.Globalization.CultureInfo.InvariantCulture) + \"Z\" ISO-8601\r\nEg. 2014-11-25T13:01:00:00Z",
          "type": "string"
        },
        "Thumbprint": {
          "description": "Gets or sets Certificate Thumbprint",
          "type": "string"
        },
        "IsManaged": {
          "description": "Gets or sets a value indicating whether Device is enrolled",
          "type": "boolean"
        },
        "ComplianceStatusId": {
          "format": "int32",
          "description": "Gets or sets Device compliance status",
          "type": "integer"
        },
        "UserName": {
          "description": "Gets or sets UserName of the Device User",
          "type": "string"
        },
        "AAEnrollmentId": {
          "description": "Gets or sets RSA Enrollment Template",
          "type": "string"
        }
      },
      "example": {
        "DeviceType": 1,
        "DeviceUid": "test",
        "BundleId": "test",
        "CertificateNotBeforeDate": "test",
        "Thumbprint": "test",
        "IsManaged": true,
        "ComplianceStatusId": 1,
        "UserName": "test",
        "AAEnrollmentId": "test"
      }
    },
    "GatewayConfigurationModel": {
      "description": "Gateway Configuration Information",
      "type": "object",
      "properties": {
        "payloadType": {
          "description": "Gets or sets the Payload Type.",
          "type": "string"
        },
        "payload": {
          "description": "Gets or sets the Payload.",
          "type": "string"
        },
        "Links": {
          "description": "Gets the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "payloadType": "test",
        "payload": "test",
        "Links": [],
        "id": 1
      }
    },
    "MAGSettingsModel": {
      "description": "Model for MAGSettings",
      "type": "object",
      "properties": {
        "ShowDetailedErrorsToClients": {
          "description": "Gets or sets a value indicating whether whether MAG should show details errors to client",
          "type": "boolean"
        },
        "EnableOutboundCallsViaProxy": {
          "description": "Gets or sets a value indicating whether API and AWCM outbound calls should go through proxy",
          "type": "boolean"
        },
        "LogLevel": {
          "format": "int32",
          "description": "Gets or sets Debug Mode set in the console, like 0 - Error, ... 3 - Verbose",
          "type": "integer"
        },
        "PacUrl": {
          "description": "Gets or sets Pac Url location from where file needs to be downloaded",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ShowDetailedErrorsToClients": true,
        "EnableOutboundCallsViaProxy": true,
        "LogLevel": 1,
        "PacUrl": "test",
        "id": 1
      }
    },
    "AdaptiveAuthAwProxyAppsMappingModel": {
      "description": "Model class containing the list of applications enabled and disabled for RSA AA.\r\nThis mapping is for Proxy ( i.e. MAG).",
      "type": "object",
      "properties": {
        "EnabledApps": {
          "description": "Gets or sets List of applications that are enabled",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppsMappingModel"
          }
        },
        "DisabledApps": {
          "description": "Gets or sets List of applications that are disabled",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppsMappingModel"
          }
        }
      },
      "example": {
        "EnabledApps": [
          {
            "BundleId": "test"
          }
        ],
        "DisabledApps": [
          {
            "BundleId": "test"
          }
        ]
      }
    },
    "AppsMappingModel": {
      "description": "Mapping between Application and Proxy for RSA Adaptive Authentication\r\nThis mapping is for Proxy ( i.e. MAG).",
      "type": "object",
      "properties": {
        "BundleId": {
          "description": "Gets or sets bundle-id of the application",
          "type": "string"
        }
      },
      "example": {
        "BundleId": "test"
      }
    },
    "TunnelStatisticsModel": {
      "description": "Tunnel statistics model.",
      "required": [
        "deploymentid"
      ],
      "type": "object",
      "properties": {
        "deploymentid": {
          "description": "Gets or sets the Id.",
          "type": "string"
        },
        "type": {
          "description": "Gets or sets the type.",
          "type": "string"
        },
        "applianceplatform": {
          "description": "Gets or sets the appliance platform.",
          "type": "string"
        },
        "applianceenabled": {
          "format": "int32",
          "description": "Gets or sets the appliance enabled.",
          "type": "integer"
        },
        "currentsessions": {
          "format": "int32",
          "description": "Gets or sets the current sessions.",
          "type": "integer"
        },
        "totalsession": {
          "format": "int32",
          "description": "Gets or sets the total sessions.",
          "type": "integer"
        },
        "status": {
          "description": "Gets or sets the Status",
          "type": "string"
        }
      },
      "example": {
        "deploymentid": "test",
        "type": "test",
        "applianceplatform": "test",
        "applianceenabled": 1,
        "currentsessions": 1,
        "totalsession": 1,
        "status": "test"
      }
    },
    "DeviceGpsStatusModel": {
      "description": "The device gps and location service status model.",
      "type": "object",
      "properties": {
        "IsGpsSupported": {
          "description": "Gets or sets the is gps supported.",
          "type": "boolean"
        },
        "IsLocationEnabled": {
          "description": "Gets or sets the is location enabled.",
          "type": "boolean"
        }
      },
      "example": {
        "IsGpsSupported": true,
        "IsLocationEnabled": true
      }
    },
    "ControllerModel": {
      "description": "Model to define the Controller and its components like Description, custom attributes and end points",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets Name",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets Description",
          "type": "string"
        },
        "endpoints": {
          "description": "Gets or sets EndPoints",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndPointModel"
          }
        },
        "endpointsErrorCount": {
          "format": "int32",
          "description": "Gets or sets the total number of endpoint errors for a particular controller",
          "type": "integer"
        },
        "modified": {
          "description": "Gets or sets a value indicating whether the controller contains a new endpoint",
          "type": "boolean"
        },
        "isinternal": {
          "description": "Gets or sets a value indicating whether the controller is interal",
          "type": "boolean"
        },
        "totalNewEndpoints": {
          "format": "int32",
          "description": "Gets or sets the total number of new endpoints for a particular controller",
          "type": "integer"
        }
      },
      "example": {
        "name": "test",
        "description": "test",
        "endpoints": [
          {
            "isnew": true,
            "isinternal": true,
            "obsolete": "test",
            "routeTemplate": "test",
            "urisample": "test",
            "id": "test",
            "endpointname": "test",
            "description": "test",
            "method": "test",
            "relativePath": "test",
            "ResponseType": "test",
            "validationErrorCount": 1,
            "version": "test"
          }
        ],
        "endpointsErrorCount": 1,
        "modified": true,
        "isinternal": true,
        "totalNewEndpoints": 1
      }
    },
    "EndPointModel": {
      "description": "Class to define the endpoints",
      "type": "object",
      "properties": {
        "isnew": {
          "description": "Gets or sets a value indicating whether it is a new endpoint",
          "type": "boolean"
        },
        "isinternal": {
          "description": "Gets or sets a value indicating whether it is an internal endpoint",
          "type": "boolean"
        },
        "obsolete": {
          "description": "Gets or sets obsolete value if present",
          "type": "string"
        },
        "routeTemplate": {
          "description": "Gets or sets the routeTemplate",
          "type": "string"
        },
        "urisample": {
          "description": "Gets or sets urisample",
          "type": "string"
        },
        "id": {
          "description": "Gets or sets Id",
          "type": "string"
        },
        "endpointname": {
          "description": "Gets or sets Name",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets Description",
          "type": "string"
        },
        "method": {
          "description": "Gets or sets Method",
          "type": "string"
        },
        "relativePath": {
          "description": "Gets or sets RelativePath",
          "type": "string"
        },
        "ResponseType": {
          "description": "Gets or sets ResponseType",
          "type": "string"
        },
        "endPointDetails": {
          "$ref": "#/definitions/EndPointDetailsModel",
          "description": "Gets or sets EndPointDetails"
        },
        "validationResults": {
          "$ref": "#/definitions/EndpointValidationResult",
          "description": "Gets or sets validation results"
        },
        "validationErrorCount": {
          "format": "int32",
          "description": "Gets or sets validation error count",
          "type": "integer"
        },
        "version": {
          "description": "Gets or sets version of endpoint if it exists",
          "type": "string"
        }
      },
      "example": {
        "isnew": true,
        "isinternal": true,
        "obsolete": "test",
        "routeTemplate": "test",
        "urisample": "test",
        "id": "test",
        "endpointname": "test",
        "description": "test",
        "method": "test",
        "relativePath": "test",
        "ResponseType": "test",
        "validationErrorCount": 1,
        "version": "test"
      }
    },
    "EndPointDetailsModel": {
      "description": "Class to define the model for the endpoint",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "Gets or sets Parameters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterModel"
          }
        },
        "queryStringParameters": {
          "description": "Gets or sets QueryStringParams",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterModel"
          }
        },
        "resourceDescription": {
          "$ref": "#/definitions/ModelDescription",
          "description": "Gets or sets the {AW.WebApi.Common.Documentation.ModelDescriptions.ModelDescription} that describes the resource."
        },
        "sampleRequests": {
          "description": "Gets or sets the sample requests associated with the API.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "example": {}
          }
        },
        "sampleResponses": {
          "description": "Gets or sets  sample responses associated with the API.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "example": {}
          }
        },
        "sampleQueryString": {
          "description": "Gets or sets SampleQueryString",
          "type": "string"
        },
        "validationResults": {
          "$ref": "#/definitions/EndpointValidationResult",
          "description": "Gets or sets validation results"
        }
      },
      "example": {
        "sampleQueryString": "test"
      }
    },
    "EndpointValidationResult": {
      "description": "EndpointValidationResult class",
      "type": "object",
      "properties": {
        "isValid": {
          "description": "Gets or sets a value indicating whether IsValid",
          "type": "boolean"
        },
        "errors": {
          "description": "Gets or sets Errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointValidationError"
          }
        }
      },
      "example": {
        "isValid": true,
        "errors": [
          {
            "propertyName": "test",
            "errorMessage": "test"
          }
        ]
      }
    },
    "ParameterModel": {
      "description": "Class to define the parameters",
      "type": "object",
      "properties": {
        "paramName": {
          "description": "Gets or sets Name",
          "type": "string"
        },
        "paramType": {
          "description": "Gets or sets Type",
          "type": "string"
        },
        "paramDescription": {
          "description": "Gets or sets Description",
          "type": "string"
        },
        "paramSource": {
          "description": "Gets or sets Source",
          "type": "string"
        }
      }
    },
    "ModelDescription": {
      "description": "Describes a type model.",
      "type": "object",
      "properties": {
        "modelDocumentation": {
          "type": "string"
        },
        "modelType": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        }
      },
      "example": {
        "modelDocumentation": "test",
        "modelName": "test"
      }
    },
    "EndpointValidationError": {
      "description": "EndpointValidationError class",
      "type": "object",
      "properties": {
        "propertyName": {
          "description": "Gets or sets PropertyName",
          "type": "string"
        },
        "errorMessage": {
          "description": "Gets or sets ErrorMessage",
          "type": "string"
        }
      },
      "example": {
        "propertyName": "test",
        "errorMessage": "test"
      }
    },
    "EndpointIndexModel": {
      "description": "Endpoint Index Model",
      "type": "object",
      "properties": {
        "EndpointIndexId": {
          "description": "Gets or sets the endpoint index ID",
          "type": "string"
        },
        "EndpointIndexDetail": {
          "$ref": "#/definitions/EndpointIndexDetailModel",
          "description": "gets or sets the endpoint index details"
        }
      },
      "example": {
        "EndpointIndexId": "test"
      }
    },
    "EndpointIndexDetailModel": {
      "description": "Endpoint Index Detail Model",
      "type": "object",
      "properties": {
        "Title": {
          "description": "Gets or sets the title.",
          "type": "string"
        },
        "Tag": {
          "description": "Gets or sets the tag.",
          "type": "string"
        },
        "HttpMethod": {
          "description": "Gets or sets the httpMethod.",
          "type": "string"
        },
        "OperationId": {
          "description": "Gets or sets the operation ID.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        }
      },
      "example": {
        "Title": "test",
        "Tag": "test",
        "HttpMethod": "test",
        "OperationId": "test",
        "Description": "test"
      }
    },
    "PersonEnrollmentUser": {
      "description": "Device Information",
      "type": "object",
      "properties": {
        "PersonId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets the person id that we are assigning an enrollment user to"
        },
        "EnrollmentUserId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets The enrollment user id which is being assigned to the person"
        }
      },
      "example": {}
    },
    "NetworkInfoSearchResult": {
      "type": "object",
      "properties": {
        "DeviceNetworkDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceNetworkSearchDetails"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeviceNetworkSearchDetails": {
      "type": "object",
      "properties": {
        "IPAddress": {
          "$ref": "#/definitions/DeviceIPAddress"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {}
    },
    "Printer": {
      "type": "object",
      "properties": {
        "DeviceID": {
          "format": "int32",
          "type": "integer"
        },
        "FriendlyName": {
          "type": "string"
        },
        "DeviceTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceType": {
          "type": "string"
        },
        "LastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "EnrollmentStatusID": {
          "format": "int32",
          "type": "integer"
        },
        "EnrollmentStatus": {
          "type": "string"
        },
        "DeviceIdentifier": {
          "type": "string"
        },
        "DisplayModel": {
          "type": "string"
        },
        "EnrollmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "UnenrollmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "LocationGroupID": {
          "format": "int32",
          "type": "integer"
        },
        "PrinterSample": {
          "type": "object",
          "example": {}
        }
      }
    },
    "PrintServerInput": {
      "description": "Printer Server Input",
      "type": "object",
      "properties": {
        "UserID": {
          "format": "int32",
          "description": "Gets or sets The user ID",
          "type": "integer"
        },
        "ServiceUID": {
          "description": "Gets or sets The user ID",
          "type": "string"
        },
        "HmacToken": {
          "format": "uuid",
          "description": "Gets or sets The user ID",
          "type": "string"
        },
        "FriendlyName": {
          "description": "Gets or sets The user ID",
          "type": "string"
        },
        "LocationGroupID": {
          "format": "int32",
          "description": "Gets or sets The user ID",
          "type": "integer"
        }
      },
      "example": {
        "UserID": 1,
        "ServiceUID": "test",
        "HmacToken": "7e38bbb5-926a-4e22-93bb-c0c3c4ea2d1e",
        "FriendlyName": "test",
        "LocationGroupID": 1
      }
    },
    "PrintServerCreateReturn": {
      "description": "Printer Server Input",
      "type": "object",
      "properties": {
        "ServiceID": {
          "format": "int32",
          "description": "Gets or sets The Print Server ID",
          "type": "integer"
        }
      },
      "example": {
        "ServiceID": 1
      }
    },
    "RegisterPrintServerInput": {
      "description": "Register Print Server Input",
      "type": "object",
      "properties": {
        "Uid": {
          "description": "Gets or sets The Uid",
          "type": "string"
        },
        "NotificationEndPoint": {
          "description": "Gets or sets The Notification End Point",
          "type": "string"
        },
        "ServerVersion": {
          "description": "Gets or sets The Server Version",
          "type": "string"
        },
        "GroupID": {
          "description": "Gets or sets The group ID",
          "type": "string"
        },
        "Vendor": {
          "description": "Gets or sets The Vendor",
          "type": "string"
        }
      },
      "example": {
        "Uid": "test",
        "NotificationEndPoint": "test",
        "ServerVersion": "test",
        "GroupID": "test",
        "Vendor": "test"
      }
    },
    "RegisterPrintServerReturn": {
      "description": "Register Print Server Return",
      "type": "object",
      "properties": {
        "ServerVersion": {
          "description": "Gets or sets The Server Version",
          "type": "string"
        },
        "EnrollmentURL": {
          "description": "Gets or sets The EnrollmentURL",
          "type": "string"
        },
        "CommandURL": {
          "description": "Gets or sets The CommandURL",
          "type": "string"
        },
        "AlertURL": {
          "description": "Gets or sets The AlertURL",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "Gets or sets The Status",
          "type": "integer"
        }
      },
      "example": {
        "ServerVersion": "test",
        "EnrollmentURL": "test",
        "CommandURL": "test",
        "AlertURL": "test",
        "Status": 1
      }
    },
    "EnrollPrintServerInput": {
      "description": "EnrollPrintServerInput",
      "type": "object",
      "properties": {
        "ServiceUID": {
          "description": "Gets or sets The Service UID",
          "type": "string"
        },
        "Type": {
          "description": "Gets or sets The type",
          "type": "string"
        },
        "DeviceUID": {
          "description": "Gets or sets The Device UID",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets The name",
          "type": "string"
        },
        "Model": {
          "format": "int32",
          "description": "Gets or sets The Model",
          "type": "integer"
        },
        "SerialNumber": {
          "description": "Gets or sets The Serial Number",
          "type": "string"
        },
        "GroupID": {
          "description": "Gets or sets The Group ID",
          "type": "string"
        }
      },
      "example": {
        "ServiceUID": "test",
        "Type": "test",
        "DeviceUID": "test",
        "Name": "test",
        "Model": 1,
        "SerialNumber": "test",
        "GroupID": "test"
      }
    },
    "EnrollPrintServerReturn": {
      "description": "EnrollPrintServerReturn",
      "type": "object",
      "properties": {
        "DeviceID": {
          "format": "int32",
          "description": "Gets or sets The Device ID",
          "type": "integer"
        },
        "Status": {
          "format": "int32",
          "description": "Gets or sets The status",
          "type": "integer"
        },
        "ErrorCode": {
          "description": "Gets or sets The ErrorCode",
          "type": "string"
        }
      },
      "example": {
        "DeviceID": 1,
        "Status": 1,
        "ErrorCode": "test"
      }
    },
    "PickListItem": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Key": {
          "type": "string"
        }
      },
      "example": {
        "Description": "test",
        "Key": "test"
      }
    },
    "ProfilePoliciesEntity": {
      "type": "object",
      "properties": {
        "Restrictions": {
          "$ref": "#/definitions/RestrictionPayloadEntity"
        },
        "Passcode": {
          "$ref": "#/definitions/PasscodePayloadEntity"
        }
      },
      "example": {}
    },
    "RestrictionPayloadEntity": {
      "type": "object",
      "properties": {
        "AllowUseOfCamera": {
          "type": "boolean"
        },
        "AllowUseOfBluetooth": {
          "type": "boolean"
        },
        "AllowUseOfAirDropNfc": {
          "type": "boolean"
        },
        "AllowUseOfSiriCortana": {
          "type": "boolean"
        },
        "AllowDeviceWipe": {
          "type": "boolean"
        },
        "AllowUseOfGoogleiCloudBackup": {
          "type": "boolean"
        },
        "AllowAccessToAppStore": {
          "type": "boolean"
        },
        "AllowUseOfYoutube": {
          "type": "boolean"
        },
        "AllowAccessToGameCenter": {
          "type": "boolean"
        },
        "AllowUntrustedApps": {
          "type": "boolean"
        },
        "AllowNativeBrowser": {
          "type": "boolean"
        },
        "AllowScreenCapture": {
          "type": "boolean"
        },
        "AllowCopyPasteBetweenApps": {
          "type": "boolean"
        },
        "AllowSDCard": {
          "type": "boolean"
        },
        "AllowManagedDocUnmanagedUse": {
          "type": "boolean"
        },
        "RequireDeviceEncryption": {
          "type": "boolean"
        },
        "General": {
          "$ref": "#/definitions/ProfileResourceGeneralPayloadEntity"
        }
      },
      "example": {
        "AllowUseOfCamera": true,
        "AllowUseOfBluetooth": true,
        "AllowUseOfAirDropNfc": true,
        "AllowUseOfSiriCortana": true,
        "AllowDeviceWipe": true,
        "AllowUseOfGoogleiCloudBackup": true,
        "AllowAccessToAppStore": true,
        "AllowUseOfYoutube": true,
        "AllowAccessToGameCenter": true,
        "AllowUntrustedApps": true,
        "AllowNativeBrowser": true,
        "AllowScreenCapture": true,
        "AllowCopyPasteBetweenApps": true,
        "AllowSDCard": true,
        "AllowManagedDocUnmanagedUse": true,
        "RequireDeviceEncryption": true
      }
    },
    "PasscodePayloadEntity": {
      "type": "object",
      "properties": {
        "RequirePasscode": {
          "type": "boolean"
        },
        "MinimumPasscodeLength": {
          "format": "int32",
          "maximum": 16,
          "minimum": 4,
          "type": "integer"
        },
        "AutoLock": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumFailedAttempts": {
          "format": "int32",
          "maximum": 10,
          "minimum": 4,
          "type": "integer"
        },
        "AllowSimple": {
          "type": "boolean"
        },
        "RequireAlphanumeric": {
          "type": "boolean"
        },
        "MaximumPasscodeAge": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumRequiredComplexCharacters": {
          "format": "int32",
          "type": "integer"
        },
        "General": {
          "$ref": "#/definitions/ProfileResourceGeneralPayloadEntity"
        }
      },
      "example": {
        "RequirePasscode": true,
        "MinimumPasscodeLength": 1,
        "AutoLock": 1,
        "MaximumFailedAttempts": 1,
        "AllowSimple": true,
        "RequireAlphanumeric": true,
        "MaximumPasscodeAge": 1,
        "MinimumRequiredComplexCharacters": 1
      }
    },
    "ProfileResourceGeneralPayloadEntity": {
      "type": "object",
      "properties": {
        "ProfileResourceId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ManagedLocationGroupID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "ProfileResourceId": 1,
        "Name": "test",
        "Description": "test",
        "ManagedLocationGroupID": 1
      }
    },
    "DeviceProductComplianceStatusV1Model": {
      "description": "model to return device product compliance status",
      "type": "object",
      "properties": {
        "status": {
          "description": "status of device product compliance",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "status": "Compliant",
        "id": 1
      }
    },
    "DeviceProductResponseV1Model": {
      "description": "response model to return device compliance status and url to get the latest status",
      "type": "object",
      "properties": {
        "status": {
          "description": "device product compliance status",
          "type": "string"
        },
        "url": {
          "description": "url to get the latest device product compliance status",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "status": "Compliant",
        "url": "/products/{productId}/devices/{deviceId}",
        "id": 1
      }
    },
    "Operation[ProductsPatchV1Model]": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "example": {}
        },
        "path": {
          "type": "string"
        },
        "op": {
          "type": "string"
        },
        "from": {
          "type": "string"
        }
      },
      "example": {
        "path": "test",
        "op": "test"
      }
    },
    "ProductsPatchV1Model": {
      "description": "model for patch payload",
      "type": "object",
      "properties": {
        "status": {
          "description": "identifier to process an activate or deactiavte a Product",
          "type": "boolean"
        }
      },
      "example": {
        "status": true
      }
    },
    "ProductsPatchV1ModelPatch": {
      "description": "model for patch payload",
      "type": "object",
      "properties": {
        "status": {
          "description": "identifier to process an activate or deactiavte a Product",
          "type": "boolean"
        }
      },
      "example": [
        {
          "value": "text",
          "path": "/property",
          "op": "add"
        },
        {
          "value": 2,
          "path": "/propertyName",
          "op": "replace"
        },
        {
          "path": "/property",
          "op": "remove"
        },
        {
          "path": "/toProperty",
          "op": "move",
          "from": "/fromProperty"
        },
        {
          "value": "text",
          "path": "/arrayProperty/-",
          "op": "add"
        },
        {
          "path": "/arrayProperty/0",
          "op": "remove"
        },
        {
          "path": "/arrayProperty/0",
          "op": "move",
          "from": "/arrayProperty/2"
        }
      ]
    },
    "PatchDocument[ProductsPatchV1Model]": {
      "$ref": "#/definitions/ProductsPatchV1ModelPatch",
      "description": "Custom PatchDocument used with Web API",
      "type": "object",
      "properties": {
        "Operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation[ProductsPatchV1Model]"
          },
          "readOnly": true
        }
      },
      "externalDocs": {
        "description": "JSON Patch documentation",
        "url": "https://tools.ietf.org/html/rfc6902"
      }
    },
    "PrivacyEntity": {
      "type": "object",
      "properties": {
        "SystemCodeId": {
          "$ref": "#/definitions/EntityKey"
        },
        "SystemCodeName": {
          "type": "string"
        },
        "DeviceLocationGroup": {
          "$ref": "#/definitions/EntityKey"
        },
        "DeviceOwnership": {
          "$ref": "#/definitions/EntityKey"
        },
        "DeviceOwnershipType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "SystemCodeOverride": {
          "format": "int32",
          "type": "integer"
        },
        "IconName": {
          "type": "string"
        },
        "IconDescription": {
          "type": "string"
        },
        "PrivacyGroup": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "SystemCodeName": "test",
        "DeviceOwnershipType": 0,
        "SystemCodeOverride": 1,
        "IconName": "test",
        "IconDescription": "test",
        "PrivacyGroup": 1
      }
    },
    "FilesActionsDetail": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Version": {
          "format": "int32",
          "type": "integer"
        },
        "Platform": {
          "type": "string"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedOn": {
          "type": "string"
        },
        "Files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductFileDetials"
          }
        },
        "InstallManifests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionManifest"
          }
        },
        "UninstallManifests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionManifest"
          }
        }
      },
      "example": {
        "Id": 1,
        "Name": "test",
        "Description": "test",
        "Version": 1,
        "Platform": "test",
        "OrganizationGroupId": 1,
        "ModifiedOn": "test",
        "Files": [
          {
            "FileId": 1,
            "Name": "test",
            "Path": "test"
          }
        ],
        "InstallManifests": [
          {
            "ActionType": "test",
            "Critical": "test",
            "FilePathAndName": "test",
            "SourceFilePathAndName": "test",
            "TargetFilePathAndName": "test",
            "PathAndNameOfFolder": "test",
            "TargetFolderPathAndName": "test",
            "CommandLineAndArgumentsToRun": "test",
            "TimeOut": "test",
            "ProcessOrAppToTerminate": "test",
            "NameOfProgramToUninstall": "test",
            "AirwatchMdmAgentUpgradeFile": "test",
            "ExecuteAsRoot": "test",
            "Wait": "test",
            "OsFile": "test",
            "InstallUnManagedApp": "test",
            "UnInstallUnManagedApp": "test",
            "ScriptFilePathAndName": "test",
            "ScriptToExecute": "test",
            "SoftwareToInstall": "test",
            "InstallFilePath": "test",
            "CustomSettingsFile": "test"
          }
        ],
        "UninstallManifests": [
          {
            "ActionType": "test",
            "Critical": "test",
            "FilePathAndName": "test",
            "SourceFilePathAndName": "test",
            "TargetFilePathAndName": "test",
            "PathAndNameOfFolder": "test",
            "TargetFolderPathAndName": "test",
            "CommandLineAndArgumentsToRun": "test",
            "TimeOut": "test",
            "ProcessOrAppToTerminate": "test",
            "NameOfProgramToUninstall": "test",
            "AirwatchMdmAgentUpgradeFile": "test",
            "ExecuteAsRoot": "test",
            "Wait": "test",
            "OsFile": "test",
            "InstallUnManagedApp": "test",
            "UnInstallUnManagedApp": "test",
            "ScriptFilePathAndName": "test",
            "ScriptToExecute": "test",
            "SoftwareToInstall": "test",
            "InstallFilePath": "test",
            "CustomSettingsFile": "test"
          }
        ]
      }
    },
    "ProductFileDetials": {
      "type": "object",
      "properties": {
        "FileId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Path": {
          "type": "string"
        }
      },
      "example": {
        "FileId": 1,
        "Name": "test",
        "Path": "test"
      }
    },
    "ActionManifest": {
      "type": "object",
      "properties": {
        "ActionType": {
          "type": "string"
        },
        "Critical": {
          "type": "string"
        },
        "FilePathAndName": {
          "type": "string"
        },
        "SourceFilePathAndName": {
          "type": "string"
        },
        "TargetFilePathAndName": {
          "type": "string"
        },
        "PathAndNameOfFolder": {
          "type": "string"
        },
        "TargetFolderPathAndName": {
          "type": "string"
        },
        "CommandLineAndArgumentsToRun": {
          "type": "string"
        },
        "TimeOut": {
          "type": "string"
        },
        "ProcessOrAppToTerminate": {
          "type": "string"
        },
        "NameOfProgramToUninstall": {
          "type": "string"
        },
        "AirwatchMdmAgentUpgradeFile": {
          "type": "string"
        },
        "ExecuteAsRoot": {
          "type": "string"
        },
        "Wait": {
          "type": "string"
        },
        "OsFile": {
          "type": "string"
        },
        "InstallUnManagedApp": {
          "type": "string"
        },
        "UnInstallUnManagedApp": {
          "type": "string"
        },
        "ScriptFilePathAndName": {
          "type": "string"
        },
        "ScriptToExecute": {
          "type": "string"
        },
        "SoftwareToInstall": {
          "type": "string"
        },
        "InstallFilePath": {
          "type": "string"
        },
        "CustomSettingsFile": {
          "type": "string"
        }
      },
      "example": {
        "ActionType": "test",
        "Critical": "test",
        "FilePathAndName": "test",
        "SourceFilePathAndName": "test",
        "TargetFilePathAndName": "test",
        "PathAndNameOfFolder": "test",
        "TargetFolderPathAndName": "test",
        "CommandLineAndArgumentsToRun": "test",
        "TimeOut": "test",
        "ProcessOrAppToTerminate": "test",
        "NameOfProgramToUninstall": "test",
        "AirwatchMdmAgentUpgradeFile": "test",
        "ExecuteAsRoot": "test",
        "Wait": "test",
        "OsFile": "test",
        "InstallUnManagedApp": "test",
        "UnInstallUnManagedApp": "test",
        "ScriptFilePathAndName": "test",
        "ScriptToExecute": "test",
        "SoftwareToInstall": "test",
        "InstallFilePath": "test",
        "CustomSettingsFile": "test"
      }
    },
    "FilesActionsSearchResult": {
      "type": "object",
      "properties": {
        "FilesActionsDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilesActionsDetail"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "FilesActionsDetails": [
          {
            "Id": 1,
            "Name": "test",
            "Description": "test",
            "Version": 1,
            "Platform": "test",
            "OrganizationGroupId": 1,
            "ModifiedOn": "test",
            "Files": [
              {
                "FileId": 1,
                "Name": "test",
                "Path": "test"
              }
            ],
            "InstallManifests": [
              {
                "ActionType": "test",
                "Critical": "test",
                "FilePathAndName": "test",
                "SourceFilePathAndName": "test",
                "TargetFilePathAndName": "test",
                "PathAndNameOfFolder": "test",
                "TargetFolderPathAndName": "test",
                "CommandLineAndArgumentsToRun": "test",
                "TimeOut": "test",
                "ProcessOrAppToTerminate": "test",
                "NameOfProgramToUninstall": "test",
                "AirwatchMdmAgentUpgradeFile": "test",
                "ExecuteAsRoot": "test",
                "Wait": "test",
                "OsFile": "test",
                "InstallUnManagedApp": "test",
                "UnInstallUnManagedApp": "test",
                "ScriptFilePathAndName": "test",
                "ScriptToExecute": "test",
                "SoftwareToInstall": "test",
                "InstallFilePath": "test",
                "CustomSettingsFile": "test"
              }
            ],
            "UninstallManifests": [
              {
                "ActionType": "test",
                "Critical": "test",
                "FilePathAndName": "test",
                "SourceFilePathAndName": "test",
                "TargetFilePathAndName": "test",
                "PathAndNameOfFolder": "test",
                "TargetFolderPathAndName": "test",
                "CommandLineAndArgumentsToRun": "test",
                "TimeOut": "test",
                "ProcessOrAppToTerminate": "test",
                "NameOfProgramToUninstall": "test",
                "AirwatchMdmAgentUpgradeFile": "test",
                "ExecuteAsRoot": "test",
                "Wait": "test",
                "OsFile": "test",
                "InstallUnManagedApp": "test",
                "UnInstallUnManagedApp": "test",
                "ScriptFilePathAndName": "test",
                "ScriptToExecute": "test",
                "SoftwareToInstall": "test",
                "InstallFilePath": "test",
                "CustomSettingsFile": "test"
              }
            ]
          }
        ],
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "TimeCondition": {
      "type": "object",
      "properties": {
        "ConditionId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedOn": {
          "type": "string"
        },
        "TimeCondition1": {
          "$ref": "#/definitions/TimeConditionDetail"
        },
        "TimeCondition2": {
          "$ref": "#/definitions/TimeConditionDetail"
        },
        "TimeCondition3": {
          "$ref": "#/definitions/TimeConditionDetail"
        }
      }
    },
    "TimeConditionDetail": {
      "type": "object",
      "properties": {
        "MonthStart": {
          "type": "string"
        },
        "DayStart": {
          "type": "string"
        },
        "YearStart": {
          "type": "string"
        },
        "HourStart": {
          "type": "string"
        },
        "MinuteStart": {
          "type": "string"
        },
        "MonthEnd": {
          "type": "string"
        },
        "DayEnd": {
          "type": "string"
        },
        "YearEnd": {
          "type": "string"
        },
        "HourEnd": {
          "type": "string"
        },
        "MinuteEnd": {
          "type": "string"
        }
      },
      "example": {
        "MonthStart": "test",
        "DayStart": "test",
        "YearStart": "test",
        "HourStart": "test",
        "MinuteStart": "test",
        "MonthEnd": "test",
        "DayEnd": "test",
        "YearEnd": "test",
        "HourEnd": "test",
        "MinuteEnd": "test"
      }
    },
    "FileCondtion": {
      "type": "object",
      "properties": {
        "ConditionId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedOn": {
          "type": "string"
        },
        "FlagFileDetails": {
          "$ref": "#/definitions/SpecifyFlagFileDetails"
        },
        "ScenarioDetails": {
          "$ref": "#/definitions/SpecifyScenarioDetails"
        }
      }
    },
    "SpecifyFlagFileDetails": {
      "type": "object",
      "properties": {
        "FileLocation": {
          "type": "string"
        },
        "FileContents": {
          "type": "string"
        }
      },
      "example": {
        "FileLocation": "test",
        "FileContents": "test"
      }
    },
    "SpecifyScenarioDetails": {
      "type": "object",
      "properties": {
        "FileToBeTested": {
          "type": "string"
        },
        "TestType": {
          "type": "string"
        },
        "RemoveFileAfterTest": {
          "type": "string"
        }
      },
      "example": {
        "FileToBeTested": "test",
        "TestType": "test",
        "RemoveFileAfterTest": "test"
      }
    },
    "ProductCondition": {
      "type": "object",
      "properties": {
        "ConditionId": {
          "type": "string"
        },
        "ConditionName": {
          "type": "string"
        },
        "ConditionType": {
          "type": "string"
        },
        "OrganizationGroupId": {
          "type": "string"
        }
      },
      "example": {
        "ConditionId": "test",
        "ConditionName": "test",
        "ConditionType": "test",
        "OrganizationGroupId": "test"
      }
    },
    "ProductTimeCondition": {
      "type": "object",
      "properties": {
        "DownloadConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeCondition"
          }
        },
        "InstallConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeCondition"
          }
        }
      },
      "example": {}
    },
    "ProductFileActions": {
      "type": "object",
      "properties": {
        "FilesActionsDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilesActionsDetail"
          }
        }
      },
      "example": {
        "FilesActionsDetails": [
          {
            "Id": 1,
            "Name": "test",
            "Description": "test",
            "Version": 1,
            "Platform": "test",
            "OrganizationGroupId": 1,
            "ModifiedOn": "test",
            "Files": [
              {
                "FileId": 1,
                "Name": "test",
                "Path": "test"
              }
            ],
            "InstallManifests": [
              {
                "ActionType": "test",
                "Critical": "test",
                "FilePathAndName": "test",
                "SourceFilePathAndName": "test",
                "TargetFilePathAndName": "test",
                "PathAndNameOfFolder": "test",
                "TargetFolderPathAndName": "test",
                "CommandLineAndArgumentsToRun": "test",
                "TimeOut": "test",
                "ProcessOrAppToTerminate": "test",
                "NameOfProgramToUninstall": "test",
                "AirwatchMdmAgentUpgradeFile": "test",
                "ExecuteAsRoot": "test",
                "Wait": "test",
                "OsFile": "test",
                "InstallUnManagedApp": "test",
                "UnInstallUnManagedApp": "test",
                "ScriptFilePathAndName": "test",
                "ScriptToExecute": "test",
                "SoftwareToInstall": "test",
                "InstallFilePath": "test",
                "CustomSettingsFile": "test"
              }
            ],
            "UninstallManifests": [
              {
                "ActionType": "test",
                "Critical": "test",
                "FilePathAndName": "test",
                "SourceFilePathAndName": "test",
                "TargetFilePathAndName": "test",
                "PathAndNameOfFolder": "test",
                "TargetFolderPathAndName": "test",
                "CommandLineAndArgumentsToRun": "test",
                "TimeOut": "test",
                "ProcessOrAppToTerminate": "test",
                "NameOfProgramToUninstall": "test",
                "AirwatchMdmAgentUpgradeFile": "test",
                "ExecuteAsRoot": "test",
                "Wait": "test",
                "OsFile": "test",
                "InstallUnManagedApp": "test",
                "UnInstallUnManagedApp": "test",
                "ScriptFilePathAndName": "test",
                "ScriptToExecute": "test",
                "SoftwareToInstall": "test",
                "InstallFilePath": "test",
                "CustomSettingsFile": "test"
              }
            ]
          }
        ]
      }
    },
    "DownloadAndInstallStatistics": {
      "type": "object",
      "properties": {
        "ProductDownloadAndInstallStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductDownloadAndInstallDetails"
          }
        }
      },
      "example": {
        "ProductDownloadAndInstallStatistics": [
          {
            "DeviceID": 1,
            "FriendlyName": "test",
            "SerialNumber": "test",
            "ProductName": "test",
            "ComplianceState": "test",
            "JobStatistics": [
              {
                "DeviceProductJobId": 1,
                "LastDownloadDate": "test",
                "DownloadDuration": "test",
                "LastInstallDate": "test",
                "LastJobStatus": "test"
              }
            ]
          }
        ]
      }
    },
    "ProductDownloadAndInstallDetails": {
      "type": "object",
      "properties": {
        "DeviceID": {
          "format": "int32",
          "type": "integer"
        },
        "FriendlyName": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "ProductName": {
          "type": "string"
        },
        "ComplianceState": {
          "type": "string"
        },
        "JobStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobStatistics"
          }
        }
      },
      "example": {
        "DeviceID": 1,
        "FriendlyName": "test",
        "SerialNumber": "test",
        "ProductName": "test",
        "ComplianceState": "test",
        "JobStatistics": [
          {
            "DeviceProductJobId": 1,
            "LastDownloadDate": "test",
            "DownloadDuration": "test",
            "LastInstallDate": "test",
            "LastJobStatus": "test"
          }
        ]
      }
    },
    "JobStatistics": {
      "type": "object",
      "properties": {
        "DeviceProductJobId": {
          "format": "int32",
          "type": "integer"
        },
        "LastDownloadDate": {
          "type": "string"
        },
        "DownloadDuration": {
          "type": "string"
        },
        "LastInstallDate": {
          "type": "string"
        },
        "LastJobStatus": {
          "type": "string"
        }
      },
      "example": {
        "DeviceProductJobId": 1,
        "LastDownloadDate": "test",
        "DownloadDuration": "test",
        "LastInstallDate": "test",
        "LastJobStatus": "test"
      }
    },
    "MaintainFileActionInputEntity": {
      "type": "object",
      "properties": {
        "MaintainGeneralInput": {
          "$ref": "#/definitions/MaintainGeneralAPIEntity"
        },
        "ManifestInstallSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManifestStepInput"
          }
        },
        "ManifestUnInstallSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManifestStepInput"
          }
        },
        "RepositoryFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RepositoryFileInput"
          }
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DevicePlatformID": {
          "format": "int32",
          "type": "integer"
        },
        "RemoveOnUninstall": {
          "type": "boolean"
        }
      },
      "example": {
        "Name": "test",
        "Description": "test",
        "DevicePlatformID": 1,
        "RemoveOnUninstall": true
      }
    },
    "MaintainGeneralAPIEntity": {
      "type": "object",
      "properties": {
        "LocationGroupID": {
          "format": "int32",
          "type": "integer"
        },
        "InsertOnly": {
          "type": "boolean"
        }
      },
      "example": {
        "LocationGroupID": 1,
        "InsertOnly": true
      }
    },
    "ManifestStepInput": {
      "type": "object",
      "properties": {
        "ProductActionTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "SequenceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "CommandXML": {
          "type": "string"
        },
        "Critical": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "ProductActionTypeID": 1,
        "SequenceNumber": 1,
        "CommandXML": "test",
        "Critical": 1
      }
    },
    "RepositoryFileInput": {
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string"
        },
        "FilePath": {
          "type": "string"
        },
        "FileSize": {
          "format": "int32",
          "type": "integer"
        },
        "FileVersion": {
          "type": "string"
        },
        "ContentRepositoryID": {
          "format": "int32",
          "type": "integer"
        },
        "RelayServerOnly": {
          "type": "boolean"
        },
        "DownloadDate": {
          "type": "string"
        },
        "LiveDate": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        }
      },
      "example": {
        "FileName": "test",
        "FilePath": "test",
        "FileSize": 1,
        "FileVersion": "test",
        "ContentRepositoryID": 1,
        "RelayServerOnly": true,
        "DownloadDate": "test",
        "LiveDate": "test",
        "URL": "test"
      }
    },
    "MaintainConditionInputEntity": {
      "type": "object",
      "properties": {
        "MaintainGeneralInput": {
          "$ref": "#/definitions/MaintainGeneralAPIEntity"
        },
        "Condition": {
          "$ref": "#/definitions/MaintainCondition"
        }
      },
      "example": {}
    },
    "MaintainCondition": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "PlatformID": {
          "format": "int32",
          "type": "integer"
        },
        "ConditionType": {
          "type": "string"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConditionItem"
          }
        }
      },
      "example": {
        "Name": "test",
        "Description": "test",
        "PlatformID": 1,
        "ConditionType": "test",
        "Items": [
          {}
        ]
      }
    },
    "ConditionItem": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "example": {}
    },
    "MaintainResult": {
      "type": "object",
      "properties": {
        "ResultString": {
          "type": "string"
        }
      },
      "example": {
        "ResultString": "test"
      }
    },
    "ProvisioningQueueCounts": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "OrganizationGroup": {
          "type": "string"
        },
        "CommandQueueCount": {
          "type": "string"
        },
        "PolicyEngineQueueCount": {
          "type": "string"
        },
        "MinPolicyEngineDateQueue": {
          "type": "string"
        },
        "MaxPolicyEngineDateQueue": {
          "type": "string"
        }
      },
      "example": {
        "Id": 1,
        "OrganizationGroup": "test",
        "CommandQueueCount": "test",
        "PolicyEngineQueueCount": "test",
        "MinPolicyEngineDateQueue": "test",
        "MaxPolicyEngineDateQueue": "test"
      }
    },
    "DevicesProcessedPE": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "OrganizationGroup": {
          "type": "string"
        },
        "StartDate": {
          "type": "string"
        },
        "EndDate": {
          "type": "string"
        },
        "DevicesProcessed": {
          "type": "string"
        }
      },
      "example": {
        "Id": 1,
        "OrganizationGroup": "test",
        "StartDate": "test",
        "EndDate": "test",
        "DevicesProcessed": "test"
      }
    },
    "MaintainEventActionInputEntity": {
      "type": "object",
      "properties": {
        "MaintainGeneralInput": {
          "$ref": "#/definitions/MaintainGeneralAPIEntity"
        },
        "Actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintainEventActionAction"
          }
        },
        "Conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintainEventActionCondition"
          }
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DevicePlatformID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Name": "test",
        "Description": "test",
        "DevicePlatformID": 1
      }
    },
    "MaintainEventActionAction": {
      "type": "object",
      "properties": {
        "ProductActionTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "SequenceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "CommandXML": {
          "type": "string"
        }
      },
      "example": {
        "ProductActionTypeID": 1,
        "SequenceNumber": 1,
        "CommandXML": "test"
      }
    },
    "MaintainEventActionCondition": {
      "type": "object",
      "properties": {
        "ConditionID": {
          "format": "int32",
          "type": "integer"
        },
        "ConditionName": {
          "type": "string"
        }
      },
      "example": {
        "ConditionID": 1,
        "ConditionName": "test"
      }
    },
    "EventActionsListResult": {
      "type": "object",
      "properties": {
        "EventActionsDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventActionsDetail"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "EventActionsDetails": [
          {
            "Id": 1,
            "Name": "test",
            "Description": "test",
            "Version": 1,
            "DeviceType": 1,
            "ManagedBy": "test"
          }
        ],
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "EventActionsDetail": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Version": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceType": {
          "format": "int32",
          "type": "integer"
        },
        "ManagedBy": {
          "type": "string"
        }
      },
      "example": {
        "Id": 1,
        "Name": "test",
        "Description": "test",
        "Version": 1,
        "DeviceType": 1,
        "ManagedBy": "test"
      }
    },
    "ImportResult": {
      "type": "object",
      "properties": {
        "ResultString": {
          "type": "string"
        }
      },
      "example": {
        "ResultString": "test"
      }
    },
    "MaintainProductSetInputEntity": {
      "type": "object",
      "properties": {
        "MaintainGeneralInput": {
          "$ref": "#/definitions/MaintainGeneralAPIEntity"
        },
        "ProductRanks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintainProductRank"
          }
        },
        "Products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintainProduct"
          }
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "PlatformID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Name": "test",
        "Description": "test",
        "PlatformID": 1
      }
    },
    "MaintainProductRank": {
      "type": "object",
      "properties": {
        "ProductName": {
          "type": "string"
        },
        "ProductID": {
          "format": "int32",
          "type": "integer"
        },
        "Rank": {
          "format": "int32",
          "type": "integer"
        },
        "Active": {
          "type": "boolean"
        }
      },
      "example": {
        "ProductName": "test",
        "ProductID": 1,
        "Rank": 1,
        "Active": true
      }
    },
    "MaintainProduct": {
      "type": "object",
      "properties": {
        "DownLoadConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintainProductCondition"
          }
        },
        "InstallConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintainProductCondition"
          }
        },
        "SmartGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintainProductSmartGroup"
          }
        },
        "Steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintainProductStep"
          }
        },
        "Name": {
          "type": "string"
        },
        "ProductID": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "Platform": {
          "format": "int32",
          "type": "integer"
        },
        "ApplicabilityRule": {
          "type": "string"
        },
        "PauseResume": {
          "type": "boolean"
        },
        "ProductType": {
          "format": "int32",
          "type": "integer"
        },
        "ActivationDate": {
          "type": "string"
        },
        "DeactivationDate": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "ProductID": 1,
        "Description": "test",
        "Platform": 1,
        "ApplicabilityRule": "test",
        "PauseResume": true,
        "ProductType": 1,
        "ActivationDate": "test",
        "DeactivationDate": "test"
      }
    },
    "MaintainProductCondition": {
      "type": "object",
      "properties": {
        "ConditionID": {
          "format": "int32",
          "type": "integer"
        },
        "ConditionName": {
          "type": "string"
        }
      },
      "example": {
        "ConditionID": 1,
        "ConditionName": "test"
      }
    },
    "MaintainProductSmartGroup": {
      "type": "object",
      "properties": {
        "SmartGroupID": {
          "format": "int32",
          "type": "integer"
        },
        "SmartGroupName": {
          "type": "string"
        }
      },
      "example": {
        "SmartGroupID": 1,
        "SmartGroupName": "test"
      }
    },
    "MaintainProductStep": {
      "type": "object",
      "properties": {
        "StepType": {
          "format": "int32",
          "type": "integer"
        },
        "SequenceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "FileActionID": {
          "format": "int32",
          "type": "integer"
        },
        "FileActionName": {
          "type": "string"
        },
        "ProfileID": {
          "format": "int32",
          "type": "integer"
        },
        "ProfileName": {
          "type": "string"
        },
        "ApplicationID": {
          "format": "int32",
          "type": "integer"
        },
        "ApplicationBundleID": {
          "type": "string"
        },
        "ApplicationPackageVersion": {
          "type": "string"
        },
        "Persist": {
          "type": "boolean"
        }
      },
      "example": {
        "StepType": 1,
        "SequenceNumber": 1,
        "FileActionID": 1,
        "FileActionName": "test",
        "ProfileID": 1,
        "ProfileName": "test",
        "ApplicationID": 1,
        "ApplicationBundleID": "test",
        "ApplicationPackageVersion": "test",
        "Persist": true
      }
    },
    "MaintainProductInProductSetInputEntity": {
      "type": "object",
      "properties": {
        "MaintainGeneralInput": {
          "$ref": "#/definitions/MaintainGeneralAPIEntity"
        },
        "ProductRank": {
          "$ref": "#/definitions/MaintainProductRank"
        },
        "Product": {
          "$ref": "#/definitions/MaintainProduct"
        },
        "Name": {
          "type": "string"
        },
        "ProductSetID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Name": "test",
        "ProductSetID": 1
      }
    },
    "ProductSetInquiryResponseModel": {
      "description": "The gateway settings response model.",
      "type": "object",
      "properties": {
        "ProductSetID": {
          "format": "int32",
          "description": "Gets or sets the  ProductSetID",
          "type": "integer"
        },
        "ProductSetName": {
          "description": "Gets or sets the ProductSetID",
          "type": "string"
        },
        "LocationGroupID": {
          "format": "int32",
          "description": "Gets or sets the ProductSetID",
          "type": "integer"
        },
        "Products": {
          "description": "Gets or sets the ProductSetID",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductInquiryResponseModel"
          }
        }
      },
      "example": {
        "ProductSetID": 1,
        "ProductSetName": "test",
        "LocationGroupID": 1,
        "Products": [
          {
            "ProductName": "test",
            "Rank": 1,
            "ActivationState": "test"
          }
        ]
      }
    },
    "ProductInquiryResponseModel": {
      "description": "The gateway settings response model.",
      "type": "object",
      "properties": {
        "ProductName": {
          "description": "Gets or sets the Product Name.",
          "type": "string"
        },
        "Rank": {
          "format": "int32",
          "description": "Gets or sets the Product Name.",
          "type": "integer"
        },
        "ActivationState": {
          "description": "Gets or sets whether product is activated or deactivated.",
          "type": "string"
        }
      },
      "example": {
        "ProductName": "test",
        "Rank": 1,
        "ActivationState": "test"
      }
    },
    "RankAllProductsInProductSetInputEntity": {
      "type": "object",
      "properties": {
        "LocationGroupID": {
          "format": "int32",
          "type": "integer"
        },
        "ProductSetName": {
          "type": "string"
        },
        "ProductSetID": {
          "format": "int32",
          "type": "integer"
        },
        "ProductRanks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintainProductRank"
          }
        }
      },
      "example": {
        "LocationGroupID": 1,
        "ProductSetName": "test",
        "ProductSetID": 1,
        "ProductRanks": [
          {
            "ProductName": "test",
            "ProductID": 1,
            "Rank": 1,
            "Active": true
          }
        ]
      }
    },
    "ProductDeviceDetails": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "LastJobStatus": {
          "type": "string"
        },
        "LastSeen": {
          "type": "string"
        }
      },
      "example": {
        "DeviceId": 1,
        "Name": "test",
        "LastJobStatus": "test",
        "LastSeen": "test"
      }
    },
    "Conditions": {
      "type": "object",
      "properties": {
        "DownloadConditions": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "InstallConditions": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "example": {
        "DownloadConditions": [
          1
        ],
        "InstallConditions": [
          1
        ]
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "ID": {
          "$ref": "#/definitions/EntityId"
        },
        "PlatformID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ManagedByOrganizationGroupID": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ManagedByOrganizationGroupName": {
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        },
        "Platform": {
          "type": "string"
        },
        "SmartGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSmartGroup"
          }
        },
        "Manifest": {
          "$ref": "#/definitions/Manifest"
        },
        "Conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCondition"
          }
        },
        "TotalAssigned": {
          "format": "int32",
          "type": "integer"
        },
        "Compliant": {
          "format": "int32",
          "type": "integer"
        },
        "InProgress": {
          "format": "int32",
          "type": "integer"
        },
        "Failed": {
          "format": "int32",
          "type": "integer"
        },
        "RuleLogic": {
          "type": "string"
        },
        "ActivationDateTime": {
          "type": "string"
        },
        "DeactivationDateTime": {
          "type": "string"
        },
        "PauseResume": {
          "type": "boolean"
        },
        "DevicePolicyTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "DevicePolicyType": {
          "type": "string"
        },
        "ActivationOrDeactivationType": {
          "type": "string"
        },
        "ComplianceOverrideRule": {
          "type": "string"
        }
      }
    },
    "ProductSmartGroup": {
      "type": "object",
      "properties": {
        "SmartGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "SmartGroupId": 1,
        "Name": "test"
      }
    },
    "Manifest": {
      "type": "object",
      "properties": {
        "Action": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          }
        }
      }
    },
    "Action": {
      "type": "object",
      "properties": {
        "ActionTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "ItemID": {
          "format": "int32",
          "type": "integer"
        },
        "Persist": {
          "type": "boolean"
        }
      },
      "example": {
        "ActionTypeID": 1,
        "ItemID": 1,
        "Persist": true
      }
    },
    "HealthCheckResult": {
      "type": "object",
      "properties": {
        "Device": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceHealthDetails"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Device": [
          {
            "UDID": "test",
            "SerialNumber": "test",
            "AssetNumber": "test",
            "FriendlyName": "test",
            "OrganizationGroupId": 1,
            "Username": "test",
            "AvailableDiskSpace": 1,
            "TotalMemory": 1,
            "DeviceNetworkInfo": [
              {
                "ConnectionType": "test",
                "IPAddress": "test",
                "MACAddress": "test"
              }
            ],
            "CustomAttributes": [
              {
                "Key": "test",
                "Value": "test"
              }
            ]
          }
        ],
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "DeviceHealthDetails": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "$ref": "#/definitions/EntityId"
        },
        "UDID": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "AssetNumber": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "Username": {
          "type": "string"
        },
        "AvailableDiskSpace": {
          "format": "int64",
          "type": "integer"
        },
        "TotalMemory": {
          "format": "int64",
          "type": "integer"
        },
        "DeviceNetworkInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceNetworkInfo"
          }
        },
        "GPSCoordinates": {
          "$ref": "#/definitions/ProductGpsCoordinate"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCustomAttribute"
          }
        }
      },
      "example": {
        "UDID": "test",
        "SerialNumber": "test",
        "AssetNumber": "test",
        "FriendlyName": "test",
        "OrganizationGroupId": 1,
        "Username": "test",
        "AvailableDiskSpace": 1,
        "TotalMemory": 1,
        "DeviceNetworkInfo": [
          {
            "ConnectionType": "test",
            "IPAddress": "test",
            "MACAddress": "test"
          }
        ],
        "CustomAttributes": [
          {
            "Key": "test",
            "Value": "test"
          }
        ]
      }
    },
    "ProductGpsCoordinate": {
      "type": "object",
      "properties": {
        "Latitude": {
          "type": "string"
        },
        "Longitude": {
          "type": "string"
        },
        "Elevation": {
          "type": "string"
        }
      },
      "example": {
        "Latitude": "test",
        "Longitude": "test",
        "Elevation": "test"
      }
    },
    "ProductCustomAttribute": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "example": {
        "Key": "test",
        "Value": "test"
      }
    },
    "Assignment": {
      "type": "object",
      "properties": {
        "ProductID": {
          "format": "int32",
          "type": "integer"
        },
        "AssignmentDate": {
          "type": "string"
        }
      },
      "example": {
        "ProductID": 1,
        "AssignmentDate": "test"
      }
    },
    "ReprocessProductInputEntity": {
      "type": "object",
      "properties": {
        "ForceFlag": {
          "type": "boolean"
        },
        "DeviceIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReprocessProductDeviceInputEntity"
          }
        },
        "ProductID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "ForceFlag": true,
        "DeviceIds": [
          {
            "ID": 1
          }
        ],
        "ProductID": 1
      }
    },
    "ReprocessProductDeviceInputEntity": {
      "type": "object",
      "properties": {
        "ID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "ID": 1
      }
    },
    "MaintainProductInputEntity": {
      "type": "object",
      "properties": {
        "MaintainGeneralInput": {
          "$ref": "#/definitions/MaintainGeneralAPIEntity"
        },
        "Product": {
          "$ref": "#/definitions/MaintainProduct"
        }
      },
      "example": {}
    },
    "ProductExtensiveSearchResult": {
      "type": "object",
      "properties": {
        "Product": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      }
    },
    "ProvisioningJobsSearchResult": {
      "type": "object",
      "properties": {
        "ProvisioningJobsDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisioningJobDetails"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProvisioningJobDetails": {
      "type": "object",
      "properties": {
        "DeviceID": {
          "format": "int32",
          "type": "integer"
        },
        "JobID": {
          "format": "int32",
          "type": "integer"
        },
        "JobState": {
          "type": "string"
        },
        "JobType": {
          "type": "string"
        },
        "ModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "OrganizationGroup": {
          "type": "string"
        },
        "PartOfSet": {
          "type": "string"
        },
        "Product": {
          "type": "string"
        },
        "ProductSet": {
          "type": "string"
        }
      }
    },
    "ProductSearchResult": {
      "type": "object",
      "properties": {
        "Products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "InstallTime": {
      "type": "object",
      "properties": {
        "Time": {
          "type": "string"
        }
      },
      "example": {
        "Time": "test"
      }
    },
    "ProvisioningJobsStatusSearchResult": {
      "type": "object",
      "properties": {
        "ProvisioningStatusJobDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisioningJobsStatusDetails"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "ProvisioningStatusJobDetails": [
          {
            "DeviceID": 1,
            "DeviceSerialNumber": "test",
            "LastSeen": "test",
            "JobTimestampDetails": [
              {
                "ProductID": 1,
                "ProductName": "test",
                "JobID": 1,
                "JobType": "test",
                "PartOfSet": "test",
                "ProductSet": "test",
                "QueuedTimestamp": "test",
                "DeliveredTimestamp": "test",
                "CancelledTimestamp": "test",
                "DeletedTimestamp": "test",
                "CompletedTimestamp": "test",
                "FailedTimestamp": "test",
                "DetachedTimestamp": "test",
                "DeferredTimestamp": "test",
                "StartedTimestamp": "test",
                "WaitingTimestamp": "test",
                "OrphanedTimestamp": "test",
                "InstallingTimestamp": "test"
              }
            ]
          }
        ],
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "ProvisioningJobsStatusDetails": {
      "type": "object",
      "properties": {
        "DeviceID": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceSerialNumber": {
          "type": "string"
        },
        "LastSeen": {
          "type": "string"
        },
        "JobTimestampDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisioningJobsTimestampDetails"
          }
        }
      },
      "example": {
        "DeviceID": 1,
        "DeviceSerialNumber": "test",
        "LastSeen": "test",
        "JobTimestampDetails": [
          {
            "ProductID": 1,
            "ProductName": "test",
            "JobID": 1,
            "JobType": "test",
            "PartOfSet": "test",
            "ProductSet": "test",
            "QueuedTimestamp": "test",
            "DeliveredTimestamp": "test",
            "CancelledTimestamp": "test",
            "DeletedTimestamp": "test",
            "CompletedTimestamp": "test",
            "FailedTimestamp": "test",
            "DetachedTimestamp": "test",
            "DeferredTimestamp": "test",
            "StartedTimestamp": "test",
            "WaitingTimestamp": "test",
            "OrphanedTimestamp": "test",
            "InstallingTimestamp": "test"
          }
        ]
      }
    },
    "ProvisioningJobsTimestampDetails": {
      "type": "object",
      "properties": {
        "ProductID": {
          "format": "int32",
          "type": "integer"
        },
        "ProductName": {
          "type": "string"
        },
        "JobID": {
          "format": "int32",
          "type": "integer"
        },
        "JobType": {
          "type": "string"
        },
        "PartOfSet": {
          "type": "string"
        },
        "ProductSet": {
          "type": "string"
        },
        "QueuedTimestamp": {
          "type": "string"
        },
        "DeliveredTimestamp": {
          "type": "string"
        },
        "CancelledTimestamp": {
          "type": "string"
        },
        "DeletedTimestamp": {
          "type": "string"
        },
        "CompletedTimestamp": {
          "type": "string"
        },
        "FailedTimestamp": {
          "type": "string"
        },
        "DetachedTimestamp": {
          "type": "string"
        },
        "DeferredTimestamp": {
          "type": "string"
        },
        "StartedTimestamp": {
          "type": "string"
        },
        "WaitingTimestamp": {
          "type": "string"
        },
        "OrphanedTimestamp": {
          "type": "string"
        },
        "InstallingTimestamp": {
          "type": "string"
        }
      },
      "example": {
        "ProductID": 1,
        "ProductName": "test",
        "JobID": 1,
        "JobType": "test",
        "PartOfSet": "test",
        "ProductSet": "test",
        "QueuedTimestamp": "test",
        "DeliveredTimestamp": "test",
        "CancelledTimestamp": "test",
        "DeletedTimestamp": "test",
        "CompletedTimestamp": "test",
        "FailedTimestamp": "test",
        "DetachedTimestamp": "test",
        "DeferredTimestamp": "test",
        "StartedTimestamp": "test",
        "WaitingTimestamp": "test",
        "OrphanedTimestamp": "test",
        "InstallingTimestamp": "test"
      }
    },
    "PayloadModel": {
      "type": "object",
      "properties": {
        "payloadType": {
          "type": "string"
        },
        "payloadID": {
          "type": "string"
        },
        "payloadAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "example": {}
          },
          "example": {}
        }
      }
    },
    "ProfileServiceResult": {
      "description": "Profile Service result",
      "type": "object",
      "properties": {
        "InstallSuccessful": {
          "description": "Is Install Successful",
          "type": "boolean"
        },
        "EnrollmentUrl": {
          "description": "If the device is unmanaged, redirect to enrollment",
          "type": "string"
        },
        "PrivacyUrl": {
          "description": "Url to redirect when privacy app is invoked",
          "type": "string"
        },
        "InstallMessage": {
          "description": "Success/Error Message to display to the user while installing the application",
          "type": "string"
        }
      },
      "example": {
        "InstallSuccessful": true,
        "EnrollmentUrl": "test",
        "PrivacyUrl": "test",
        "InstallMessage": "test"
      }
    },
    "DeviceProfilePayloadTypesResult": {
      "type": "object",
      "properties": {
        "deviceProfilePayloadTypeResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceProfilePayloadItem"
          }
        }
      },
      "example": {
        "deviceProfilePayloadTypeResults": [
          {
            "installState": "Unknown",
            "description": "test",
            "groups": [
              "test"
            ],
            "icon": "test",
            "installMessageType": "test",
            "payloadName": "test",
            "payloadType": 0,
            "requireManagement": true,
            "version": "test"
          }
        ]
      }
    },
    "DeviceProfilePayloadItem": {
      "type": "object",
      "properties": {
        "deviceProfileId": {
          "$ref": "#/definitions/EntityKey"
        },
        "installState": {
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "icon": {
          "type": "string"
        },
        "installMessageType": {
          "type": "string"
        },
        "payloadName": {
          "type": "string"
        },
        "payloadType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
          ],
          "type": "integer"
        },
        "requireManagement": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      },
      "example": {
        "installState": "Unknown",
        "description": "test",
        "groups": [
          "test"
        ],
        "icon": "test",
        "installMessageType": "test",
        "payloadName": "test",
        "payloadType": 0,
        "requireManagement": true,
        "version": "test"
      }
    },
    "DeviceProfileEntity": {
      "type": "object",
      "properties": {
        "General": {
          "$ref": "#/definitions/GeneralPayloadEntity"
        }
      },
      "example": {}
    },
    "GeneralPayloadEntity": {
      "type": "object",
      "properties": {
        "ProfileId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "IsManaged": {
          "type": "boolean"
        },
        "ProfileScope": {
          "type": "string"
        },
        "AssignmentType": {
          "type": "string"
        },
        "MinimumOperatingSystem": {
          "type": "string"
        },
        "DeviceModel": {
          "type": "string"
        },
        "OwnershipType": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "EnableProvisioning": {
          "type": "boolean"
        },
        "Password": {
          "type": "string"
        },
        "AllowRemoval": {
          "type": "string"
        },
        "ManagedLocationGroupID": {
          "format": "int32",
          "type": "integer"
        },
        "AssignedLocationGroupID": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "UserGroups": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Areas": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Schedules": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ExpirationDate": {
          "type": "string"
        }
      }
    },
    "AndroidDeviceProfileEntity": {
      "type": "object",
      "properties": {
        "Passcode": {
          "$ref": "#/definitions/AndroidPasscodePayloadEntity"
        },
        "WifiList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AndroidWifiPayloadEntity"
          }
        },
        "CredentialsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AndroidCredentialsPayloadEntity"
          }
        },
        "EmailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AndroidEmailPayloadEntity"
          }
        },
        "Restrictions": {
          "$ref": "#/definitions/AndroidRestrictionsPayloadEntity"
        },
        "VpnList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AndroidVpnPayloadEntity"
          }
        },
        "CustomSettingsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AndroidCustomSettingsPayloadEntity"
          }
        },
        "ExchangeActiveSync": {
          "$ref": "#/definitions/AndroidEASPayloadEntity"
        },
        "General": {
          "$ref": "#/definitions/GeneralPayloadEntity"
        }
      },
      "example": {}
    },
    "AndroidPasscodePayloadEntity": {
      "type": "object",
      "properties": {
        "MinimumPasscodeLength": {
          "format": "int32",
          "type": "integer"
        },
        "PasscodeContent": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumNumberOfFailedAttempts": {
          "type": "string"
        },
        "GracePeriodForPasscodeChange": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumRepeatCharacters": {
          "type": "string"
        },
        "MaximumLengthOfNumericSequences": {
          "type": "string"
        },
        "MinimumNumberOfNumericalDigits": {
          "type": "string"
        },
        "MinimumNumberOfLetters": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumNumberOfLowerCaseLetters": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumNumberOfUpperCaseLetters": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumNumberOfNonLetters": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumNumberOfSymbols": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumPasscodeAge": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceLockTimeoutInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "PasscodeHistory": {
          "type": "string"
        },
        "RequireStorageEncryption": {
          "type": "boolean"
        },
        "RequireSDCardEncryption": {
          "type": "boolean"
        },
        "requireStorageEncryptionAlways": {
          "type": "boolean"
        },
        "requireStorageEncryptionNativeEmail": {
          "type": "boolean"
        },
        "RequirePasscode": {
          "type": "boolean"
        }
      },
      "example": {
        "MinimumPasscodeLength": 1,
        "PasscodeContent": 1,
        "MaximumNumberOfFailedAttempts": "test",
        "GracePeriodForPasscodeChange": 1,
        "MaximumRepeatCharacters": "test",
        "MaximumLengthOfNumericSequences": "test",
        "MinimumNumberOfNumericalDigits": "test",
        "MinimumNumberOfLetters": 1,
        "MinimumNumberOfLowerCaseLetters": 1,
        "MinimumNumberOfUpperCaseLetters": 1,
        "MinimumNumberOfNonLetters": 1,
        "MinimumNumberOfSymbols": 1,
        "MaximumPasscodeAge": 1,
        "DeviceLockTimeoutInMinutes": 1,
        "PasscodeHistory": "test",
        "RequireStorageEncryption": true,
        "RequireSDCardEncryption": true,
        "requireStorageEncryptionAlways": true,
        "requireStorageEncryptionNativeEmail": true,
        "RequirePasscode": true
      }
    },
    "AndroidWifiPayloadEntity": {
      "type": "object",
      "properties": {
        "ServiceSetIdentifier": {
          "type": "string"
        },
        "SecurityType": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "SetAsActiveNetwork": {
          "type": "boolean"
        },
        "HiddenNetwork": {
          "type": "boolean"
        },
        "UseTwoFactorAuthentication": {
          "type": "boolean"
        },
        "SFAType": {
          "type": "string"
        },
        "TFAType": {
          "type": "string"
        },
        "Identity": {
          "type": "string"
        },
        "AnonymousIdentity": {
          "type": "string"
        },
        "EnterpriseUsername": {
          "type": "string"
        },
        "EnterprisePassword": {
          "type": "string"
        },
        "IdentityCertificate": {
          "type": "string"
        },
        "RootCertificate": {
          "type": "string"
        },
        "TLSTrustedServerNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "TLSTrustedServerFingerPrints": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CAPayloadCertificateName": {
          "type": "string"
        }
      },
      "example": {
        "ServiceSetIdentifier": "test",
        "SecurityType": "test",
        "Password": "test",
        "SetAsActiveNetwork": true,
        "HiddenNetwork": true,
        "UseTwoFactorAuthentication": true,
        "SFAType": "test",
        "TFAType": "test",
        "Identity": "test",
        "AnonymousIdentity": "test",
        "EnterpriseUsername": "test",
        "EnterprisePassword": "test",
        "IdentityCertificate": "test",
        "RootCertificate": "test",
        "TLSTrustedServerNames": [
          "test"
        ],
        "TLSTrustedServerFingerPrints": [
          "test"
        ],
        "CAPayloadCertificateName": "test"
      }
    },
    "AndroidCredentialsPayloadEntity": {
      "type": "object",
      "properties": {
        "CredentialSource": {
          "type": "string"
        },
        "CredentialName": {
          "type": "string"
        },
        "CertificateData": {
          "type": "string"
        },
        "CertificateID": {
          "format": "int32",
          "type": "integer"
        },
        "CertificatePassword": {
          "type": "string"
        },
        "CertificateThumbprint": {
          "type": "string"
        },
        "CertificateType": {
          "type": "string"
        },
        "CertificateAuthority": {
          "format": "int32",
          "type": "integer"
        },
        "CertificateTemplate": {
          "format": "int32",
          "type": "integer"
        },
        "Smime": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "CredentialSource": "test",
        "CredentialName": "test",
        "CertificateData": "test",
        "CertificateID": 1,
        "CertificatePassword": "test",
        "CertificateThumbprint": "test",
        "CertificateType": "test",
        "CertificateAuthority": 1,
        "CertificateTemplate": 1,
        "Smime": "test",
        "Name": "test"
      }
    },
    "AndroidEmailPayloadEntity": {
      "type": "object",
      "properties": {
        "EmailAccount": {
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        },
        "EmailSyncInterval": {
          "format": "int32",
          "type": "integer"
        },
        "SendersName": {
          "type": "string"
        },
        "EmailSignature": {
          "type": "string"
        },
        "SetAsDefaultAccount": {
          "type": "boolean"
        },
        "MaxEmailsToShow": {
          "format": "int32",
          "type": "integer"
        },
        "AllowAttachments": {
          "type": "boolean"
        },
        "MaximumAttachmentSizeMb": {
          "type": "string"
        },
        "UseSSL": {
          "type": "boolean"
        },
        "UseTLS": {
          "type": "boolean"
        },
        "IncomingMailServerProtocol": {
          "type": "string"
        },
        "IncomingMailServerHostName": {
          "type": "string"
        },
        "IncomingMailServerPortNumber": {
          "type": "string"
        },
        "IncomingMailServerUsername": {
          "type": "string"
        },
        "IncomingMailServerPassword": {
          "type": "string"
        },
        "IncomingMailServerPathPrefix": {
          "type": "string"
        },
        "IgnoreSSLErrorsForIncomingEmail": {
          "type": "boolean"
        },
        "OutgoingMailServerUseSSL": {
          "type": "boolean"
        },
        "OutgoingMailServerUseTLS": {
          "type": "boolean"
        },
        "OutgoingMailServerProtocol": {
          "type": "string"
        },
        "OutgoingMailServerHostname": {
          "type": "string"
        },
        "OutgoingMailServerPortNumber": {
          "type": "string"
        },
        "OutgoingMailServerUsername": {
          "type": "string"
        },
        "OutgoingMailServerPassword": {
          "type": "string"
        },
        "OutgoingMailServerPathPrefix": {
          "type": "string"
        },
        "IgnoreSSLErrorsForOutgoingEmail": {
          "type": "boolean"
        }
      },
      "example": {
        "EmailAccount": "test",
        "EmailAddress": "test",
        "EmailSyncInterval": 1,
        "SendersName": "test",
        "EmailSignature": "test",
        "SetAsDefaultAccount": true,
        "MaxEmailsToShow": 1,
        "AllowAttachments": true,
        "MaximumAttachmentSizeMb": "test",
        "UseSSL": true,
        "UseTLS": true,
        "IncomingMailServerProtocol": "test",
        "IncomingMailServerHostName": "test",
        "IncomingMailServerPortNumber": "test",
        "IncomingMailServerUsername": "test",
        "IncomingMailServerPassword": "test",
        "IncomingMailServerPathPrefix": "test",
        "IgnoreSSLErrorsForIncomingEmail": true,
        "OutgoingMailServerUseSSL": true,
        "OutgoingMailServerUseTLS": true,
        "OutgoingMailServerProtocol": "test",
        "OutgoingMailServerHostname": "test",
        "OutgoingMailServerPortNumber": "test",
        "OutgoingMailServerUsername": "test",
        "OutgoingMailServerPassword": "test",
        "OutgoingMailServerPathPrefix": "test",
        "IgnoreSSLErrorsForOutgoingEmail": true
      }
    },
    "AndroidRestrictionsPayloadEntity": {
      "type": "object",
      "properties": {
        "AllowCamera": {
          "type": "boolean"
        },
        "AllowMicrophone": {
          "type": "boolean"
        },
        "AllowFactoryReset": {
          "type": "boolean"
        },
        "AllowAllTethering": {
          "type": "boolean"
        },
        "AllowWiFiTethering": {
          "type": "boolean"
        },
        "AllowBluetoothTethering": {
          "type": "boolean"
        },
        "AllowUSBTethering": {
          "type": "boolean"
        },
        "AllowUSBDebugging": {
          "type": "boolean"
        },
        "AllowUSBMassStorage": {
          "type": "boolean"
        },
        "AllowGoogleBackup": {
          "type": "boolean"
        },
        "AllowSDCardAccess": {
          "type": "boolean"
        },
        "AllowAccessToDeviceSettings": {
          "type": "boolean"
        },
        "AllowScreenCapture": {
          "type": "boolean"
        },
        "AllowMockLocations": {
          "type": "boolean"
        },
        "AllowClipboard": {
          "type": "boolean"
        },
        "AllowUSBMediaPlayer": {
          "type": "boolean"
        },
        "AllowBackgroundData": {
          "type": "boolean"
        },
        "AllowNFC": {
          "type": "boolean"
        },
        "AllowHomeKey": {
          "type": "boolean"
        },
        "AllowUsb": {
          "type": "boolean"
        },
        "AllowAirplaneMode": {
          "type": "boolean"
        },
        "AllowAndroidMarket": {
          "type": "boolean"
        },
        "AllowYouTube": {
          "type": "boolean"
        },
        "AllowNativeAndroidBrowser": {
          "type": "boolean"
        },
        "AllowNonMarketAppInstallation": {
          "type": "boolean"
        },
        "AllowVoiceDialer": {
          "type": "boolean"
        },
        "AllowBluetooth": {
          "type": "boolean"
        },
        "AllowBluetoothDataTransfer": {
          "type": "boolean"
        },
        "AllowBluetoothPairing": {
          "type": "boolean"
        },
        "AllowBluetoothDiscoverableMode": {
          "type": "boolean"
        },
        "AllowBluetoothLimitedDiscoverableMode": {
          "type": "boolean"
        },
        "AllowOutgoingCallsViaBluetooth": {
          "type": "boolean"
        },
        "AllowDesktopConnectivityViaBluetooth": {
          "type": "boolean"
        },
        "DataConnection": {
          "format": "int32",
          "type": "integer"
        },
        "AllowWiFiProfiles": {
          "type": "boolean"
        },
        "AllowWifiChanges": {
          "type": "boolean"
        },
        "AllowPromptForCredentials": {
          "type": "boolean"
        },
        "MinimumWiFiSecurityLevel": {
          "format": "int32",
          "type": "integer"
        },
        "AllowAutomaticSyncOnRoaming": {
          "type": "boolean"
        },
        "AllowPushMessagesOnRoaming": {
          "type": "boolean"
        },
        "AllowDataUsageOnRoaming": {
          "type": "boolean"
        },
        "AllowGpsLocationServices": {
          "type": "boolean"
        },
        "AllowWirelessNetworkLocationServices": {
          "type": "boolean"
        },
        "AllowPassiveLocationServices": {
          "type": "boolean"
        },
        "AllowPopUps": {
          "type": "boolean"
        },
        "AllowCookies": {
          "type": "boolean"
        },
        "EnableAutofill": {
          "type": "boolean"
        },
        "EnableJavaScript": {
          "type": "boolean"
        },
        "ForceFraudWarning": {
          "type": "boolean"
        },
        "BlockedNetworks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AllowNonEmergencyCalls": {
          "type": "boolean"
        },
        "AllowSendingSms": {
          "type": "boolean"
        },
        "AllowPopImapEmail": {
          "type": "boolean"
        },
        "MaxDataUsageModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AndroidMaxDataUsageEntity"
          }
        },
        "SetDeviceFont": {
          "type": "boolean"
        },
        "FontName": {
          "type": "string"
        },
        "SetDeviceFontSize": {
          "type": "boolean"
        },
        "FontSize": {
          "format": "int32",
          "type": "integer"
        },
        "AllowGoogleCrashReport": {
          "type": "boolean"
        },
        "AllowOtaUpgrade": {
          "type": "boolean"
        },
        "AllowPowerOff": {
          "type": "boolean"
        },
        "AllowSdCardWrite": {
          "type": "boolean"
        },
        "AllowStatusBar": {
          "type": "boolean"
        },
        "AllowWallpaperChange": {
          "type": "boolean"
        },
        "AllowNativeVpn": {
          "type": "boolean"
        },
        "AllowRoamingVoiceCalls": {
          "type": "boolean"
        },
        "AllowAudioRecordingIfMicrophoneIsAllowed": {
          "type": "boolean"
        },
        "AllowVideoRecordingIfCameraIsAllowed": {
          "type": "boolean"
        },
        "AllowEndingActivityWhenLeftIdle": {
          "type": "boolean"
        },
        "AllowUserToSetBackgroundProcessLimit": {
          "type": "boolean"
        },
        "AllowUserToSetMobileDataLimit": {
          "type": "boolean"
        },
        "AllowSmsWithStorage": {
          "type": "boolean"
        },
        "AllowMmsWithStorage": {
          "type": "boolean"
        },
        "AllowWapPush": {
          "type": "boolean"
        },
        "AllowWifiDirect": {
          "type": "boolean"
        },
        "AllowSBeam": {
          "type": "boolean"
        },
        "AllowSVoice": {
          "type": "boolean"
        },
        "AllowAndroidBeam": {
          "type": "boolean"
        },
        "AllowCopyPasteBetweenDifferentApplications": {
          "type": "boolean"
        },
        "AllowUserToStopSystemSignedApplications": {
          "type": "boolean"
        },
        "AllowUsbHostStorage": {
          "type": "boolean"
        },
        "EnableSimPinLock": {
          "type": "boolean"
        },
        "AllowUnsecureWifi": {
          "type": "boolean"
        },
        "AllowAutoConnectionWifi": {
          "type": "boolean"
        },
        "AllowAccountSettings": {
          "type": "boolean"
        },
        "AllowApplicationSettings": {
          "type": "boolean"
        },
        "AllowDeveloperOptions": {
          "type": "boolean"
        },
        "AllowNotifications": {
          "type": "boolean"
        },
        "AllowOnlySecureVPNConnections": {
          "type": "boolean"
        },
        "AllowSystemBar": {
          "type": "boolean"
        },
        "AllowTaskManager": {
          "type": "boolean"
        },
        "AllowMenuKey": {
          "type": "boolean"
        },
        "AllowBackKey": {
          "type": "boolean"
        },
        "AllowSearchKey": {
          "type": "boolean"
        },
        "AllowVolumeKey": {
          "type": "boolean"
        }
      }
    },
    "AndroidVpnPayloadEntity": {
      "type": "object",
      "properties": {
        "ConnectionType": {
          "type": "string"
        },
        "ConnectionName": {
          "type": "string"
        },
        "Server": {
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "SharedSecret": {
          "type": "string"
        },
        "IKEIdType": {
          "format": "int32",
          "type": "integer"
        },
        "IKEIdValue": {
          "type": "string"
        },
        "Encryption": {
          "type": "boolean"
        },
        "PreSharedKey": {
          "type": "string"
        },
        "PayloadCertificateName": {
          "type": "string"
        },
        "Realm": {
          "type": "string"
        },
        "Role": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "UseWebLogonForAuthentication": {
          "type": "boolean"
        },
        "GatewayUID": {
          "type": "string"
        },
        "EnableVPNOnDemand": {
          "type": "boolean"
        },
        "VPNEnabledWrapper": {
          "type": "string"
        }
      },
      "example": {
        "ConnectionType": "test",
        "ConnectionName": "test",
        "Server": "test",
        "UserName": "test",
        "SharedSecret": "test",
        "IKEIdType": 1,
        "IKEIdValue": "test",
        "Encryption": true,
        "PreSharedKey": "test",
        "PayloadCertificateName": "test",
        "Realm": "test",
        "Role": "test",
        "Password": "test",
        "UseWebLogonForAuthentication": true,
        "GatewayUID": "test",
        "EnableVPNOnDemand": true,
        "VPNEnabledWrapper": "test"
      }
    },
    "AndroidCustomSettingsPayloadEntity": {
      "type": "object",
      "properties": {
        "CustomSettings": {
          "type": "string"
        }
      },
      "example": {
        "CustomSettings": "test"
      }
    },
    "AndroidEASPayloadEntity": {
      "type": "object",
      "properties": {
        "MailClient": {
          "format": "int32",
          "type": "integer"
        },
        "AccountName": {
          "type": "string"
        },
        "ExchangeActiveSyncHost": {
          "type": "string"
        },
        "IgnoreSSLErrors": {
          "type": "boolean"
        },
        "UseSSL": {
          "type": "boolean"
        },
        "MakeThisAccountDefaultAccount": {
          "type": "boolean"
        },
        "Domain": {
          "type": "string"
        },
        "User": {
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "IdentityCertificate": {
          "type": "string"
        },
        "PastDaysOfMailToSync": {
          "format": "int32",
          "type": "integer"
        },
        "SyncInterval": {
          "format": "int32",
          "type": "integer"
        },
        "PastDaysOfCalendarToSync": {
          "format": "int32",
          "type": "integer"
        },
        "SyncMail": {
          "type": "boolean"
        },
        "AllowSyncCalendar": {
          "type": "boolean"
        },
        "AllowSyncContacts": {
          "type": "boolean"
        },
        "AllowSyncTasks": {
          "type": "boolean"
        },
        "EnableHTMLEmail": {
          "type": "boolean"
        },
        "EmailSignature": {
          "type": "string"
        },
        "ContactsApplication": {
          "format": "int32",
          "type": "integer"
        },
        "CalendarApplication": {
          "format": "int32",
          "type": "integer"
        },
        "RequirePasscode": {
          "type": "boolean"
        },
        "AuthenticationType": {
          "format": "int32",
          "type": "integer"
        },
        "PasscodeComplexity": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumPasscodeLength": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumNumberOfComplexCharacters": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumPasscodeAge": {
          "format": "int32",
          "type": "integer"
        },
        "PasscodeHistory": {
          "format": "int32",
          "type": "integer"
        },
        "AutoLockMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "AutoLockWhenDeviceLocks": {
          "type": "boolean"
        },
        "MaximumNumberOfFailedAttempts": {
          "format": "int32",
          "type": "integer"
        },
        "AllowCopyPaste": {
          "type": "boolean"
        },
        "AllowAttachments": {
          "type": "boolean"
        },
        "MaximumAttachmentSizeMb": {
          "type": "string"
        },
        "RestrictAttachmentsToBeOpenedInFollowingApps": {
          "type": "boolean"
        },
        "Applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AndroidApplication"
          }
        },
        "RestrictDomains": {
          "type": "boolean"
        },
        "RestrictionType": {
          "format": "int32",
          "type": "integer"
        },
        "DomainName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "UsingEnterpriseLicenseKey": {
          "type": "boolean"
        },
        "MaximumEmailTruncationSizeKb": {
          "format": "int32",
          "type": "integer"
        },
        "RequireManualSyncWhenRoaming": {
          "type": "boolean"
        },
        "RequireDeviceEncryption": {
          "type": "boolean"
        },
        "RequireSDCardEncryption": {
          "type": "boolean"
        },
        "EnableSignatureEditing": {
          "type": "boolean"
        },
        "SamsungSyncInterval": {
          "format": "int32",
          "type": "integer"
        },
        "SamsungPeakDays": {
          "format": "int32",
          "type": "integer"
        },
        "PeakStartTime": {
          "type": "string"
        },
        "PeakEndTime": {
          "type": "string"
        },
        "SyncSchedulePeak": {
          "format": "int32",
          "type": "integer"
        },
        "SyncScheduleOffPeak": {
          "format": "int32",
          "type": "integer"
        },
        "SamsungSenderName": {
          "type": "string"
        },
        "SamsungUseSSL": {
          "type": "boolean"
        },
        "AlwaysVibrateOnEmailNotification": {
          "type": "boolean"
        },
        "VibrateOnNotificationWhenSettingIsSetToSilent": {
          "type": "boolean"
        },
        "DefaultAccount": {
          "type": "boolean"
        },
        "UseTLS": {
          "type": "boolean"
        },
        "EnableSecurityRestrictions": {
          "type": "boolean"
        },
        "DisableCopyingDataToPhonebook": {
          "type": "boolean"
        },
        "AllowSDCard": {
          "type": "boolean"
        },
        "AllowWidgets": {
          "type": "boolean"
        },
        "AllowEmailWidget": {
          "type": "boolean"
        },
        "AllowCalendarWidget": {
          "type": "boolean"
        },
        "AllowTaskWidget": {
          "type": "boolean"
        },
        "AllowUniversalWidget": {
          "type": "boolean"
        },
        "ShowDataOnLockScreenWidgets": {
          "type": "boolean"
        },
        "AllowSpeechNotifications": {
          "type": "boolean"
        },
        "ShowEmailInfoOnNotificationBar": {
          "type": "boolean"
        },
        "ShowCalendarInfoOnNotificationBar": {
          "type": "boolean"
        },
        "ShowTaskInfoOnNotificationBar": {
          "type": "boolean"
        },
        "DisableDataBackup": {
          "type": "boolean"
        },
        "DisableSettingsBackup": {
          "type": "boolean"
        },
        "HTCUseSSL": {
          "type": "boolean"
        },
        "AllowSyncEmail": {
          "type": "boolean"
        },
        "NativeClientOverride": {
          "type": "boolean"
        },
        "EnableAttachmentEncryption": {
          "type": "boolean"
        },
        "AttachmentRestrictedAppList": {
          "type": "string"
        },
        "UseSMIME": {
          "type": "boolean"
        },
        "SMIMECertPayloadName": {
          "type": "string"
        },
        "RequireSMIMEMessages": {
          "type": "boolean"
        },
        "RequireSignedSMIME": {
          "type": "boolean"
        },
        "AllowEmailForwarding": {
          "type": "boolean"
        },
        "AllowHTMLFormat": {
          "type": "boolean"
        },
        "AwEmailClientMaxEmailAgeFilter": {
          "format": "int32",
          "type": "integer"
        },
        "AwEmailClientSyncInterval": {
          "format": "int32",
          "type": "integer"
        },
        "WhiteListBlackListDomainName": {
          "type": "string"
        },
        "SuppressApplicationPIN": {
          "type": "boolean"
        },
        "MigrationHost": {
          "type": "string"
        },
        "LicenseKey": {
          "type": "string"
        },
        "AllowPersonalAndWorkContactsCombined": {
          "type": "boolean"
        },
        "AllowImportExport": {
          "type": "boolean"
        },
        "ShowCorporateContactsDetailsOnIncomingCalls": {
          "type": "boolean"
        },
        "AllowPersonalAndWorkCalendarsCombined": {
          "type": "boolean"
        },
        "Sunday": {
          "type": "boolean"
        },
        "Monday": {
          "type": "boolean"
        },
        "Tuesday": {
          "type": "boolean"
        },
        "Wednesday": {
          "type": "boolean"
        },
        "Thursday": {
          "type": "boolean"
        },
        "Friday": {
          "type": "boolean"
        },
        "Saturday": {
          "type": "boolean"
        }
      },
      "example": {
        "MailClient": 1,
        "AccountName": "test",
        "ExchangeActiveSyncHost": "test",
        "IgnoreSSLErrors": true,
        "UseSSL": true,
        "MakeThisAccountDefaultAccount": true,
        "Domain": "test",
        "User": "test",
        "EmailAddress": "test",
        "Password": "test",
        "IdentityCertificate": "test",
        "PastDaysOfMailToSync": 1,
        "SyncInterval": 1,
        "PastDaysOfCalendarToSync": 1,
        "SyncMail": true,
        "AllowSyncCalendar": true,
        "AllowSyncContacts": true,
        "AllowSyncTasks": true,
        "EnableHTMLEmail": true,
        "EmailSignature": "test",
        "ContactsApplication": 3,
        "CalendarApplication": 1,
        "RequirePasscode": true,
        "AuthenticationType": 1,
        "PasscodeComplexity": 1,
        "MinimumPasscodeLength": 1,
        "MinimumNumberOfComplexCharacters": 1,
        "MaximumPasscodeAge": 1,
        "PasscodeHistory": 1,
        "AutoLockMinutes": 1,
        "AutoLockWhenDeviceLocks": true,
        "MaximumNumberOfFailedAttempts": 1,
        "AllowCopyPaste": true,
        "AllowAttachments": true,
        "MaximumAttachmentSizeMb": "test",
        "RestrictAttachmentsToBeOpenedInFollowingApps": true,
        "Applications": [
          {
            "Application": "test"
          }
        ],
        "RestrictDomains": true,
        "RestrictionType": 1,
        "DomainName": [
          "test"
        ],
        "UsingEnterpriseLicenseKey": true,
        "MaximumEmailTruncationSizeKb": 1,
        "RequireManualSyncWhenRoaming": true,
        "RequireDeviceEncryption": true,
        "RequireSDCardEncryption": true,
        "EnableSignatureEditing": true,
        "SamsungSyncInterval": 1,
        "SamsungPeakDays": 127,
        "PeakStartTime": "test",
        "PeakEndTime": "test",
        "SyncSchedulePeak": 1,
        "SyncScheduleOffPeak": 1,
        "SamsungSenderName": "test",
        "SamsungUseSSL": true,
        "AlwaysVibrateOnEmailNotification": true,
        "VibrateOnNotificationWhenSettingIsSetToSilent": true,
        "DefaultAccount": true,
        "UseTLS": true,
        "EnableSecurityRestrictions": true,
        "DisableCopyingDataToPhonebook": true,
        "AllowSDCard": true,
        "AllowWidgets": true,
        "AllowEmailWidget": true,
        "AllowCalendarWidget": true,
        "AllowTaskWidget": true,
        "AllowUniversalWidget": true,
        "ShowDataOnLockScreenWidgets": true,
        "AllowSpeechNotifications": true,
        "ShowEmailInfoOnNotificationBar": true,
        "ShowCalendarInfoOnNotificationBar": true,
        "ShowTaskInfoOnNotificationBar": true,
        "DisableDataBackup": true,
        "DisableSettingsBackup": true,
        "HTCUseSSL": true,
        "AllowSyncEmail": true,
        "NativeClientOverride": true,
        "EnableAttachmentEncryption": true,
        "AttachmentRestrictedAppList": "test",
        "UseSMIME": true,
        "SMIMECertPayloadName": "test",
        "RequireSMIMEMessages": true,
        "RequireSignedSMIME": true,
        "AllowEmailForwarding": true,
        "AllowHTMLFormat": true,
        "AwEmailClientMaxEmailAgeFilter": 1,
        "AwEmailClientSyncInterval": 1,
        "WhiteListBlackListDomainName": "test",
        "SuppressApplicationPIN": true,
        "MigrationHost": "test",
        "LicenseKey": "test",
        "AllowPersonalAndWorkContactsCombined": true,
        "AllowImportExport": true,
        "ShowCorporateContactsDetailsOnIncomingCalls": true,
        "AllowPersonalAndWorkCalendarsCombined": true,
        "Sunday": true,
        "Monday": true,
        "Tuesday": true,
        "Wednesday": true,
        "Thursday": true,
        "Friday": true,
        "Saturday": true
      }
    },
    "AndroidMaxDataUsageEntity": {
      "type": "object",
      "properties": {
        "AndroidUsageFrequency": {
          "type": "string"
        },
        "AndroidDataUsageSize": {
          "type": "string"
        },
        "Maximum": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AndroidApplication": {
      "type": "object",
      "properties": {
        "Application": {
          "type": "string"
        }
      },
      "example": {
        "Application": "test"
      }
    },
    "AppleDeviceProfileEntity": {
      "type": "object",
      "properties": {
        "Passcode": {
          "$ref": "#/definitions/ApplePasscodePayloadEntity"
        },
        "EmailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppleEmailPayloadEntity"
          }
        },
        "WifiList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppleWifiPayloadEntity"
          }
        },
        "CredentialsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppleCredentialsPayloadEntity"
          }
        },
        "ScepList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppleScepPayloadEntity"
          }
        },
        "Restrictions": {
          "$ref": "#/definitions/AppleRestrictionsPayloadEntity"
        },
        "VpnList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppleVpnPayloadEntity"
          }
        },
        "CustomSettingsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppleCustomSettingsPayloadEntity"
          }
        },
        "EASNativeMailClientList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppleEASNativeMailClientPayloadEntity"
          }
        },
        "EASNitroDeskTouchDownList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppleEASNitroDeskTouchDownPayloadEntity"
          }
        },
        "EasAwMailClient": {
          "$ref": "#/definitions/AppleEASAWMailClientPayloadEntity"
        },
        "TouchDownCredentialList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppleEasTouchDownCredentialPayloadEntity"
          }
        },
        "AWMailCredentialList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppleEASAWMailCredentialPayloadEntity"
          }
        },
        "General": {
          "$ref": "#/definitions/GeneralPayloadEntity"
        }
      },
      "example": {}
    },
    "ApplePasscodePayloadEntity": {
      "type": "object",
      "properties": {
        "RequirePasscodeOnDevice": {
          "type": "boolean"
        },
        "AllowSimpleValue": {
          "type": "boolean"
        },
        "RequireAlphanumericValue": {
          "type": "boolean"
        },
        "MinimumPasscodeLength": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumNumberOfComplexCharacters": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumPasscodeAge": {
          "type": "string"
        },
        "AutoLock": {
          "type": "string"
        },
        "PasscodeHistory": {
          "type": "string"
        },
        "GracePeriodForDeviceLock": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumNumberOfFailedAttempts": {
          "type": "string"
        }
      },
      "example": {
        "RequirePasscodeOnDevice": true,
        "AllowSimpleValue": true,
        "RequireAlphanumericValue": true,
        "MinimumPasscodeLength": 1,
        "MinimumNumberOfComplexCharacters": 1,
        "MaximumPasscodeAge": "test",
        "AutoLock": "test",
        "PasscodeHistory": "test",
        "GracePeriodForDeviceLock": 1,
        "MaximumNumberOfFailedAttempts": "test"
      }
    },
    "AppleEmailPayloadEntity": {
      "type": "object",
      "properties": {
        "AccountDescription": {
          "type": "string"
        },
        "AccountType": {
          "type": "string"
        },
        "PathPrefix": {
          "type": "string"
        },
        "UserDisplayName": {
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        },
        "PreventMovingMessages": {
          "type": "boolean"
        },
        "DisableRecentContactSync": {
          "type": "boolean"
        },
        "IncomingMailServerHostName": {
          "type": "string"
        },
        "IncomingMailServerPortNumber": {
          "type": "string"
        },
        "IncomingMailServerUseSSL": {
          "type": "boolean"
        },
        "IncomingMailServerUsername": {
          "type": "string"
        },
        "IncomingMailServerAuthentication": {
          "type": "string"
        },
        "IncomingPassword": {
          "type": "string"
        },
        "OutgoingMailServerHostName": {
          "type": "string"
        },
        "OutgoingMailServerPortNumber": {
          "type": "string"
        },
        "OutgoingMailServerAuthentication": {
          "type": "string"
        },
        "OutgoingMailServerUseSSL": {
          "type": "boolean"
        },
        "OutgoingMailServerUsername": {
          "type": "string"
        },
        "OutgoingPasswordSameAsIncoming": {
          "type": "boolean"
        },
        "OutgoingPassword": {
          "type": "string"
        },
        "PreventUseInThirdPartyApps": {
          "type": "boolean"
        },
        "UseSMIME": {
          "type": "boolean"
        },
        "SMIMECertificate": {
          "type": "string"
        },
        "SMIMEEncryptionCertificate": {
          "type": "string"
        }
      },
      "example": {
        "AccountDescription": "test",
        "AccountType": "test",
        "PathPrefix": "test",
        "UserDisplayName": "test",
        "EmailAddress": "test",
        "PreventMovingMessages": true,
        "DisableRecentContactSync": true,
        "IncomingMailServerHostName": "test",
        "IncomingMailServerPortNumber": "test",
        "IncomingMailServerUseSSL": true,
        "IncomingMailServerUsername": "test",
        "IncomingMailServerAuthentication": "test",
        "IncomingPassword": "test",
        "OutgoingMailServerHostName": "test",
        "OutgoingMailServerPortNumber": "test",
        "OutgoingMailServerAuthentication": "test",
        "OutgoingMailServerUseSSL": true,
        "OutgoingMailServerUsername": "test",
        "OutgoingPasswordSameAsIncoming": true,
        "OutgoingPassword": "test",
        "PreventUseInThirdPartyApps": true,
        "UseSMIME": true,
        "SMIMECertificate": "test",
        "SMIMEEncryptionCertificate": "test"
      }
    },
    "AppleWifiPayloadEntity": {
      "type": "object",
      "properties": {
        "ServiceSetIdentifier": {
          "type": "string"
        },
        "HiddenNetwork": {
          "type": "boolean"
        },
        "SecurityType": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "TLS": {
          "type": "boolean"
        },
        "TTLS": {
          "type": "boolean"
        },
        "LEAP": {
          "type": "boolean"
        },
        "PEAP": {
          "type": "boolean"
        },
        "EAPFAST": {
          "type": "boolean"
        },
        "EAPSIM": {
          "type": "boolean"
        },
        "ProvisionPAC": {
          "type": "boolean"
        },
        "ProvisionPACAnonymously": {
          "type": "boolean"
        },
        "UsePAC": {
          "type": "boolean"
        },
        "AllowTrustExceptions": {
          "type": "boolean"
        },
        "InnerIdentity": {
          "type": "string"
        },
        "UserPerConnectionPassword": {
          "type": "boolean"
        },
        "UserName": {
          "type": "string"
        },
        "UserPassword": {
          "type": "string"
        },
        "TrustedServerCertificateNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "TrustedCertificates": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "OuterIdentity": {
          "type": "string"
        },
        "IdentityCertificate": {
          "type": "string"
        },
        "AutoJoin": {
          "type": "boolean"
        },
        "ProxyType": {
          "type": "string"
        },
        "ProxyServer": {
          "type": "string"
        },
        "ProxyServerPort": {
          "format": "int32",
          "type": "integer"
        },
        "ProxyUsername": {
          "type": "string"
        },
        "ProxyPassword": {
          "type": "string"
        },
        "ProxyUrl": {
          "type": "string"
        },
        "WiFiHotspot": {
          "type": "boolean"
        },
        "DomainName": {
          "type": "string"
        },
        "DisplayedOperatorName": {
          "type": "string"
        },
        "ServiceProviderRoamingEnabled": {
          "type": "boolean"
        },
        "RoamingConsortiumOrganizationID": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "NetworkAccessId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "MccMnc": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "ServiceSetIdentifier": "test",
        "HiddenNetwork": true,
        "SecurityType": "test",
        "Password": "test",
        "TLS": true,
        "TTLS": true,
        "LEAP": true,
        "PEAP": true,
        "EAPFAST": true,
        "EAPSIM": true,
        "ProvisionPAC": true,
        "ProvisionPACAnonymously": true,
        "UsePAC": true,
        "AllowTrustExceptions": true,
        "InnerIdentity": "test",
        "UserPerConnectionPassword": true,
        "UserName": "test",
        "UserPassword": "test",
        "TrustedServerCertificateNames": [
          "test"
        ],
        "TrustedCertificates": [
          "test"
        ],
        "OuterIdentity": "test",
        "IdentityCertificate": "test",
        "AutoJoin": true,
        "ProxyType": "test",
        "ProxyServer": "test",
        "ProxyServerPort": 1,
        "ProxyUsername": "test",
        "ProxyPassword": "test",
        "ProxyUrl": "test",
        "WiFiHotspot": true,
        "DomainName": "test",
        "DisplayedOperatorName": "test",
        "ServiceProviderRoamingEnabled": true,
        "RoamingConsortiumOrganizationID": [
          "test"
        ],
        "NetworkAccessId": [
          "test"
        ],
        "MccMnc": [
          "test"
        ]
      }
    },
    "AppleCredentialsPayloadEntity": {
      "type": "object",
      "properties": {
        "CertificateID": {
          "format": "int32",
          "type": "integer"
        },
        "CredentialName": {
          "type": "string"
        },
        "CredentialSource": {
          "type": "string"
        },
        "CertificateAuthority": {
          "format": "int32",
          "type": "integer"
        },
        "CertificateTemplate": {
          "format": "int32",
          "type": "integer"
        },
        "Smime": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "CertificateID": 1,
        "CredentialName": "test",
        "CredentialSource": "test",
        "CertificateAuthority": 1,
        "CertificateTemplate": 1,
        "Smime": "test",
        "Name": "test"
      }
    },
    "AppleScepPayloadEntity": {
      "type": "object",
      "properties": {
        "CredentialSource": {
          "type": "string"
        },
        "CertificateAuthority": {
          "format": "int32",
          "type": "integer"
        },
        "CertificateTemplate": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "CredentialSource": "test",
        "CertificateAuthority": 1,
        "CertificateTemplate": 1,
        "Name": "test"
      }
    },
    "AppleRestrictionsPayloadEntity": {
      "type": "object",
      "properties": {
        "AllowInstallingPublicApps": {
          "type": "boolean"
        },
        "AllowAppRemoval": {
          "type": "boolean"
        },
        "AllowUseOfCamera": {
          "type": "boolean"
        },
        "AllowExplicitMusicAndPodcasts": {
          "type": "boolean"
        },
        "AllowAutomaticSyncWhileRoaming": {
          "type": "boolean"
        },
        "AllowInAppPurchase": {
          "type": "boolean"
        },
        "AllowUseOfSafari": {
          "type": "boolean"
        },
        "AllowScreenCapture": {
          "type": "boolean"
        },
        "AllowFingerPrintForUnlock": {
          "type": "boolean"
        },
        "AllowFaceTime": {
          "type": "boolean"
        },
        "AllowVoiceDialing": {
          "type": "boolean"
        },
        "AllowUseOfYouTube": {
          "type": "boolean"
        },
        "AllowUseOfiTunesMusicStore": {
          "type": "boolean"
        },
        "ForceEncryptedBackups": {
          "type": "boolean"
        },
        "RatingApps": {
          "format": "int32",
          "type": "integer"
        },
        "RatingMovies": {
          "format": "int32",
          "type": "integer"
        },
        "RatingsRegion": {
          "type": "string"
        },
        "RatingTVShows": {
          "format": "int32",
          "type": "integer"
        },
        "AcceptCookies": {
          "type": "string"
        },
        "EnableAutofill": {
          "type": "boolean"
        },
        "EnableJavaScript": {
          "type": "boolean"
        },
        "BlockPopUps": {
          "type": "boolean"
        },
        "ForceFraudWarning": {
          "type": "boolean"
        },
        "EnablePlugins": {
          "type": "boolean"
        },
        "AllowAddingGameCenterFriends": {
          "type": "boolean"
        },
        "AllowMultiplayerGaming": {
          "type": "boolean"
        },
        "ForceiTunesStorePasswordEntry": {
          "type": "boolean"
        },
        "AllowUserToAcceptUntrustedTlsCertificates": {
          "type": "boolean"
        },
        "AllowBackup": {
          "type": "boolean"
        },
        "AllowDocumentSync": {
          "type": "boolean"
        },
        "AllowAppSettingsSync": {
          "type": "boolean"
        },
        "AllowPhotoStream": {
          "type": "boolean"
        },
        "AllowDiagnosticDataToBeSentToApple": {
          "type": "boolean"
        },
        "AllowSiri": {
          "type": "boolean"
        },
        "AllowSiriWhileDeviceLocked": {
          "type": "boolean"
        },
        "EnableSiriProfanityFilter": {
          "type": "boolean"
        },
        "ShowUserGeneratedContentInSiri": {
          "type": "boolean"
        },
        "AllowUseOfImessage": {
          "type": "boolean"
        },
        "AllowPassbookWhileDeviceLocked": {
          "type": "boolean"
        },
        "AllowGameCenter": {
          "type": "boolean"
        },
        "AllowUseOfIbookstore": {
          "type": "boolean"
        },
        "IBooks": {
          "type": "string"
        },
        "AllowSharedPhotoStream": {
          "type": "boolean"
        },
        "AllowManualProfileInstallation": {
          "type": "boolean"
        },
        "AllowOpeningManagedAppDocumentsInUnmanagedApps": {
          "type": "boolean"
        },
        "AllowOpeningUnManagedAppDocumentsInManagedApps": {
          "type": "boolean"
        },
        "LimitAdTracking": {
          "type": "boolean"
        },
        "AllowAccountModification": {
          "type": "boolean"
        },
        "AllowAirDrop": {
          "type": "boolean"
        },
        "AllowChangesToFindMyFriends": {
          "type": "boolean"
        },
        "AllowKeychainSync": {
          "type": "boolean"
        },
        "AllowOverTheAirPKIUpdates": {
          "type": "boolean"
        },
        "AllowPairingWithNonConfiguratorHosts": {
          "type": "boolean"
        },
        "AllowChangesToCellularDataUsageForApps": {
          "type": "boolean"
        },
        "ShowControlCenterOnLockScreen": {
          "type": "boolean"
        },
        "ShowNotificationsViewOnLockScreen": {
          "type": "boolean"
        },
        "ShowTodayViewOnLockScreen": {
          "type": "boolean"
        },
        "Allowpasscodemodification": {
          "type": "boolean"
        },
        "AllowTouchIdModification": {
          "type": "boolean"
        },
        "AllowAppStoreicononHomescreen": {
          "type": "boolean"
        },
        "Allowautomaticappdownloads": {
          "type": "boolean"
        },
        "AllowinternetresultsinSpotlight": {
          "type": "boolean"
        },
        "AllowconfiguringRestrictions": {
          "type": "boolean"
        },
        "AllowEraseAllContentsandSettings": {
          "type": "boolean"
        },
        "Allowdevicenamemodification": {
          "type": "boolean"
        },
        "Allowwallpapermodification": {
          "type": "boolean"
        },
        "RequirepasscodeonfirstAirPlaypairing": {
          "type": "boolean"
        },
        "EnforceAirDropasanunmanageddropdestination": {
          "type": "boolean"
        },
        "AllowAppleWatchpairing": {
          "type": "boolean"
        },
        "Allowkeyboardshortcuts": {
          "type": "boolean"
        },
        "AllowPredictiveKeyboard": {
          "type": "boolean"
        },
        "Allowautocorrectionforkeyboard": {
          "type": "boolean"
        },
        "Allowspellcheckforkeyboard": {
          "type": "boolean"
        },
        "Allowdefinitionlookupforkeyboard": {
          "type": "boolean"
        },
        "AllowNews": {
          "type": "boolean"
        },
        "AllowPodcasts": {
          "type": "boolean"
        },
        "Allowmanagedappstostoredata": {
          "type": "boolean"
        },
        "AllowbackingupEnterpriseBooks": {
          "type": "boolean"
        },
        "AllowsynchronizingEnterpriseBooksnotesandhiglights": {
          "type": "boolean"
        },
        "AllowiCloudphotolibrary": {
          "type": "boolean"
        },
        "Allowusertotrustunmanagedenterpriseapps": {
          "type": "boolean"
        },
        "EnforceWristDetectiononAppleWatch": {
          "type": "boolean"
        },
        "AllowHandoff": {
          "type": "boolean"
        }
      }
    },
    "AppleVpnPayloadEntity": {
      "type": "object",
      "properties": {
        "ConnectionName": {
          "type": "string"
        },
        "ConnectionType": {
          "type": "string"
        },
        "CommunicationServer": {
          "type": "string"
        },
        "Account": {
          "type": "string"
        },
        "Realm": {
          "type": "string"
        },
        "Role": {
          "type": "string"
        },
        "EncryptionLevel": {
          "format": "int32",
          "type": "integer"
        },
        "SendAllTraffic": {
          "type": "boolean"
        },
        "UserAuthentication": {
          "format": "int32",
          "type": "integer"
        },
        "MachineAuthentication": {
          "format": "int32",
          "type": "integer"
        },
        "GroupName": {
          "type": "string"
        },
        "PromptForPassword": {
          "type": "boolean"
        },
        "UseHybridAuthentication": {
          "type": "boolean"
        },
        "SharedSecret": {
          "type": "string"
        },
        "ProxyServerAutoConfigURL": {
          "type": "string"
        },
        "Proxy": {
          "type": "string"
        },
        "ProxyServer": {
          "type": "string"
        },
        "Port": {
          "type": "string"
        },
        "ProxyUsername": {
          "type": "string"
        },
        "ProxyPassword": {
          "type": "string"
        },
        "ProxyAutoDiscoveryEnable": {
          "format": "int32",
          "type": "integer"
        },
        "VpnUserAuthentication": {
          "type": "string"
        },
        "VpnPassword": {
          "type": "string"
        },
        "EnableVPNOnDemand": {
          "type": "boolean"
        },
        "UseAlternativeiOS7Syntax": {
          "type": "boolean"
        },
        "IdentityCertificate": {
          "type": "string"
        },
        "IncludeUserPIN": {
          "type": "boolean"
        },
        "LoginGroupOrDomain": {
          "type": "string"
        },
        "VpnOnDemandModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppleVpnOnDemandEntity"
          }
        },
        "Identifier": {
          "type": "string"
        },
        "CustomData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomDataEntity"
          }
        },
        "BlueCoatCustomerID": {
          "type": "string"
        },
        "PerAppVpn": {
          "type": "boolean"
        },
        "GatewayUID": {
          "type": "string"
        },
        "ConnectAutomatically": {
          "type": "boolean"
        },
        "SafariDomains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "WebsenseServer": {
          "type": "string"
        },
        "WebsenseUsername": {
          "type": "string"
        },
        "WebsensePassword": {
          "type": "string"
        }
      }
    },
    "AppleCustomSettingsPayloadEntity": {
      "type": "object",
      "properties": {
        "CustomSettings": {
          "type": "string"
        }
      },
      "example": {
        "CustomSettings": "test"
      }
    },
    "AppleEASNativeMailClientPayloadEntity": {
      "type": "object",
      "properties": {
        "AccountName": {
          "type": "string"
        },
        "ExchangeActiveSyncHost": {
          "type": "string"
        },
        "UseSSL": {
          "type": "boolean"
        },
        "UseSMIME": {
          "type": "boolean"
        },
        "SMIMECertificateName": {
          "type": "string"
        },
        "SmimeEncryptionCertificateName": {
          "type": "string"
        },
        "Domain": {
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "PayloadCertificateName": {
          "type": "string"
        },
        "PastDaysOfMailToSync": {
          "format": "int32",
          "type": "integer"
        },
        "PreventMovingMessages": {
          "type": "boolean"
        },
        "PreventUseInThirdPartyApps": {
          "type": "boolean"
        },
        "DisableRecentContactSync": {
          "type": "boolean"
        }
      },
      "example": {
        "AccountName": "test",
        "ExchangeActiveSyncHost": "test",
        "UseSSL": true,
        "UseSMIME": true,
        "SMIMECertificateName": "test",
        "SmimeEncryptionCertificateName": "test",
        "Domain": "test",
        "UserName": "test",
        "EmailAddress": "test",
        "Password": "test",
        "PayloadCertificateName": "test",
        "PastDaysOfMailToSync": 1,
        "PreventMovingMessages": true,
        "PreventUseInThirdPartyApps": true,
        "DisableRecentContactSync": true
      }
    },
    "AppleEASNitroDeskTouchDownPayloadEntity": {
      "type": "object",
      "properties": {
        "ExchangeActiveSyncHost": {
          "type": "string"
        },
        "IgnoreSSLErrors": {
          "type": "boolean"
        },
        "Domain": {
          "type": "string"
        },
        "User": {
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "IdentityCertificate": {
          "type": "string"
        },
        "PastDaysOfMailToSync": {
          "format": "int32",
          "type": "integer"
        },
        "PastDaysOfCalendarToSync": {
          "format": "int32",
          "type": "integer"
        },
        "RequireManualSyncWhenRoaming": {
          "type": "boolean"
        },
        "EnableHtmlEmail": {
          "type": "boolean"
        },
        "MaximumEmailTruncationSizeKb": {
          "type": "string"
        },
        "EmailSignature": {
          "type": "string"
        },
        "EnableSignatureEditing": {
          "type": "boolean"
        },
        "RequirePasscode": {
          "type": "boolean"
        },
        "AuthenticationType": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumPasscodeLength": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumNumberOfComplexCharacters": {
          "format": "int32",
          "type": "integer"
        },
        "AutoLockMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "PasscodeHistory": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumPasscodeAge": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumNumberOfFailedAttempts": {
          "format": "int32",
          "type": "integer"
        },
        "EnableSecurityRestrictions": {
          "type": "boolean"
        },
        "AllowCopyPaste": {
          "type": "boolean"
        },
        "EnableCopyToPhonebook": {
          "type": "boolean"
        },
        "AllowAttachments": {
          "type": "boolean"
        },
        "AllowDataExport": {
          "type": "boolean"
        },
        "ShowEmailInfoOnNotificationBar": {
          "type": "boolean"
        },
        "ShowCalendarInfoOnNotificationBar": {
          "type": "boolean"
        },
        "ShowTaskInfoOnNotificationBar": {
          "type": "boolean"
        },
        "ShowDataOnLockScreenWidgets": {
          "type": "boolean"
        }
      },
      "example": {
        "ExchangeActiveSyncHost": "test",
        "IgnoreSSLErrors": true,
        "Domain": "test",
        "User": "test",
        "EmailAddress": "test",
        "Password": "test",
        "IdentityCertificate": "test",
        "PastDaysOfMailToSync": 1,
        "PastDaysOfCalendarToSync": 1,
        "RequireManualSyncWhenRoaming": true,
        "EnableHtmlEmail": true,
        "MaximumEmailTruncationSizeKb": "test",
        "EmailSignature": "test",
        "EnableSignatureEditing": true,
        "RequirePasscode": true,
        "AuthenticationType": 1,
        "MinimumPasscodeLength": 1,
        "MinimumNumberOfComplexCharacters": 1,
        "AutoLockMinutes": 1,
        "PasscodeHistory": 1,
        "MaximumPasscodeAge": 1,
        "MaximumNumberOfFailedAttempts": 1,
        "EnableSecurityRestrictions": true,
        "AllowCopyPaste": true,
        "EnableCopyToPhonebook": true,
        "AllowAttachments": true,
        "AllowDataExport": true,
        "ShowEmailInfoOnNotificationBar": true,
        "ShowCalendarInfoOnNotificationBar": true,
        "ShowTaskInfoOnNotificationBar": true,
        "ShowDataOnLockScreenWidgets": true
      }
    },
    "AppleEASAWMailClientPayloadEntity": {
      "type": "object",
      "properties": {
        "ExchangeActiveSyncHost": {
          "type": "string"
        },
        "IgnoreSSLErrors": {
          "type": "boolean"
        },
        "UseSMIME": {
          "type": "boolean"
        },
        "SMIMECertificate": {
          "type": "string"
        },
        "SmimeEncryptionCertificate": {
          "type": "string"
        },
        "Domain": {
          "type": "string"
        },
        "User": {
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "PayloadCertificate": {
          "type": "string"
        },
        "EnableEmail": {
          "type": "boolean"
        },
        "EnableCalendar": {
          "type": "boolean"
        },
        "EnableContacts": {
          "type": "boolean"
        },
        "SyncInterval": {
          "format": "int32",
          "type": "integer"
        },
        "EmailNotifications": {
          "format": "int32",
          "type": "integer"
        },
        "PastDaysOfMailToSync": {
          "format": "int32",
          "type": "integer"
        },
        "PastDaysOfCalendarToSync": {
          "format": "int32",
          "type": "integer"
        },
        "EmailSizeInKilobytesDefaultIsUnlimited": {
          "format": "int32",
          "type": "integer"
        },
        "EnableHtmlEmail": {
          "type": "boolean"
        },
        "EmailSignature": {
          "type": "string"
        },
        "EnableSignatureEditing": {
          "type": "boolean"
        },
        "RequirePasscode": {
          "type": "boolean"
        },
        "Type": {
          "format": "int32",
          "type": "integer"
        },
        "Complexity": {
          "format": "int32",
          "type": "integer"
        },
        "AllowSimplePasscode": {
          "type": "boolean"
        },
        "MinimumLength": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumNumberOfComplexCharacters": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumAgeDays": {
          "format": "int32",
          "type": "integer"
        },
        "AutoLock": {
          "type": "boolean"
        },
        "History": {
          "format": "int32",
          "type": "integer"
        },
        "GracePeriod": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumNumberOfFailedAttempts": {
          "format": "int32",
          "type": "integer"
        },
        "DisabeCopyPaste": {
          "type": "boolean"
        },
        "DisableAttachments": {
          "type": "boolean"
        },
        "MaximumAttachmentSizeMB": {
          "format": "int32",
          "type": "integer"
        },
        "OpenAllLinksInAirWatchBrowser": {
          "type": "boolean"
        },
        "SCLOnlyAttachments": {
          "type": "boolean"
        },
        "RestrictAttachmentsToBeOpenedInFollowingApps": {
          "type": "boolean"
        },
        "Applications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AllowPrinting": {
          "type": "boolean"
        }
      },
      "example": {
        "ExchangeActiveSyncHost": "test",
        "IgnoreSSLErrors": true,
        "UseSMIME": true,
        "SMIMECertificate": "test",
        "SmimeEncryptionCertificate": "test",
        "Domain": "test",
        "User": "test",
        "EmailAddress": "test",
        "Password": "test",
        "PayloadCertificate": "test",
        "EnableEmail": true,
        "EnableCalendar": true,
        "EnableContacts": true,
        "SyncInterval": 1,
        "EmailNotifications": 1,
        "PastDaysOfMailToSync": 1,
        "PastDaysOfCalendarToSync": 1,
        "EmailSizeInKilobytesDefaultIsUnlimited": 1,
        "EnableHtmlEmail": true,
        "EmailSignature": "test",
        "EnableSignatureEditing": true,
        "RequirePasscode": true,
        "Type": 1,
        "Complexity": 1,
        "AllowSimplePasscode": true,
        "MinimumLength": 1,
        "MinimumNumberOfComplexCharacters": 1,
        "MaximumAgeDays": 1,
        "AutoLock": true,
        "History": 1,
        "GracePeriod": 1,
        "MaximumNumberOfFailedAttempts": 1,
        "DisabeCopyPaste": true,
        "DisableAttachments": true,
        "MaximumAttachmentSizeMB": 1,
        "OpenAllLinksInAirWatchBrowser": true,
        "SCLOnlyAttachments": true,
        "RestrictAttachmentsToBeOpenedInFollowingApps": true,
        "Applications": [
          "test"
        ],
        "AllowPrinting": true
      }
    },
    "AppleEasTouchDownCredentialPayloadEntity": {
      "type": "object",
      "properties": {
        "CredentialSource": {
          "type": "string"
        },
        "CredentialName": {
          "type": "string"
        },
        "CertificateId": {
          "format": "int32",
          "type": "integer"
        },
        "CertificateAuthority": {
          "format": "int32",
          "type": "integer"
        },
        "CertificateTemplate": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "CredentialSource": "test",
        "CredentialName": "test",
        "CertificateId": 1,
        "CertificateAuthority": 1,
        "CertificateTemplate": 1,
        "Name": "test"
      }
    },
    "AppleEASAWMailCredentialPayloadEntity": {
      "type": "object",
      "properties": {
        "CredentialSource": {
          "type": "string"
        },
        "CredentialName": {
          "type": "string"
        },
        "CertificateID": {
          "format": "int32",
          "type": "integer"
        },
        "CertificateAuthority": {
          "format": "int32",
          "type": "integer"
        },
        "CertificateTemplate": {
          "format": "int32",
          "type": "integer"
        },
        "Smime": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "CredentialSource": "test",
        "CredentialName": "test",
        "CertificateID": 1,
        "CertificateAuthority": 1,
        "CertificateTemplate": 1,
        "Smime": "test",
        "Name": "test"
      }
    },
    "AppleVpnOnDemandEntity": {
      "type": "object",
      "properties": {
        "Domain": {
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        }
      },
      "example": {
        "Domain": "test",
        "Type": 0
      }
    },
    "CustomDataEntity": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "example": {
        "Key": "test",
        "Value": "test"
      }
    },
    "ProfileSearchResult": {
      "type": "object",
      "properties": {
        "Profiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Profile"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "ProfileName": {
          "type": "string"
        },
        "OrganizationGroupId": {
          "type": "string"
        },
        "ProfileStatus": {
          "type": "string"
        },
        "Platform": {
          "type": "string"
        },
        "ProfileScope": {
          "type": "string"
        },
        "OperatingSystem": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "Ownership": {
          "type": "string"
        },
        "ManagedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "AssignedOrganizationGroups": {
          "$ref": "#/definitions/ProfileAssignedOrganizationGroups"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      },
      "example": {
        "ProfileName": "test",
        "OrganizationGroupId": "test",
        "ProfileStatus": "test",
        "Platform": "test",
        "ProfileScope": "test",
        "OperatingSystem": "test",
        "Model": "test",
        "Ownership": "test",
        "ManagedBy": "test",
        "Type": "test"
      }
    },
    "ProfileAssignedOrganizationGroups": {
      "type": "object",
      "properties": {
        "AssignedOg": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProfileAssignedOrganizationGroup"
          }
        }
      }
    },
    "ProfileAssignedOrganizationGroup": {
      "type": "object",
      "properties": {
        "ProfileId": {
          "format": "int32",
          "type": "integer"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "OrganizationGroupName": {
          "type": "string"
        }
      },
      "example": {
        "ProfileId": 0,
        "OrganizationGroupId": 1,
        "OrganizationGroupName": "test"
      }
    },
    "DeviceInfo": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "Udid": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "MacAddress": {
          "type": "string"
        }
      },
      "example": {
        "DeviceId": 1,
        "Udid": "test",
        "SerialNumber": "test",
        "MacAddress": "test"
      }
    },
    "WindowsMobileDeviceProfileEntity": {
      "type": "object",
      "properties": {
        "WifiList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WindowsMobileWiFiPayloadEntity"
          }
        },
        "CredentialsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WindowsMobileCredentialsPayloadEntity"
          }
        },
        "General": {
          "$ref": "#/definitions/GeneralPayloadV2Entity"
        }
      },
      "example": {}
    },
    "WindowsMobileWiFiPayloadEntity": {
      "type": "object",
      "properties": {
        "MotorolaAdapterType": {
          "type": "string"
        },
        "ServiceSetIdentifier": {
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "ServerCertificate": {
          "type": "string"
        },
        "SecurityType": {
          "type": "string"
        },
        "PreSharedKey": {
          "type": "string"
        }
      },
      "example": {
        "MotorolaAdapterType": "test",
        "ServiceSetIdentifier": "test",
        "UserName": "test",
        "Password": "test",
        "ServerCertificate": "test",
        "SecurityType": "test",
        "PreSharedKey": "test"
      }
    },
    "WindowsMobileCredentialsPayloadEntity": {
      "type": "object",
      "properties": {
        "CredentialSource": {
          "type": "string"
        },
        "CredentialName": {
          "type": "string"
        },
        "CertificateData": {
          "type": "string"
        },
        "CertificateID": {
          "format": "int32",
          "type": "integer"
        },
        "CertificatePassword": {
          "type": "string"
        },
        "CertificateThumbprint": {
          "type": "string"
        },
        "CertificateType": {
          "type": "string"
        },
        "CertificateAuthority": {
          "format": "int32",
          "type": "integer"
        },
        "CertificateTemplate": {
          "format": "int32",
          "type": "integer"
        },
        "CertificateStore": {
          "type": "string"
        }
      },
      "example": {
        "CredentialSource": "test",
        "CredentialName": "test",
        "CertificateData": "test",
        "CertificateID": 1,
        "CertificatePassword": "test",
        "CertificateThumbprint": "test",
        "CertificateType": "test",
        "CertificateAuthority": 1,
        "CertificateTemplate": 1,
        "CertificateStore": "test"
      }
    },
    "GeneralPayloadV2Entity": {
      "type": "object",
      "properties": {
        "ProfileId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ProfileScope": {
          "type": "string"
        },
        "Version": {
          "format": "int32",
          "type": "integer"
        },
        "CreateNewVersion": {
          "type": "boolean"
        },
        "AssignmentType": {
          "type": "string"
        },
        "ProfileContext": {
          "type": "string"
        },
        "EnableProvisioning": {
          "type": "boolean"
        },
        "IsActive": {
          "type": "boolean"
        },
        "IsManaged": {
          "type": "boolean"
        },
        "Password": {
          "type": "string"
        },
        "AllowRemoval": {
          "type": "string"
        },
        "AssignedSmartGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupEntity"
          }
        },
        "ExcludedSmartGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupEntity"
          }
        },
        "ManagedLocationGroupID": {
          "format": "int32",
          "type": "integer"
        },
        "AssignedGeofenceArea": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "AssignedSchedule": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ExpirationDate": {
          "type": "string"
        }
      }
    },
    "SmartGroupEntity": {
      "type": "object",
      "properties": {
        "SmartGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "SmartGroupId": 1,
        "Name": "test"
      }
    },
    "Certificate": {
      "type": "object",
      "properties": {
        "CertificatePayload": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      },
      "example": {
        "CertificatePayload": "test",
        "Password": "test"
      }
    },
    "CustomAttributeProfileEntity": {
      "type": "object",
      "properties": {
        "CustomAttributeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeneralCustomAttributeEntity"
          }
        },
        "General": {
          "$ref": "#/definitions/GeneralPayloadEntity"
        },
        "PlatformID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "PlatformID": 1
      }
    },
    "GeneralCustomAttributeEntity": {
      "type": "object",
      "properties": {
        "ApplicationGroup": {
          "type": "string"
        },
        "CustomAttributeId": {
          "format": "int32",
          "type": "integer"
        },
        "CustomAttribute": {
          "type": "string"
        },
        "AttributeValue": {
          "type": "string"
        },
        "IsDynamic": {
          "type": "boolean"
        },
        "Permissions": {
          "format": "int32",
          "type": "integer"
        },
        "CreateCA": {
          "type": "boolean"
        }
      },
      "example": {
        "ApplicationGroup": "test",
        "CustomAttributeId": 1,
        "CustomAttribute": "test",
        "AttributeValue": "test",
        "IsDynamic": true,
        "Permissions": 1,
        "CreateCA": true
      }
    },
    "GenerateBarcodeEntity": {
      "type": "object",
      "properties": {
        "StagingProfileID": {
          "format": "int32",
          "type": "integer"
        },
        "OrganizationGroupID": {
          "format": "int32",
          "type": "integer"
        },
        "UniversalBarcode": {
          "type": "boolean"
        },
        "StagingRelayServerID": {
          "format": "int32",
          "type": "integer"
        },
        "WifiProfileID": {
          "format": "int32",
          "type": "integer"
        },
        "EncryptionPassphraseMethod": {
          "format": "int32",
          "type": "integer"
        },
        "Passphrase": {
          "type": "string"
        },
        "BarcodeFormatPDF417": {
          "type": "boolean"
        },
        "BarcodeFormatNarrowPDF417": {
          "type": "boolean"
        },
        "BarcodeFormatLinear": {
          "type": "boolean"
        },
        "BarcodeFormatNarrowLinear": {
          "type": "boolean"
        }
      },
      "example": {
        "StagingProfileID": 1,
        "OrganizationGroupID": 1,
        "UniversalBarcode": true,
        "StagingRelayServerID": 1,
        "WifiProfileID": 1,
        "EncryptionPassphraseMethod": 1,
        "Passphrase": "test",
        "BarcodeFormatPDF417": true,
        "BarcodeFormatNarrowPDF417": true,
        "BarcodeFormatLinear": true,
        "BarcodeFormatNarrowLinear": true
      }
    },
    "SmartGroupProfilesAssignmentModel": {
      "description": "The smart group assignment map model.",
      "type": "object",
      "properties": {
        "Profiles": {
          "description": "Gets or sets the profiles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProfilesModel"
          }
        },
        "SmartGroups": {
          "description": "Gets or sets the smart groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupsModel"
          }
        }
      },
      "example": {
        "Profiles": [
          {
            "Id": 1
          }
        ],
        "SmartGroups": [
          {
            "Id": 1
          }
        ]
      }
    },
    "ProfilesModel": {
      "description": "The profiles model.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the profile id.",
          "type": "integer"
        }
      },
      "example": {
        "Id": 1
      }
    },
    "SmartGroupsModel": {
      "description": "The smart groups model.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the smart group id.",
          "type": "integer"
        }
      },
      "example": {
        "Id": 1
      }
    },
    "RelayServerDetailsModel": {
      "description": "This holds the result set of Product search operation",
      "type": "object",
      "properties": {
        "General": {
          "$ref": "#/definitions/RelayServerGeneralDetailsModel",
          "description": "Gets or sets the general details of the relay server"
        },
        "Assignment": {
          "$ref": "#/definitions/RelayServerAssignmentModel",
          "description": "Gets or sets the assignment details of the relay server"
        },
        "DeviceConnection": {
          "$ref": "#/definitions/RelayServerDeviceConnectionModel",
          "description": "Gets or sets the device connection details of the relay server"
        },
        "ConsoleConnection": {
          "$ref": "#/definitions/RelayServerConsoleConnectionModel",
          "description": "Gets or sets the console connection details of the relay server"
        },
        "PullConnection": {
          "$ref": "#/definitions/RelayServerPullConnectionModel",
          "description": "Gets or sets the Pull connection details of the relay server"
        }
      },
      "example": {}
    },
    "RelayServerGeneralDetailsModel": {
      "description": "This holds the general details for the relay server",
      "required": [
        "RelayServerTypeId"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the Name of server",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the Description of server",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "RelayServerTypeId": {
          "format": "int32",
          "description": "Gets or sets RelayServerType id",
          "type": "integer"
        },
        "RestrictContentDeliveryWindow": {
          "description": "Gets or sets a value whether RestrictContentDeliveryWindow is available or not",
          "type": "string"
        },
        "StartTime": {
          "description": "Gets or sets the StartTime",
          "type": "string"
        },
        "EndTime": {
          "description": "Gets or sets the EndTime",
          "type": "string"
        },
        "RelayServerId": {
          "format": "int32",
          "description": "Gets or sets the Name of server",
          "type": "integer"
        },
        "Active": {
          "description": "Gets or sets the status of the server",
          "type": "string"
        }
      }
    },
    "RelayServerAssignmentModel": {
      "description": "This holds the general details for the relay server",
      "type": "object",
      "properties": {
        "ManagedBy": {
          "description": "Gets or sets ManagedBy (Location group)",
          "type": "string"
        },
        "StagingServer": {
          "description": "Gets or sets Staging group ids",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ProductionServer": {
          "description": "Gets or sets production group ids",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "RelayServerDeviceConnectionModel": {
      "description": "This holds the details of the device connection of relay server",
      "type": "object",
      "properties": {
        "Protocol": {
          "format": "int32",
          "description": "Gets or sets private protocol id",
          "type": "integer"
        },
        "Hostname": {
          "description": "Gets or sets public server",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Port": {
          "format": "int32",
          "description": "Gets or sets private port",
          "type": "integer"
        },
        "User": {
          "description": "Gets or sets private user",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets private password",
          "maxLength": 150,
          "minLength": 0,
          "type": "string"
        },
        "Path": {
          "description": "Gets or sets private path",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "PassiveMode": {
          "description": "Gets or sets a value indicating whether the passive mode is allowed or not.",
          "type": "string"
        },
        "VerifyServer": {
          "description": "Gets or sets a value indicating whether the PrivateVerifyServer is allowed or not.",
          "type": "string"
        }
      }
    },
    "RelayServerConsoleConnectionModel": {
      "description": "This holds the details of the console connection of relay server",
      "type": "object",
      "properties": {
        "CopyValuesfromDeviceConnection": {
          "description": "Gets or sets a value whether values should be copied from device connection or not.",
          "type": "string"
        },
        "Protocol": {
          "format": "int32",
          "description": "Gets or sets Public protocol id",
          "type": "integer"
        },
        "Hostname": {
          "description": "Gets or sets public server",
          "type": "string"
        },
        "Port": {
          "format": "int32",
          "description": "Gets or sets public port",
          "type": "integer"
        },
        "User": {
          "description": "Gets or sets public user",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets public password",
          "maxLength": 150,
          "minLength": 0,
          "type": "string"
        },
        "Path": {
          "description": "Gets or sets public path",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "PassiveMode": {
          "description": "Gets or sets a value indicating whether the passive mode is allowed or not.",
          "type": "string"
        },
        "VerifyServer": {
          "description": "Gets or sets a value indicating whether the PublicVerifyServer is allowed or not.",
          "type": "string"
        }
      }
    },
    "RelayServerPullConnectionModel": {
      "description": "This holds the Pull connection details for the relay server",
      "type": "object",
      "properties": {
        "PullLocalDirectory": {
          "description": "Gets or sets PullLocalDirectory",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "PullDiscoveryText": {
          "description": "Gets or sets PullDiscoveryText",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "PullFrequency": {
          "format": "int32",
          "description": "Gets or sets PullFrequency",
          "type": "integer"
        }
      },
      "example": {
        "PullLocalDirectory": "test",
        "PullDiscoveryText": "test",
        "PullFrequency": 1
      }
    },
    "RelayServerBulkResponseModel": {
      "description": "Class to handle bulk response for relay servers",
      "type": "object",
      "properties": {
        "Created": {
          "description": "Id and Name of created relay servers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelayServerModel"
          }
        },
        "TotalItems": {
          "format": "int32",
          "type": "integer"
        },
        "AcceptedItems": {
          "format": "int32",
          "type": "integer"
        },
        "FailedItems": {
          "format": "int32",
          "type": "integer"
        },
        "Faults": {
          "$ref": "#/definitions/Faults"
        }
      },
      "example": {
        "Created": [
          {
            "RelayServerID": 1,
            "Name": "test"
          }
        ],
        "TotalItems": 1,
        "AcceptedItems": 1,
        "FailedItems": 1
      }
    },
    "RelayServerModel": {
      "description": "Class to handle bulk inputs for bulk commands",
      "type": "object",
      "properties": {
        "RelayServerID": {
          "format": "int32",
          "description": "Id of the relayserver created",
          "type": "integer"
        },
        "Name": {
          "description": "Name of the relay server",
          "type": "string"
        }
      },
      "example": {
        "RelayServerID": 1,
        "Name": "test"
      }
    },
    "RosterSyncResponseModel": {
      "description": "Education account sync response",
      "type": "object",
      "properties": {
        "EducationAccountId": {
          "format": "int32",
          "description": "Gets or sets education account Id",
          "type": "integer"
        },
        "SyncStatus": {
          "description": "Gets or sets sync status",
          "type": "string"
        },
        "Error": {
          "description": "Gets or sets error",
          "type": "string"
        }
      },
      "example": {
        "EducationAccountId": 1,
        "SyncStatus": "test",
        "Error": "test"
      }
    },
    "DeviceSecurityInfoSearchResult": {
      "type": "object",
      "properties": {
        "SecurityInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityInfo"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "SecurityInfo": [
          {
            "DeviceId": 1,
            "CompromisedStatus": "test",
            "EncryptionStatus": "test",
            "PasscodeStatus": "test",
            "PasscodeComplianceStatus": "test",
            "PasscodeLockGracePeriod": 1,
            "PasscodeLockGracePeriodEnforced": 1
          }
        ],
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "SecurityInfo": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "CompromisedStatus": {
          "type": "string"
        },
        "EncryptionStatus": {
          "type": "string"
        },
        "PasscodeStatus": {
          "type": "string"
        },
        "PasscodeComplianceStatus": {
          "type": "string"
        },
        "PasscodeLockGracePeriod": {
          "format": "int32",
          "type": "integer"
        },
        "PasscodeLockGracePeriodEnforced": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "DeviceId": 1,
        "CompromisedStatus": "test",
        "EncryptionStatus": "test",
        "PasscodeStatus": "test",
        "PasscodeComplianceStatus": "test",
        "PasscodeLockGracePeriod": 1,
        "PasscodeLockGracePeriodEnforced": 1
      }
    },
    "SmartGroup": {
      "type": "object",
      "properties": {
        "Devices": {
          "format": "int32",
          "type": "integer"
        },
        "Assignments": {
          "format": "int32",
          "type": "integer"
        },
        "Exclusions": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "SmartGroupID": {
          "format": "int32",
          "type": "integer"
        },
        "CriteriaType": {
          "type": "string"
        },
        "ManagedByOrganizationGroupId": {
          "type": "string"
        },
        "ManagedByOrganizationGroupName": {
          "type": "string"
        },
        "OrganizationGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupOG"
          }
        },
        "UserGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupUserGroup"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupTag"
          }
        },
        "Ownerships": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Platforms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Models": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "OperatingSystems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupOperatingSystem"
          }
        },
        "UserAdditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupUser"
          }
        },
        "DeviceAdditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupDevice"
          }
        },
        "UserExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupUser"
          }
        },
        "DeviceExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupDevice"
          }
        }
      },
      "example": {
        "Devices": 0,
        "Assignments": 0,
        "Exclusions": 0,
        "Name": "test",
        "SmartGroupID": 1,
        "CriteriaType": "test",
        "ManagedByOrganizationGroupId": "test",
        "ManagedByOrganizationGroupName": "test",
        "OrganizationGroups": [
          {
            "Name": "test",
            "Id": "test"
          }
        ],
        "UserGroups": [
          {
            "Name": "test",
            "Id": "test"
          }
        ],
        "Tags": [
          {
            "Id": "test",
            "Name": "test"
          }
        ],
        "Ownerships": [
          "test"
        ],
        "Platforms": [
          "test"
        ],
        "Models": [
          "test"
        ],
        "OperatingSystems": [
          {
            "DeviceType": "test",
            "Operator": "test",
            "Value": "test"
          }
        ],
        "UserAdditions": [
          {
            "Id": "test",
            "Name": "test"
          }
        ],
        "DeviceAdditions": [
          {
            "Id": "test",
            "Name": "test",
            "Model": "test",
            "OSVersion": "test",
            "Username": "test",
            "Platform": "test",
            "Ownership": "test"
          }
        ],
        "UserExclusions": [
          {
            "Id": "test",
            "Name": "test"
          }
        ],
        "DeviceExclusions": [
          {
            "Id": "test",
            "Name": "test",
            "Model": "test",
            "OSVersion": "test",
            "Username": "test",
            "Platform": "test",
            "Ownership": "test"
          }
        ]
      }
    },
    "SmartGroupOG": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Id": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "Id": "test"
      }
    },
    "SmartGroupUserGroup": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Id": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "Id": "test"
      }
    },
    "SmartGroupTag": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "Id": "test",
        "Name": "test"
      }
    },
    "SmartGroupOperatingSystem": {
      "type": "object",
      "properties": {
        "DeviceType": {
          "type": "string"
        },
        "Operator": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "example": {
        "DeviceType": "test",
        "Operator": "test",
        "Value": "test"
      }
    },
    "SmartGroupUser": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "Id": "test",
        "Name": "test"
      }
    },
    "SmartGroupDevice": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "OSVersion": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "Platform": {
          "type": "string"
        },
        "Ownership": {
          "type": "string"
        }
      },
      "example": {
        "Id": "test",
        "Name": "test",
        "Model": "test",
        "OSVersion": "test",
        "Username": "test",
        "Platform": "test",
        "Ownership": "test"
      }
    },
    "SmartGroupPatchModel": {
      "description": "Represents Smart Group Resource",
      "type": "object",
      "properties": {
        "op": {
          "description": "{Add} / {Remove}",
          "type": "string"
        },
        "ExternalUsers": {
          "description": "List of Users",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupUser"
          }
        },
        "ExternalUserGroups": {
          "description": "List of User Groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupUserGroup"
          }
        }
      },
      "example": {
        "op": "test",
        "ExternalUsers": [
          {
            "Id": "test",
            "Name": "test"
          }
        ],
        "ExternalUserGroups": [
          {
            "Name": "test",
            "Id": "test"
          }
        ]
      }
    },
    "SmartGroupSearchResult": {
      "type": "object",
      "properties": {
        "SmartGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroup"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SmartGroupDevices": {
      "type": "object",
      "properties": {
        "Devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupDevice"
          }
        }
      }
    },
    "ApplicationModel": {
      "description": "This Model represents the Application.",
      "type": "object",
      "properties": {
        "applicationName": {
          "description": "Gets or sets the Application Name",
          "type": "string"
        },
        "bundleId": {
          "description": "Gets or sets Bundle Id of the App",
          "type": "string"
        },
        "platform": {
          "description": "Gets or sets the Platform",
          "type": "string"
        },
        "version": {
          "description": "Gets or sets the Version of the App",
          "type": "string"
        },
        "managedBy": {
          "description": "Gets or sets Managed By Organization Group Id",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "applicationName": "test",
        "bundleId": "test",
        "platform": "test",
        "version": "test",
        "managedBy": "test",
        "id": 1
      }
    },
    "SmartGroupAssignmentModel": {
      "type": "object",
      "properties": {
        "Total Assignments": {
          "format": "int32",
          "type": "integer"
        },
        "Profiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedEntity"
          }
        },
        "Applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedApplication"
          }
        },
        "Books": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedBook"
          }
        },
        "Policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedEntity"
          }
        },
        "Channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedEntity"
          }
        },
        "Products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedEntity"
          }
        }
      },
      "example": {
        "Total Assignments": 1,
        "Profiles": [
          {
            "Id": 1,
            "Name": "test"
          }
        ],
        "Applications": [
          {
            "ApplicationType": "Internal",
            "Id": 1,
            "Name": "test"
          }
        ],
        "Books": [
          {
            "BookType": "Internal",
            "Id": 1,
            "Name": "test"
          }
        ],
        "Policies": [
          {
            "Id": 1,
            "Name": "test"
          }
        ],
        "Channels": [
          {
            "Id": 1,
            "Name": "test"
          }
        ],
        "Products": [
          {
            "Id": 1,
            "Name": "test"
          }
        ]
      }
    },
    "AssignedEntity": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "Id": 1,
        "Name": "test"
      }
    },
    "AssignedApplication": {
      "type": "object",
      "properties": {
        "ApplicationType": {
          "enum": [
            "Internal",
            "Public",
            "Purchased"
          ],
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "ApplicationType": "Internal",
        "Id": 1,
        "Name": "test"
      }
    },
    "AssignedBook": {
      "type": "object",
      "properties": {
        "BookType": {
          "enum": [
            "Internal",
            "Public",
            "Purchased"
          ],
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "BookType": "Internal",
        "Id": 1,
        "Name": "test"
      }
    },
    "StagingDetailsModel": {
      "description": "This holds the result set of staging operation",
      "type": "object",
      "properties": {
        "PlatformId": {
          "format": "int32",
          "description": "Gets or sets the platform id for the staging bundle",
          "type": "integer"
        },
        "General": {
          "$ref": "#/definitions/StagingGeneralDetailsModel",
          "description": "Gets or sets the general details of the bundle"
        },
        "Manifest": {
          "$ref": "#/definitions/StagingManifestDetailsModel",
          "description": "Gets or sets the manifest details of the bundle"
        }
      },
      "example": {
        "PlatformId": 1
      }
    },
    "StagingGeneralDetailsModel": {
      "description": "This holds the result set of staging operation",
      "type": "object",
      "properties": {
        "StagingId": {
          "format": "int32",
          "description": "Gets or sets the id of the staging bundle",
          "type": "integer"
        },
        "Name": {
          "description": "Gets or sets the name of the staging bundle",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets description for the staging bundle",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "ManagedBy": {
          "description": "Gets or sets the locationgroup id as string for the staging bundle",
          "type": "string"
        },
        "EnrollmentUser": {
          "description": "Gets or sets the Enrollment User name.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets the password for enrollment user.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "AgentID": {
          "format": "int32",
          "description": "Gets or sets the packageid id for the staging bundle",
          "type": "integer"
        }
      },
      "example": {
        "StagingId": 1,
        "Name": "test",
        "Description": "test",
        "ManagedBy": "test",
        "EnrollmentUser": "test",
        "Password": "test",
        "AgentID": 1
      }
    },
    "StagingManifestDetailsModel": {
      "description": "This holds the result set of staging operation",
      "type": "object",
      "properties": {
        "Steps": {
          "description": "Gets or sets the steps of staging bundle.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StagingStepModel"
          }
        }
      }
    },
    "StagingStepModel": {
      "description": "This holds the result set of staging operation",
      "type": "object",
      "properties": {
        "ProfileID": {
          "format": "int32",
          "description": "Gets or sets the profile id for staging",
          "type": "integer"
        },
        "ApplicationID": {
          "format": "int32",
          "description": "Gets or sets the application id for staging",
          "type": "integer"
        },
        "FileActionsID": {
          "format": "int32",
          "description": "Gets or sets the files/actions id for staging",
          "type": "integer"
        },
        "ExecutionTaskID": {
          "format": "int32",
          "description": "Gets or sets the execution task type id",
          "type": "integer"
        },
        "EventActionID": {
          "format": "int32",
          "description": "Gets or sets the event action id for the staging",
          "type": "integer"
        },
        "PersistThroughEnterpriseReset": {
          "description": "Get or sets a value whether Persist through enterprise reset is allowed or not.",
          "type": "string"
        }
      }
    },
    "TagModel": {
      "description": "Gateway Configuration Information",
      "type": "object",
      "properties": {
        "TagAvatar": {
          "description": "Gets or sets the Tag Avatar",
          "type": "string"
        },
        "TagName": {
          "description": "Gets or sets the Tag Name",
          "type": "string"
        },
        "TagType": {
          "format": "int32",
          "description": "Gets or sets the Tag Type",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "LocationGroupId": {
          "format": "int32",
          "description": "Gets or sets the Location Group Id",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "TagAvatar": "test",
        "TagName": "test",
        "TagType": 0,
        "LocationGroupId": 1,
        "id": 1
      }
    },
    "Devices": {
      "type": "object",
      "properties": {
        "Device": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceEntityLite"
          }
        }
      }
    },
    "DeviceEntityLite": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "FriendlyName": {
          "type": "string"
        },
        "DateTagged": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TagsSearchResult": {
      "type": "object",
      "properties": {
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "TagName": {
          "type": "string"
        },
        "DateTagged": {
          "format": "date-time",
          "type": "string"
        },
        "TagAvatar": {
          "type": "string"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      }
    },
    "TeachingDevices": {
      "type": "object",
      "properties": {
        "DeviceDetailsUser": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceDetailsUserEntity"
          }
        }
      }
    },
    "DeviceDetailsUserEntity": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "Platform": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "IsSupervised": {
          "type": "boolean"
        },
        "BatteryLifePercent": {
          "format": "int32",
          "type": "integer"
        },
        "StorageUsed": {
          "format": "int32",
          "type": "integer"
        },
        "StorageTotal": {
          "format": "int32",
          "type": "integer"
        },
        "OSVersion": {
          "type": "string"
        },
        "DeviceUid": {
          "type": "string"
        },
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "FriendlyName": {
          "type": "string"
        },
        "DateTagged": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Website": {
      "type": "object",
      "properties": {
        "Url": {
          "type": "string"
        },
        "VanityTitle": {
          "type": "string"
        },
        "OrganizationGroupId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Url": "test",
        "VanityTitle": "test",
        "OrganizationGroupId": 1
      }
    },
    "TagAsset": {
      "type": "object",
      "properties": {
        "OrganizationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "TagId": {
          "$ref": "#/definitions/EntityId"
        },
        "VanityTitle": {
          "type": "string"
        },
        "AssetId": {
          "$ref": "#/definitions/EntityId"
        },
        "FileName": {
          "type": "string"
        },
        "AssetType": {
          "format": "int32",
          "type": "integer"
        },
        "Hidden": {
          "type": "boolean"
        },
        "Size": {
          "format": "int32",
          "type": "integer"
        },
        "Url": {
          "type": "string"
        }
      },
      "example": {
        "OrganizationGroupId": 1,
        "VanityTitle": "test",
        "FileName": "test",
        "AssetType": 1,
        "Hidden": true,
        "Size": 1,
        "Url": "test"
      }
    },
    "UnlockCommand": {
      "type": "object",
      "properties": {
        "Devices": {
          "$ref": "#/definitions/BulkInput"
        },
        "CommandTarget": {
          "type": "string"
        }
      },
      "example": {
        "CommandTarget": "test"
      }
    },
    "LockCommand": {
      "type": "object",
      "properties": {
        "Devices": {
          "$ref": "#/definitions/BulkInput"
        },
        "Assets": {
          "$ref": "#/definitions/BulkInput"
        },
        "AssetType": {
          "format": "int32",
          "type": "integer"
        },
        "CommandIdentifier": {
          "type": "string"
        },
        "CommandTarget": {
          "type": "string"
        }
      },
      "example": {
        "AssetType": 1,
        "CommandIdentifier": "test",
        "CommandTarget": "test"
      }
    },
    "TelecomDevicePagedSearchResultModel": {
      "description": "Representation of TelecomDevicePagedSearchResultModel",
      "type": "object",
      "properties": {
        "resultSet": {
          "description": "Gets or sets ResultSet\r\nArray of returned account policy search results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TelecomDeviceModel"
          }
        },
        "AdditionalInfo": {
          "$ref": "#/definitions/HypermediaModel",
          "description": "Gets or sets Hypermedia content for the result"
        },
        "TotalResults": {
          "format": "int32",
          "description": "Gets or sets Total Result",
          "type": "integer"
        }
      }
    },
    "TelecomDeviceModel": {
      "description": "Represents Telecom Device Resource",
      "type": "object",
      "properties": {
        "deviceId": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets Device Identifier."
        },
        "deviceFriendlyName": {
          "description": "Gets or sets Device friendly name.",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "description": "Gets or sets Device Last Seen",
          "type": "string"
        },
        "locationGroupId": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets Device Location Group Id"
        },
        "locationGroupName": {
          "description": "Gets or sets Device Location Group Name",
          "type": "string"
        },
        "platform": {
          "description": "Gets or sets Device Model Name",
          "type": "string"
        },
        "model": {
          "description": "Gets or sets device Display Model Name",
          "type": "string"
        },
        "peakVoiceUsage": {
          "description": "Gets or sets The device peak voice usage.",
          "type": "string"
        },
        "voiceUsage": {
          "description": "Gets or sets The device voice usage.",
          "type": "string"
        },
        "messageUsage": {
          "description": "Gets or sets The device message usage.",
          "type": "string"
        },
        "dataUsage": {
          "description": "Gets or sets The device data usage in KB.",
          "type": "string"
        },
        "corporateDataUsage": {
          "description": "Gets or sets device Corporate Data Usage in KB.",
          "type": "string"
        },
        "personalDataUsage": {
          "description": "Gets or sets device Personal data usage in KB.",
          "type": "string"
        },
        "planName": {
          "description": "Gets or sets The plan name.",
          "type": "string"
        },
        "planId": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets The plan Id."
        },
        "planCarrier": {
          "description": "Gets or sets the Plan Carrier Name.",
          "type": "string"
        },
        "cellcardId": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets The Device CellcardID."
        },
        "billingCycleResetDate": {
          "description": "Gets or sets device friendly name.",
          "type": "string"
        },
        "userName": {
          "description": "Gets or sets Device User Name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Gets or sets The Phone number on SIM.",
          "type": "string"
        },
        "firstName": {
          "description": "Gets or sets The User First Name",
          "type": "string"
        },
        "lastName": {
          "description": "Gets or sets The User Last Name",
          "type": "string"
        },
        "emailAddress": {
          "description": "Gets or sets The email of enrollment user",
          "type": "string"
        },
        "ownership": {
          "description": "Gets or sets Ownership Abbreviation",
          "type": "string"
        }
      }
    },
    "HypermediaModel": {
      "description": "The aw hypermedia model.",
      "type": "object",
      "properties": {
        "Links": {
          "description": "Gets the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Links": [],
        "id": 1
      }
    },
    "TelecomRoamingDevicePagedSearchResultModel": {
      "description": "Representation of TelecomRoamingDevicePagedSearchResultModel",
      "type": "object",
      "properties": {
        "resultSet": {
          "description": "Gets or sets ResultSet\r\nArray of returned telecom roaming device search results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TelecomRoamingDeviceModel"
          }
        },
        "AdditionalInfo": {
          "$ref": "#/definitions/HypermediaModel",
          "description": "Gets or sets Hypermedia content for the result"
        },
        "TotalResults": {
          "format": "int32",
          "description": "Gets or sets Total Result",
          "type": "integer"
        }
      }
    },
    "TelecomRoamingDeviceModel": {
      "description": "Represents Telecom Roaming Device Resource",
      "type": "object",
      "properties": {
        "deviceId": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets Device Identifier."
        },
        "deviceFriendlyName": {
          "description": "Gets or sets Device friendly name.",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "description": "Gets or sets Device Last Seen",
          "type": "string"
        },
        "locationGroupId": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets Device Location Group Id"
        },
        "locationGroupName": {
          "description": "Gets or sets Device Location Group Name",
          "type": "string"
        },
        "platform": {
          "description": "Gets or sets Device Platform",
          "type": "string"
        },
        "model": {
          "description": "Gets or sets device Display Model Name",
          "type": "string"
        },
        "roamingStatus": {
          "description": "Gets or sets device roaming status.",
          "type": "string"
        },
        "roamingVoiceUsage": {
          "description": "Gets or sets The device roaming voice usage.",
          "type": "string"
        },
        "roamingMessageUsage": {
          "description": "Gets or sets The device roaming message usage.",
          "type": "string"
        },
        "roamingDataUsage": {
          "description": "Gets or sets The device roaming data usage in KB.",
          "type": "string"
        },
        "currentCountry": {
          "description": "Gets or sets The device current country.",
          "type": "string"
        },
        "homeCountry": {
          "description": "Gets or sets The device home country.",
          "type": "string"
        },
        "currentCarrier": {
          "description": "Gets or sets The device current carrier.",
          "type": "string"
        },
        "homeCarrier": {
          "description": "Gets or sets The device home carrier.",
          "type": "string"
        },
        "planName": {
          "description": "Gets or sets The plan name.",
          "type": "string"
        },
        "planId": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets The plan Id."
        },
        "planCarrier": {
          "description": "Gets or sets the Plan Carrier Name.",
          "type": "string"
        },
        "cellcardId": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets The Device CellcardID."
        },
        "billingCycleResetDate": {
          "description": "Gets or sets device friendly name.",
          "type": "string"
        },
        "userName": {
          "description": "Gets or sets Device User Name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Gets or sets The Phone number on SIM.",
          "type": "string"
        },
        "firstName": {
          "description": "Gets or sets The User First Name",
          "type": "string"
        },
        "lastName": {
          "description": "Gets or sets The User Last Name",
          "type": "string"
        },
        "emailAddress": {
          "description": "Gets or sets The email of enrollment user",
          "type": "string"
        },
        "ownership": {
          "description": "Gets or sets Ownership Abbreviation",
          "type": "string"
        }
      }
    },
    "TelecomDeviceUsagePagedSearchResultModel": {
      "description": "Representation of TelecomDeviceUsagePagedSearchResult",
      "type": "object",
      "properties": {
        "ResultSet": {
          "description": "Gets or sets ResultSet\r\nArray of returned telecom device usage search results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TelecomDeviceUsageModel"
          }
        },
        "AdditionalInfo": {
          "$ref": "#/definitions/HypermediaModel",
          "description": "Gets or sets Hypermedia content for the result"
        },
        "TotalResults": {
          "format": "int32",
          "description": "Gets or sets Total Result",
          "type": "integer"
        }
      }
    },
    "TelecomDeviceUsageModel": {
      "description": "Represents Telecom Device Usage Resource",
      "type": "object",
      "properties": {
        "callStart": {
          "description": "Gets or sets Call Start DateTime",
          "type": "string"
        },
        "durationInMins": {
          "format": "int32",
          "description": "Gets or sets Call Duration In Minutes",
          "type": "integer"
        },
        "callDirection": {
          "description": "Gets or sets Call Direcction Missed or outbound or inbound",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Gets or sets PhoneNumber",
          "type": "string"
        },
        "country": {
          "description": "Gets or sets Country",
          "type": "string"
        },
        "carrier": {
          "description": "Gets or sets Carrier Name",
          "type": "string"
        },
        "roamingState": {
          "description": "Gets or sets Roaming State",
          "type": "string"
        },
        "type": {
          "description": "Gets or sets Data Network Type",
          "type": "string"
        },
        "dataUsageDate": {
          "description": "Gets or sets Data Usage Date",
          "type": "string"
        },
        "totalKB": {
          "format": "int32",
          "description": "Gets or sets Total Data in Kilo Bytes",
          "type": "integer"
        },
        "dataSentKB": {
          "format": "int32",
          "description": "Gets or sets Data Sent in Kilo Bytes",
          "type": "integer"
        },
        "dataUReceivedKB": {
          "format": "int32",
          "description": "Gets or sets Data Received in Kilo Bytes",
          "type": "integer"
        },
        "messageDirection": {
          "description": "Gets or sets Sms Direction",
          "type": "string"
        },
        "messageDateTime": {
          "description": "Gets or sets Message Date Time",
          "type": "string"
        }
      },
      "example": {
        "callStart": "test",
        "durationInMins": 1,
        "callDirection": "test",
        "phoneNumber": "test",
        "country": "test",
        "carrier": "test",
        "roamingState": "test",
        "type": "test",
        "dataUsageDate": "test",
        "totalKB": 1,
        "dataSentKB": 1,
        "dataUReceivedKB": 1,
        "messageDirection": "test",
        "messageDateTime": "test"
      }
    },
    "CellCardDailyUsagePagedSearchResultModel": {
      "description": "Representation of CellCardDailyUsagePagedSearchResult",
      "type": "object",
      "properties": {
        "ResultSet": {
          "description": "Gets or sets ResultSet\r\nArray of returned cellcard daily usage search results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CellCardDailyUsageModel"
          }
        },
        "AdditionalInfo": {
          "$ref": "#/definitions/HypermediaModel",
          "description": "Gets or sets Hypermedia content for the result"
        },
        "TotalResults": {
          "format": "int32",
          "description": "Gets or sets Total Result",
          "type": "integer"
        }
      }
    },
    "CellCardDailyUsageModel": {
      "description": "Represents CellCard Daily Usage Resource",
      "type": "object",
      "properties": {
        "Date": {
          "description": "Gets or sets Usage Date",
          "type": "string"
        },
        "DeviceId": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets Device Id"
        },
        "PhoneNumber": {
          "description": "Gets or sets Phone number on SIM",
          "type": "string"
        },
        "HomeMCC": {
          "description": "Gets or sets Home Country Code",
          "type": "string"
        },
        "HomeMNC": {
          "description": "Gets or sets Home Carrier Code",
          "type": "string"
        },
        "CellularTechnology": {
          "description": "Gets or sets Cellular Technology Used (CDMA, GSM, or Both)",
          "type": "string"
        },
        "NonRoamingKiloBytes": {
          "description": "Gets or sets non roaming bytes",
          "type": "string"
        },
        "RoamingKiloBytes": {
          "description": "Gets or sets roaming bytes",
          "type": "string"
        },
        "PeakVoiceUsage": {
          "description": "Gets or sets peak voice usage",
          "type": "string"
        },
        "IncomingPeakVoiceUsage": {
          "description": "Gets or sets incoming peak voice usage",
          "type": "string"
        },
        "OutgoingPeakVoiceUsage": {
          "description": "Gets or sets outgoing peak voice usage",
          "type": "string"
        },
        "OffPeakVoiceUsage": {
          "description": "Gets or sets off-peak voice usage",
          "type": "string"
        },
        "IncomingOffPeakVoiceUsage": {
          "description": "Gets or sets incoming off-peak voice usage",
          "type": "string"
        },
        "OutgoingOffPeakVoiceUsage": {
          "description": "Gets or sets outgoing off-peak voice usage",
          "type": "string"
        },
        "MessageUsage": {
          "description": "Gets or sets Message Usage",
          "type": "string"
        },
        "IncomingMessageUsage": {
          "description": "Gets or sets Incoming Message Usage",
          "type": "string"
        },
        "OutgoingMessageUsage": {
          "description": "Gets or sets Outgoing Message Usage",
          "type": "string"
        }
      },
      "example": {
        "Date": "test",
        "PhoneNumber": "test",
        "HomeMCC": "test",
        "HomeMNC": "test",
        "CellularTechnology": "test",
        "NonRoamingKiloBytes": "test",
        "RoamingKiloBytes": "test",
        "PeakVoiceUsage": "test",
        "IncomingPeakVoiceUsage": "test",
        "OutgoingPeakVoiceUsage": "test",
        "OffPeakVoiceUsage": "test",
        "IncomingOffPeakVoiceUsage": "test",
        "OutgoingOffPeakVoiceUsage": "test",
        "MessageUsage": "test",
        "IncomingMessageUsage": "test",
        "OutgoingMessageUsage": "test"
      }
    },
    "TunnelAccessRestrictionSaveRequest": {
      "description": "This entity represents Tunnel Access Restriction Save Request attributes.",
      "type": "object",
      "properties": {
        "GatewayId": {
          "format": "int32",
          "description": "Gets or sets Gateway Id",
          "type": "integer"
        },
        "InternalApplicationId": {
          "format": "int32",
          "description": "Gets or sets Internal Application Id",
          "type": "integer"
        },
        "RecommendedApplicationId": {
          "format": "int32",
          "description": "Gets or sets Recommended Application Id",
          "type": "integer"
        },
        "NsxSecurityGroupId": {
          "format": "int32",
          "description": "Gets or sets NSX-Security GroupId",
          "type": "integer"
        },
        "NsxSecurityGroupsNonCompliantId": {
          "format": "int32",
          "description": "Gets or sets NSX-Security GroupId",
          "type": "integer"
        },
        "WhiteListDomain": {
          "description": "Gets or sets WhiteListDomain",
          "type": "string"
        },
        "DeploymentParametersId": {
          "format": "int32",
          "description": "Gets or sets DeploymentParametersId",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "GatewayId": 1,
        "InternalApplicationId": 1,
        "RecommendedApplicationId": 1,
        "NsxSecurityGroupId": 1,
        "NsxSecurityGroupsNonCompliantId": 1,
        "WhiteListDomain": "test",
        "DeploymentParametersId": 1,
        "id": 1
      }
    },
    "TunnelAccessRestrictionModel": {
      "description": "This entity represents tunnel Access Restriction attributes.",
      "type": "object",
      "properties": {
        "TunnelAccessRestrictionsId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets Tunnel Access Restrictions Id"
        },
        "RecommendedExternalApplicationId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets RecommendedApplicationId"
        },
        "InternalApplicationId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets Internal Application Id"
        },
        "ApplicationDeploymentParametersId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets Application Deployment Parameters Id"
        },
        "ApplicationName": {
          "description": "Gets or sets Version",
          "type": "string"
        },
        "ApplicationBundleId": {
          "description": "Gets or sets ApplicationBundleId",
          "type": "string"
        },
        "GatewayId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets GatewayId"
        },
        "NsxSecurityGroupCompliantId": {
          "format": "int32",
          "description": "Gets or sets NSX Security Groups",
          "type": "integer"
        },
        "NsxSecurityGroupNonCompliantId": {
          "format": "int32",
          "description": "Gets or sets NSX Security Groups Non Compliant",
          "type": "integer"
        },
        "NsxSecurityGroupName": {
          "description": "Gets or sets NSX Security Group Name",
          "type": "string"
        },
        "NsxSecurityGroupNameNonCompliant": {
          "description": "Gets or sets NSX Security Group Name Non Compliant",
          "type": "string"
        },
        "WhitelistedDomains": {
          "description": "Gets or sets WhitelistedDomains",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ApplicationName": "test",
        "ApplicationBundleId": "test",
        "NsxSecurityGroupCompliantId": 1,
        "NsxSecurityGroupNonCompliantId": 1,
        "NsxSecurityGroupName": "test",
        "NsxSecurityGroupNameNonCompliant": "test",
        "WhitelistedDomains": "test",
        "id": 1
      }
    },
    "NsxSecurityGroupModel": {
      "description": "This entity represents NsxSecurityGroup attributes.",
      "type": "object",
      "properties": {
        "NsxSecurityGroupsId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets NsxSecurityGroupsId"
        },
        "NsxId": {
          "description": "Gets or sets NsxId",
          "type": "string"
        },
        "GatewayId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets GatewayId"
        },
        "NsxSecurityGroupsName": {
          "description": "Gets or sets NsxSecurityGroupsName",
          "type": "string"
        },
        "Subnet": {
          "description": "Gets or sets Subnet",
          "type": "string"
        },
        "SubnetMask": {
          "description": "Gets or sets SubnetMask",
          "type": "string"
        },
        "Type": {
          "description": "Gets or sets Type",
          "type": "string"
        },
        "IsDns": {
          "description": "Gets or sets a value indicating whether IsDns",
          "type": "boolean"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "NsxId": "test",
        "NsxSecurityGroupsName": "test",
        "Subnet": "test",
        "SubnetMask": "test",
        "Type": "test",
        "IsDns": true,
        "id": 1
      }
    },
    "TunnelTrafficRulesModel": {
      "description": "/// This model represents tunnel traffic rules for device and server.",
      "type": "object",
      "properties": {
        "DeviceNetWorkTrafficRule": {
          "$ref": "#/definitions/DeviceNetworkTrafficModel",
          "description": "Gets or sets device traffic rules configured. It has the list of rules and out bound proxy\r\n{AW.Mdm.Api.Model.TunnelTrafficRules.DeviceNetworkTrafficModel}"
        },
        "ServerNetWorkTrafficRule": {
          "$ref": "#/definitions/ServerNetworkTrafficModel",
          "description": "Gets or sets server traffic rules configured. It has the list of rules and out bound proxy\r\n{AW.Mdm.Api.Model.TunnelTrafficRules.ServerNetworkTrafficModel}"
        },
        "CurrentGateWayUid": {
          "description": "{WanderingWiFi.AirWatch.Entity.GatewayDetails.GatewayUID} \r\n            Gets or sets the Gateway Uid For which the traffic rule has been configured",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "CurrentGateWayUid": "test",
        "id": 1
      }
    },
    "DeviceNetworkTrafficModel": {
      "description": "/// This model represents device tunnel traffic rules and default action for the rule.",
      "type": "object",
      "properties": {
        "DefaultTrafficRulesAction": {
          "format": "int32",
          "description": "Gets or sets the default traffic rule for device tunnel",
          "type": "integer"
        },
        "DeviceTrafficRules": {
          "description": "Gets or sets the traffic rule",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceTrafficRulesModel"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "DefaultTrafficRulesAction": 1,
        "DeviceTrafficRules": [
          {
            "TrafficRulesId": 1,
            "TrafficRuleApplicationMappings": [
              {
                "ApplicationName": "test",
                "ApplicationBundleId": "test",
                "id": 1
              }
            ],
            "Action": 1,
            "DestinationUrl": "test",
            "RankOfTheRule": 1,
            "HttpsProxyServer": "test",
            "id": 1
          }
        ],
        "id": 1
      }
    },
    "ServerNetworkTrafficModel": {
      "description": "/// This model represents tunnel server  traffic rules .",
      "type": "object",
      "properties": {
        "ServerTrafficRules": {
          "description": "Gets or sets the server traffic rules configured",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerTrafficRulesModel"
          }
        },
        "ServerOutBoundProxies": {
          "description": "Gets or sets the server outbound proxy configured",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerOutBoundProxyModel"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ServerTrafficRules": [
          {
            "Action": 1,
            "DestinationHostName": "test",
            "Rank": 1,
            "UniqueIdentifier": "test",
            "ProxyUniqueIds": [
              "test"
            ],
            "id": 1
          }
        ],
        "ServerOutBoundProxies": [
          {
            "HostName": "test",
            "Port": 1,
            "AuthenticationId": 1,
            "UserName": "test",
            "Password": "test",
            "UniqueIdentifier": "test",
            "id": 1
          }
        ],
        "id": 1
      }
    },
    "DeviceTrafficRulesModel": {
      "description": "This model represents Traffic rule.",
      "type": "object",
      "properties": {
        "TrafficRulesId": {
          "format": "int32",
          "description": "Gets or sets the TrafficRulesId",
          "type": "integer"
        },
        "TrafficRuleApplicationMappings": {
          "description": "{AW.Mdm.Api.Model.TunnelTrafficRules.DeviceTrafficRulesApplicationMappingModel}\r\n            Gets or sets the Applications Mapped to the rule",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceTrafficRulesApplicationMappingModel"
          }
        },
        "Action": {
          "format": "int32",
          "description": "Gets or sets the Action of the rule",
          "type": "integer"
        },
        "DestinationUrl": {
          "description": "Gets or sets the Destination URL for the Rule",
          "type": "string"
        },
        "RankOfTheRule": {
          "format": "int32",
          "description": "Gets or sets the Action of the rule",
          "type": "integer"
        },
        "HttpsProxyServer": {
          "description": "Gets or sets the https proxy server incase the selected action is proxy.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "TrafficRulesId": 1,
        "TrafficRuleApplicationMappings": [
          {
            "ApplicationName": "test",
            "ApplicationBundleId": "test",
            "id": 1
          }
        ],
        "Action": 1,
        "DestinationUrl": "test",
        "RankOfTheRule": 1,
        "HttpsProxyServer": "test",
        "id": 1
      }
    },
    "ServerTrafficRulesModel": {
      "description": "/// This model represents tunnel server traffic rules.",
      "type": "object",
      "properties": {
        "Action": {
          "format": "int32",
          "description": "Gets or sets the Action of the rule",
          "type": "integer"
        },
        "DestinationHostName": {
          "description": "Gets or sets the Destination URL for the Rule",
          "type": "string"
        },
        "Rank": {
          "format": "int32",
          "description": "Gets or sets the Action of the rule",
          "type": "integer"
        },
        "UniqueIdentifier": {
          "description": "Gets or sets the unique identifier for the rule.\r\nIncase the rule is new this will be populated with a GUID",
          "type": "string"
        },
        "ProxyUniqueIds": {
          "description": "Gets or sets the Mapped Outbound Proxy UId for the rule.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Action": 1,
        "DestinationHostName": "test",
        "Rank": 1,
        "UniqueIdentifier": "test",
        "ProxyUniqueIds": [
          "test"
        ],
        "id": 1
      }
    },
    "ServerOutBoundProxyModel": {
      "description": "/// This model represents tunnel outbound proxy .",
      "type": "object",
      "properties": {
        "HostName": {
          "description": "Gets or sets the Host name for the outbound proxy",
          "type": "string"
        },
        "Port": {
          "format": "int32",
          "description": "Gets or sets the Port of the outbound proxy",
          "type": "integer"
        },
        "AuthenticationId": {
          "format": "int32",
          "description": "Gets or sets the Authentication for the outbound proxy",
          "type": "integer"
        },
        "UserName": {
          "description": "Gets or sets the User Name for the outbound proxy",
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets the Password for the outbound proxy",
          "type": "string"
        },
        "UniqueIdentifier": {
          "description": "Gets or sets the unique identifier for the rule.\r\nIncase the outbound is new this will be populated with a GUID",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "HostName": "test",
        "Port": 1,
        "AuthenticationId": 1,
        "UserName": "test",
        "Password": "test",
        "UniqueIdentifier": "test",
        "id": 1
      }
    },
    "DeviceTrafficRulesApplicationMappingModel": {
      "description": "This entity represents traffic rule and application mapping model.",
      "type": "object",
      "properties": {
        "TrafficRulesApplicationMappingId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets the TrafficRulesId"
        },
        "RecommendedExternalApplicationId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets the Recommended Applications Mapped to the rule"
        },
        "CustomApplicationId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets the custom application id used for mapping"
        },
        "InternalApplicationId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets the Internal Applications Mapped to the rule"
        },
        "TrafficRulesId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Gets or sets the TrafficRulesId"
        },
        "ApplicationName": {
          "description": "Gets or sets the Application Name",
          "type": "string"
        },
        "ApplicationBundleId": {
          "description": "Gets or sets the Application Bundle Id",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ApplicationName": "test",
        "ApplicationBundleId": "test",
        "id": 1
      }
    },
    "DeviceUpdateSearchResult": {
      "type": "object",
      "properties": {
        "DeviceUpdates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceUpdate"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeviceUpdate": {
      "type": "object",
      "properties": {
        "RevisionId": {
          "$ref": "#/definitions/EntityKey"
        },
        "UpdateTitle": {
          "type": "string"
        },
        "UpdateIdentifier": {
          "type": "string"
        },
        "UpdateDescription": {
          "type": "string"
        },
        "UpdateType": {
          "type": "string"
        },
        "UpdateInstallStatus": {
          "type": "string"
        },
        "UpdateApprovalStatus": {
          "type": "string"
        },
        "AvailableActions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "UpdateTitle": "test",
        "UpdateIdentifier": "test",
        "UpdateDescription": "test",
        "UpdateType": "test",
        "UpdateInstallStatus": "test",
        "UpdateApprovalStatus": "test",
        "AvailableActions": [
          "test"
        ]
      }
    },
    "UpdatesSearchResultModel": {
      "description": "This represents update search result",
      "type": "object",
      "properties": {
        "ResultSet": {
          "description": "Gets or sets ResultSet\r\nArray of device update details - search results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceUpdateModel"
          }
        },
        "AdditionalInfo": {
          "$ref": "#/definitions/HypermediaModel",
          "description": "Gets or sets Hypermedia content for the result"
        },
        "TotalResults": {
          "format": "int32",
          "description": "Gets or sets Total Result",
          "type": "integer"
        }
      }
    },
    "DeviceUpdateModel": {
      "description": "Represents Device update details",
      "type": "object",
      "properties": {
        "UpdateIdentifier": {
          "description": "Update identifier",
          "type": "string"
        },
        "UpdateId": {
          "format": "int32",
          "description": "Update Identifier specific to AirWatch",
          "type": "integer"
        },
        "Details": {
          "description": "Update details",
          "type": "string"
        },
        "PublishedDate": {
          "format": "date-time",
          "description": "Published date of the update",
          "type": "string"
        },
        "RevisionNumber": {
          "description": "Revision Number",
          "type": "string"
        },
        "Platform": {
          "description": "Platform",
          "type": "string"
        },
        "Classification": {
          "description": "Classification of the update",
          "type": "string"
        }
      }
    },
    "DeviceUpdateDetailsModel": {
      "description": "Device Update Details Model",
      "type": "object",
      "properties": {
        "UpdateIdentifier": {
          "description": "Update identifier",
          "type": "string"
        },
        "UpdateId": {
          "format": "int32",
          "description": "Update Identifier specific to AirWatch",
          "type": "integer"
        },
        "Details": {
          "description": "Update details",
          "type": "string"
        },
        "KbNumber": {
          "description": "Gets or sets the KB article number of an update.",
          "type": "string"
        },
        "MoreInfoUrl": {
          "description": "Gets or sets the more info. url",
          "type": "string"
        },
        "SupportUrl": {
          "description": "Gets or sets the support URL.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description of the update.",
          "type": "string"
        },
        "DeviceCountsByStatus": {
          "$ref": "#/definitions/DeviceCountsByStatusModel",
          "description": "Device Counts by status of update w.r.to device"
        }
      },
      "example": {
        "UpdateIdentifier": "test",
        "UpdateId": 1,
        "Details": "test",
        "KbNumber": "test",
        "MoreInfoUrl": "test",
        "SupportUrl": "test",
        "Description": "test"
      }
    },
    "DeviceCountsByStatusModel": {
      "description": "Device counts for the updates which tells various status of installation/assignment",
      "type": "object",
      "properties": {
        "Installed": {
          "format": "int32",
          "description": "Count of devices where update is installed",
          "type": "integer"
        },
        "PendingInstall": {
          "format": "int32",
          "description": "Count of devices where updates were pending to install",
          "type": "integer"
        },
        "Failed": {
          "format": "int32",
          "description": "Total number of devices where update failed to install",
          "type": "integer"
        },
        "Assigned": {
          "format": "int32",
          "description": "Total number of devices where update is assigned",
          "type": "integer"
        },
        "Available": {
          "format": "int32",
          "description": "Total number of devices for which update is available for installation",
          "type": "integer"
        },
        "Approved": {
          "format": "int32",
          "description": "Total number of devices for which update is approved",
          "type": "integer"
        },
        "PendingReboot": {
          "format": "int32",
          "description": "Total number of devices for which update is waiting on reboot to complete the installation",
          "type": "integer"
        }
      },
      "example": {
        "Installed": 1,
        "PendingInstall": 1,
        "Failed": 1,
        "Assigned": 1,
        "Available": 1,
        "Approved": 1,
        "PendingReboot": 1
      }
    },
    "DeviceUpdateEulaModel": {
      "description": "Update Eula Model",
      "type": "object",
      "properties": {
        "Description": {
          "description": "Gets or sets EULA description",
          "type": "string"
        }
      },
      "example": {
        "Description": "test"
      }
    },
    "DeviceUpdateAssignmentModel": {
      "description": "The device update assignment model.",
      "type": "object",
      "properties": {
        "OrganizationGroupId": {
          "format": "int32",
          "description": "Gets or sets the organization group id where the assignment is to be created.",
          "type": "integer"
        },
        "SmartGroupIds": {
          "description": "Gets or sets an array of smart group ids to be associated with the update.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "DevicesSearchResultModel": {
      "description": "This represents device search result",
      "type": "object",
      "properties": {
        "ResultSet": {
          "description": "Gets or sets ResultSet\r\nArray of device details - search results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceModel"
          }
        },
        "AdditionalInfo": {
          "$ref": "#/definitions/HypermediaModel",
          "description": "Gets or sets Hypermedia content for the result"
        },
        "TotalResults": {
          "format": "int32",
          "description": "Gets or sets Total Result",
          "type": "integer"
        }
      }
    },
    "DeviceModel": {
      "description": "Device Information",
      "type": "object",
      "properties": {
        "DeviceFriendlyName": {
          "description": "Gets or sets the device friendly name.",
          "type": "string"
        },
        "LocationGroupId": {
          "format": "int32",
          "description": "Gets or sets Link to the location group the device belongs to.",
          "type": "integer"
        },
        "LocationGroupName": {
          "description": "Gets or sets the location group name.",
          "type": "string"
        },
        "UserName": {
          "description": "Gets or sets the user name the device is assigned to.",
          "type": "string"
        },
        "UserId": {
          "format": "int32",
          "description": "Gets or sets The user name the device is assigned to.",
          "type": "integer"
        },
        "Ownership": {
          "description": "Gets or sets The device ownership status. I.e. Corporate, Employee, Shared.",
          "type": "string"
        },
        "PlatformId": {
          "format": "int32",
          "description": "Gets or sets The device platform id.",
          "type": "integer"
        },
        "Platform": {
          "description": "Gets or sets The platform. E.g.: iOS, BlackBerry, Android, etc..",
          "type": "string"
        },
        "ModelId": {
          "format": "int32",
          "description": "Gets or sets The device model id.",
          "type": "integer"
        },
        "Model": {
          "description": "Gets or sets The device model.",
          "type": "string"
        },
        "OperatingSystem": {
          "description": "Gets or sets The operating system including version.",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Gets or sets Phone number, if available.",
          "type": "string"
        },
        "DeviceApprovalStatus": {
          "description": "Gets or sets the Device Approval Status after issuing approve and upapprove commands",
          "type": "string"
        },
        "ApprovedBy": {
          "description": "Get or sets the Update approved by",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "DeviceFriendlyName": "test",
        "LocationGroupId": 1,
        "LocationGroupName": "test",
        "UserName": "test",
        "UserId": 1,
        "Ownership": "test",
        "PlatformId": 1,
        "Platform": "test",
        "ModelId": 1,
        "Model": "test",
        "OperatingSystem": "test",
        "PhoneNumber": "test",
        "DeviceApprovalStatus": "test",
        "ApprovedBy": "test",
        "id": 1
      }
    },
    "OGHierarchyEnrollmentUserResponseModel": {
      "description": "OG Hierarchy Enrollment User Infomration",
      "type": "object",
      "properties": {
        "locationGroups": {
          "description": "Gets or sets Username",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationGroupModel"
          }
        }
      },
      "example": {
        "locationGroups": [
          {
            "locationGroupId": "test",
            "locationGroupName": "test"
          }
        ]
      }
    },
    "LocationGroupModel": {
      "description": "Device Information",
      "type": "object",
      "properties": {
        "locationGroupId": {
          "description": "Gets or sets Location Group's Name",
          "type": "string"
        },
        "locationGroupName": {
          "description": "Gets or sets Location Group's Name",
          "type": "string"
        }
      },
      "example": {
        "locationGroupId": "test",
        "locationGroupName": "test"
      }
    },
    "XElement": {
      "type": "object",
      "properties": {
        "FirstAttribute": {
          "$ref": "#/definitions/XAttribute",
          "readOnly": true
        },
        "HasAttributes": {
          "type": "boolean",
          "readOnly": true
        },
        "HasElements": {
          "type": "boolean",
          "readOnly": true
        },
        "IsEmpty": {
          "type": "boolean",
          "readOnly": true
        },
        "LastAttribute": {
          "$ref": "#/definitions/XAttribute",
          "readOnly": true
        },
        "Name": {
          "type": "object"
        },
        "NodeType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17
          ],
          "type": "integer",
          "readOnly": true
        },
        "Value": {
          "type": "string"
        },
        "FirstNode": {
          "$ref": "#/definitions/XNode",
          "readOnly": true
        },
        "LastNode": {
          "$ref": "#/definitions/XNode",
          "readOnly": true
        },
        "NextNode": {
          "$ref": "#/definitions/XNode",
          "readOnly": true
        },
        "PreviousNode": {
          "$ref": "#/definitions/XNode",
          "readOnly": true
        },
        "BaseUri": {
          "type": "string",
          "readOnly": true
        },
        "Document": {
          "$ref": "#/definitions/XDocument",
          "readOnly": true
        },
        "Parent": {
          "$ref": "#/definitions/XElement",
          "readOnly": true
        }
      }
    },
    "XAttribute": {
      "type": "object",
      "properties": {
        "IsNamespaceDeclaration": {
          "type": "boolean",
          "readOnly": true
        },
        "Name": {
          "type": "object",
          "readOnly": true
        },
        "NextAttribute": {
          "$ref": "#/definitions/XAttribute",
          "readOnly": true
        },
        "NodeType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17
          ],
          "type": "integer",
          "readOnly": true
        },
        "PreviousAttribute": {
          "$ref": "#/definitions/XAttribute",
          "readOnly": true
        },
        "Value": {
          "type": "string"
        },
        "BaseUri": {
          "type": "string",
          "readOnly": true
        },
        "Document": {
          "$ref": "#/definitions/XDocument",
          "readOnly": true
        },
        "Parent": {
          "$ref": "#/definitions/XElement",
          "readOnly": true
        }
      }
    },
    "XNode": {
      "type": "object",
      "properties": {
        "NextNode": {
          "$ref": "#/definitions/XNode",
          "readOnly": true
        },
        "PreviousNode": {
          "$ref": "#/definitions/XNode",
          "readOnly": true
        },
        "BaseUri": {
          "type": "string",
          "readOnly": true
        },
        "Document": {
          "$ref": "#/definitions/XDocument",
          "readOnly": true
        },
        "NodeType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17
          ],
          "type": "integer",
          "readOnly": true
        },
        "Parent": {
          "$ref": "#/definitions/XElement",
          "readOnly": true
        }
      }
    },
    "XDocument": {
      "type": "object",
      "properties": {
        "Declaration": {
          "$ref": "#/definitions/XDeclaration"
        },
        "DocumentType": {
          "$ref": "#/definitions/XDocumentType",
          "readOnly": true
        },
        "NodeType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17
          ],
          "type": "integer",
          "readOnly": true
        },
        "Root": {
          "$ref": "#/definitions/XElement",
          "readOnly": true
        },
        "FirstNode": {
          "$ref": "#/definitions/XNode",
          "readOnly": true
        },
        "LastNode": {
          "$ref": "#/definitions/XNode",
          "readOnly": true
        },
        "NextNode": {
          "$ref": "#/definitions/XNode",
          "readOnly": true
        },
        "PreviousNode": {
          "$ref": "#/definitions/XNode",
          "readOnly": true
        },
        "BaseUri": {
          "type": "string",
          "readOnly": true
        },
        "Document": {
          "$ref": "#/definitions/XDocument",
          "readOnly": true
        },
        "Parent": {
          "$ref": "#/definitions/XElement",
          "readOnly": true
        }
      },
      "example": {}
    },
    "XDeclaration": {
      "type": "object",
      "properties": {
        "Encoding": {
          "type": "string"
        },
        "Standalone": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        }
      }
    },
    "XDocumentType": {
      "type": "object",
      "properties": {
        "InternalSubset": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "NodeType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17
          ],
          "type": "integer",
          "readOnly": true
        },
        "PublicId": {
          "type": "string"
        },
        "SystemId": {
          "type": "string"
        },
        "NextNode": {
          "$ref": "#/definitions/XNode",
          "readOnly": true
        },
        "PreviousNode": {
          "$ref": "#/definitions/XNode",
          "readOnly": true
        },
        "BaseUri": {
          "type": "string",
          "readOnly": true
        },
        "Document": {
          "$ref": "#/definitions/XDocument",
          "readOnly": true
        },
        "Parent": {
          "$ref": "#/definitions/XElement",
          "readOnly": true
        }
      }
    }
  }
}