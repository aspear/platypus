{"host":"console-stg.cloud.vmware.com","tags":[{"description":"Authentication Operations","name":"Authentication"},{"description":"Discovery Operations","name":"Discovery"},{"description":"Group Operations","name":"Group"},{"description":"OAuth Client Operations","name":"OAuth Client"},{"description":"Open ID Connect (OIDC) EndpointsOperations","name":"Open ID Connect (OIDC) Endpoints"},{"description":"Organization Operations","name":"Organization"},{"description":"Organization Groups Operations","name":"Organization Groups"},{"description":"Organization Managed OAuth Apps Operations","name":"Organization Managed OAuth Apps (Clients)"},{"description":"Organization V2Operations","name":"Organization V2"},{"description":"Principal User Operations","name":"Principal User"},{"description":"(Deprecated) Service OAuth Client Operations","name":"Service OAuth Client Management"},{"description":"Terms Of Service Operations","name":"Terms Of Service"},{"description":"User Operations","name":"User"},{"description":"User V2 Operations","name":"User V2"},{"description":"User V3 Operations","name":"User V3"}],"securityDefinitions":{"token":{"in":"header","name":"csp-auth-token","type":"apiKey"}},"produces":["application/json"],"definitions":{"OidcUserInfoDto":{"description":"OIDC User Info","properties":{"context_name":{"allowEmptyValue":false,"type":"string","description":"The context name (equals to CSP organization ID) in which the token was issued."},"acct":{"allowEmptyValue":false,"type":"string","description":"The user's account identifier, the acct claim can be a combination of the user's username and domain in URLEncoded(username)@domain format or the user's email or the UPN of the user."},"domain":{"allowEmptyValue":false,"type":"string","description":"The domain the user belongs to."},"email":{"allowEmptyValue":false,"type":"string","description":"The user's email."},"family_name":{"allowEmptyValue":false,"type":"string","description":"The user's family name."},"group_names":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Group names the user belongs to. Property will be returned only if the client registered with 'group_names' scope."},"username":{"allowEmptyValue":false,"type":"string","description":"The user's username."},"sub":{"allowEmptyValue":false,"type":"string","description":"The user on behalf of which the token was issued."},"email_verified":{"description":"True if the user's e-mail address has been verified; Otherwise false.","allowEmptyValue":false,"example":false,"type":"boolean"},"group_ids":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Group ids the user belongs to. Property will be returned only if the client registered with 'group_ids' scope."},"context":{"allowEmptyValue":false,"type":"string","description":"The context identifier in which the token was issued."},"given_name":{"allowEmptyValue":false,"type":"string","description":"The user's given name."}},"title":"OidcUserInfoDto","type":"object"},"RemoveServiceClientsFromOrgRequest":{"properties":{"serviceDefinitionId":{"allowEmptyValue":false,"type":"string","description":"The service definition ID"},"clientIds":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Client IDs to be deleted"}},"title":"RemoveServiceClientsFromOrgRequest","type":"object"},"ApiTokenDetailsDto":{"properties":{"createdAt":{"description":"The timestamp the token was created at (measured in number of seconds since 1/1/1970 UTC)","allowEmptyValue":false,"type":"integer","format":"int64"},"userId":{"allowEmptyValue":false,"type":"string","description":"The user ID"},"orgId":{"allowEmptyValue":false,"type":"string","description":"Organization ID"},"acct":{"allowEmptyValue":false,"type":"string","description":"The account identifier"},"expiresAt":{"description":"The timestamp the token expires at (measured in number of seconds since 1/1/1970 UTC)","allowEmptyValue":false,"type":"integer","format":"int64"},"token":{"allowEmptyValue":false,"type":"string","description":"Api Token"},"idpId":{"allowEmptyValue":false,"type":"string","description":"The identity provider ID"},"lastUsedAt":{"description":"The timestamp the token was last used (measured in number of seconds since 1/1/1970 UTC)","allowEmptyValue":false,"type":"integer","format":"int64"},"username":{"allowEmptyValue":false,"type":"string","description":"Deprecated.\nThe username of the user to whom the api token belongs"},"tokenName":{"allowEmptyValue":false,"type":"string","description":"The name of the api token"},"allowedScopes":{"$ref":"#/definitions/AllowedScopesDto"}},"title":"ApiTokenDetailsDto","type":"object"},"UpdateServiceRolesRequest":{"type":"object","properties":{"rolesToAdd":{"items":{"$ref":"#/definitions/ServiceRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"Roles to add"},"serviceDefinitionId":{"type":"string"},"rolesToRemove":{"items":{"$ref":"#/definitions/ServiceRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"Roles to remove"},"roleNamesToAdd":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Deprecated: Role names to add (use rolesToAdd instead)"},"roleNamesToRemove":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Deprecated: Role names to remove (use rolesToRemove instead)"}},"title":"UpdateServiceRolesRequest","required":["serviceDefinitionId"]},"AuthClientDto":{"properties":{"refLink":{"allowEmptyValue":false,"type":"string","description":"Auth Client link"},"id":{"allowEmptyValue":false,"maxLength":100,"description":"Auth Client ID. Constraints:<br>1. Must contain at least 5 and at most 100 characters.<br>2. Allowed characters: A-Z a-z 0-9 _ -<br>3. Whitespaces are not allowed.","minLength":5,"type":"string"},"refreshTokenTTL":{"description":"OAuth Refresh token TTL","allowEmptyValue":false,"type":"integer","format":"int32"},"accessTokenTTL":{"description":"OAuth Access token TTL","allowEmptyValue":false,"type":"integer","format":"int32"},"maxGroupsInIdToken":{"description":"Maximum number of groups in id token","allowEmptyValue":false,"type":"integer","format":"int32"},"grantTypes":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"OAuth Grant types"},"secret":{"allowEmptyValue":false,"type":"string","description":"Auth Client Secret. <br>If no client secret is passed, or if an empty string is passed, both will be considered as empty secret.<br>Client secret cannot contain space(s)."},"redirectUris":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Auth Client service redirect URIs"},"resourceLink":{"allowEmptyValue":false,"type":"string","description":"Resource Link"},"allowedScopes":{"allowEmptyValue":false,"readOnly":true,"items":{"type":"string"},"description":"Allowed Scopes","type":"array"}},"title":"AuthClientDto","type":"object"},"SearchUsersByRolesRequest":{"description":"Search users by roles","properties":{"rolesSearchTerm":{"$ref":"#/definitions/RolesSearchTermDto","allowEmptyValue":false,"description":"Organization and service roles"},"pageLimit":{"description":"Maximum number of users to return in response. Default value is 200","allowEmptyValue":false,"type":"integer","format":"int32"},"pageStart":{"description":"Start index for querying users. Default value is 1","allowEmptyValue":false,"type":"integer","format":"int32"}},"title":"SearchUsersByRolesRequest","type":"object"},"UsersLocalePreferencesRequest":{"properties":{"usernames":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"The requested usernames. Default preferences will return for users with no profile or not existing users"}},"title":"UsersLocalePreferencesRequest","type":"object"},"RolesSearchTermDto":{"properties":{"orgRoles":{"items":{"$ref":"#/definitions/OrgRolesSearchTermDto"},"allowEmptyValue":false,"type":"array","description":"Organization roles"},"serviceRoles":{"items":{"$ref":"#/definitions/ServiceRolesSearchTermDto"},"allowEmptyValue":false,"type":"array","description":"Services roles"}},"title":"RolesSearchTermDto","type":"object"},"OrganizationRoleBindingDto":{"properties":{"displayName":{"readOnly":true,"allowEmptyValue":false,"type":"string","description":"The organization role display name"},"membershipType":{"allowEmptyValue":false,"readOnly":true,"enum":["DIRECT","GROUP"],"description":"Membership type of the member in the organization.\nDIRECT: if the member roles were assigned directly.\nGROUP: if the member roles were assigned through custom or enterprise group.","type":"string"},"name":{"allowEmptyValue":false,"type":"string","description":"The role name"}},"title":"OrganizationRoleBindingDto","type":"object"},"AssignServiceRolesToServiceClientsRequest":{"type":"object","properties":{"serviceDefinitionId":{"allowEmptyValue":false,"type":"string","description":"The service definition id (without \"external\" prefix"},"serviceRoles":{"items":{"$ref":"#/definitions/ServiceRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"The service roles"},"serviceRoleNames":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Deprecated: The service role names (use serviceRoles instead)"},"clientIds":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Service Client Ids"}},"title":"AssignServiceRolesToServiceClientsRequest","required":["clientIds"]},"MapOfstringAndobject":{"title":"MapOfstringAndobject","additionalProperties":{"type":"object"},"type":"object"},"ClientIdAndSecretResponse":{"properties":{"clientId":{"type":"string"},"clientSecret":{"type":"string"}},"title":"ClientIdAndSecretResponse","type":"object"},"PagedResponseOfExpandedGroupDto":{"properties":{"prevLink":{"description":"Relative path to previous page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=30&pageLimit=15","type":"string"},"nextLink":{"description":"Relative path to next page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=60&pageLimit=15","type":"string"},"totalResults":{"allowEmptyValue":false,"description":"Total amount of results if available","format":"int32","example":2000,"type":"integer"},"results":{"items":{"$ref":"#/definitions/ExpandedGroupDto"},"allowEmptyValue":false,"type":"array","description":"List of results"}},"title":"PagedResponseOfExpandedGroupDto","type":"object"},"TokenIntrospectionResponse":{"properties":{"token_type":{"allowEmptyValue":false,"type":"string","description":"Type of the token"},"orgId":{"allowEmptyValue":false,"type":"string","description":"Organization ID"},"exp":{"description":"The timestamp the token expires at (measured in number of seconds since 1/1/1970 UTC)","allowEmptyValue":false,"type":"integer","format":"int64"},"iat":{"description":"The timestamp the token was created at (measured in number of seconds since 1/1/1970 UTC)","allowEmptyValue":false,"type":"integer","format":"int64"},"active":{"description":"Indicator of whether or not the presented token is currently active","allowEmptyValue":false,"example":false,"type":"boolean"},"sub":{"allowEmptyValue":false,"type":"string","description":"The user ID"}},"title":"TokenIntrospectionResponse","type":"object"},"PartialSuccessResponseOfExtendedUsernameDto":{"properties":{"failed":{"items":{"$ref":"#/definitions/ExtendedUsernameDto"},"allowEmptyValue":false,"type":"array","description":"The entities for which the operation fails"},"succeeded":{"items":{"$ref":"#/definitions/ExtendedUsernameDto"},"allowEmptyValue":false,"type":"array","description":"The entities for which the operation is successful"}},"title":"PartialSuccessResponseOfExtendedUsernameDto","type":"object"},"RemoveMembersFromOrgRequest":{"properties":{"ids":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"IDs of the members that will be removed from the organization"}},"title":"RemoveMembersFromOrgRequest","type":"object"},"BaseScope":{"type":"object","properties":{"name":{"type":"string"}},"title":"BaseScope","required":["name"]},"CspOpenIdConfigurationDto":{"description":"The OpenID configuration document as defined by the specification: http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata. This is also compliant with the https://tools.ietf.org/html/draft-ietf-oauth-discovery-08 specification.","properties":{"code_challenge_methods_supported":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"List of PKCE code challenge methods that GAZ supports"},"end_session_endpoint":{"allowEmptyValue":false,"type":"string","description":"CSP logout endpoint"},"authorization_endpoint":{"allowEmptyValue":false,"type":"string","description":"URL of the OAuth 2.0 authorization endpoint"},"id_token_signing_alg_values_supported":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"list of the JWS signing algorithms supported for the ID Token to encode the Claims in a JWT"},"userinfo_endpoint":{"allowEmptyValue":false,"type":"string","description":"URL of the OAuth 2.0 UserInfo endpoint"},"response_types_supported":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"list of the OAuth 2.0 response_type values that CSP supports"},"issuer":{"allowEmptyValue":false,"type":"string","description":"the identifier of the token's issuer. This is identical to the iss Claim value in ID Tokens"},"jwks_uri":{"allowEmptyValue":false,"type":"string","description":"URL of JSON Web Key Set document"},"token_endpoint":{"allowEmptyValue":false,"type":"string","description":"URL of the OAuth 2.0 token endpoint"},"scopes_supported":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"list of the OAuth 2.0 scope values that CSP supports"},"token_endpoint_auth_methods_supported":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"List of the auth methods supported by OAuth 2.0 token endpoint"},"subject_types_supported":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"list of the Subject Identifier types that CSP supports"},"claims_supported":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"list of the claims CSP may be able to supply values for. Note that for privacy or other reasons, this might not be an exhaustive list"}},"title":"CspOpenIdConfigurationDto","type":"object"},"UsersLocalePreferencesResponse":{"properties":{"usersPreferences":{"type":"object","allowEmptyValue":false,"additionalProperties":{"$ref":"#/definitions/UsersLocalePreferenceItem"},"description":"Map of users to their locale and language preferences. The key is the username. Default preferences will be returned for users without preferences or users which does not exist"}},"title":"UsersLocalePreferencesResponse","type":"object"},"SearchUsersResponse":{"properties":{"results":{"items":{"$ref":"#/definitions/ExpandedTypedUserDto"},"type":"array"}},"title":"SearchUsersResponse","type":"object"},"AddUsersToCustomGroupRequest":{"properties":{"notifyUsers":{"description":"Publish email notification to group members","allowEmptyValue":false,"example":false,"type":"boolean"},"usernamesToAdd":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"List of user names to be added"}},"title":"AddUsersToCustomGroupRequest","type":"object"},"UserServiceRolesResponse":{"properties":{"serviceRoles":{"items":{"$ref":"#/definitions/ServiceRolesDto"},"type":"array"}},"title":"UserServiceRolesResponse","type":"object"},"UpdateMemberRolesRequest":{"properties":{"organizationRoles":{"$ref":"#/definitions/UpdateRolesRequestOfBaseRoleBindingDto"},"serviceRoles":{"items":{"$ref":"#/definitions/UpdateServiceRolesRequest"},"type":"array"}},"title":"UpdateMemberRolesRequest","type":"object"},"ClientSecretRotationRequest":{"properties":{"newClientSecret":{"allowEmptyValue":false,"maxLength":200,"description":"New OAuth Client Secret","minLength":8,"type":"string"},"secretRotationExpirationInSeconds":{"description":"The secret rotation expiration in seconds for the secret rotation, the old client secret will be expired after it.The value must be less than the client configured 'secretRotationExpirationInSeconds' (or less than 48 hours if the client doesn't have an explicit configuration for 'secretRotationExpirationInSeconds').","allowEmptyValue":true,"type":"integer","format":"int32"}},"title":"ClientSecretRotationRequest","type":"object"},"IdDto":{"properties":{"id":{"type":"string"}},"title":"IdDto","type":"object"},"UpdateCustomGroupRequest":{"type":"object","properties":{"name":{"minLength":0,"maxLength":200,"type":"string"},"description":{"minLength":0,"maxLength":500,"type":"string"}},"title":"UpdateCustomGroupRequest","required":["name"]},"AssignRolesToMembersRequest":{"properties":{"ids":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"IDs of the members to whom the new roles will be assigned"},"serviceRoles":{"items":{"$ref":"#/definitions/ServiceRolesWithIdDto"},"allowEmptyValue":false,"type":"array","description":"The service roles that will be assigned to the member"},"organizationRoles":{"items":{"$ref":"#/definitions/BaseRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"The organization roles that will be assigned to the member"},"organizationRoleNames":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Deprecated: The organization role names that will be assigned to the member (use organizationRoles instead"}},"title":"AssignRolesToMembersRequest","type":"object"},"ExtendedUsernameDto":{"type":"object","properties":{"username":{"allowEmptyValue":false,"type":"string","description":"Users's username "},"idpId":{"allowEmptyValue":false,"type":"string","description":"The user's Identity provider (IdP) ID. If not provided, the IdP will be discovered from the user email domain"}},"title":"ExtendedUsernameDto","required":["username"]},"OrganizationScopesDto":{"properties":{"roleNames":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"List of allowed roleNames"},"allRoles":{"description":"If set to true, the client will be scoped to all available roles.\n1. This flag allows to add all client/user's permissions to the access token.\n2. Role names must be null/empty if all roles is true\n","allowEmptyValue":false,"example":false,"type":"boolean"},"roles":{"items":{"$ref":"#/definitions/BaseScope"},"allowEmptyValue":false,"type":"array","description":"List of allowed roles"}},"title":"OrganizationScopesDto","type":"object"},"UserProfileDto":{"properties":{"createdAt":{"format":"int64","type":"integer"},"userId":{"allowEmptyValue":false,"type":"string","description":"The Identity Provider (IdP) user ID"},"defaultOrgId":{"type":"string"},"acct":{"allowEmptyValue":false,"type":"string","description":"The account identifier"},"locale":{"type":"string"},"username":{"allowEmptyValue":false,"type":"string","description":"(Deprecated) Username"},"isFederated":{"type":"boolean"},"language":{"type":"string"},"metadata":{"$ref":"#/definitions/UserProfileMetadataDto"},"linkedUserIdAccount":{"type":"string"},"email":{"allowEmptyValue":false,"type":"string","description":"The user's email"},"customerNumber":{"type":"string"}},"title":"UserProfileDto","type":"object"},"UpdateRolesRequestOfBaseRoleBindingDto":{"properties":{"rolesToAdd":{"items":{"$ref":"#/definitions/BaseRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"Roles to add"},"rolesToRemove":{"items":{"$ref":"#/definitions/BaseRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"Roles to remove"},"roleNamesToAdd":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Deprecated: Role names to add (use rolesToAdd instead)"},"roleNamesToRemove":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Deprecated: Role names to remove (use rolesToRemove instead)"}},"title":"UpdateRolesRequestOfBaseRoleBindingDto","type":"object"},"BaseUserWithProfileDto":{"properties":{"userId":{"allowEmptyValue":false,"type":"string","description":"The user ID"},"acct":{"allowEmptyValue":false,"type":"string","description":"The account identifier"},"userProfile":{"$ref":"#/definitions/UserLocalePreferencesDto","allowEmptyValue":false,"description":"User locale preferences will be set only with expand param, if preferences are not found null will be returned"},"domain":{"allowEmptyValue":false,"type":"string","description":"The domain of the user. (will be vmwareid incase the user is VMware ID user)"},"email":{"allowEmptyValue":false,"type":"string","description":"The user's email"},"lastName":{"allowEmptyValue":false,"type":"string","description":"The last name of the user"},"idpId":{"allowEmptyValue":false,"type":"string","description":"The user's Identity Provider ID"},"username":{"allowEmptyValue":false,"type":"string","description":"Deprecated.\nThe user's username (email address)"},"accessible":{"description":"User is inaccessible if it will not be able to login with it's VMware ID credentials. Since the user is federated and will be redirected to it's Identity Provider","allowEmptyValue":false,"example":false,"type":"boolean"},"firstName":{"allowEmptyValue":false,"type":"string","description":"The first name of the user"}},"title":"BaseUserWithProfileDto","type":"object"},"AllowedScopesDto":{"properties":{"servicesScopes":{"items":{"$ref":"#/definitions/ServiceScopesDto"},"allowEmptyValue":false,"type":"array","description":"Service scopes grouped by service definition"},"generalScopes":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"General scopes (openid for example)"},"organizationScopes":{"$ref":"#/definitions/OrganizationScopesDto","allowEmptyValue":false,"description":"Organization scopes"}},"title":"AllowedScopesDto","type":"object"},"RemoveUsersFromCustomGroupRequest":{"type":"object","properties":{"ids":{"items":{"type":"string"},"type":"array"},"notifyUsers":{"description":"Publish email notification to group members","allowEmptyValue":false,"example":false,"type":"boolean"}},"title":"RemoveUsersFromCustomGroupRequest","required":["ids"]},"IdTokenDto":{"description":"ID Token","properties":{"idToken":{"allowEmptyValue":false,"type":"string","description":"ID Token is signed JWT token returned from the authorization server and contains the user's profile information, includingthe domain of the identity provider. This domain is used to obtain the identity provider URL. This token is used for optimization so the application can know the identity of the user, without having to make any additional network requests. This token can be generated via the Authorization Code flow only."}},"title":"IdTokenDto","type":"object"},"RemoveGroupsFromOrganizationResponseOfstring":{"properties":{"failed":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"The entities for which the operation fails"},"failures":{"items":{"$ref":"#/definitions/RemoveGroupsFromOrganizationFailure"},"allowEmptyValue":false,"type":"array","description":"The entities for which the operation fails with the reason of failure."},"succeeded":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"The entities for which the operation is successful"}},"title":"RemoveGroupsFromOrganizationResponseOfstring","type":"object"},"GetUserByUserIdResponse":{"properties":{"userId":{"allowEmptyValue":false,"type":"string","description":"The user ID"},"idpUserDetails":{"$ref":"#/definitions/IdpUserDetailsDto"},"acct":{"allowEmptyValue":false,"type":"string","description":"The account identifier"},"userProfile":{"$ref":"#/definitions/LeanUserProfileDto","allowEmptyValue":false,"description":"User profile will be set only with expand param"},"username":{"allowEmptyValue":false,"type":"string","description":"Username"},"email":{"allowEmptyValue":false,"type":"string","description":"The user's email"},"lastName":{"allowEmptyValue":false,"type":"string","description":"Last Name"},"refLink":{"allowEmptyValue":false,"type":"string","description":"Document Ref Link"},"firstName":{"allowEmptyValue":false,"type":"string","description":"First Name"}},"title":"GetUserByUserIdResponse","type":"object"},"UsersOrganizationInvitationRequest":{"type":"object","properties":{"organizationRoles":{"items":{"$ref":"#/definitions/BaseRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"Organization roles (relevant only for invite)"},"orgRoleName":{"allowEmptyValue":false,"type":"string","description":"Deprecated: Org role name (use organizationRoles instead)"},"usernames":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Usernames"},"orgRoleNames":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Deprecated: Org role names (use organizationRoles instead)"},"customGroupsIds":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Custom Groups Ids (relevant only for invite)"},"serviceRolesDtos":{"items":{"$ref":"#/definitions/ServiceRolesDto"},"allowEmptyValue":false,"type":"array","description":"Service Roles (relevant only for invite)"}},"title":"UsersOrganizationInvitationRequest","required":["usernames"]},"PagedResponseOfExpandedTypedUserDto":{"properties":{"prevLink":{"description":"Relative path to previous page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=30&pageLimit=15","type":"string"},"nextLink":{"description":"Relative path to next page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=60&pageLimit=15","type":"string"},"totalResults":{"allowEmptyValue":false,"description":"Total amount of results if available","format":"int32","example":2000,"type":"integer"},"results":{"items":{"$ref":"#/definitions/ExpandedTypedUserDto"},"allowEmptyValue":false,"type":"array","description":"List of results"}},"title":"PagedResponseOfExpandedTypedUserDto","type":"object"},"RemoveGroupsFromOrganizationFailure":{"properties":{"errorCode":{"allowEmptyValue":false,"type":"string","description":"The error code of the reason for which the operation for this entry had failed."},"id":{"allowEmptyValue":false,"type":"string","description":"The id of the entry for which a operation had failed"},"message":{"allowEmptyValue":false,"type":"string","description":"The reason for which the operation for this entry had failed."}},"title":"RemoveGroupsFromOrganizationFailure","type":"object"},"PagedResponseOfBaseUserDto":{"properties":{"prevLink":{"description":"Relative path to previous page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=30&pageLimit=15","type":"string"},"nextLink":{"description":"Relative path to next page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=60&pageLimit=15","type":"string"},"totalResults":{"allowEmptyValue":false,"description":"Total amount of results if available","format":"int32","example":2000,"type":"integer"},"results":{"items":{"$ref":"#/definitions/BaseUserDto"},"allowEmptyValue":false,"type":"array","description":"List of results"}},"title":"PagedResponseOfBaseUserDto","type":"object"},"ExpandedAuthClientDto":{"properties":{"organizationRoles":{"items":{"$ref":"#/definitions/OrganizationRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"The organization roles"},"displayName":{"type":"string"},"id":{"type":"string"},"serviceRoles":{"items":{"$ref":"#/definitions/ServiceRolesWithIdDto"},"allowEmptyValue":false,"type":"array","description":"The services roles"},"description":{"type":"string"},"sourceOrg":{"$ref":"#/definitions/SourceOrgDto"}},"title":"ExpandedAuthClientDto","type":"object"},"ExpandedGroupDto":{"properties":{"organizationRoles":{"items":{"$ref":"#/definitions/OrganizationRoleBindingDto"},"type":"array"},"displayName":{"allowEmptyValue":false,"type":"string","description":"Group display name"},"usersCount":{"description":"Number of users in the group","allowEmptyValue":false,"type":"integer","format":"int32"},"description":{"allowEmptyValue":false,"type":"string","description":"Description of the custom group. For enterprise groups the value will be `null`"},"groupType":{"enum":["USER_GROUP","AD_GROUP"],"allowEmptyValue":false,"type":"string","description":"USER_GROUP is an organization specific custom group, AD_GROUP is a federated domain group"},"serviceRoles":{"items":{"$ref":"#/definitions/ServiceRolesWithIdDto"},"type":"array"},"domain":{"allowEmptyValue":false,"type":"string","description":"Group domain name"},"id":{"allowEmptyValue":false,"type":"string","description":"Group id"}},"title":"ExpandedGroupDto","type":"object"},"PagedResponseOfOrganizationDto":{"properties":{"prevLink":{"description":"Relative path to previous page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=30&pageLimit=15","type":"string"},"nextLink":{"description":"Relative path to next page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=60&pageLimit=15","type":"string"},"totalResults":{"allowEmptyValue":false,"description":"Total amount of results if available","format":"int32","example":2000,"type":"integer"},"results":{"items":{"$ref":"#/definitions/OrganizationDto"},"allowEmptyValue":false,"type":"array","description":"List of results"}},"title":"PagedResponseOfOrganizationDto","type":"object"},"UpdateClientRawScopesRequest":{"properties":{"scopesToAdd":{"allowEmptyValue":false,"description":"Scopes that will be added to the client. The scopes provided will be added as is to the client allowed scopes","items":{"type":"string"},"example":["external/<service_definition_id>/service:service-role"],"type":"array"},"scopesToRemove":{"allowEmptyValue":false,"description":"Scopes that will be removed from the client. The scopes provided will be removed from the client allowed scopes if exists","items":{"type":"string"},"example":["csp:org_owner"],"type":"array"}},"title":"UpdateClientRawScopesRequest","type":"object"},"UserOrgInfo":{"properties":{"displayName":{"type":"string"},"name":{"type":"string"},"orgRoles":{"items":{"$ref":"#/definitions/RoleDto"},"type":"array"},"servicesDef":{"items":{"$ref":"#/definitions/ServiceDef"},"type":"array"}},"title":"UserOrgInfo","type":"object"},"AccessTokenDto":{"description":"Access token","properties":{"refresh_token":{"allowEmptyValue":false,"type":"string","description":"Refresh Token"},"expires_in":{"description":"Access Token Expiration","allowEmptyValue":false,"type":"integer","format":"int64"},"access_token":{"allowEmptyValue":false,"type":"string","description":"Access Token"},"scope":{"allowEmptyValue":false,"type":"string","description":"Scope"},"id_token":{"allowEmptyValue":false,"type":"string","description":"ID Token"},"token_type":{"allowEmptyValue":false,"type":"string","description":"Token Type"}},"title":"AccessTokenDto","type":"object"},"PagedPostResponseOfExpandedTypedUserDto":{"properties":{"startIndex":{"allowEmptyValue":false,"description":"Start index of the results - By default index starts at 1","format":"int32","example":5,"type":"integer"},"totalResults":{"allowEmptyValue":false,"description":"Total number of results","format":"int32","example":2000,"type":"integer"},"itemsPerPage":{"allowEmptyValue":false,"description":"Number of items per page - By default 200 items per page","format":"int32","example":25,"type":"integer"},"results":{"items":{"$ref":"#/definitions/ExpandedTypedUserDto"},"allowEmptyValue":false,"type":"array","description":"List of results"}},"title":"PagedPostResponseOfExpandedTypedUserDto","type":"object"},"UpdateGroupRolesRequest":{"properties":{"organizationRoles":{"$ref":"#/definitions/UpdateRolesRequestOfBaseRoleBindingDto"},"serviceRoles":{"items":{"$ref":"#/definitions/UpdateServiceRolesRequest"},"type":"array"},"notifyUsersInGroups":{"type":"boolean"}},"title":"UpdateGroupRolesRequest","type":"object"},"UserLocalePreferencesDto":{"type":"object","properties":{"language":{"type":"string"},"locale":{"type":"string"}},"title":"UserLocalePreferencesDto","required":["language","locale"]},"GetApiTokenDetailsRequest":{"properties":{"tokenValue":{"allowEmptyValue":false,"type":"string","description":"Api Token"}},"title":"GetApiTokenDetailsRequest","type":"object"},"OrganizationsDto":{"properties":{"refLinks":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Links of references"},"items":{"items":{"$ref":"#/definitions/OrganizationDto"},"type":"array"}},"title":"OrganizationsDto","type":"object"},"OrgOAuthAppUpdateRequest":{"type":"object","properties":{"ownerOnlySecretRotation":{"description":"When set to 'true', the client is not allowed to rotate its own secret. Client rotation will be enabled for org owner/service owner only using client rotation management.","allowEmptyValue":false,"example":false,"type":"boolean"},"displayName":{"allowEmptyValue":false,"type":"string","description":"Client display name"},"secretRotationExpirationInSeconds":{"description":"Optionally override the default number of seconds before a new client secret will automatically be rotated when using the clientsecret rotation APIs. If not specified, the default expiration time is 48 hours.","allowEmptyValue":false,"type":"integer","format":"int32"},"allowedScopes":{"$ref":"#/definitions/AllowedScopesDto","allowEmptyValue":false,"description":"Allowed Scopes"},"refreshTokenTTL":{"description":"OAuth Refresh token TTL","allowEmptyValue":false,"type":"integer","format":"int32"},"accessTokenTTL":{"description":"OAuth Access token TTL","allowEmptyValue":false,"type":"integer","format":"int32"},"maxGroupsInIdToken":{"description":"Max groups in ID token","allowEmptyValue":false,"type":"integer","format":"int32"},"allowedOrgs":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Allowed Organizations.<br>Can be used to restrict the client to sub-set of orgs.<br>The value is a list of org IDs, in which users may login using this client.  If value is not presented in the request (null value) the client will <strong>not be restricted</strong>.<br><strong>Important:</strong><br>1. This option is available only for <strong>service orgs</strong>. Consumer orgs cannot pass this value since the client <strong>is restricted only to it's managed org</strong>, which cannot be changed.<br>2. It is not possible to update an org/s restricted client to be a regular client.<br>3. The 'allowedOrgs' is ignored during client_credentials flow.<br>4. If an org is deleted, its references in allowedOrgs are deleted eventually. 'allowedOrgs' may become empty if a org gets deleted, which means users cannot login to any org using this client. The 'allowedOrgs' will be ignored during client_credentials flow."},"grantTypes":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"OAuth Grant types. Available grant types: authorization_code, refresh_token, client_credentials"},"description":{"allowEmptyValue":false,"type":"string","description":"Client Description"},"redirectUris":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Auth Client service redirect URIs. Relevant only for authorization_code grant type"},"secret":{"allowEmptyValue":false,"maxLength":200,"description":"Client Secret<br><strong>Important:</strong><br><strong>2.Changing the client secret via the client management APIs will reset existing secret rotation (meaning, the provided secret in the management APIs will be the only valid secret).</strong>","minLength":8,"type":"string"},"forcePkce":{"description":"When set to true, the flag mandates the use of PKCE when doing an authorization_code flow (i.e., the request will fail if PKCE is not used).","allowEmptyValue":false,"example":false,"type":"boolean"}},"title":"OrgOAuthAppUpdateRequest","required":["description","displayName","grantTypes"]},"OrgOAuthAppResponse":{"properties":{"ownerOnlySecretRotation":{"type":"boolean"},"secretRotationExpirationInSeconds":{"format":"int32","type":"integer"},"id":{"type":"string"},"refreshTokenTTL":{"format":"int32","type":"integer"},"accessTokenTTL":{"format":"int32","type":"integer"},"organizationId":{"type":"string"},"allowedOrgs":{"items":{"$ref":"#/definitions/OrganizationDetailsDto"},"type":"array"},"grantTypes":{"items":{"type":"string"},"type":"array"},"description":{"type":"string"},"lastUpdatedAt":{"format":"int64","type":"integer"},"createdAt":{"format":"int64","type":"integer"},"displayName":{"type":"string"},"allowedScopes":{"$ref":"#/definitions/AllowedScopesDto"},"publicClient":{"type":"boolean"},"lastUpdatedBy":{"type":"string"},"createdBy":{"type":"string"},"forcePkce":{"type":"boolean"},"redirectUris":{"items":{"type":"string"},"type":"array"},"allowOpenRedirectUris":{"type":"boolean"},"maxGroupsInIdToken":{"format":"int32","type":"integer"}},"title":"OrgOAuthAppResponse","type":"object"},"UsersDto":{"type":"object","properties":{"users":{"items":{"$ref":"#/definitions/UserAndRolesDto"},"allowEmptyValue":false,"type":"array","description":"Users"},"refLinks":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Document Reference Links"}},"title":"UsersDto","required":["refLinks","users"]},"UrlResponse":{"description":"IDP Url Response","properties":{"url":{"allowEmptyValue":false,"type":"string","description":"Url"}},"title":"UrlResponse","type":"object"},"TypedServiceRolesDto":{"properties":{"serviceDefinitionId":{"type":"string"},"serviceRoles":{"items":{"$ref":"#/definitions/TypedServiceRoleDto"},"type":"array"}},"title":"TypedServiceRolesDto","type":"object"},"ExpandedTypedUserDto":{"properties":{"organizationRoles":{"items":{"$ref":"#/definitions/OrganizationRoleBindingDto"},"type":"array"},"serviceRoles":{"items":{"$ref":"#/definitions/TypedServiceRolesDto"},"type":"array"},"orgId":{"type":"string"},"user":{"$ref":"#/definitions/BaseUserWithProfileDto"}},"title":"ExpandedTypedUserDto","type":"object"},"UserGroupsResponse":{"properties":{"groups":{"items":{"$ref":"#/definitions/GroupDto"},"allowEmptyValue":false,"type":"array","description":"User Groups Information"}},"title":"UserGroupsResponse","type":"object"},"UserOrganizationInvitationResponse":{"type":"object","properties":{"organizationRoles":{"items":{"$ref":"#/definitions/OrganizationRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"The organization roles"},"redeemedAt":{"description":"Redemption timestamp in millis","allowEmptyValue":false,"type":"integer","format":"int64"},"customGroups":{"items":{"$ref":"#/definitions/ExpandedGroupDto"},"allowEmptyValue":false,"type":"array","description":"Custom Groups (relevant only for invite)"},"customGroupsIds":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Custom Groups Ids (relevant only for invite)"},"generatedBy":{"allowEmptyValue":false,"type":"string","description":"Creator (usually client ID)"},"refLink":{"type":"string"},"invitationLink":{"allowEmptyValue":false,"type":"string","description":"Common Invitation Link"},"username":{"allowEmptyValue":false,"type":"string","description":"Username"},"generatedAt":{"description":"Creation timestamp in millis","allowEmptyValue":false,"type":"integer","format":"int64"},"revokedAt":{"description":"Revoke timestamp in millis","allowEmptyValue":false,"type":"integer","format":"int64"},"expirationTime":{"description":"Invitation expiration time","allowEmptyValue":false,"type":"integer","format":"int64"},"redeemedBy":{"allowEmptyValue":false,"type":"string","description":"Name of invitation redeemer"},"revokedBy":{"allowEmptyValue":false,"type":"string","description":"Name of invitation revoker"},"orgRoleNames":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Organization roles name"},"status":{"allowEmptyValue":false,"description":"Invitation status","enum":["AVAILABLE","REDEEMED","REVOKED"],"example":"AVAILABLE","type":"string"},"serviceRolesDtos":{"items":{"$ref":"#/definitions/ServiceRolesDto"},"allowEmptyValue":false,"type":"array","description":"Service Roles"},"orgRoleName":{"allowEmptyValue":false,"type":"string","description":"Organization role name"}},"title":"UserOrganizationInvitationResponse","required":["username"]},"UserDto":{"type":"object","properties":{"userId":{"allowEmptyValue":false,"type":"string","description":"The user ID"},"state":{"allowEmptyValue":false,"type":"string","description":"State"},"acct":{"allowEmptyValue":false,"type":"string","description":"The account identifier"},"userProfile":{"$ref":"#/definitions/LeanUserProfileDto","allowEmptyValue":false,"description":"User profile will be set only with expand param"},"email":{"allowEmptyValue":false,"type":"string","description":"The user's email"},"emailVerified":{"description":"Email Verified","allowEmptyValue":false,"example":false,"type":"boolean"},"address":{"allowEmptyValue":false,"maxLength":100,"description":"Address","minLength":0,"type":"string"},"workPhone":{"allowEmptyValue":false,"maxLength":21,"description":"workPhone","minLength":0,"type":"string"},"firstName":{"allowEmptyValue":false,"maxLength":50,"description":"First Name","minLength":0,"type":"string"},"refLink":{"allowEmptyValue":false,"type":"string","description":"Document Ref Link"},"tnc":{"description":"Tnc","allowEmptyValue":false,"example":false,"type":"boolean"},"zipcode":{"allowEmptyValue":false,"maxLength":50,"description":"Zip Code","minLength":0,"type":"string"},"username":{"allowEmptyValue":false,"maxLength":50,"description":"Username","minLength":0,"format":"email","pattern":"(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])","type":"string"},"eulaInfo":{"allowEmptyValue":false,"type":"string","description":"Eula Info"},"customerNumber":{"allowEmptyValue":false,"type":"string","description":"Customer Number"},"city":{"allowEmptyValue":false,"maxLength":100,"description":"City","minLength":0,"type":"string"},"lastName":{"allowEmptyValue":false,"maxLength":50,"description":"Last Name","minLength":0,"type":"string"},"company":{"allowEmptyValue":false,"maxLength":200,"description":"Company","minLength":0,"type":"string"},"country":{"allowEmptyValue":false,"type":"string","description":"Country"},"website":{"allowEmptyValue":false,"maxLength":100,"description":"Website","minLength":0,"type":"string"},"password":{"allowEmptyValue":false,"type":"string","description":"Password"},"tradeId":{"allowEmptyValue":false,"type":"string","description":"Trade Id"}},"title":"UserDto","required":["firstName","lastName","password","username"]},"PagedResponseOfOrgOAuthAppResponse":{"properties":{"prevLink":{"description":"Relative path to previous page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=30&pageLimit=15","type":"string"},"nextLink":{"description":"Relative path to next page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=60&pageLimit=15","type":"string"},"totalResults":{"allowEmptyValue":false,"description":"Total amount of results if available","format":"int32","example":2000,"type":"integer"},"results":{"items":{"$ref":"#/definitions/OrgOAuthAppResponse"},"allowEmptyValue":false,"type":"array","description":"List of results"}},"title":"PagedResponseOfOrgOAuthAppResponse","type":"object"},"UpdateAuthClientsScopesRequest":{"properties":{"serviceDefinitionLink":{"allowEmptyValue":false,"type":"string","description":"Service definition link"},"scopesToAdd":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Scopes to add"},"scopesToRemove":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Scopes to remove"}},"title":"UpdateAuthClientsScopesRequest","type":"object"},"RefLinkDto":{"properties":{"refLink":{"type":"string"}},"title":"RefLinkDto","type":"object"},"ServiceRolesSearchTermDto":{"type":"object","properties":{"serviceDefinitionId":{"type":"string"},"serviceRoles":{"items":{"$ref":"#/definitions/ServiceRoleSearchTermDto"},"type":"array"}},"title":"ServiceRolesSearchTermDto","required":["serviceDefinitionId","serviceRoles"]},"TosSignatureCreationRequest":{"type":"object","properties":{"displayName":{"allowEmptyValue":false,"type":"string","description":"Signee full name"},"orgLink":{"allowEmptyValue":false,"type":"string","description":"Organization Link"},"clientUtcTimestamp":{"description":"Client side timestamp of signature","allowEmptyValue":false,"type":"integer","format":"int64"},"tosType":{"enum":["UNIVERSAL","PRE_SIGNED"],"allowEmptyValue":false,"type":"string","description":"TOS Type to be signed"},"email":{"allowEmptyValue":false,"pattern":"(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])","format":"email","description":"Signee email","type":"string"}},"title":"TosSignatureCreationRequest","required":["clientUtcTimestamp","displayName","email","orgLink"]},"OrgOAuthAppRequest":{"type":"object","properties":{"ownerOnlySecretRotation":{"description":"When set to 'true', the client is not allowed to rotate its own secret. Client rotation will be enabled for org owner/service owner only using client rotation management APIs. By default, client is enabled to self rotate its secret.","allowEmptyValue":false,"example":false,"type":"boolean"},"displayName":{"allowEmptyValue":false,"maxLength":100,"description":"Organization OAuth App display name","minLength":5,"type":"string"},"secretRotationExpirationInSeconds":{"description":"Optionally override the default number of seconds before a new client secret will automatically be rotated when using the clientsecret rotation APIs. If not specified, the default expiration time is 48 hours.","allowEmptyValue":false,"type":"integer","format":"int32"},"allowedScopes":{"$ref":"#/definitions/AllowedScopesDto","allowEmptyValue":false,"description":"Allowed Scopes"},"refreshTokenTTL":{"description":"OAuth Refresh token TTL","allowEmptyValue":false,"type":"integer","format":"int32"},"accessTokenTTL":{"description":"OAuth Access token TTL","allowEmptyValue":false,"type":"integer","format":"int32"},"allowOpenRedirectUris":{"description":"Allow client to use open redirections in non-production environments. If true, the redirectUris field must be null. If a client has been created with open redirect uris disabled, it cannot be updated to open redirect uris enabled.","allowEmptyValue":false,"example":false,"type":"boolean"},"allowedOrgs":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Allowed Organizations.<br>Can be used to restrict the client to sub-set of orgs.<br>The value is a list of org IDs, in which users may login using this client.  If value is not presented in the request (null value) the client will <strong>not be restricted</strong>.<br><strong>Important:</strong><br>1. This option is available only for <strong>service orgs</strong>. Consumer orgs cannot pass this value since the client <strong>is restricted only to it's managed org</strong>, which cannot be changed.<br>2. It is not possible to update an org/s restricted client to be a regular client.<br>3. The 'allowedOrgs' is ignored during client_credentials flow.<br>4. If an org is deleted, its references in allowedOrgs are deleted eventually. 'allowedOrgs' may become empty if a org gets deleted, which means users cannot login to any org using this client. The 'allowedOrgs' will be ignored during client_credentials flow."},"grantTypes":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"OAuth Grant types. Available grant types: authorization_code, refresh_token, client_credentials"},"secret":{"allowEmptyValue":false,"maxLength":200,"description":"Organization OAuth App Secret","minLength":8,"type":"string"},"maxGroupsInIdToken":{"description":"Max groups in ID token","allowEmptyValue":false,"type":"integer","format":"int32"},"description":{"allowEmptyValue":false,"maxLength":255,"description":"Organization OAuth App Description","minLength":2,"type":"string"},"publicClient":{"description":"Mark the client as a public client. Can only be specified at creation time (publicClient cannot be updated).<br>Public clients:<br>Cannot have a secret specified (the secret will implicitly be set as an empty string)<br>Cannot use the 'client_credentials' flow<br>Cannot update or rotate their secret<br>MUST use PKCE when doing an authorization_code flow","allowEmptyValue":false,"example":false,"type":"boolean"},"redirectUris":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Organization OAuth App redirect URIs. Relevant only for authorization_code grant type. If allowOpenRedirectUris = true is set, this field must not be specified."},"id":{"allowEmptyValue":false,"maxLength":256,"description":"Organization OAuth App ID. Constraints:<br>1. Must contain at least 5 and at most 256 characters.<br>2. Allowed characters: A-Z a-z 0-9 _ -<br>3. Whitespaces are not allowed.","minLength":5,"type":"string"},"forcePkce":{"description":"When set to true, the flag mandates the use of PKCE when doing an authorization_code flow (i.e., the request will fail if PKCE is not used).","allowEmptyValue":false,"example":false,"type":"boolean"}},"title":"OrgOAuthAppRequest","required":["description","displayName","grantTypes"]},"DeleteClientsRequest":{"type":"object","properties":{"clientIdsToDelete":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Client ids to delete. Maximum of 15 at each time"}},"title":"DeleteClientsRequest","required":["clientIdsToDelete"]},"RefLinksDto":{"properties":{"refLinks":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Links of references"}},"title":"RefLinksDto","type":"object"},"BaseRoleBindingDto":{"properties":{"membershipType":{"allowEmptyValue":false,"readOnly":true,"enum":["DIRECT","GROUP"],"description":"Membership type of the member in the organization.\nDIRECT: if the member roles were assigned directly.\nGROUP: if the member roles were assigned through custom or enterprise group.","type":"string"},"name":{"allowEmptyValue":false,"type":"string","description":"The role name"}},"title":"BaseRoleBindingDto","type":"object"},"PagedResponseOfExpandedAuthClientDto":{"properties":{"prevLink":{"description":"Relative path to previous page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=30&pageLimit=15","type":"string"},"nextLink":{"description":"Relative path to next page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=60&pageLimit=15","type":"string"},"totalResults":{"allowEmptyValue":false,"description":"Total amount of results if available","format":"int32","example":2000,"type":"integer"},"results":{"items":{"$ref":"#/definitions/ExpandedAuthClientDto"},"allowEmptyValue":false,"type":"array","description":"List of results"}},"title":"PagedResponseOfExpandedAuthClientDto","type":"object"},"ServiceScopesDto":{"properties":{"roleNames":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"List of allowed roleNames"},"allRoles":{"description":"If set to true, the client will be scoped to all available roles.\n1. This flag allows to add all client/user's permissions to the access token.\n2. Role names must be null/empty if all roles is true\n","allowEmptyValue":false,"example":false,"type":"boolean"},"serviceDefinitionId":{"allowEmptyValue":false,"type":"string","description":"Service definition ID (without 'external' prefix)"},"roles":{"items":{"$ref":"#/definitions/ServiceScope"},"allowEmptyValue":false,"type":"array","description":"List of allowed roles"}},"title":"ServiceScopesDto","type":"object"},"OrgRolesSearchTermDto":{"properties":{"roleName":{"type":"string"}},"title":"OrgRolesSearchTermDto","type":"object"},"GroupDto":{"properties":{"usersCount":{"description":"Number of users in the group","allowEmptyValue":false,"type":"integer","format":"int32"},"displayName":{"allowEmptyValue":false,"type":"string","description":"Group display name"},"id":{"allowEmptyValue":false,"type":"string","description":"Group id"},"description":{"allowEmptyValue":false,"type":"string","description":"Description of the custom group. For enterprise groups the value will be `null`"},"domain":{"allowEmptyValue":false,"type":"string","description":"Group domain name"},"groupType":{"enum":["USER_GROUP","AD_GROUP"],"allowEmptyValue":false,"type":"string","description":"USER_GROUP is an organization specific custom group, AD_GROUP is a federated domain group"}},"title":"GroupDto","type":"object"},"TypedServiceRoleDto":{"properties":{"membershipType":{"allowEmptyValue":false,"readOnly":true,"enum":["DIRECT","GROUP"],"description":"Membership type of the member in the organization.\nDIRECT: if the member roles were assigned directly.\nGROUP: if the member roles were assigned through custom or enterprise group.","type":"string"},"name":{"allowEmptyValue":false,"type":"string","description":"The role name"},"roleName":{"type":"string"},"resource":{"allowEmptyValue":false,"maxLength":200,"description":"The resource in which the service role is scoped to.\nThe resource will be embedded in the Access Token \"perms\" claim, as part of the service role, in the following format: \n\"external/{serviceDefinitionId}/{resource}/serviceDefinedRoleName}\"","minLength":0,"type":"string"}},"title":"TypedServiceRoleDto","type":"object"},"RemoveUsersFromOrganizationRequest":{"type":"object","properties":{"users":{"items":{"$ref":"#/definitions/ExtendedUsernameDto"},"type":"array"}},"title":"RemoveUsersFromOrganizationRequest","required":["users"]},"ServiceRolesWithIdDto":{"properties":{"serviceDefinitionId":{"allowEmptyValue":false,"type":"string","description":"The service definition id (without \"external\" prefix"},"serviceRoles":{"items":{"$ref":"#/definitions/ServiceRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"The service roles"},"serviceRoleNames":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Deprecated: The service role names (use serviceRoles instead)"}},"title":"ServiceRolesWithIdDto","type":"object"},"RemoveUsersFromOrganizationRequestV2":{"properties":{"ids":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"IDs of the users that will be removed from the organization"}},"title":"RemoveUsersFromOrganizationRequestV2","type":"object"},"UserAndRolesDto":{"type":"object","properties":{"organizationRoles":{"items":{"$ref":"#/definitions/OrganizationRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"Organization Roles"},"userId":{"allowEmptyValue":false,"type":"string","description":"The user ID"},"lastName":{"allowEmptyValue":false,"type":"string","description":"Last Name"},"acct":{"allowEmptyValue":false,"type":"string","description":"The account identifier"},"email":{"allowEmptyValue":false,"type":"string","description":"The user's email"},"username":{"allowEmptyValue":false,"type":"string","description":"Username (Deprecated)"},"firstName":{"allowEmptyValue":false,"type":"string","description":"First Name"}},"title":"UserAndRolesDto","required":["firstName","lastName","organizationRoles","username"]},"RolesDto":{"properties":{"organizationRoles":{"items":{"$ref":"#/definitions/OrganizationRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"The organization roles"},"serviceRoles":{"items":{"$ref":"#/definitions/ServiceRolesWithIdDto"},"allowEmptyValue":false,"type":"array","description":"The services roles"}},"title":"RolesDto","type":"object"},"BaseUserDto":{"properties":{"userId":{"allowEmptyValue":false,"type":"string","description":"The user ID"},"acct":{"allowEmptyValue":false,"type":"string","description":"The account identifier"},"domain":{"allowEmptyValue":false,"type":"string","description":"The domain of the user. (will be vmwareid incase the user is VMware ID user)"},"email":{"allowEmptyValue":false,"type":"string","description":"The user's email"},"lastName":{"allowEmptyValue":false,"type":"string","description":"The last name of the user"},"idpId":{"allowEmptyValue":false,"type":"string","description":"The user's Identity Provider ID"},"username":{"allowEmptyValue":false,"type":"string","description":"Deprecated.\nThe user's username (email address)"},"accessible":{"description":"User is inaccessible if it will not be able to login with it's VMware ID credentials. Since the user is federated and will be redirected to it's Identity Provider","allowEmptyValue":false,"example":false,"type":"boolean"},"firstName":{"allowEmptyValue":false,"type":"string","description":"The first name of the user"}},"title":"BaseUserDto","type":"object"},"ServiceRoleSearchTermDto":{"type":"object","properties":{"roleName":{"type":"string"}},"title":"ServiceRoleSearchTermDto","required":["roleName"]},"OrganizationRolesResponse":{"properties":{"refLinks":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Links of references"},"orgRolesData":{"items":{"$ref":"#/definitions/RoleDto"},"allowEmptyValue":false,"type":"array","description":"Organization roles details"}},"title":"OrganizationRolesResponse","type":"object"},"SourceOrgDto":{"properties":{"displayName":{"type":"string"},"orgId":{"type":"string"},"shortId":{"type":"string"}},"title":"SourceOrgDto","type":"object"},"PaginatedResponseOfTosSignatureResponse":{"properties":{"totalResults":{"type":"string"},"prevToken":{"type":"string"},"nextToken":{"type":"string"},"results":{"items":{"$ref":"#/definitions/TosSignatureResponse"},"type":"array"}},"title":"PaginatedResponseOfTosSignatureResponse","type":"object"},"AssignRolesToMemberResponse":{"properties":{"message":{"allowEmptyValue":false,"type":"string","description":"Message that describes the set of failures, if the request failed."},"id":{"allowEmptyValue":false,"type":"string","description":"Member ID"}},"title":"AssignRolesToMemberResponse","type":"object"},"IdpUserDetailsDto":{"properties":{"zipCode":{"type":"string"},"address":{"type":"string"},"city":{"type":"string"},"company":{"type":"string"},"country":{"type":"string"},"state":{"type":"string"},"workPhone":{"type":"string"},"customerNumber":{"type":"string"}},"title":"IdpUserDetailsDto","type":"object"},"LeanUserDto":{"properties":{"email":{"allowEmptyValue":false,"type":"string","description":"The user's email"},"refLink":{"allowEmptyValue":false,"type":"string","description":"Document Ref Link"},"lastName":{"allowEmptyValue":false,"type":"string","description":"Last Name"},"acct":{"allowEmptyValue":false,"type":"string","description":"The account identifier"},"userProfile":{"$ref":"#/definitions/LeanUserProfileDto","allowEmptyValue":false,"description":"User profile will be set only with expand param"},"userId":{"allowEmptyValue":false,"type":"string","description":"The user ID"},"username":{"allowEmptyValue":false,"type":"string","description":"Username"},"firstName":{"allowEmptyValue":false,"type":"string","description":"First Name"}},"title":"LeanUserDto","type":"object"},"UserProfileMetadataDto":{"properties":{"acknowledgeAccountLinkingMessage":{"format":"int32","type":"integer"}},"title":"UserProfileMetadataDto","type":"object"},"LeanUserProfileDto":{"properties":{"language":{"type":"string"},"defaultOrgId":{"type":"string"},"locale":{"type":"string"},"linkedUserIdAccount":{"type":"string"},"customerNumber":{"type":"string"},"isFederated":{"type":"boolean"}},"title":"LeanUserProfileDto","type":"object"},"UserInfoDto":{"description":"User Info","properties":{"userOrgInfo":{"items":{"$ref":"#/definitions/UserOrgInfo"},"allowEmptyValue":false,"type":"array","description":"Organization and services roles"},"user":{"$ref":"#/definitions/UserDto"}},"title":"UserInfoDto","type":"object"},"SearchGroupsByRolesRequest":{"description":"Search groups by roles","properties":{"rolesSearchTerm":{"$ref":"#/definitions/RolesSearchTermDto","allowEmptyValue":false,"description":"Filter the groups based on the roles provided"},"pageLimit":{"description":"Maximum number of groups to return in response. Default value is 200","allowEmptyValue":false,"type":"integer","format":"int32"},"pageStart":{"description":"Start index for querying groups. Default value is 1","allowEmptyValue":false,"type":"integer","format":"int32"}},"title":"SearchGroupsByRolesRequest","type":"object"},"PagedPostResponseOfBaseUserDto":{"properties":{"startIndex":{"allowEmptyValue":false,"description":"Start index of the results - By default index starts at 1","format":"int32","example":5,"type":"integer"},"totalResults":{"allowEmptyValue":false,"description":"Total number of results","format":"int32","example":2000,"type":"integer"},"itemsPerPage":{"allowEmptyValue":false,"description":"Number of items per page - By default 200 items per page","format":"int32","example":25,"type":"integer"},"results":{"items":{"$ref":"#/definitions/BaseUserDto"},"allowEmptyValue":false,"type":"array","description":"List of results"}},"title":"PagedPostResponseOfBaseUserDto","type":"object"},"UserServiceRolesUpdateRequest":{"properties":{"rolesToAdd":{"items":{"$ref":"#/definitions/ServiceRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"Roles to add"},"roleNamesToRemove":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Deprecated: Role names to remove (use rolesToRemove instead)"},"rolesToRemove":{"items":{"$ref":"#/definitions/ServiceRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"Roles to remove"},"roleNamesToAdd":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Deprecated: Role names to add (use rolesToAdd instead)"},"serviceDefinitionLink":{"allowEmptyValue":false,"type":"string","description":"The service definition link"}},"title":"UserServiceRolesUpdateRequest","type":"object"},"UsersLocalePreferenceItem":{"properties":{"language":{"type":"string"},"locale":{"type":"string"}},"title":"UsersLocalePreferenceItem","type":"object"},"PublicKeyDto":{"description":"Public Key","properties":{"value":{"allowEmptyValue":false,"type":"string","description":"value"},"issuer":{"allowEmptyValue":false,"type":"string","description":"issuer"},"alg":{"allowEmptyValue":false,"type":"string","description":"alg"},"keys":{"items":{"$ref":"#/definitions/MapOfstringAndobject"},"allowEmptyValue":false,"type":"array","description":"keys"}},"title":"PublicKeyDto","type":"object"},"AssignRolesToMembersResponse":{"properties":{"failures":{"items":{"$ref":"#/definitions/AssignRolesToMemberResponse"},"allowEmptyValue":false,"type":"array","description":"List of roles that failed to be assigned"}},"title":"AssignRolesToMembersResponse","type":"object"},"ServiceRolesDto":{"properties":{"serviceRoleNames":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Deprecated: The service role names (use serviceRoles instead)"},"serviceRoles":{"items":{"$ref":"#/definitions/ServiceRoleBindingDto"},"allowEmptyValue":false,"type":"array","description":"The service roles"},"serviceDefinitionLink":{"type":"string"}},"title":"ServiceRolesDto","type":"object"},"RemoveUsersFromOrgRequest":{"properties":{"emails":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Emails"},"email":{"allowEmptyValue":false,"type":"string","description":"Email (Deprecated)"}},"title":"RemoveUsersFromOrgRequest","type":"object"},"SearchUsersInIdpRequest":{"properties":{"pageStart":{"description":"Start index for querying users. Default value is 1","allowEmptyValue":false,"type":"integer","format":"int32"},"idpId":{"allowEmptyValue":false,"type":"string","description":"Idp id to search users into it. Must not be null or blank."},"pageLimit":{"description":"Maximum number of users to return in response. Default value is 200","allowEmptyValue":false,"type":"integer","format":"int32"},"searchTerm":{"allowEmptyValue":false,"type":"string","description":"Search criteria to search for users by their first name, last name and email. Must not be null or blank."}},"title":"SearchUsersInIdpRequest","type":"object"},"ServiceScope":{"type":"object","properties":{"resource":{"type":"string"},"name":{"type":"string"}},"title":"ServiceScope","required":["name"]},"PartialSuccessResponseOfstring":{"properties":{"failed":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"The entities for which the operation fails"},"succeeded":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"The entities for which the operation is successful"}},"title":"PartialSuccessResponseOfstring","type":"object"},"RoleDto":{"type":"object","properties":{"refLink":{"type":"string"},"name":{"allowEmptyValue":false,"type":"string","description":"The role name"},"organizationLink":{"minLength":1,"maxLength":2147483647,"type":"string"},"displayName":{"readOnly":true,"allowEmptyValue":false,"type":"string","description":"The organization role display name"}},"title":"RoleDto","required":["organizationLink"]},"OrganizationDetailsDto":{"properties":{"displayName":{"type":"string"},"name":{"type":"string"},"id":{"type":"string"}},"title":"OrganizationDetailsDto","type":"object"},"UpdateClientServicesScopesRequest":{"properties":{"serviceDefinitionIdsToRemove":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Service definitions id's to remove | Will remove all available service roles from the client allowed scopes"},"serviceDefinitionIdsToAdd":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"Service definitions id's to add | Will add all available service roles to the client allowed scopes"}},"title":"UpdateClientServicesScopesRequest","type":"object"},"ClientSecretOwnerRotationRequest":{"properties":{"newClientSecret":{"allowEmptyValue":false,"maxLength":200,"description":"New OAuth Client Secret","minLength":8,"type":"string"},"secretRotationExpirationInSeconds":{"description":"The secret rotation expiration in seconds, the old client secret will be expired after it.","allowEmptyValue":true,"type":"integer","format":"int32"}},"title":"ClientSecretOwnerRotationRequest","type":"object"},"CreateCustomGroupRequest":{"type":"object","properties":{"name":{"minLength":0,"maxLength":200,"type":"string"},"description":{"minLength":0,"maxLength":500,"type":"string"}},"title":"CreateCustomGroupRequest","required":["name"]},"TosSignatureResponse":{"type":"object","properties":{"displayName":{"allowEmptyValue":false,"type":"string","description":"Signee full name"},"orgLink":{"allowEmptyValue":false,"type":"string","description":"Organization Link"},"clientUtcTimestamp":{"description":"Client side timestamp of signature","allowEmptyValue":false,"type":"integer","format":"int64"},"tosType":{"enum":["UNIVERSAL","PRE_SIGNED"],"allowEmptyValue":false,"type":"string","description":"TOS Type to be signed"},"serverUtcTimestamp":{"description":"Server side timestamp of signature","allowEmptyValue":false,"type":"integer","format":"int64"},"email":{"allowEmptyValue":false,"pattern":"(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])","format":"email","description":"Signee email","type":"string"}},"title":"TosSignatureResponse","required":["clientUtcTimestamp","displayName","email","orgLink"]},"UpdateOAuthClientRequest":{"properties":{"grantTypes":{"items":{"enum":["authorization_code","refresh_token","client_credentials"],"type":"string"},"allowEmptyValue":false,"type":"array","description":"OAuth grant types. If provided - will override all the existing grant types with provided values."},"maxGroupsInIdToken":{"description":"Maximum number of groups in id token","allowEmptyValue":false,"type":"integer","format":"int32"},"refreshTokenTTL":{"description":"OAuth refresh token TTL","allowEmptyValue":false,"type":"integer","format":"int32"},"redirectUris":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"OAuth client redirect URIs. If provided - will override all the existing redirect URIs with provided values."},"secret":{"allowEmptyValue":false,"type":"string","description":"OAuth client secret<br><strong>Important:</strong><br><strong>2.Changing the client secret via the client management APIs will reset existing secret rotation (meaning, the provided secret in the management APIs will be the only valid secret).</strong>"},"accessTokenTTL":{"description":"OAuth access token TTL","allowEmptyValue":false,"type":"integer","format":"int32"}},"title":"UpdateOAuthClientRequest","type":"object"},"SearchGroupsResponse":{"properties":{"results":{"items":{"$ref":"#/definitions/ExpandedGroupDto"},"type":"array"}},"title":"SearchGroupsResponse","type":"object"},"OrganizationDto":{"properties":{"displayName":{"allowEmptyValue":false,"maxLength":200,"description":"Display name","minLength":0,"type":"string"},"metadata":{"allowEmptyValue":false,"additionalProperties":{"type":"string"},"readOnly":true,"description":"Org Metadata","type":"object"},"parentRefLink":{"readOnly":true,"allowEmptyValue":false,"type":"string","description":"Document Ref Link of parent organization"},"name":{"readOnly":true,"allowEmptyValue":false,"type":"string","description":"Name"},"refLink":{"readOnly":true,"allowEmptyValue":false,"type":"string","description":"Document Ref Link"}},"title":"OrganizationDto","type":"object"},"PagedResponseOfGroupDto":{"properties":{"prevLink":{"description":"Relative path to previous page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=30&pageLimit=15","type":"string"},"nextLink":{"description":"Relative path to next page if exists. Not returned for POST requests","allowEmptyValue":false,"example":"/csp/serviceName/ResourceName?pageStart=60&pageLimit=15","type":"string"},"totalResults":{"allowEmptyValue":false,"description":"Total amount of results if available","format":"int32","example":2000,"type":"integer"},"results":{"items":{"$ref":"#/definitions/GroupDto"},"allowEmptyValue":false,"type":"array","description":"List of results"}},"title":"PagedResponseOfGroupDto","type":"object"},"PagedPostResponseOfExpandedGroupDto":{"properties":{"startIndex":{"allowEmptyValue":false,"description":"Start index of the results - By default index starts at 1","format":"int32","example":5,"type":"integer"},"totalResults":{"allowEmptyValue":false,"description":"Total number of results","format":"int32","example":2000,"type":"integer"},"itemsPerPage":{"allowEmptyValue":false,"description":"Number of items per page - By default 200 items per page","format":"int32","example":25,"type":"integer"},"results":{"items":{"$ref":"#/definitions/ExpandedGroupDto"},"allowEmptyValue":false,"type":"array","description":"List of results"}},"title":"PagedPostResponseOfExpandedGroupDto","type":"object"},"ServiceDef":{"properties":{"roles":{"items":{"$ref":"#/definitions/ServiceRoleBindingDto"},"type":"array"},"refLink":{"type":"string"},"serviceName":{"type":"string"},"serviceRoles":{"items":{"type":"string"},"type":"array"},"serviceDisplayName":{"type":"string"}},"title":"ServiceDef","type":"object"},"RemoveGroupsFromOrgRequest":{"properties":{"ids":{"items":{"type":"string"},"allowEmptyValue":false,"type":"array","description":"IDs of the members that will be removed from the organization"},"notifyUsersInGroups":{"description":"Publish email notification to group members","allowEmptyValue":false,"example":false,"type":"boolean"}},"title":"RemoveGroupsFromOrgRequest","type":"object"},"CreateOrganizationRequest":{"properties":{"displayName":{"allowEmptyValue":false,"type":"string","description":"Display name"}},"title":"CreateOrganizationRequest","type":"object"},"ServiceRoleBindingDto":{"properties":{"name":{"allowEmptyValue":false,"type":"string","description":"The role name"},"membershipType":{"allowEmptyValue":false,"readOnly":true,"enum":["DIRECT","GROUP"],"description":"Membership type of the member in the organization.\nDIRECT: if the member roles were assigned directly.\nGROUP: if the member roles were assigned through custom or enterprise group.","type":"string"},"resource":{"allowEmptyValue":false,"maxLength":200,"description":"The resource in which the service role is scoped to.\nThe resource will be embedded in the Access Token \"perms\" claim, as part of the service role, in the following format: \n\"external/{serviceDefinitionId}/{resource}/serviceDefinedRoleName}\"","minLength":0,"type":"string"}},"title":"ServiceRoleBindingDto","type":"object"}},"info":{"title":"Identity APIs","description":"A List of all identity and account management related APIs","version":"1.0"},"swagger":"2.0","consumes":["application/json"],"basePath":"/csp/gateway","paths":{"/am/api/services/clients/{clientId}":{"delete":{"description":"Deprecated. Use organization managed OAuth apps.\nDelete service oauth client.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Service Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthorized"},"200":{"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Delete a specific Service OAuth Client","operationId":"deleteOauthClientUsingDELETE","tags":["Service OAuth Client Management"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator","service_owner"]}],"deprecated":true,"parameters":[{"required":true,"in":"path","name":"clientId","description":"Client ID","type":"string"}]},"patch":{"description":"Deprecated. Use organization managed OAuth apps.\nUpdate service oauth client. This is a partial update, only non null fields will be updated.<br><strong>Important:</strong><br><strong>2.Changing the client secret via the client management APIs will reset existing secret rotation (meaning, the provided secret in the management APIs will be the only valid secret).</strong>\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Service Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"404":{"description":"OAuth client not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/AuthClientDto"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Update Service OAuth Client","operationId":"patchOauthClientUsingPATCH","tags":["Service OAuth Client Management"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator","service_owner"]}],"deprecated":true,"parameters":[{"required":true,"in":"path","name":"clientId","description":"Client ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/UpdateOAuthClientRequest"},"required":true}]},"get":{"description":"Deprecated. Use organization managed OAuth apps.\nGet service oauth client.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Service Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","responses":{"404":{"description":"OAuth client not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/AuthClientDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Service OAuth Client","operationId":"getOauthClientUsingGET","tags":["Service OAuth Client Management"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator","service_owner"]}],"deprecated":true,"parameters":[{"required":true,"in":"path","name":"clientId","description":"Client ID","type":"string"}]}},"/am/api/users/{acct}":{"get":{"responses":{"404":{"description":"User not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/LeanUserDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get User","operationId":"getUserUsingGET","tags":["User"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator","service_owner"]}],"description":"Get user record (by user account identifier). If expandProfile is passed in the request, user profile information will be returned.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Service Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"acct","description":"User Account Identifier","type":"string"},{"required":false,"in":"query","name":"expandProfile","description":"Indicates if the response should be expanded with the user profile, the value is ignored, only the existence of parameter is checked.","type":"string"}]}},"/am/api/v2/users/{userId}":{"get":{"responses":{"404":{"description":"User not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/GetUserByUserIdResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get User","operationId":"getUserUsingGET_1","tags":["User V2"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator","service_owner"]}],"description":"Get user record (by user id). If expandProfile is passed in the request, user profile information will be returned.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Service Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"userId","description":"User ID matches the 'sub' claim value in the ID/Access token of a user","type":"string"},{"required":false,"in":"query","name":"expandProfile","description":"Indicates if the response should be expanded with the user profile, the value is ignored, only the existence of parameter is checked.","type":"string"}]}},"/am/api/loggedin/user/orgs":{"get":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthenticated User"},"404":{"description":"No user with given token exists"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/OrganizationsDto"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Get Principal User Organizations","operationId":"getLoggedinUserOrgsUsingGET","tags":["Principal User"],"security":[{"token":["global"]}],"description":"Get organizations of principal user.<br>Principal user is identified via a token. The token should be passed in a header called csp-auth-token.If expand parameter is passed, detailed information for the organizations will be returned.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| All Roles | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":false,"in":"query","name":"expand","description":"Indicates if response should be expanded, value is ignored - only existence of parameter is checked","type":"string"}]}},"/am/api/orgs/{orgId}/service-clients":{"post":{"responses":{"400":{"description":"One or more clients already part of the organization | Not all client ids belong to service definition"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | Clients [...] not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/AssignRolesToMembersResponse"},"description":"Partial Success. Please read the response to see which client ids have failed to assign."},"500":{"description":"Internal Server Error"}},"summary":"Assign Service Roles To Service Clients On Organization","operationId":"assignServiceRolesToServiceClientsUsingPOST","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["service_owner","platform_operator"]}],"description":"Assign service roles to service clients in the context of the organization\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Service Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"Deprecated: serviceRoleNames - use serviceRoles instead","in":"body","name":"request","schema":{"$ref":"#/definitions/AssignServiceRolesToServiceClientsRequest"},"required":true}]},"delete":{"responses":{"400":{"description":"Not all client ids belong to service definition"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | Clients [...] not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/PartialSuccessResponseOfstring"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Remove Service Clients From Organization","operationId":"removeServiceClientsFromOrganizationUsingDELETE","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["service_owner","platform_operator"]}],"description":"Remove service clients from organization\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Service Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/RemoveServiceClientsFromOrgRequest"},"required":true}]}},"/am/api/loggedin/user/orgs/{orgId}/service-roles":{"get":{"responses":{"404":{"description":"No user with given token exists | Organization not found"},"401":{"description":"Unauthenticated User"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/UserServiceRolesResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Principal User Service Roles Within the Specified Organization","operationId":"getLoggedInUserServiceRolesOnOrgUsingGET","tags":["Principal User"],"security":[{"token":["global"]}],"description":"Get principal user service roles within the specified organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| All Roles | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":false,"in":"query","name":"serviceDefinitionLink","description":"Service definition link","type":"string"}]}},"/am/api/auth/token-public-key":{"get":{"responses":{"400":{"description":"Invalid format of public key!"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/PublicKeyDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get list of public keys in jwks format","operationId":"getPublicKeyUsingGET","tags":["Authentication"],"security":[{"token":["global"]}],"description":"Returns a list of public keys in jwks format. You should use this keys in your application to validate that the access-token is valid. The KID fields in the access-token is the ID of the public key. The PEM format is deprecated as it returns only the current active public key\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Anonymous | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"enum":["pem","jwks"],"description":"The format for the key. Use the 'jwks' value for format. The PEM format is deprecated.","required":false,"in":"query","name":"format","default":"pem","type":"string"}]}},"/am/api/users/locale-preferences":{"post":{"responses":{"400":{"description":"Empty user list | invalid email address | more than 200 usernames in request"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/UsersLocalePreferencesResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get users locale preferences","operationId":"getUsersLocalePreferencesUsingPOST","tags":["User"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator"]}],"description":"Limited to up to 200 users. Pay attention: Default preferences will return for users without preferences or users which does not exist.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"description":"usersLocalePreferencesRequest","in":"body","name":"usersLocalePreferencesRequest","schema":{"$ref":"#/definitions/UsersLocalePreferencesRequest"},"required":true}]}},"/am/api/tos/signatures":{"post":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/RefLinkDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Sign Terms of Service","operationId":"signTosUsingPOST","tags":["Terms Of Service"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator","org_owner"]}],"description":"Sign terms of service.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"description":"tosSignatureRequest","in":"body","name":"tosSignatureRequest","schema":{"$ref":"#/definitions/TosSignatureCreationRequest"},"required":true}]},"get":{"responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthorized"},"200":{"schema":{"$ref":"#/definitions/PaginatedResponseOfTosSignatureResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Terms of Service Signatures","operationId":"getTosSignaturesUsingGET","tags":["Terms Of Service"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get terms of service signatures.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":false,"in":"query","name":"orgLink","description":"Organization Link","type":"string"},{"required":false,"in":"query","name":"email","description":"Email address","type":"string"},{"required":false,"in":"query","name":"displayName","description":"Signee display name","type":"string"},{"required":false,"in":"query","name":"pageToken","description":"Page Token","type":"string"}]}},"/am/api/orgs/{orgId}":{"delete":{"description":"(Experimental API) Delete organization and all its related entities.\norg_owner is authorized in non-production environments.\nplatform_operator is authorized in all environments\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","responses":{"404":{"description":"Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Delete Organization","operationId":"deleteOrgUsingDELETE","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"deprecated":true,"parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"}]},"patch":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/RefLinkDto"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Update Organization","operationId":"patchOrgUsingPATCH","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Update organization details.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"Organization details to update","in":"body","name":"request","schema":{"$ref":"#/definitions/OrganizationDto"},"required":true}]},"get":{"responses":{"404":{"description":"Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/OrganizationDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Organization","operationId":"getOrgUsingGET","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_member","org_owner","platform_operator"]}],"description":"Get organization details.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Member | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"}]}},"/am/api/.well-known/openid-configuration":{"get":{"summary":"Get OpenId Connect Discovery Endpoint","operationId":"getOpenIdDiscoveryEndpointUsingGET","tags":["Open ID Connect (OIDC) Endpoints"],"security":[{"token":["global"]}],"responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthorized"},"200":{"schema":{"$ref":"#/definitions/CspOpenIdConfigurationDto"},"description":"OK"},"403":{"description":"Forbidden"}},"description":"Get discovery endpoint meta data as described in https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata. OpenID Connect 1.0 is a simple identity layer on top of the OAuth 2.0 protocol. It enables Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in an interoperable and REST-like manner.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Anonymous | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n"}},"/am/api/v2/users/search":{"post":{"responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthorized"},"200":{"schema":{"$ref":"#/definitions/PagedPostResponseOfBaseUserDto"},"description":"OK"},"403":{"description":"Only platform operator or read-only operator can search in an IDP that they do not belong to."}},"summary":"Search users in idp by names and email","operationId":"searchUsersInIdpByNamesAndEmailUsingPOST","tags":["User V2"],"security":[{"token":["global"]}],"description":"Search users in idp by names and email.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| All Roles | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"description":"searchUsersInIdpRequest","in":"body","name":"searchUsersInIdpRequest","schema":{"$ref":"#/definitions/SearchUsersInIdpRequest"},"required":true}]}},"/am/api/orgs/{orgId}/service-clients/{clientId}":{"patch":{"responses":{"400":{"description":"Client not part of the organization"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | Client not found"},"403":{"description":"Forbidden"},"200":{"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Update Service Client with Service Roles On an Organization","operationId":"updateServiceClientRolesOnOrganizationUsingPATCH","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["service_owner","platform_operator"]}],"description":"Update service client service with roles on an organization\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Service Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"clientId","description":"Client ID","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"Deprecated: roleNamesToAdd - use rolesToAdd instead. Deprecated: roleNamesToRemove - use rolesToRemove instead","in":"body","name":"request","schema":{"$ref":"#/definitions/UpdateServiceRolesRequest"},"required":true}]}},"/am/api/orgs/invitations/{acct}":{"get":{"responses":{"404":{"description":"User not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"items":{"$ref":"#/definitions/UserOrganizationInvitationResponse"},"type":"array"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get All User Invitations","operationId":"getAllInvitationsForUserUsingGET","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator"]}],"description":"Get all invitations to an organization of specific user. If expand parameter is passed to the request roles in the organization will be also returned\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"acct","description":"User account identifier to fetch invitations for","type":"string"},{"required":false,"in":"query","name":"expand","description":"Indicates if response should be expanded, value is ignored - only existence of parameter is checked","type":"string"}]}},"/am/api/v2/users/{userId}/orgs":{"get":{"responses":{"404":{"description":"User not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/RefLinksDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get User Organizations","operationId":"getUserOrgsUsingGET_1","tags":["User V2"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator"]}],"description":"Get a list of organizations that the user is a member of.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"userId","description":"User ID matches the 'sub' claim value in the ID/Access token of a user","type":"string"}]}},"/am/api/orgs/{orgId}/groups/search":{"post":{"responses":{"404":{"description":"Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/PagedPostResponseOfExpandedGroupDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get All Groups Within Organization that have certain role(s)","operationId":"getGroupsWithinOrgUsingPOST","tags":["Organization Groups"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","org_member","platform_operator"]}],"description":" Get all groups within organization that have certain role(s), including subgroups if they have a role assigned to their parent group (which affects them as well).<br>Paginated results - by default start index of results is 1 and default number of search results per page is 200.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Member | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/SearchGroupsByRolesRequest"},"required":true}]}},"/am/api/v2/orgs/{orgId}/users":{"delete":{"responses":{"400":{"description":"Cannot remove more than 20 users at the same time | Cannot remove the last org owner"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | Users [...] not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/PartialSuccessResponseOfstring"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Remove Users From Organization V2","operationId":"removeUsersFromOrgUsingDELETE","tags":["Organization V2"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Remove users from organization by user ids.<br>User ids will be of the format <IdpId>:<UUID> e.g. vmware.com:820e7ca5-4024-407e-8db4-f552d5d03403.<br>Pay attention: in case of partial success the caller must read the response to see which users have not been added successfully\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/RemoveUsersFromOrganizationRequestV2"},"required":true}]},"get":{"responses":{"404":{"description":"Organization not found | Service not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/PagedResponseOfExpandedTypedUserDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Organization Users V2","operationId":"getPaginatedOrgUsersInfoUsingGET","tags":["Organization V2"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","org_member","platform_operator"]}],"description":"Get response encapsulating organization users.<br>Fetched page is according to the page start and page limit passed as optional parameters.<br>Optionally provide \"serviceDefinitionId\" to filter users having access to a service. Organization Members are permitted to see only basic user information. Organization owners and read-only administrators will see also organization and service roles of the users and userProfile if expandProfile is passed.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Member | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":false,"in":"query","name":"serviceDefinitionId","description":"Service definition id used to filter users having access to the service.","type":"string"},{"format":"int32","description":"Start index, the default value is 1","required":false,"in":"query","name":"pageStart","default":1,"type":"integer"},{"format":"int32","description":"Maximum number of users to return in response, the default value is 200","required":false,"in":"query","name":"pageLimit","default":200,"type":"integer"},{"required":false,"in":"query","name":"expandProfile","description":"Indicates if the response should be expanded with the user profile, the value is ignored, only the existence of parameter is checked.","type":"string"}]}},"/am/api/v2/users/{userId}/orgs/{orgId}/service-roles":{"patch":{"description":"Update service roles of a user for an organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"404":{"description":"User not found | Organization not found"},"403":{"description":"Forbidden"},"200":{"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Update User Organization Service Roles","operationId":"patchUserServiceRolesUsingPATCH_1","tags":["User V2"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"deprecated":true,"parameters":[{"required":true,"in":"path","name":"userId","description":"User ID matches the 'sub' claim value in the ID/Access token of a user","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"User service roles update details. Deprecated: roleNamesToAdd - use rolesToAdd instead. Deprecated: Role names to remove - use rolesToRemove instead","in":"body","name":"userServiceRolesUpdateRequest","schema":{"$ref":"#/definitions/UserServiceRolesUpdateRequest"},"required":true}]},"get":{"responses":{"404":{"description":"User not found | Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/UserServiceRolesResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get User Organization Service Roles","operationId":"getUserServiceRolesOnOrgUsingGET_1","tags":["User V2"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get user service roles in an organization.<br> The query parameter 'serviceDefinitionLink' is used for filtering for specific service definition.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"userId","description":"User ID matches the 'sub' claim value in the ID/Access token of a user","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":false,"in":"query","name":"serviceDefinitionLink","description":"Service definition link","type":"string"}]}},"/am/api/loggedin/user/default-org":{"post":{"responses":{"400":{"description":"The user is not member of the organization | Organization reference link is mandatory"},"401":{"description":"Unauthenticated User"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/RefLinkDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Set Default Organization for Principal User","operationId":"setDefaultOrgUsingPOST","tags":["Principal User"],"security":[{"token":["global"]}],"description":"Set default organization for principal user.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| All Roles | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"description":"Set default organization request","in":"body","name":"orgRefLink","schema":{"$ref":"#/definitions/RefLinkDto"},"required":true}]},"get":{"summary":"Get Default Organization for Principal User","operationId":"getDefaultOrgUsingGET","tags":["Principal User"],"security":[{"token":["global"]}],"responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthenticated User"},"200":{"schema":{"$ref":"#/definitions/RefLinkDto"},"description":"OK"},"403":{"description":"Forbidden"}},"description":"Get default organization for principal user.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| All Roles | &#x2714;&#xFE0F; | &#x0274c; |\n"}},"/am/api/users/{acct}/orgs":{"get":{"responses":{"404":{"description":"User not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/RefLinksDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get User Organizations","operationId":"getUserOrgsUsingGET","tags":["User"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator"]}],"description":"Get a list of organizations that the user is a member of.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"acct","description":"User Account Identifier","type":"string"}]}},"/am/api/orgs/{orgId}/oauth-apps":{"delete":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthenticated User"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/PartialSuccessResponseOfstring"},"description":"Partial Success. Please read the response to see which apps haven't been removed."},"403":{"description":"Forbidden"}},"summary":"Delete Organization Managed OAuth Apps","operationId":"deleteOrgOAuthAppsUsingDELETE","tags":["Organization Managed OAuth Apps (Clients)"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","service_owner","developer","platform_operator"]}],"description":"Delete Organization Managed OAuth Apps. <br>Pay attention: in case of partial success the caller must read the response to see which apps haven't been removed\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Service Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Developer | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/DeleteClientsRequest"},"required":true}]},"post":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthenticated User"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/ClientIdAndSecretResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Create Organization Managed OAuth App","operationId":"createOrgOAuthAppUsingPOST","tags":["Organization Managed OAuth Apps (Clients)"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","service_owner","developer","platform_operator"]}],"description":"Create Organization Managed OAuth App. The created app will be owned by the organization.<br>Client ID and Client Secret are generated automatically if not provided. Clients can be created with open redirect Urls, using allowOpenRedirectUris = true. In this case, the redirectUris field must not be specified. Such clients will allow redirection to any custom url. This feature can only be used in non-production environments.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Service Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Developer | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/OrgOAuthAppRequest"},"required":true}]},"get":{"responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthenticated User"},"200":{"schema":{"$ref":"#/definitions/PagedResponseOfOrgOAuthAppResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get All Organization Managed OAuth Apps","operationId":"getAllOrgOAuthAppsUsingGET","tags":["Organization Managed OAuth Apps (Clients)"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","service_owner","developer","platform_operator"]}],"description":"Get all Organization Managed OAuth Apps that were created and are owned by the organization. Default start index is 0, default page size is 15.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Service Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Developer | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"format":"int32","description":"Start index","required":false,"in":"query","name":"pageStart","default":0,"type":"integer"},{"format":"int32","description":"Page size","required":false,"in":"query","name":"pageLimit","default":15,"type":"integer"},{"required":false,"in":"query","name":"searchTerm","description":"A search term to be used to filter OAuth apps by either display name or client id","type":"string"}]}},"/am/api/orgs/{orgId}/sub-orgs":{"get":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"403":{"description":"Forbidden"},"201":{"schema":{"$ref":"#/definitions/PagedResponseOfOrganizationDto"},"description":"Created"}},"summary":"Get Sub-organizations","operationId":"getSubOrganizationsUsingGET","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","msp_user","platform_operator"]}],"description":"Get sub-organizations of the specified parent organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n| Managed Service Provider | &#x2714;&#xFE0F; | &#x0274c; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":false,"in":"query","name":"tag","description":"Filter results by organization tag","type":"string"}]}},"/am/api/v2/users/{userId}/orgs/{orgId}/info":{"get":{"responses":{"404":{"description":"User not found | Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/UserInfoDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get User Organization Info","operationId":"getUserInfoUsingGET_1","tags":["User V2"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get user information for a specific organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"userId","description":"User ID matches the 'sub' claim value in the ID/Access token of a user","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"}]}},"/am/api/orgs/{orgId}/groups/{groupId}/groups":{"get":{"responses":{"400":{"description":"Group not part of the organization"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | Group not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/PagedResponseOfGroupDto"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Get nested enterprise groups from custom group","operationId":"getNestedEnterpriseGroupsFromCustomGroupUsingGET","tags":["Organization Groups"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"groupId","description":"Group ID","type":"string"},{"format":"int32","description":"Start index, the default value is 1","required":false,"in":"query","name":"pageStart","default":1,"type":"integer"},{"format":"int32","description":"Page size, the default value is 200","required":false,"in":"query","name":"pageLimit","default":200,"type":"integer"},{"required":false,"in":"query","name":"searchTerm","description":"Search criteria: the string to be search within the group display name","type":"string"}]}},"/am/api/tos/signatures/{signatureId}":{"get":{"responses":{"404":{"description":"Tos signature not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/TosSignatureResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Terms of Service Signature","operationId":"getTosSignatureUsingGET","tags":["Terms Of Service"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator"]}],"description":"Get terms of service signature.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"signatureId","description":"Signature ID","type":"string"}]}},"/am/api/users/{acct}/orgs/{orgId}/service-roles":{"patch":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"404":{"description":"User not found | Organization not found"},"403":{"description":"Forbidden"},"200":{"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Update User Organization Service Roles","operationId":"patchUserServiceRolesUsingPATCH","tags":["User"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Update service roles of a user for an organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"acct","description":"User Account Identifier","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"User details. Deprecated: roleNamesToAdd - use rolesToAdd instead. Deprecated: roleNamesToRemove - use rolesToRemove instead","in":"body","name":"userServiceRolesUpdateRequest","schema":{"$ref":"#/definitions/UserServiceRolesUpdateRequest"},"required":true}]},"get":{"responses":{"404":{"description":"User not found | Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/UserServiceRolesResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get User Organization Service Roles","operationId":"getUserServiceRolesOnOrgUsingGET","tags":["User"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get user service roles in an organization.<br> The query parameter 'serviceDefinitionLink' is used for filtering for specific service definition.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"acct","description":"User Account Identifier","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":false,"in":"query","name":"serviceDefinitionLink","description":"Service definition link","type":"string"}]}},"/am/api/orgs/{orgId}/roles":{"get":{"responses":{"404":{"description":"Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/OrganizationRolesResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Organization Roles","operationId":"getOrgRolesUsingGET","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","org_member","platform_operator"]}],"description":"Get list of organization roles. Expand parameter is supported. If it is true, organization roles will be returned in the response.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Member | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":false,"in":"query","name":"name","description":"Role name (or comma separated list of role names","type":"string"},{"required":false,"in":"query","name":"expand","description":"Indicates if response should be expanded, value is ignored - only existence of parameter is checked","type":"boolean"}]}},"/am/api/services/clients":{"post":{"description":"Deprecated. Use organization managed OAuth apps.\nCreate service oauth client.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Service Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"409":{"description":"OAuth client already exists"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/AuthClientDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Create Service OAuth Client","operationId":"createServiceOauthClientUsingPOST","tags":["Service OAuth Client Management"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator","service_owner"]}],"deprecated":true,"parameters":[{"description":"authClient","in":"body","name":"authClient","schema":{"$ref":"#/definitions/AuthClientDto"},"required":true}]},"patch":{"description":"Deprecated. Use organization managed OAuth apps.\nPatch service oauth clients allowed scopes.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Service Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Update Service OAuth Clients Allowed Scopes","operationId":"patchOauthClientsAllowedScopesUsingPATCH","tags":["Service OAuth Client Management"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator","service_owner"]}],"deprecated":true,"parameters":[{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/UpdateAuthClientsScopesRequest"},"required":true}]}},"/am/api/clients/{clientId}/secrets":{"post":{"responses":{"400":{"description":"Authorization header must be specified | Invalid authorization header. Missing \"Basic\" prefix | Invalid authorization header | Bad Request - Client ID in path doesn't match the Client ID in the Basic Authorization Header. | Bad Request - New client secret must be different from the existing client secret"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Sets a new client secret for the given client via client rotation","operationId":"setNewClientSecretViaClientRotationUsingPOST","tags":["OAuth Client"],"security":[{"token":["global"]}],"description":"This call is protected by HTTP Basic authentication with client_id and client_secret of the same client. Once a 'newClientSecret' is set, both the old and the new secret can be used.<br><strong>Important:</strong><br><strong>1.The old client secret will be expired after 48 hours.</strong><br><strong>2.Changing the client secret via the client management APIs will reset existing secret rotation (meaning, the provided secret in the management APIs will be the only valid secret).</strong>\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Anonymous | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"clientId","description":"Client ID","type":"string"},{"required":false,"in":"header","name":"authorization","description":"Basic auth with client credentials [Basic Base64_Encode(client_id:client_secret)]","type":"string"},{"description":"clientSecretRotationRequest","in":"body","name":"clientSecretRotationRequest","schema":{"$ref":"#/definitions/ClientSecretRotationRequest"},"required":true}]},"delete":{"responses":{"400":{"description":"Authorization header must be specified | Invalid authorization header. Missing \"Basic\" prefix | Invalid authorization header | Bad Request - Client ID in path doesn't match the Client ID in the Basic Authorization Header."},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Delete old client secret via client rotation","operationId":"deleteOldClientSecretViaClientRotationUsingDELETE","tags":["OAuth Client"],"security":[{"token":["global"]}],"description":"This call is protected by HTTP Basic authentication with client_id and client_secret(new) of the same client. Once the rotation is done, the new secret will become the client's only valid secret.<br><strong>Important:</strong><br><strong>1.The old client secret will be expired after 48 hours.</strong><br><strong>2.Changing the client secret via the client management APIs will reset existing secret rotation (meaning, the provided secret in the management APIs will be the only valid secret).</strong>\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Anonymous | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"clientId","description":"Client ID","type":"string"},{"required":false,"in":"header","name":"authorization","description":"Basic auth with client credentials [Basic Base64_Encode(client_id:client_secret)]","type":"string"}]}},"/am/api/orgs/{orgId}/users/search":{"post":{"responses":{"400":{"description":"At least one role search term must be specified"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/PagedPostResponseOfExpandedTypedUserDto"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Search users by roles","operationId":"searchOrgUsersByRolesUsingPOST","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Search all users who have <b>at least one</b> of the specified roles.<br>Paginated results - by default <b>start index</b> of results is 1 and default number of search results per page is 200.<br>Searching access restricted to Organization Owners and Read-only operators.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/SearchUsersByRolesRequest"},"required":true}]},"get":{"responses":{"400":{"description":"userSearchTerm query parameter must be specified"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/SearchUsersResponse"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Search users in organization","operationId":"searchOrgUsersUsingGET","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_member","org_owner","platform_operator"]}],"description":"Search users in organization having username, firstName, lastName or email which \"contains\" search term.<br>e.g. search for \"test\" will return test@vmware.com if test@vmware.com is part of the organization.<br>Search results limited to first 20 results. Please refine the search term for accurate results.<br>Organization members will receive basic user information. Organization owners will additionally receive role details of the users.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Member | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"query","name":"userSearchTerm","description":"The string to be searched within email or firstName or lastName or username","type":"string"},{"required":false,"in":"query","name":"expandProfile","description":"Indicates if the response should be expanded with the user profile, the value is ignored, only the existence of parameter is checked.","type":"string"}]}},"/am/api/auth/authorize":{"post":{"summary":"Exchanges one of the following grants: authorization_code, refresh_token or client_credentials for access token","operationId":"getTokenForAuthGrantTypeUsingPOST","tags":["Authentication"],"security":[{"token":["global"]}],"produces":["application/json"],"parameters":[{"required":false,"in":"header","name":"authorization","description":"Basic auth client credentials [Basic Base64_Encode(client_id:client_secret)].\nNote: when using <strong>Public OAuth clients</strong>, Authorization is required using the format 'Basic Base64_Encode(client_id:)' with empty client_secret.\n","type":"string"},{"enum":["authorization_code","refresh_token","client_credentials","password"],"required":true,"in":"formData","name":"grant_type","description":"The grant type as per OAuth2 specification.","type":"string"},{"required":false,"in":"formData","name":"code","description":"Auth code parameter. Mandatory for grant_type 'authorization_code'","type":"string"},{"required":false,"in":"formData","name":"redirect_uri","description":"Service redirect uri. Mandatory for grant_type 'authorization_code'","type":"string"},{"required":false,"in":"formData","name":"refresh_token","description":"Refresh token parameter. Available for grant_type 'refresh_token'","type":"string"},{"required":false,"in":"formData","name":"scope","description":"The list of scopes separated by a space and is URL encoded. Scope parameter can be used to request different scopes. The requested scope must not include any scope not originally granted. If omitted, the returned scopes will be the ones originally granted. ","type":"string"},{"required":false,"in":"formData","name":"orgId","description":"Organization ID. Available for grant_type 'client_credentials', 'password'","type":"string"},{"required":false,"in":"formData","name":"username","description":"The username value corresponds to the value used when login to the system. Mandatory and available for grant_type 'password'","type":"string"},{"required":false,"in":"formData","name":"code_verifier","description":"A high-entropy cryptographic random key using the characters [A-Z] / [a-z] / [0-9] / '-' / '.' / '_' / '~' with a minimum length of 43 characters and a maximum length of 128 characters which was used to generate 'code_challenge' and obtain the authorization code. Required if PKCE was used in the authorization code grant request. For more information, refer the PKCE RFC at https://tools.ietf.org/html/rfc7636","type":"string"},{"required":false,"in":"formData","name":"password","description":"The password of the user for whom the token should be returned. Mandatory and available for grant_type 'password'","type":"string"},{"format":"int32","required":false,"in":"formData","name":"accessTokenValiditySeconds","description":"The validity in seconds for the access token. If a value lower than the client's accessTokenValiditySeconds is provided, the provided accessTokenValiditySeconds value will be used. Else if an invalid value, a value higher than the client's accessTokenValiditySeconds, or no value is provided, then the client's accessTokenValiditySeconds will be used. For example if the client's default accessTokenValiditySeconds is 5 minutes ie 300 seconds, to get a token with only one minute validity provide accessTokenValiditySeconds as 60","type":"integer"},{"format":"int32","required":false,"in":"formData","name":"refreshTokenValiditySeconds","description":"The validity in seconds for the refresh token. If a value lower than the client's refreshTokenValiditySeconds is provided, the provided refreshTokenValiditySeconds value will be used. Else if an invalid value, a value higher than the client's refreshTokenValiditySeconds, or no value is provided, then the client's refreshTokenValiditySeconds will be used. For example if the client's default refreshTokenValiditySeconds is 30 minutes ie 1800 seconds, to get a token with one hour validity provide refreshTokenValiditySeconds as 3600","type":"integer"},{"format":"int32","required":false,"in":"formData","name":"maxGroupsInIdToken","description":"The maximum number of groups allowed in the ID token. If the value provided is lower than the client’s registered 'maxGroupsInIdToken’, the provided value will be used, else if an invalid value, a value higher than the client’s 'maxGroupsInIdToken’, or no value is provided, then the client’s ‘maxGroupsInIdToken’ will be used. This is only relevant if the client has registered groups related scopes such as 'group_names’, 'group_ids’, ‘grpn://…’ or 'grpid://…’.","type":"integer"}],"consumes":["application/x-www-form-urlencoded"],"description":"This end-point exchanges one of the following grants: authorization_code, refresh_token or client_credentials for access token\n1. Include the parameters using application/x-www-form-urlencoded format in the HTTP request body.\n2. Include Basic Base64_Encode(client_id:client_secret) value in the HTTP authorization header.\nNote: when using <strong>Public OAuth clients</strong>, Authorization is required using the format 'Basic Base64_Encode(client_id:)' with empty client_secret.\nOrganization ID parameter notes: when organization id is missing from the request the default organization will be used.\n1. Upon password grant type, user default organization will be set if available.\n2. Upon client_credentials grant type, the organization who own the client will be set if available.\n\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Anonymous | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","responses":{"400":{"description":"Invalid request body | In case of expired refresh_token."},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/AccessTokenDto"},"description":"OK"},"500":{"description":"Internal Server Error"}}}},"/am/api/orgs/{orgId}/groups":{"delete":{"responses":{"404":{"description":"Organization not found | Groups [...] not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/RemoveGroupsFromOrganizationResponseOfstring"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Remove Groups From Organization","operationId":"removeGroupsFromOrganizationUsingDELETE","tags":["Organization Groups"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Remove groups from organization.<br>Note:\n 1. Removing an organization custom group permanently deletes the group.\n2. DEPRECATED: Response field failed will be deprecated. You can use the field failures instead.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/RemoveGroupsFromOrgRequest"},"required":true}]},"post":{"responses":{"400":{"description":"The Group with that name already exists"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/IdDto"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Create Custom Group","operationId":"createCustomGroupUsingPOST","tags":["Organization Groups"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Create a <b>new</b> custom group in organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/CreateCustomGroupRequest"},"required":true}]},"get":{"responses":{"404":{"description":"Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/PagedResponseOfExpandedGroupDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Organization Groups","operationId":"getOrganizationGroupsUsingGET","tags":["Organization Groups"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get groups of a specific organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"format":"int32","description":"Start index","required":false,"in":"query","name":"pageStart","default":1,"type":"integer"},{"format":"int32","description":"Page size","required":false,"in":"query","name":"pageLimit","default":200,"type":"integer"}]}},"/am/api/auth/revoke":{"post":{"summary":"This end-point revokes a token","operationId":"revokeTokenUsingPOST","tags":["Authentication"],"security":[{"token":["global"]}],"produces":["application/json"],"parameters":[{"required":false,"in":"header","name":"authorization","description":"Basic auth client credentials [Basic Base64_Encode(client_id:client_secret)].\nNote: when using <strong>Public OAuth clients</strong>, Authorization is required using the format 'Basic Base64_Encode(client_id:)' with empty client_secret.\n","type":"string"},{"required":false,"in":"formData","name":"token","description":"Token","type":"string"},{"enum":["refresh_token"],"required":false,"in":"formData","name":"token_type_hint","description":"Token type hint. In case not provided, refresh_token will be used.","type":"string"}],"consumes":["application/x-www-form-urlencoded"],"description":"Only refresh tokens are supported at this time.\n1. Include the parameters using application/x-www-form-urlencoded format in the HTTP request body.\n2. Include Basic Base64_Encode(client_id:client_secret) value in the HTTP authorization header.\nNote: when using <strong>Public OAuth clients</strong>, Authorization is required using the format 'Basic Base64_Encode(client_id:)' with empty client_secret.\n\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Anonymous | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthorized"},"200":{"description":"OK"},"403":{"description":"Forbidden"}}}},"/am/api/services/clients/{clientId}/services-scopes":{"patch":{"description":"Deprecated. Use organization managed OAuth apps.\nFor each specified service in the request, add/remove the service currently available roles to the client allowed scopes.<br>Notes:<br>1. If service roles are changed in the service definition, it will not be automatically reflected in the client allowed scopes.<br>2. The service client owner roles cannot be added/removed since they will be automatically updated (When roles are added/removed from the service definition itself).\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Service Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","responses":{"400":{"description":"Update allowed scopes for the client service owner itself is not allowed | Services [...] do not exist"},"401":{"description":"Unauthorized"},"404":{"description":"Client not found"},"403":{"description":"Forbidden"},"200":{"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"(BETA) Update Service Client Allowed scopes with the specified service/s defined roles","operationId":"updateClientServicesAllowedScopesUsingPATCH","tags":["Service OAuth Client Management"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator","service_owner"]}],"deprecated":true,"parameters":[{"required":true,"in":"path","name":"clientId","description":"Client ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/UpdateClientServicesScopesRequest"},"required":true}]}},"/am/api/auth/logout":{"post":{"responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthorized"},"200":{"schema":{"$ref":"#/definitions/UrlResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Return the identity provider logout url","operationId":"newLogoutUsingPOST","tags":["Authentication"],"security":[{"token":["global"]}],"description":"This end-point returns the identity provider logout url.\nIn order to logout, an explicit redirect to this url is needed\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Anonymous | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"description":"ID Token","in":"body","name":"idTokenDto","schema":{"$ref":"#/definitions/IdTokenDto"},"required":false}]}},"/am/api/orgs/{orgId}/users":{"delete":{"responses":{"400":{"description":"Cannot remove more than 20 users at the same time | Cannot remove the last org owner"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | Users [...] not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/PartialSuccessResponseOfExtendedUsernameDto"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Remove Users From Organization","operationId":"removeUsersFromOrganizationUsingDELETE","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Remove users from organization.<br>Pay attention: in case of partial success the caller must read the response to see which users have not been added successfully\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/RemoveUsersFromOrganizationRequest"},"required":true}]},"patch":{"description":"Detach users from a specific organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/PartialSuccessResponseOfstring"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Remove Organization Users","operationId":"removeUserFromOrgUsingPATCH","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"deprecated":true,"parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"Organization details to update","in":"body","name":"request","schema":{"$ref":"#/definitions/RemoveUsersFromOrgRequest"},"required":true}]},"get":{"description":"Get users of a specific organization. (DEPRECATED - Please refer to V2 API)\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Member | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","responses":{"404":{"description":"Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/UsersDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Organization Users (DEPRECATED - Please refer to V2 API)","operationId":"getOrgUsersUsingGET","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_member","org_owner","platform_operator"]}],"deprecated":true,"parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":false,"in":"query","name":"expand","description":"Indicates if response should be expanded, value is ignored - only existence of parameter is checked","type":"boolean"}]}},"/discovery":{"get":{"summary":"CSP Discovery login entry point (corresponds to OAuth 2.0 authorization endpoint)","operationId":"getDiscoveryUsingGET","tags":["Discovery"],"responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthorized"},"200":{"description":"OK"},"403":{"description":"Forbidden"}},"description":"This endpoint is used with browser redirection only. Trying to access it via GET HTTP call will fail. It discovers the user's Identity Provider (IdP) and sends the user to the IdP login page.\nThis is the starting point of the OAuth 2.0 flow to authenticate end users from your application. This authorization endpoint must be used by clients to authenticate users and obtain an authorization code. To use this endpoint, your application must be registered as an OAuth 2.0 client with CSP and have the 'authorization_code' grant type enabled.","parameters":[{"required":true,"in":"query","name":"client_id","description":"This is the identifier of the OAuth 2.0 client that was registered with CSP","type":"string"},{"required":true,"in":"query","name":"redirect_uri","description":"Specifies the callback endpoint in your application that will receive the authorization code. When sending the redirect_uri as a URL parameter it has to be URL encoded.","type":"string"},{"required":true,"in":"query","name":"state","description":"A random string that your application generates and that will be sent back as a parameter during the URI redirection.","type":"string"},{"required":false,"in":"query","name":"orgLink","description":"The link to the organization the user is trying to access. If not provided, the user's default organization link will be used","type":"string"},{"required":false,"in":"query","name":"scope","description":"The list of scopes separated by a space and is URL encoded. Scope parameter can be used to request different scopes. The requested scope must not include any scope not originally granted. If omitted, the returned scopes will be the ones originally granted. ","type":"string"},{"required":false,"in":"query","name":"nonce","description":"A random value generated by the client and supplied in the authentication request that enables replay protection when present. The client should enforce protection against replay attacks by ensuring it is presented only once. The provided value will be returned in the id_token.","type":"string"},{"required":false,"in":"query","name":"code_challenge","description":"The challenge generated from 'code_verifier'. Used to secure authorization code grants via Proof Key for Code Exchange (PKCE) from a native client. Required if performing a PKCE request. For more information, refer the PKCE RFC at https://tools.ietf.org/html/rfc7636","type":"string"},{"required":false,"in":"query","name":"code_challenge_method","description":"The method used to encode the 'code_verifier' for the 'code_challenge' parameter. Only the 'S256' value is supported currently. Required if performing a PKCE request. For more information, refer the PKCE RFC at https://tools.ietf.org/html/rfc7636","type":"string"},{"enum":["login"],"required":false,"in":"query","name":"prompt","description":"Specifies whether the Authorization Server prompts the End-User for re-authentication.","type":"string"},{"required":false,"in":"query","name":"login_hint","description":"Specifies to the Authorization Server about the login identifier the End-User might use to log in. When supplied, the discovery will be skipped, as if the value was entered by the user.<br><strong>Important:</strong><br><strong>1. If the user is already logged in with a different account than the provided login_hint it's value will be ignored.</strong><br><strong>2. The login_hint must be in a valid email format, otherwise, it will be ignored.</strong>","type":"string"},{"format":"int32","required":false,"in":"query","name":"accessTokenValiditySeconds","description":"The validity in seconds for the access token. If a value lower than the client's accessTokenValiditySeconds is provided, the provided accessTokenValiditySeconds value will be used. Else if an invalid value, a value higher than the client's accessTokenValiditySeconds, or no value is provided, then the client's accessTokenValiditySeconds will be used. For example if the client's default accessTokenValiditySeconds is 5 minutes ie 300 seconds, to get a token with only one minute validity provide accessTokenValiditySeconds as 60","type":"integer"},{"format":"int32","required":false,"in":"query","name":"refreshTokenValiditySeconds","description":"The validity in seconds for the refresh token. If a value lower than the client's refreshTokenValiditySeconds is provided, the provided refreshTokenValiditySeconds value will be used. Else if an invalid value, a value higher than the client's refreshTokenValiditySeconds, or no value is provided, then the client's refreshTokenValiditySeconds will be used. For example if the client's default refreshTokenValiditySeconds is 30 minutes ie 1800 seconds, to get a token with one hour validity provide refreshTokenValiditySeconds as 3600","type":"integer"},{"format":"int32","required":false,"in":"query","name":"maxGroupsInIdToken","description":"The maximum number of groups allowed in the ID token. If the value provided is lower than the client’s registered 'maxGroupsInIdToken’, the provided value will be used, else if an invalid value, a value higher than the client’s 'maxGroupsInIdToken’, or no value is provided, then the client’s ‘maxGroupsInIdToken’ will be used. This is only relevant if the client has registered groups related scopes such as 'group_names’, 'group_ids’, ‘grpn://…’ or 'grpid://…’.","type":"integer"},{"required":false,"in":"query","name":"label","description":"The human readable label for the refresh token. It is an optional parameter that allows the caller to specify a label for a refresh token, to avoid displaying the refresh token value to the end user.","type":"string"}]}},"/am/api/orgs/{orgId}/groups/{groupId}/users":{"delete":{"responses":{"400":{"description":"Group not part of the organization | Removing users from enterprise groups is not allowed"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | Group not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/PartialSuccessResponseOfstring"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Remove Users from Custom Group","operationId":"removeUsersFromCustomGroupInOrgUsingDELETE","tags":["Organization Groups"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Removes users from custom group within organization.<br>Note: Only users of custom groups can be removed.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"groupId","description":"Group ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/RemoveUsersFromCustomGroupRequest"},"required":true}]},"post":{"responses":{"400":{"description":"Group not part of the organization | Adding users to enterprise groups is not allowed"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | Group not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/PartialSuccessResponseOfstring"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Add Users to Custom Group","operationId":"addUsersToCustomGroupInOrgUsingPOST","tags":["Organization Groups"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Adds users to custom group within organization.<br>Note: Users can only be added to custom groups.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"groupId","description":"Group ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/AddUsersToCustomGroupRequest"},"required":true}]},"get":{"responses":{"400":{"description":"Group not part of the organization"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | Group not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/PagedResponseOfBaseUserDto"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Get Users In Group Within Organization","operationId":"getUsersInGroupWithinOrgUsingGET","tags":["Organization Groups"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get users in group within organization. Optionally filtered by given firstName, lastName or email with 'contains' match. Optionally filter the users by using onlyDirectUsers with true to return only direct users and not return the users from nested groups.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"groupId","description":"Group ID","type":"string"},{"format":"int32","description":"Start index","required":false,"in":"query","name":"pageStart","default":1,"type":"integer"},{"format":"int32","description":"Page size","required":false,"in":"query","name":"pageLimit","default":200,"type":"integer"},{"required":false,"in":"query","name":"firstName","description":"First name","type":"string"},{"required":false,"in":"query","name":"lastName","description":"Last name","type":"string"},{"required":false,"in":"query","name":"email","description":"Email","type":"string"},{"required":false,"in":"query","name":"onlyDirectUsers","description":"Filter direct users","type":"boolean"}]}},"/am/api/groups/search":{"get":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/PagedResponseOfGroupDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Search Groups Within The User Identity Provider","operationId":"searchGroupsUsingGET","tags":["Group"],"security":[{"token":["global"]}],"description":"Search groups within the user identity provider.<br> Note: Read-only operators can search groups within any Identity Providers.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| All Roles | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":true,"in":"query","name":"searchTerm","description":"Search criteria: the string to be search within the group display name","type":"string"},{"required":false,"in":"query","name":"idpId","description":"Identity Provider ID","type":"string"},{"format":"int32","description":"Start index, the default value is 1","required":false,"in":"query","name":"pageStart","default":1,"type":"integer"},{"format":"int32","description":"Page size, the default value is 200","required":false,"in":"query","name":"pageLimit","default":200,"type":"integer"}]}},"/am/api/loggedin/user/orgs/{orgId}/roles":{"get":{"responses":{"404":{"description":"No user with given token exists | Organization not found"},"401":{"description":"Unauthenticated User"},"500":{"description":"Internal Server Error"},"200":{"schema":{"items":{"$ref":"#/definitions/RoleDto"},"type":"array"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Principal User Roles Within the Specified Organization","operationId":"getLoggedInUserRolesOnOrgUsingGET","tags":["Principal User"],"security":[{"token":["global"]}],"description":"Get principal user roles within the specified organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| All Roles | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"}]}},"/am/api/loggedin/user":{"get":{"responses":{"404":{"description":"No user with given token exists"},"401":{"description":"Unauthenticated User"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/UserDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Principal User Information","operationId":"getLoggedinUserUsingGET","tags":["Principal User"],"security":[{"token":["global"]}],"description":"Get principal user information.<br>Principal user is identified via a token. The token should be passed in a header called csp-auth-token.If expandProfile is passed in the request user profile information will be also returned.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| All Roles | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":false,"in":"query","name":"expand","description":"Indicates if response should be expanded, value is ignored - only existence of parameter is checked","type":"string"},{"required":false,"in":"query","name":"expandProfile","description":"Indicates if the response should be expanded with the user profile, the value is ignored, only the existence of parameter is checked.","type":"string"}]}},"/am/api/userinfo":{"get":{"responses":{"400":{"description":"Authorization header must be specified | Invalid authorization header. Missing \"Bearer\" prefix | Invalid bearer token. Missing valid token."},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/OidcUserInfoDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get user info","operationId":"getOidcUserInfoUsingGET","tags":["Open ID Connect (OIDC) Endpoints"],"security":[{"token":["global"]}],"description":"Display the content of the given access token if the token is valid. Also includes the group_ids and group_names if the client is registered with group_id, group_names scopes. If the token is invalid or expired, an error will be returned. If group_ids and group_names are both requested, they will be in the same order in both the claims. If the token was obtained using an API token, the groups information will be available only if the openid scope was selected.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Anonymous | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":false,"in":"header","name":"authorization","description":"Access token in Bearer Authentication format i.e. 'Bearer XXX' where XXX is the content of an access token","type":"string"}]}},"/am/api/users/{acct}/orgs/{orgId}/info":{"get":{"responses":{"404":{"description":"User not found | Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/UserInfoDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get User Organization Info","operationId":"getUserInfoUsingGET","tags":["User"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get user information for a specific organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"acct","description":"User Account Identifier","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":false,"in":"query","name":"expandProfile","description":"Indicates if the response should be expanded with the user profile, the value is ignored, only the existence of parameter is checked.","type":"string"}]}},"/am/api/auth/api-tokens/authorize":{"post":{"responses":{"400":{"description":"Invalid request body. | In case of expired refresh_token."},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/AccessTokenDto"},"description":"OK"},"403":{"description":"Forbidden"}},"consumes":["application/x-www-form-urlencoded"],"summary":"Exchange organization scoped API-token for user access token","operationId":"getAccessTokenByApiRefreshTokenUsingPOST","tags":["Authentication"],"security":[{"token":["global"]}],"description":"The end-point is for exchanging organization scoped API-tokens only, that are obtained from the CSP web console.\n1. Including the refresh token parameter using the application/x-www-form-urlencoded format in the HTTP request body.\n2. DEPRECATED: Passing the refresh token via query param\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Anonymous | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"formData","name":"refresh_token","description":"The API-token","type":"string"}]}},"/am/api/v2/users/{userId}/orgs/{orgId}/roles":{"patch":{"description":"Update user roles for role names in an organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"404":{"description":"User not found | Organization not found"},"403":{"description":"Forbidden"},"200":{"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Update User Roles For Role Names In Organization","operationId":"patchUserRolesByNamesUsingPATCH_1","tags":["User V2"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"deprecated":true,"parameters":[{"required":true,"in":"path","name":"userId","description":"User ID matches the 'sub' claim value in the ID/Access token of a user","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"User roles update details. Deprecated: roleNamesToAdd - use rolesToAdd instead. Deprecated: roleNamesToRemove - use rolesToRemove instead","in":"body","name":"request","schema":{"$ref":"#/definitions/UpdateRolesRequestOfBaseRoleBindingDto"},"required":true}]},"get":{"responses":{"404":{"description":"User not found | Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"items":{"$ref":"#/definitions/RoleDto"},"type":"array"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get User Organization Roles","operationId":"getUserRolesOnOrgUsingGET_1","tags":["User V2"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get user roles in an organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"userId","description":"User ID matches the 'sub' claim value in the ID/Access token of a user","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"}]}},"/am/api/services/clients/{clientId}/raw-scopes":{"patch":{"description":"Deprecated. Use organization managed OAuth apps.\nThis API allows to update the service client allowed scopes with the specified scopes provided in the request without any transformation being performed.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Service Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","responses":{"400":{"description":"Cannot add and remove same scope in a single request"},"401":{"description":"Unauthorized"},"404":{"description":"Client not found"},"403":{"description":"Forbidden"},"200":{"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Update Service Client Allowed Scopes","operationId":"updateClientRawAllowedScopesUsingPATCH","tags":["Service OAuth Client Management"],"security":[{"token":["global"]},{"cspAuthentication":["platform_operator","service_owner"]}],"deprecated":true,"parameters":[{"required":true,"in":"path","name":"clientId","description":"Client ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/UpdateClientRawScopesRequest"},"required":true}]}},"/am/api/orgs/{orgId}/oauth-apps/{oauthAppId}/secret":{"delete":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthenticated User"},"500":{"description":"Internal Server Error"},"200":{"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Delete old client secret via client rotation","operationId":"deleteOldClientSecretViaOwnerClientRotationUsingDELETE","tags":["Organization Managed OAuth Apps (Clients)"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","service_owner","developer","platform_operator"]}],"description":"Once the rotation is done, the new secret will become the client's only valid secret.<br><strong>Important:</strong><br><strong>1.The old client secret will be expired after 48 hours.</strong><br><strong>2.Changing the client secret via the client management APIs will reset existing secret rotation (meaning, the provided secret in the management APIs will be the only valid secret).</strong>\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Service Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Developer | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"oauthAppId","description":"Client ID","type":"string"}]},"post":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthenticated User"},"500":{"description":"Internal Server Error"},"200":{"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Sets a new client secret for the given client via client rotation","operationId":"setNewClientSecretViaOwnerClientRotationUsingPOST","tags":["Organization Managed OAuth Apps (Clients)"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","service_owner","developer","platform_operator"]}],"description":"Once a 'newClientSecret' is set, both the old and the new secret can be used.<br><strong>Important:</strong><br><strong>1.The old client secret will be expired after 48 hours.</strong><br><strong>2.Changing the client secret via the client management APIs will reset existing secret rotation (meaning, the provided secret in the management APIs will be the only valid secret).</strong>\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Service Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Developer | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"oauthAppId","description":"Client ID","type":"string"},{"description":"clientSecretOwnerRotationRequest","in":"body","name":"clientSecretOwnerRotationRequest","schema":{"$ref":"#/definitions/ClientSecretOwnerRotationRequest"},"required":true}]},"put":{"responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthenticated User"},"200":{"schema":{"$ref":"#/definitions/ClientIdAndSecretResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Regenerate Organization OAuth App Secret","operationId":"updateOrgOAuthAppSecretUsingPUT","tags":["Organization Managed OAuth Apps (Clients)"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","service_owner","developer","platform_operator"]}],"description":"Regenerate Organization Managed OAuth App Secret\nAn empty JSON body {} is required in order to invoke the API.\n<br><strong>Important:</strong><br><strong>2.Changing the client secret via the client management APIs will reset existing secret rotation (meaning, the provided secret in the management APIs will be the only valid secret).</strong>\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Service Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Developer | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"oauthAppId","description":"Client ID","type":"string"}]}},"/am/api/auth/token":{"post":{"summary":"Exchanges one of the following grants: authorization_code, refresh_token or client_credentials for access token","operationId":"getTokenForAuthGrantTypeUsingPOST_1","tags":["Authentication"],"security":[{"token":["global"]}],"produces":["application/json"],"parameters":[{"required":false,"in":"header","name":"authorization","description":"Basic auth client credentials [Basic Base64_Encode(client_id:client_secret)].\nNote: when using <strong>Public OAuth clients</strong>, Authorization is required using the format 'Basic Base64_Encode(client_id:)' with empty client_secret.\n","type":"string"},{"enum":["authorization_code","refresh_token","client_credentials","password"],"required":true,"in":"formData","name":"grant_type","description":"The grant type as per OAuth2 specification.","type":"string"},{"required":false,"in":"formData","name":"code","description":"Auth code parameter. Mandatory for grant_type 'authorization_code'","type":"string"},{"required":false,"in":"formData","name":"redirect_uri","description":"Service redirect uri. Mandatory for grant_type 'authorization_code'","type":"string"},{"required":false,"in":"formData","name":"refresh_token","description":"Refresh token parameter. Available for grant_type 'refresh_token'","type":"string"},{"required":false,"in":"formData","name":"scope","description":"The list of scopes separated by a space and is URL encoded. Scope parameter can be used to request different scopes. The requested scope must not include any scope not originally granted. If omitted, the returned scopes will be the ones originally granted. ","type":"string"},{"required":false,"in":"formData","name":"orgId","description":"Organization ID. Available for grant_type 'client_credentials', 'password'","type":"string"},{"required":false,"in":"formData","name":"username","description":"The username value corresponds to the value used when login to the system. Mandatory and available for grant_type 'password'","type":"string"},{"required":false,"in":"formData","name":"code_verifier","description":"A high-entropy cryptographic random key using the characters [A-Z] / [a-z] / [0-9] / '-' / '.' / '_' / '~' with a minimum length of 43 characters and a maximum length of 128 characters which was used to generate 'code_challenge' and obtain the authorization code. Required if PKCE was used in the authorization code grant request. For more information, refer the PKCE RFC at https://tools.ietf.org/html/rfc7636","type":"string"},{"required":false,"in":"formData","name":"password","description":"The password of the user for whom the token should be returned. Mandatory and available for grant_type 'password'","type":"string"},{"format":"int32","required":false,"in":"formData","name":"accessTokenValiditySeconds","description":"The validity in seconds for the access token. If a value lower than the client's accessTokenValiditySeconds is provided, the provided accessTokenValiditySeconds value will be used. Else if an invalid value, a value higher than the client's accessTokenValiditySeconds, or no value is provided, then the client's accessTokenValiditySeconds will be used. For example if the client's default accessTokenValiditySeconds is 5 minutes ie 300 seconds, to get a token with only one minute validity provide accessTokenValiditySeconds as 60","type":"integer"},{"format":"int32","required":false,"in":"formData","name":"refreshTokenValiditySeconds","description":"The validity in seconds for the refresh token. If a value lower than the client's refreshTokenValiditySeconds is provided, the provided refreshTokenValiditySeconds value will be used. Else if an invalid value, a value higher than the client's refreshTokenValiditySeconds, or no value is provided, then the client's refreshTokenValiditySeconds will be used. For example if the client's default refreshTokenValiditySeconds is 30 minutes ie 1800 seconds, to get a token with one hour validity provide refreshTokenValiditySeconds as 3600","type":"integer"},{"format":"int32","required":false,"in":"formData","name":"maxGroupsInIdToken","description":"The maximum number of groups allowed in the ID token. If the value provided is lower than the client’s registered 'maxGroupsInIdToken’, the provided value will be used, else if an invalid value, a value higher than the client’s 'maxGroupsInIdToken’, or no value is provided, then the client’s ‘maxGroupsInIdToken’ will be used. This is only relevant if the client has registered groups related scopes such as 'group_names’, 'group_ids’, ‘grpn://…’ or 'grpid://…’.","type":"integer"}],"consumes":["application/x-www-form-urlencoded"],"description":"This end-point exchanges one of the following grants: authorization_code, refresh_token or client_credentials for access token\n1. Include the parameters using application/x-www-form-urlencoded format in the HTTP request body.\n2. Include Basic Base64_Encode(client_id:client_secret) value in the HTTP authorization header.\nNote: when using <strong>Public OAuth clients</strong>, Authorization is required using the format 'Basic Base64_Encode(client_id:)' with empty client_secret.\nOrganization ID parameter notes: when organization id is missing from the request the default organization will be used.\n1. Upon password grant type, user default organization will be set if available.\n2. Upon client_credentials grant type, the organization who own the client will be set if available.\n\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Anonymous | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","responses":{"400":{"description":"Invalid request body | In case of expired refresh_token."},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/AccessTokenDto"},"description":"OK"},"500":{"description":"Internal Server Error"}}}},"/am/api/auth/api-tokens/details":{"post":{"responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthorized"},"200":{"schema":{"$ref":"#/definitions/ApiTokenDetailsDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get organization scoped api token details","operationId":"getApiTokenDetailsUsingPOST","tags":["Authentication"],"security":[{"token":["global"]}],"description":"Get details of an unexpired org scoped API-token that was previously obtained via CSP web console.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Anonymous | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"description":"Get API Token Request","in":"body","name":"request","schema":{"$ref":"#/definitions/GetApiTokenDetailsRequest"},"required":true}]}},"/am/api/loggedin/user/orgs/{orgId}/info":{"get":{"responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthenticated User"},"200":{"schema":{"$ref":"#/definitions/UserInfoDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Principal User Information and Roles by Organization","operationId":"getLoggedInUserInfoUsingGET","tags":["Principal User"],"security":[{"token":["global"]}],"description":"Get principal user information and roles by organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| All Roles | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"}]}},"/am/api/loggedin/user/orgs/{orgId}/groups":{"get":{"responses":{"404":{"description":"No user with given token exists | Organization not found"},"401":{"description":"Unauthenticated User"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/UserGroupsResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Principal User Groups Information Within the Specified Organization","operationId":"getLoggedInUserGroupsOnOrgUsingGET","tags":["Principal User"],"security":[{"token":["global"]}],"description":"Get Principal User Groups Information Within the Specified Organization\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| All Roles | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"}]}},"/am/api/orgs/{orgId}/groups/{groupId}":{"patch":{"responses":{"400":{"description":"The Group with that name already exists"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | Group not found"},"403":{"description":"Forbidden"},"200":{"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Update Group Details In Organization","operationId":"updateGroupDetailsUsingPATCH","tags":["Organization Groups"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Update details of a custom group within organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"groupId","description":"Group ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/UpdateCustomGroupRequest"},"required":true}]},"get":{"responses":{"404":{"description":"Organization not found | Group not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/ExpandedGroupDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Group in Organization","operationId":"getGroupInOrganizationUsingGET","tags":["Organization Groups"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get details of a group within organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"groupId","description":"Group ID","type":"string"}]}},"/am/api/orgs/{orgId}/groups/{groupId}/roles":{"patch":{"responses":{"400":{"description":"Group not part of the organization"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found"},"403":{"description":"Forbidden"},"200":{"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Update Group Roles On Organization","operationId":"updateGroupRolesOnOrganizationUsingPATCH","tags":["Organization Groups"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Update roles of a group within organization.<br>Note: Email notification for updating group roles of group with more than 1000 users will not be sent to its users.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"groupId","description":"Group ID","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/UpdateGroupRolesRequest"},"required":true}]},"get":{"responses":{"404":{"description":"Group not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/RolesDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Group Roles On Organization","operationId":"getGroupRolesOnOrganizationUsingGET","tags":["Organization Groups"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get roles of a group within organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"groupId","description":"Group ID","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"}]}},"/am/api/auth/introspect":{"post":{"responses":{"400":{"description":"Authorization header must be specified | Invalid authorization header. Missing \"Basic\" prefix | Invalid authorization header | Bad Request - Client ID in path doesn't match the Client ID in the Basic Authorization Header."},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/TokenIntrospectionResponse"},"description":"JSON object representing the refresh token's information.\nThe 'active' top-level member will indicate whether or not the presented token is currently active.\nIf active, additional members will be present in the response. "},"403":{"description":"Forbidden"}},"consumes":["application/x-www-form-urlencoded"],"summary":"Get refresh token details","operationId":"getTokenIntrospectionDetailsUsingPOST","tags":["Authentication"],"security":[{"token":["global"]}],"description":"The call is protected by HTTP Basic authentication with client_id and client_secret.\nNote: when using <strong>Public OAuth clients</strong>, Authorization is required using the format 'Basic Base64_Encode(client_id:)' with empty client_secret.\nThis endpoint follows the token introspection specifications defined in https://tools.ietf.org/html/rfc7662.\nOnly introspection of refresh tokens is supported.\nInclude the parameter using application/x-www-form-urlencoded format in the HTTP request body.\n\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Anonymous | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":false,"in":"header","name":"authorization","description":"Basic auth with client credentials [Basic Base64_Encode(client_id:client_secret)]\nNote: when using <strong>Public OAuth clients</strong>, Authorization is required using the format 'Basic Base64_Encode(client_id:)' with empty client_secret.\n","type":"string"},{"required":true,"in":"formData","name":"token","description":"The token to be introspected","type":"string"}]}},"/am/api/orgs":{"post":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/RefLinkDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Create Organization","operationId":"createOrgUsingPOST","tags":["Organization"],"security":[{"token":["global"]}],"description":"Create organization, if displayName is not provided a default name composed of the user name will be created.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| All Roles | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"description":"Organization creation details","in":"body","name":"request","schema":{"$ref":"#/definitions/CreateOrganizationRequest"},"required":true}]}},"/am/api/v3/users/{userId}/orgs/{orgId}/roles":{"patch":{"responses":{"400":{"description":"User not part of the organization"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | User not found"},"403":{"description":"Forbidden"},"200":{"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"(BETA) Update user roles in organization","operationId":"updateUserRolesOnOrganizationUsingPATCH","tags":["User V3"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Update service and organization roles of a user in the organization\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":true,"in":"path","name":"userId","description":"User ID matches the 'sub' claim value in the ID/Access token of a user","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"Deprecated: roleNamesToAdd - use rolesToAdd instead. Deprecated: roleNamesToRemove - use rolesToRemove instead","in":"body","name":"request","schema":{"$ref":"#/definitions/UpdateMemberRolesRequest"},"required":true}]}},"/am/api/orgs/{orgId}/clients":{"delete":{"responses":{"404":{"description":"Organization not found | Clients [...] not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/PartialSuccessResponseOfstring"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Remove OAuth Clients From Organization","operationId":"removeClientsFromOrganizationUsingDELETE","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","developer","platform_operator"]}],"description":"Remove OAuth clients from organization\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n| Developer | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/RemoveMembersFromOrgRequest"},"required":true}]},"post":{"responses":{"400":{"description":"One or more clients already part of the organization"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | Clients [...] not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/AssignRolesToMembersResponse"},"description":"Partial Success. Please read the response to see which client ids have failed to assign."},"500":{"description":"Internal Server Error"}},"summary":"Assign Roles To OAuth Clients On Organization","operationId":"assignRolesToClientsOnOrgUsingPOST","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","developer","platform_operator"]}],"description":"Assign roles to the specified OAuth client/s in the organization.<br>Note: in case of partial success the caller must read the response to see which client ids have not been added successfully\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n| Developer | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"Deprecated: organizationRoleNames - use organizationRoles instead. Deprecated: serviceRoleNames - use serviceRoles instead","in":"body","name":"request","schema":{"$ref":"#/definitions/AssignRolesToMembersRequest"},"required":true}]},"get":{"responses":{"404":{"description":"Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/PagedResponseOfExpandedAuthClientDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Organization OAuth Clients","operationId":"getOrganizationClientsUsingGET","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","developer","platform_operator"]}],"description":"Get OAuth clients that were granted with roles in the organization. Default start page is 1, default limit is 200.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Developer | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"format":"int32","description":"Start index","required":false,"in":"query","name":"pageStart","default":1,"type":"integer"},{"format":"int32","description":"Page size","required":false,"in":"query","name":"pageLimit","default":200,"type":"integer"}]}},"/am/api/users/{acct}/orgs/{orgId}/roles":{"patch":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthorized"},"404":{"description":"User not found | Organization not found"},"403":{"description":"Forbidden"},"200":{"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Update User Roles For Role Names In Organization","operationId":"patchUserRolesByNamesUsingPATCH","tags":["User"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Update user roles for role names in an organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"acct","description":"User Account Identifier","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"User roles update details. Deprecated: roleNamesToAdd - use rolesToAdd instead. Deprecated: roleNamesToRemove - use rolesToRemove instead","in":"body","name":"request","schema":{"$ref":"#/definitions/UpdateRolesRequestOfBaseRoleBindingDto"},"required":true}]},"get":{"responses":{"404":{"description":"User not found | Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"items":{"$ref":"#/definitions/RoleDto"},"type":"array"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get User Organization Roles","operationId":"getUserRolesOnOrgUsingGET","tags":["User"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get user roles in an organization.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"acct","description":"User Account Identifier","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"}]}},"/am/api/orgs/{orgId}/oauth-apps/{oauthAppId}":{"patch":{"responses":{"400":{"description":"Invalid request body"},"401":{"description":"Unauthenticated User"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/OrgOAuthAppResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Update Organization Managed OAuth App","operationId":"updateOrgOAuthAppUsingPATCH","tags":["Organization Managed OAuth Apps (Clients)"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","service_owner","developer","platform_operator"]}],"description":"Update Organization Managed OAuth App that was created and is owned by the organization<br><strong>Important:</strong><br><strong>2.Changing the client secret via the client management APIs will reset existing secret rotation (meaning, the provided secret in the management APIs will be the only valid secret).</strong>\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Service Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Developer | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"oauthAppId","description":"Client ID","type":"string"},{"description":"request","in":"body","name":"request","schema":{"$ref":"#/definitions/OrgOAuthAppUpdateRequest"},"required":true}]},"get":{"responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthenticated User"},"200":{"schema":{"$ref":"#/definitions/OrgOAuthAppResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Organization Managed OAuth App","operationId":"getOrgOAuthAppUsingGET","tags":["Organization Managed OAuth Apps (Clients)"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","service_owner","developer","platform_operator"]}],"description":"Get Organization Managed OAuth App that was created and is owned by the organization\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Service Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Developer | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"oauthAppId","description":"App ID","type":"string"}]}},"/am/api/loggedin/user/profile":{"get":{"summary":"Get Principal User Profile","operationId":"getPrincipalUserProfileUsingGET","tags":["Principal User"],"security":[{"token":["global"]}],"responses":{"500":{"description":"Internal Server Error"},"401":{"description":"Unauthenticated User"},"200":{"schema":{"$ref":"#/definitions/UserProfileDto"},"description":"OK"},"403":{"description":"Forbidden"}},"description":"Get principal user profile.<br>Principal user is identified via a token. The token should be passed in a header called csp-auth-token.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| All Roles | &#x2714;&#xFE0F; | &#x0274c; |\n"}},"/am/api/orgs/{orgId}/groups-search":{"get":{"responses":{"400":{"description":"groupSearchTerm query parameter must be specified"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found"},"403":{"description":"Forbidden"},"200":{"schema":{"$ref":"#/definitions/SearchGroupsResponse"},"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"Search Organization Groups","operationId":"searchOrgGroupsUsingGET","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_member","org_owner","platform_operator"]}],"description":"Search groups in organization having display name which \"contains\" search term.<br>Search results limited to first 20 results. Please refine the search term for accurate results.<br>Organization members will receive basic group information. Organization owners will additionally receive role details of the groups.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Member | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"query","name":"groupSearchTerm","description":"The string to be searched within groups' display name","type":"string"}]}},"/am/api/orgs/{orgId}/invitations":{"post":{"responses":{"400":{"description":"Invalid request body | Platform Operator and Read-only Operator roles can only be assigned to vmware.com and csp.local users"},"202":{"description":"Accepted"},"404":{"description":"Organization not found"},"500":{"description":"Internal Server Error"},"403":{"description":"Forbidden"},"401":{"description":"Unauthorized"}},"summary":"Create/Revoke Organization User Invitation","operationId":"inviteUsersUsingPOST","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Create/Revoke Organization User Invitation.<br>Note: When passing the action query param with value revoke the invitations for the given usernames will be revoked.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"enum":["revoke"],"required":false,"in":"query","name":"action","description":"Action option, should be used for revoke","type":"string"},{"description":"Details of create/revoke invitation. Deprecated: orgRoleNames - use organizationRoles instead. Deprecated: serviceRoleNames - use serviceRoles instead","in":"body","name":"request","schema":{"$ref":"#/definitions/UsersOrganizationInvitationRequest"},"required":true}]},"get":{"responses":{"404":{"description":"Organization not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"items":{"$ref":"#/definitions/UserOrganizationInvitationResponse"},"type":"array"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get Invitations For Organization","operationId":"getOrgInvitationsUsingGET","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get invitations for specific organization. If expand parameter is passed to the request user invitation roles will be returned in the response.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":false,"in":"query","name":"expand","description":"Indicates if response should be expanded, value is ignored - only existence of parameter is checked","type":"string"},{"required":false,"in":"query","name":"customGroupId","description":"Group ID","type":"string"},{"required":false,"in":"query","name":"expandCustomGroups","description":"Indicates if custom groups response should be expanded.","type":"boolean"}]}},"/am/api/orgs/{orgId}/invitations/{userInvitationId}":{"delete":{"responses":{"404":{"description":"Organization not found | Role not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Revoke User Invitation","operationId":"revokeUserInvitationUsingDELETE","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Revoke invitation of a user (by invitation ID).\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"userInvitationId","description":"Invitation ID","type":"string"}]},"get":{"responses":{"404":{"description":"Organization not found | Invitation not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/UserOrganizationInvitationResponse"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"Get User Invitation","operationId":"getUserInvitationUsingGET","tags":["Organization"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get invitation of a user in an organization (by invitation id).\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"required":true,"in":"path","name":"userInvitationId","description":"Invitation ID","type":"string"}]}},"/am/api/clients/{clientId}/orgs/{orgId}/roles":{"patch":{"responses":{"400":{"description":"Client not part of the organization"},"401":{"description":"Unauthorized"},"404":{"description":"Organization not found | Client not found"},"403":{"description":"Forbidden"},"200":{"description":"OK"},"500":{"description":"Internal Server Error"}},"summary":"(BETA) Update OAuth client roles on organization","operationId":"updateClientRolesOnOrganizationUsingPATCH","tags":["OAuth Client"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Update roles of the OAuth client in the organization\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n","parameters":[{"required":true,"in":"path","name":"clientId","description":"Client ID","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"},{"description":"Deprecated: roleNamesToAdd - use rolesToAdd instead. Deprecated: roleNamesToRemove - use rolesToRemove instead","in":"body","name":"request","schema":{"$ref":"#/definitions/UpdateMemberRolesRequest"},"required":true}]},"get":{"responses":{"404":{"description":"Organization not found | Client not found"},"401":{"description":"Unauthorized"},"500":{"description":"Internal Server Error"},"200":{"schema":{"$ref":"#/definitions/RolesDto"},"description":"OK"},"403":{"description":"Forbidden"}},"summary":"(BETA) Get Client Roles On Organization","operationId":"getClientRolesOnOrganizationUsingGET","tags":["OAuth Client"],"security":[{"token":["global"]},{"cspAuthentication":["org_owner","platform_operator"]}],"description":"Get client roles on organization\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Organization Owner | &#x2714;&#xFE0F; | &#x0274c; |\n| Read-only Operator | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","parameters":[{"required":true,"in":"path","name":"clientId","description":"Client ID","type":"string"},{"required":true,"in":"path","name":"orgId","description":"Organization ID","type":"string"}]}}}}