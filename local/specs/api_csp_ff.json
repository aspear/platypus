{"swagger":"2.0","info":{"description":"List of all CSP Feature Flags Service APIs\n\nFeature Flag Developer Guide\nhttps://confluence.eng.vmware.com/x/cx-2I","version":"1.0","title":"CSP Feature Flags Service"},"host":"console-stg.cloud.vmware.com","basePath":"/csp/gateway","tags":[{"name":"Feature Flags","description":"Feature Flags Operations"},{"name":"SDK Keys","description":"SDK Keys Operations"}],"consumes":["application/json"],"produces":["application/json"],"paths":{"/ff-service/api/orgs/{orgId}/flags":{"get":{"tags":["Feature Flags"],"summary":"Get all organization flags","description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"getAllOrgFlagsUsingGET","produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"},{"name":"toggleType","in":"query","description":"Filter results to include flags only from the specified toggle type","required":false,"type":"string","enum":["BOOLEAN","MULTIVARIATE"]}],"responses":{"200":{"description":"Fetch all org flags","schema":{"$ref":"#/definitions/PageDtoOfFlagDto"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"500":{"description":"Internal Server Error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]},"post":{"tags":["Feature Flags"],"summary":"Create a new feature flag definition","description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"createFlagUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"},{"in":"body","name":"flagDto","description":"flagDto","required":true,"schema":{"$ref":"#/definitions/CreateFlagRequest"}}],"responses":{"201":{"description":"Flag has been created","schema":{"$ref":"#/definitions/FlagDto"}},"400":{"description":"Flag flagId is blank"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"409":{"description":"Flag already exists"},"500":{"description":"Internal Server Error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]}},"/ff-service/api/orgs/{orgId}/flags/declarative-config":{"get":{"tags":["Feature Flags"],"summary":"Export declarative management of feature flags definition","description":"This API return both JSON and YAML format:\n1. Set Accept header as application/json for JSON format response.\n2. Set Accept header as text/yaml for YAML format response.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"exportFlagsUsingGET","produces":["application/json","text/yaml"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/DeclarativeFlagsDto"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"500":{"description":"Internal Server Error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]},"post":{"tags":["Feature Flags"],"summary":"Declarative management of feature flags definition","description":"The API should be used when a declarative management of flags is desired, meaning the organization flags state will be exactly as specified in the input.\n1. Non existing flags in the request will be created in the data store.\n2. Already Existing flags in the request will be updated in case of difference.\n3. Existing flags in the data store will be removed if they are missing from the request.\n4. Flags change log data will be logged only for the changed flags<b>Important</b>: invoking the API will override any prior changes.\nThis API accept both JSON and YAML format:\n1. Set Content-Type header as application/json for JSON format request.\n2. Set Content-Type header as text/yaml for YAML format request.\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"importFlagsUsingPOST","consumes":["application/json","text/yaml"],"produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"},{"name":"dryRun","in":"query","description":"Dry Run mode - Only checks if your flags have any validation errors and will not commit any actual change. This option should be used in gating checks, before reviewing and committing changes","required":false,"type":"boolean"},{"in":"body","name":"request","description":"request","required":true,"schema":{"$ref":"#/definitions/DeclarativeFlagsDto"}}],"responses":{"201":{"description":"Created"},"400":{"description":"Invalid request"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"500":{"description":"Internal Server Error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]}},"/ff-service/api/orgs/{orgId}/flags/{flagId}":{"get":{"tags":["Feature Flags"],"summary":"Get flag by id","description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"getFlagByIdUsingGET","produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"},{"name":"flagId","in":"path","description":"flagId","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/FlagDto"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"500":{"description":"Internal Server Error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]},"delete":{"tags":["Feature Flags"],"summary":"Delete a flag definition","description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"deleteFlagUsingDELETE","produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"},{"name":"flagId","in":"path","description":"flagId","required":true,"type":"string"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"500":{"description":"Internal Server Error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]},"patch":{"tags":["Feature Flags"],"summary":"Update the flag definition","description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"updateFlagUsingPATCH","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"},{"name":"flagId","in":"path","description":"flagId","required":true,"type":"string"},{"in":"body","name":"updateFlagRequest","description":"updateFlagRequest","required":true,"schema":{"$ref":"#/definitions/UpdateFlagRequest"}}],"responses":{"200":{"description":"OK"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"500":{"description":"Internal Server Error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]}},"/ff-service/api/orgs/{orgId}/flags/{flagId}/disable":{"post":{"tags":["Feature Flags"],"summary":"Disable a flag","description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"disableFlagUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"},{"name":"flagId","in":"path","description":"flagId","required":true,"type":"string"}],"responses":{"200":{"description":"OK"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"500":{"description":"Internal Server Error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]}},"/ff-service/api/orgs/{orgId}/flags/{flagId}/enable":{"post":{"tags":["Feature Flags"],"summary":"Enable a flag","description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"enableFlagUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"},{"name":"flagId","in":"path","description":"flagId","required":true,"type":"string"}],"responses":{"200":{"description":"OK"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"500":{"description":"Internal Server Error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]}},"/ff-service/api/orgs/{orgId}/sdk-keys":{"get":{"tags":["SDK Keys"],"summary":"Get all sdk keys","description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"getAllOrgsSdkKeysUsingGET","produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PageDtoOfSdkKeyDto"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"500":{"description":"Internal server error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]},"post":{"tags":["SDK Keys"],"summary":"Create a new sdk key","description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"createOrgSdkKeyUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"},{"in":"body","name":"request","description":"request","required":true,"schema":{"$ref":"#/definitions/CreateSdkKeyRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SdkKeyDto"}},"400":{"description":"Your organization exceeded the maximum number of sdk keys | displayName must be unique"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"500":{"description":"Failed to create sdk key"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]}},"/ff-service/api/orgs/{orgId}/sdk-keys/{sdkKeyId}":{"get":{"tags":["SDK Keys"],"summary":"Get sdk key by id","description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"getOrgSdkKeyUsingGET","produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"},{"name":"sdkKeyId","in":"path","description":"sdkKeyId","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SdkKeyDto"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Sdk key with id {sdkKeyId} not found"},"500":{"description":"Internal Server Error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]},"delete":{"tags":["SDK Keys"],"summary":"Delete sdk key by id","description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"deleteOrgSdkKeyUsingDELETE","produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"},{"name":"sdkKeyId","in":"path","description":"sdkKeyId","required":true,"type":"string"}],"responses":{"200":{"description":"OK"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Sdk key with id {sdkKeyId} not found"},"500":{"description":"Internal Server Error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]},"patch":{"tags":["SDK Keys"],"summary":"Update sdk key by id","description":"null\n### Access Policy:\n| Role | User Accounts | Service Accounts (Client Credentials Applications)  |\n| ----- | ----- | ---------- |\n| Feature Flag Manager | &#x2714;&#xFE0F; | &#x2714;&#xFE0F; |\n","operationId":"updateOrgSdkKeyUsingPATCH","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"orgId","in":"path","description":"orgId","required":true,"type":"string"},{"name":"sdkKeyId","in":"path","description":"sdkKeyId","required":true,"type":"string"},{"in":"body","name":"request","description":"request","required":true,"schema":{"$ref":"#/definitions/UpdateSdkKeyRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SdkKeyDto"}},"400":{"description":"Failed to update sdk key {sdkKeyId}"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Sdk key with id {sdkKeyId} not found"},"500":{"description":"Internal Server Error"}},"security":[{"token":["global"]},{"cspAuthentication":["feature_flag_manager","platform_operator"]}]}}},"securityDefinitions":{"token":{"type":"apiKey","name":"csp-auth-token","in":"header"}},"definitions":{"CreateFlagRequest":{"type":"object","required":["id"],"properties":{"description":{"type":"string","description":"Description of the Feature Flag","allowEmptyValue":false,"minLength":1,"maxLength":200},"enabled":{"type":"boolean","example":false,"description":"Toggle flag ON/OFF options. In case of a disabled flag (false), no strategy evaluation will occur.","allowEmptyValue":false},"id":{"type":"string","description":"Unique identifier of the Feature Flag. Used in flag evaluation","allowEmptyValue":false},"multivariateToggle":{"$ref":"#/definitions/MultivariateToggleDto"},"publicFlag":{"type":"boolean","example":false,"description":"Public flags are flags that should be evaluated in client based SDKs, meaning their value is public.","allowEmptyValue":false},"strategy":{"$ref":"#/definitions/StrategyDto"},"tags":{"type":"array","description":"Tags - for management capabilities","allowEmptyValue":false,"items":{"type":"string"}},"toggleType":{"type":"string","description":"Declare the type of the flag (boolean or multivariate)","allowEmptyValue":false,"enum":["BOOLEAN","MULTIVARIATE"]}},"title":"CreateFlagRequest"},"CreateSdkKeyRequest":{"type":"object","properties":{"description":{"type":"string","description":"The description of the SDK Key","allowEmptyValue":false,"minLength":1,"maxLength":200},"displayName":{"type":"string","description":"The display name of the SDK Key","allowEmptyValue":false,"minLength":1,"maxLength":50},"sdkType":{"type":"string","description":"Defaults to SERVER. Whether or not the SDK Key is intended to be used in client based SDKs or server based SDKs. SDK Keys for client SDKs are not a secret, but rather used to uniquely identify your public flags.","allowEmptyValue":false,"enum":["SERVER","CLIENT"]}},"title":"CreateSdkKeyRequest"},"DeclarativeFlagDto":{"type":"object","required":["id"],"properties":{"description":{"type":"string","description":"Description of the Feature Flag","allowEmptyValue":false,"minLength":1,"maxLength":200},"enabled":{"type":"boolean","example":false,"description":"Toggle flag ON/OFF options. In case of a disabled flag (false), no strategy evaluation will occur.","allowEmptyValue":false},"id":{"type":"string","description":"Unique identifier of the Feature Flag. Used in flag evaluation","allowEmptyValue":false},"multivariateToggle":{"$ref":"#/definitions/MultivariateToggleDto"},"publicFlag":{"type":"boolean","example":false,"description":"Public flags are flags that should be evaluated in client based SDKs, meaning their value is public.","allowEmptyValue":false},"strategy":{"$ref":"#/definitions/StrategyDto"},"tags":{"type":"array","description":"Tags - for management capabilities","allowEmptyValue":false,"items":{"type":"string"}},"toggleType":{"type":"string","description":"Declare the type of the flag (boolean or multivariate)","allowEmptyValue":false,"enum":["BOOLEAN","MULTIVARIATE"]}},"title":"DeclarativeFlagDto"},"DeclarativeFlagsDto":{"type":"object","required":["flags"],"properties":{"flags":{"type":"array","items":{"$ref":"#/definitions/DeclarativeFlagDto"}}},"title":"DeclarativeFlagsDto","description":"Declarative definition of the organization flags - the flags listed here is considered as the desired state"},"DefaultValuesDto":{"type":"object","required":["disabled","enabled"],"properties":{"disabled":{"type":"string","description":"When flag is disabled, this value will be returned during evaluation","allowEmptyValue":false},"enabled":{"type":"string","description":"When flag is enabled, this value will be returned during evaluation if there is no strategies or no strategy has been met","allowEmptyValue":false}},"title":"DefaultValuesDto"},"FlagDto":{"type":"object","required":["id"],"properties":{"createdAt":{"type":"integer","format":"int64","description":"The creator of the flag","allowEmptyValue":false},"createdBy":{"type":"string","description":"The creation time of the flag","allowEmptyValue":false},"description":{"type":"string","description":"Description of the Feature Flag","allowEmptyValue":false},"enabled":{"type":"boolean","example":false,"description":"Toggle flag ON/OFF options. In case of a disabled flag (false), no strategy evaluation will occur.","allowEmptyValue":false},"id":{"type":"string","description":"Unique identifier of the Feature Flag. Used in flag evaluation","allowEmptyValue":false},"lastUpdatedAt":{"type":"integer","format":"int64","description":"The last modifier of the flag","allowEmptyValue":false},"lastUpdatedBy":{"type":"string","description":"The last modification time of the flag","allowEmptyValue":false},"multivariateToggle":{"$ref":"#/definitions/MultivariateToggleDto"},"publicFlag":{"type":"boolean","example":false,"description":"Public flags are flags that should be evaluated in client based SDKs, meaning their value is public.","allowEmptyValue":false},"strategy":{"$ref":"#/definitions/StrategyDto"},"tags":{"type":"array","description":"Tags - for management capabilities","allowEmptyValue":false,"items":{"type":"string"}},"toggleType":{"type":"string","enum":["BOOLEAN","MULTIVARIATE"]}},"title":"FlagDto"},"MultivariateToggleDto":{"type":"object","required":["defaultValues","toggleOptions"],"properties":{"defaultValues":{"description":"Default values for flag evaluation","allowEmptyValue":false,"$ref":"#/definitions/DefaultValuesDto"},"toggleOptions":{"type":"array","description":"The toggle options for evaluation","allowEmptyValue":false,"items":{"$ref":"#/definitions/ToggleOptionDto"}}},"title":"MultivariateToggleDto","description":"Multivariate toggling Support\nMust be provided when flag type == MULTIVARIATE, cannot be provided when flag type == BOOLEAN\n1. If strategy evaluation is met to more than one value, the first listed value will be returned (e.g. if both A,B meets the strategy -> A will be returned upon evaluation)\n2. When strategy is used - all toggling values should hold a valid strategy."},"PageDtoOfFlagDto":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/definitions/FlagDto"}},"totalResults":{"type":"integer","format":"int32"}},"title":"PageDtoOfFlagDto"},"PageDtoOfSdkKeyDto":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/definitions/SdkKeyDto"}},"totalResults":{"type":"integer","format":"int32"}},"title":"PageDtoOfSdkKeyDto"},"SdkKeyDto":{"type":"object","properties":{"changedAt":{"type":"integer","format":"int64","description":"The last modification time of the SDK Key","allowEmptyValue":false},"changedBy":{"type":"string","description":"The last modifier of the SDK Key","allowEmptyValue":false},"createdAt":{"type":"integer","format":"int64","description":"The creation time of the SDK Key","allowEmptyValue":false},"createdBy":{"type":"string","description":"The creator of the SDK Key","allowEmptyValue":false},"description":{"type":"string","description":"The description of the SDK Key","allowEmptyValue":false},"displayName":{"type":"string","description":"The display name of the SDK Key","allowEmptyValue":false},"orgId":{"type":"string","description":"The organization in which the SDK Key was created","allowEmptyValue":false},"sdkKey":{"type":"string","description":"The actual SDK Key value, that is used when configuring the SDKs. For server typed SDK Keys - will be returned ONLY upon creation.","allowEmptyValue":false},"sdkKeyId":{"type":"string","description":"A unique identifier of the SDK Key","allowEmptyValue":false},"sdkType":{"type":"string","enum":["SERVER","CLIENT"]}},"title":"SdkKeyDto"},"StrategyDto":{"type":"object","properties":{"excludedDomains":{"type":"array","example":['vmware.com'],"description":"Target the flag globally expect for users with the specified domains/s. values are domain/s","allowEmptyValue":false,"items":{"type":"string"}},"excludedOauthClients":{"type":"array","example":['my_app_oauth_client_id'],"description":"Target the flag globally expect for the specified  OAuth client/s. values are OAuth client ID/s","allowEmptyValue":false,"items":{"type":"string"}},"excludedOrganizations":{"type":"array","example":['7393f084-6763-4097-954f-3f30b1cc7318'],"description":"Target the flag globally expect for the specified organization/s. values are organization IDs","allowEmptyValue":false,"items":{"type":"string"}},"excludedUserAccts":{"type":"array","example":['test@vmware.com','test@csp.local'],"description":"Target the flag globally expect for the specified user account identifier/s. values are user account identifier/s","allowEmptyValue":false,"items":{"type":"string"}},"operator":{"type":"string","description":"When more than one strategy is provided, define the logical operator for evaluation. Default is set to 'AND'","allowEmptyValue":false,"enum":["AND","OR"]},"selectedDomains":{"type":"array","example":['vmware.com'],"description":"Target the flag only for users with the specified domain/s. values are domain/s","allowEmptyValue":false,"items":{"type":"string"}},"selectedOauthClients":{"type":"array","example":['my_app_oauth_client_id'],"description":"Target the flag only for the specified OAuth client/s. values are OAuth client ID/s","allowEmptyValue":false,"items":{"type":"string"}},"selectedOrganizations":{"type":"array","example":['7393f084-6763-4097-954f-3f30b1cc7318'],"description":"Target the flag only for the specified organization/s. values are organization IDs","allowEmptyValue":false,"items":{"type":"string"}},"selectedUserAccts":{"type":"array","example":['test@vmware.com','test@csp.local'],"description":"Target the flag only for the specified user account identifier/s. values are user account identifier/s","allowEmptyValue":false,"items":{"type":"string"}}},"title":"StrategyDto","description":"Flag evaluation strategy - Determine which audience receive new variations of features by defining strategies. Multiple strategies can be defined per flag with AND/OR operator that will be used upon evaluation. AND is the default operator"},"ToggleOptionDto":{"type":"object","required":["value"],"properties":{"metadata":{"type":"object","description":"(Optional) Toggle metadata","allowEmptyValue":false},"strategy":{"description":"(Optional) Toggle option strategy","allowEmptyValue":false,"$ref":"#/definitions/StrategyDto"},"value":{"type":"string","description":"The actual value of the evaluation result","allowEmptyValue":false}},"title":"ToggleOptionDto"},"UpdateFlagRequest":{"type":"object","properties":{"description":{"type":"string","description":"Description of the Feature Flag","allowEmptyValue":false,"minLength":1,"maxLength":200},"multivariateToggle":{"description":"Can be set if toggle type is multivariate.","allowEmptyValue":false,"$ref":"#/definitions/MultivariateToggleDto"},"publicFlag":{"type":"boolean","example":false,"description":"Public flags are flags that should be evaluated in client based SDKs, meaning their value is public.","allowEmptyValue":false},"strategy":{"description":"1. Can be set if toggle type is boolean.\n2. Leave null if the strategy should not be updated.\n3. Set empty value ({}) if strategy should be removed.","allowEmptyValue":false,"$ref":"#/definitions/StrategyDto"},"tags":{"type":"array","description":"Tags - for management capabilities","allowEmptyValue":false,"items":{"type":"string"}}},"title":"UpdateFlagRequest"},"UpdateSdkKeyRequest":{"type":"object","properties":{"description":{"type":"string","description":"The description of the SDK Key","allowEmptyValue":false,"minLength":1,"maxLength":200},"displayName":{"type":"string","description":"The display name of the SDK Key","allowEmptyValue":false,"minLength":1,"maxLength":50}},"title":"UpdateSdkKeyRequest"}}}