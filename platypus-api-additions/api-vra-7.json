{
  "swagger": "2.0",
  "info": {
    "version": "1.2",
    "title": "VMware vRealize Automation 7",
    "contact": {
      "name": "Grant Orchard",
      "email": "gorchard@vmware.com",
      "url": "grantorchard.com"
    }
  },
  "host": "platypus_host",
  "basePath": "/",
  "paths": {
    "/catalog-service/api/consumer/resources/{id}/icon": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/resources/{id}/icon"
      }
    },
    "/software-service/api/softwarecomponenttypes/{id}": {
      "put": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/softwarecomponenttypes/{id}"
      },
      "delete": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/softwarecomponenttypes/{id}"
      },
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/softwarecomponenttypes/{id}"
      }
    },
    "/composition-service/api/requests/catalog/{cafeRequestId}/hierarchy/schema/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "cafeRequestId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/catalog/{cafeRequestId}/hierarchy/schema/update"
      }
    },
    "/catalog-service/api/provider/resourceTypes/{typeId}/lifecycleActions/{lifecycleId}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "typeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "lifecycleId",
          "in": "path"
        }],
        "operationId": "/api/provider/resourceTypes/{typeId}/lifecycleActions/{lifecycleId}"
      }
    },
    "/catalog-service/api/consumer/resourceViews": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "managedOnly",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "withExtendedData",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "withOperations",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "managedOnly",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "withExtendedData",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "withOperations",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/consumer/resourceViews"
      }
    },
    "/composition-service/api/blueprints/{id}/status": {
      "put": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/blueprints/{id}/status"
      }
    },
    "/workitem-service/api/workitems/{id}": {
      "put": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workitems/{id}"
      },
      "delete": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/workitems/{id}"
      },
      "get": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/workitems/{id}"
      }
    },
    "/catalog-service/api/consumer/requests/{id}/forms/submission/{elementId}/values": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/requests/{id}/forms/submission/{elementId}/values"
      }
    },
    "/catalog-service/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/configurations/{configurationId}": {
      "delete": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "configurationId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/configurations/{configurationId}"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "configurationId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/configurations/{configurationId}"
      }
    },
    "/composition-service/api/requests/{requestId}/metadata": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }],
        "operationId": "/api/requests/{requestId}/metadata"
      }
    },
    "/advanced-designer-service/api/schema-service/{classId}/{typeFilter}/schema/{fieldId}/schema": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }],
        "operationId": "/api/schema-service/{classId}/{typeFilter}/schema/{fieldId}/schema"
      }
    },
    "/workitem-service/api/assignees/user/delegates/reset": {
      "post": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/assignees/user/delegates/reset"
      }
    },
    "/reservation-service/api/reservations/policies/{id}": {
      "put": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/policies/{id}"
      },
      "delete": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/reservations/policies/{id}"
      },
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/reservations/policies/{id}"
      }
    },
    "/catalog-service/api/resourceOperations/{id}": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/resourceOperations/{id}"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/resourceOperations/{id}"
      }
    },
    "/management-service/api/work-items/forms/{formId}/{instanceId}": {
      "get": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "instanceId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }],
        "operationId": "/api/work-items/forms/{formId}/{instanceId}"
      }
    },
    "/catalog-service/api/consumer/catalogItems/{id}/forms/details/update": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/catalogItems/{id}/forms/details/update"
      }
    },
    "/composition-service/api/componenttypes/{id}/forms/author/{elementId}/values": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/componenttypes/{id}/forms/author/{elementId}/values"
      }
    },
    "/event-broker-service/api/data-service/schema/{classId}/default/{fieldId}/values{arg0}{arg1}": {
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/{fieldId}/values"
      }
    },
    "/advanced-designer-service/api/data-service/schema/{classId}/default/{fieldId}/values{arg0}{arg1}": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/{fieldId}/values"
      }
    },
    "/catalog-service/api/data-service/schema/{classId}/instances/{id}/update": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/update"
      }
    },
    "/catalog-service/api/providers": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/providers"
      }
    },
    "/composition-service/api/requests/catalog/{cafeRequestId}/hierarchy/{fieldPath}/form/{formType}": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "cafeRequestId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldPath",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "formType",
          "in": "path"
        }],
        "operationId": "/api/requests/catalog/{cafeRequestId}/hierarchy/{fieldPath}/form/{formType}"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/event-broker/subscriptions/{subscriptionId}": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "subscriptionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/event-broker/subscriptions/{subscriptionId}"
      },
      "delete": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "subscriptionId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/event-broker/subscriptions/{subscriptionId}"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "subscriptionId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/event-broker/subscriptions/{subscriptionId}"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/principals/{principalId}/scopes/{scopeId}/roles": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/scopes/{scopeId}/roles"
      },
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/scopes/{scopeId}/roles"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/scopes/{scopeId}/roles"
      }
    },
    "/identity/api/authorization/roles/{roleId}/permissions/admin": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "roleId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/roles/{roleId}/permissions/admin"
      }
    },
    "/content-management-service/api/packages/validate": {
      "post": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "resolutionMode",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "resolutionMode",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/packages/validate"
      }
    },
    "/network-service/api/security-tags/applyToMachine/{machineId}": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "machineId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/security-tags/applyToMachine/{machineId}"
      }
    },
    "/catalog-service/api/consumer/resources/{resourceId}/actions/{resourceActionId}/requests/template": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceActionId",
          "in": "path"
        }],
        "operationId": "/api/consumer/resources/{resourceId}/actions/{resourceActionId}/requests/template"
      }
    },
    "/software-service/api/scripttypes/{id}": {
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/scripttypes/{id}"
      }
    },
    "/composition-service/api/requests/hierarchy/{blueprintId}/{fieldPath}/typeSchema": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldPath",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }],
        "operationId": "/api/requests/hierarchy/{blueprintId}/{fieldPath}/typeSchema"
      }
    },
    "/catalog-service/api/providerTypes": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/providerTypes"
      }
    },
    "/advanced-designer-service/api/resourceOperations": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/resourceOperations"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/resourceOperations"
      }
    },
    "/composition-service/api/deploymentresources/{id}": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "includeComponentResourceData",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "includeComponentResourceData",
          "in": "query"
        }],
        "operationId": "/api/deploymentresources/{id}"
      }
    },
    "/reservation-service/api/data-service/schema/{classId}/default": {
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/default"
      }
    },
    "/catalog-service/api/provider/resourceTypes/{typeId}/resourceCount": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "typeId",
          "in": "path"
        }],
        "operationId": "/api/provider/resourceTypes/{typeId}/resourceCount"
      }
    },
    "/composition-service/api/data-service/data/{classId}/{id}": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/data/{classId}/{id}"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/configurations/default/status": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/configurations/default/status"
      }
    },
    "/reservation-service/api/reservations": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations"
      },
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/reservations"
      }
    },
    "/identity/api/authorization/scopes/types/{id}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/scopes/types/{id}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/authorization/scopes/types/{id}"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/authorization/scopes/types/{id}"
      }
    },
    "/identity/api/data-service/schema/{classId}/default/update": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/update"
      }
    },
    "/catalog-service/api/icons/{id}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/icons/{id}"
      }
    },
    "/composition-service/api/data-service/schema/{classId}/types/{typeFilter}/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/update"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/types/{resourceTypeId}": {
      "delete": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceTypeId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/types/{resourceTypeId}"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceTypeId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/types/{resourceTypeId}"
      }
    },
    "/management-service/api/management/metrics": {
      "put": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/management/metrics"
      }
    },
    "/network-service/api/forms/{formId}/{bindingId}/update": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/forms/{formId}/{bindingId}/update"
      }
    },
    "/identity/api/tenants/{tenantId}/groups": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/groups"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "criteria",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "domain",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "parentGroup",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "groupType",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "permissionFiltered",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "role",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "criteria",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "domain",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "parentGroup",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "groupType",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "permissionFiltered",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "role",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/groups"
      }
    },
    "/catalog-service/api/data-service/schema/{classId}/types/{typeFilter}/update": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/update"
      }
    },
    "/network-service/api/security-groups/types/{id}": {
      "put": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/security-groups/types/{id}"
      },
      "delete": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/security-groups/types/{id}"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/security-groups/types/{id}"
      }
    },
    "/network-service/api/requests": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests"
      }
    },
    "/workitem-service/api/assignees/{principalId}/delegates/reset": {
      "post": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/assignees/{principalId}/delegates/reset"
      }
    },
    "/component-registry/services/logging": {
      "post": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/services/logging"
      },
      "delete": {
        "tags": [
          "component-registry"
        ],
        "parameters": [],
        "operationId": "/services/logging"
      },
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [],
        "operationId": "/services/logging"
      }
    },
    "/management-service/api/management/endpoint/{tenantId}/testconnection": {
      "put": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/management/endpoint/{tenantId}/testconnection"
      }
    },
    "/identity/api/tenants/{tenantId}/subtenants/{id}/roles/{scopeRoleRef}/principals/{principalId}": {
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeRoleRef",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/{id}/roles/{scopeRoleRef}/principals/{principalId}"
      }
    },
    "/approval-service/api/policytypes/{policyTypeId}/schema/types/{typeFilter}/{fieldId}/schema": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "policyTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }],
        "operationId": "/api/policytypes/{policyTypeId}/schema/types/{typeFilter}/{fieldId}/schema"
      }
    },
    "/advanced-designer-service/api/resourceOperations/{resourceOperationId}/clone": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceOperationId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/resourceOperations/{resourceOperationId}/clone"
      }
    },
    "/workitem-service/api/workitems/types": {
      "post": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workitems/types"
      },
      "get": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/workitems/types"
      }
    },
    "/identity/api/authorization/roles/extensions/{extensionId}/permissions/assigned/{permissionId}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "extensionId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "permissionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/roles/extensions/{extensionId}/permissions/assigned/{permissionId}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "extensionId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "permissionId",
          "in": "path"
        }],
        "operationId": "/api/authorization/roles/extensions/{extensionId}/permissions/assigned/{permissionId}"
      }
    },
    "/identity/api/authorization/scopes/types/{typeId}/permissions/admin/{adminPermissionId}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "typeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "adminPermissionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/scopes/types/{typeId}/permissions/admin/{adminPermissionId}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "typeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "adminPermissionId",
          "in": "path"
        }],
        "operationId": "/api/authorization/scopes/types/{typeId}/permissions/admin/{adminPermissionId}"
      }
    },
    "/workitem-service/api/workitems/{id}/form/{elementId}/values": {
      "post": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workitems/{id}/form/{elementId}/values"
      }
    },
    "/software-service/api/tenants/{tenantId}/nodes": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/nodes"
      }
    },
    "/catalog-service/api/identity/subtenants/validate": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/identity/subtenants/validate"
      }
    },
    "/management-service/api/management/metrics/{vmIaasID}": {
      "get": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "vmIaasID",
          "in": "path"
        }],
        "operationId": "/api/management/metrics/{vmIaasID}"
      }
    },
    "/advanced-designer-service/api/workitems": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workitems"
      }
    },
    "/catalog-service/api/consumer/resources/{resourceId}/actions/{resourceActionId}/forms/request/{elementId}/values": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceActionId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/resources/{resourceId}/actions/{resourceActionId}/forms/request/{elementId}/values"
      }
    },
    "/identity/api/tenants/{tenantId}/groups/{parentGroupId}/groups/{groupId}": {
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "parentGroupId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "groupId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/groups/{parentGroupId}/groups/{groupId}"
      }
    },
    "/network-service/api/composition/allocationconstraints/resourcetypes/{resTypeId}": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "componenttypeid",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "componenttypeid",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/composition/allocationconstraints/resourcetypes/{resTypeId}"
      }
    },
    "/component-registry/services/{id}/endpoints": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/services/{id}/endpoints"
      }
    },
    "/catalog-service/api/catalogItems/{id}/icon": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/catalogItems/{id}/icon"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/acl": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/acl"
      },
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/acl"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "principalId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "resourceRefId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "roleId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "principalId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "resourceRefId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "roleId",
          "in": "query"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/acl"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "principalId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "resourceRefId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "roleId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "principalId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "resourceRefId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "roleId",
          "in": "query"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/acl"
      }
    },
    "/reservation-service/api/reservations/info": {
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "category",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "category",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/reservations/info"
      }
    },
    "/event-broker-service/api/subscriptions/{subscriptionId}/poll/{count}": {
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "subscriptionId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "count",
          "in": "path"
        }],
        "operationId": "/api/subscriptions/{subscriptionId}/poll/{count}"
      }
    },
    "/identity/api/tenants": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants"
      }
    },
    "/component-registry/endpoints/types": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/endpoints/types"
      }
    },
    "/advanced-designer-service/api/content/validation": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/content/validation"
      }
    },
    "/composition-service/api/forms/{formId}/{instanceId}": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "instanceId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }],
        "operationId": "/api/forms/{formId}/{instanceId}"
      }
    },
    "/advanced-designer-service/api/inventory/types": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "endpointType",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "typeName",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "includeSimpleTypes",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "endpointType",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "typeName",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "includeSimpleTypes",
          "in": "query"
        }],
        "operationId": "/api/inventory/types"
      }
    },
    "/catalog-service/api/consumer/calendarEvents": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "start",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "end",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "start",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "end",
          "in": "query"
        }],
        "operationId": "/api/consumer/calendarEvents"
      }
    },
    "/advanced-designer-service/api/composition/requests": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/composition/requests"
      }
    },
    "/component-registry/services/logging/{serviceTypeId}/{category}": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "serviceTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "category",
          "in": "path"
        }],
        "operationId": "/services/logging/{serviceTypeId}/{category}"
      }
    },
    "/management-service/api/work-item/tasks": {
      "post": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "leaseDays",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "delayDays",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "requestReason",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "isEmailGroupManager",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "leaseDays",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "delayDays",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "requestReason",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "isEmailGroupManager",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/work-item/tasks"
      }
    },
    "/catalog-service/api/consumer/catalogItems/{id}/forms/details": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }],
        "operationId": "/api/consumer/catalogItems/{id}/forms/details"
      }
    },
    "/advanced-designer-service/api/forms/{formId}/{bindingId}/{elementId}/values": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/forms/{formId}/{bindingId}/{elementId}/values"
      }
    },
    "/content-management-service/api/packages/{id}/contents": {
      "get": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/packages/{id}/contents"
      }
    },
    "/reservation-service/api/reservations/types": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/types"
      },
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/reservations/types"
      }
    },
    "/advanced-designer-service/api/inventory/plugins/{pluginName}/{pluginType}/values": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "asTree",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "pluginName",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "pluginType",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "asTree",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/inventory/plugins/{pluginName}/{pluginType}/values"
      }
    },
    "/notification-service/api/notifications/userPreference": {
      "put": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/notifications/userPreference"
      },
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [],
        "operationId": "/api/notifications/userPreference"
      }
    },
    "/composition-service/api/requests/hierarchy/{blueprintId}/schema/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/hierarchy/{blueprintId}/schema/update"
      }
    },
    "/content-management-service/api/provider/contenttypes/{id}": {
      "put": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/provider/contenttypes/{id}"
      },
      "delete": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/provider/contenttypes/{id}"
      },
      "get": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/provider/contenttypes/{id}"
      }
    },
    "/approval-service/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values"
      }
    },
    "/advanced-designer-service/api/data-service/list/{classId}/types/{typeFilter}{arg0}{arg1}": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/types/{typeFilter}"
      }
    },
    "/identity/api/tenants/{tenantId}/externalIdP/**": {
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/externalIdP/**"
      }
    },
    "/catalog-service/api/provider/providers/{providerId}/resources/upgrade/{externalResourceId}": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "externalResourceId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/provider/providers/{providerId}/resources/upgrade/{externalResourceId}"
      }
    },
    "/component-registry/services/logging/{category}/level": {
      "put": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "category",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/services/logging/{category}/level"
      }
    },
    "/notification-service/api/notifications/providers/connectivity": {
      "post": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/notifications/providers/connectivity"
      }
    },
    "/network-service/api/providers/{providerId}/requests/{bindingId}/complete": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/providers/{providerId}/requests/{bindingId}/complete"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/principals/{principalId}/roles/{roleId}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "roleId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/roles/{roleId}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "roleId",
          "in": "path"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/roles/{roleId}"
      }
    },
    "/composition-service/api/requests/hierarchy/{blueprintId}/{fieldPath}/form/{formType}/{formElementId}/values": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldPath",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "formType",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "formElementId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/hierarchy/{blueprintId}/{fieldPath}/form/{formType}/{formElementId}/values"
      }
    },
    "/reservation-service/api/reservations/policies/types": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/policies/types"
      },
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/reservations/policies/types"
      }
    },
    "/catalog-service/api/consumer/requests/{id}/resourceViews": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/consumer/requests/{id}/resourceViews"
      }
    },
    "/network-service/api/composition/componentallocator/requests": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/composition/componentallocator/requests"
      }
    },
    "/catalog-service/api/consumer/resources/{id}/form/{elementId}/values": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/resources/{id}/form/{elementId}/values"
      }
    },
    "/network-service/api/data-service/schema/{classId}/default/{fieldId}/values{arg0}{arg1}": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/{fieldId}/values"
      }
    },
    "/composition-service/api/requests/{callbackRequestId}": {
      "delete": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "callbackRequestId",
          "in": "path"
        }],
        "operationId": "/api/requests/{callbackRequestId}"
      }
    },
    "/software-service/api/data-service/schema/{classId}/default": {
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/default"
      }
    },
    "/composition-service/api/requests/{requestId}/rollback": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/{requestId}/rollback"
      }
    },
    "/approval-service/api/policytypes": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/policytypes"
      },
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/policytypes"
      }
    },
    "/catalog-service/api/consumer/entitledCatalogItems/{id}/requests/template": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "businessGroupId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "requestedFor",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "businessGroupId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "requestedFor",
          "in": "query"
        }],
        "operationId": "/api/consumer/entitledCatalogItems/{id}/requests/template"
      }
    },
    "/composition-service/api/deploymentresources/{tenantId}": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "upgrade",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "dryRun",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "upgrade",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "dryRun",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/deploymentresources/{tenantId}"
      }
    },
    "/catalog-service/api/provider/resourceActions/{bindingId}": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/provider/resourceActions/{bindingId}"
      },
      "delete": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }],
        "operationId": "/api/provider/resourceActions/{bindingId}"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }],
        "operationId": "/api/provider/resourceActions/{bindingId}"
      }
    },
    "/software-service/api/data-service/data/{classId}/{id}": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/data/{classId}/{id}"
      }
    },
    "/catalog-service/api/provider/resources": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "providerId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "requestId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "providerId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "requestId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/provider/resources"
      }
    },
    "/reservation-service/api/data-service/schema/{classId}/default/update": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/update"
      }
    },
    "/network-service/api/security-policies/types/{id}": {
      "put": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/security-policies/types/{id}"
      },
      "delete": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/security-policies/types/{id}"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/security-policies/types/{id}"
      }
    },
    "/catalog-service/api/consumer/entitledCatalogItems/{id}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/entitledCatalogItems/{id}"
      }
    },
    "/identity/api/data-service/list/{classId}/default": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/default"
      }
    },
    "/event-broker-service/api/data-service/schema/{classId}/types/{typeFilter}{arg0}{arg1}": {
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}"
      }
    },
    "/branding-service/api/brandings/effective": {
      "get": {
        "tags": [
          "branding-service"
        ],
        "parameters": [],
        "operationId": "/api/brandings/effective"
      }
    },
    "/advanced-designer-service/api/schema-service/{classId}/schema": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }],
        "operationId": "/api/schema-service/{classId}/schema"
      }
    },
    "/notification-service/api/notifications/global/providers/creationinfo": {
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/notifications/global/providers/creationinfo"
      }
    },
    "/advanced-designer-service/api/data-service/schema/{classId}/default/update{arg0}": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/update"
      }
    },
    "/identity/api/authorization/roles/{roleId}/permissions": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "roleId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/roles/{roleId}/permissions"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/principals/{principalId}/scopes/{scopeId}": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/scopes/{scopeId}"
      }
    },
    "/network-service/api/data-service/list/{classId}/types/{typeFilter}{arg0}{arg1}": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/types/{typeFilter}"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/authorities/extended/permissions": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "type",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "type",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/authorities/extended/permissions"
      }
    },
    "/composition-service/api/deploymentresources/{tenantId}/upgrade": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/deploymentresources/{tenantId}/upgrade"
      }
    },
    "/console-proxy-service/api/ticket": {
      "post": {
        "tags": [
          "console-proxy"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/ticket"
      }
    },
    "/reservation-service/api/reservations/subtenants/{subtenantId}": {
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "subtenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }],
        "operationId": "/api/reservations/subtenants/{subtenantId}"
      }
    },
    "/advanced-designer-service/api/forms": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/forms"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/forms"
      }
    },
    "/identity/api/tenants/{tenantId}/groups/{groupId}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "groupId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/groups/{groupId}"
      },
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "groupId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/groups/{groupId}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "groupId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/groups/{groupId}"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "groupId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/groups/{groupId}"
      }
    },
    "/advanced-designer-service/api/requests": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests"
      }
    },
    "/advanced-designer-service/api/content/{classId}/{id}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "secureValueFormat",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "secureValueFormat",
          "in": "query"
        }],
        "operationId": "/api/content/{classId}/{id}"
      }
    },
    "/catalog-service/api/provider/resourceActions": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/provider/resourceActions"
      }
    },
    "/advanced-designer-service/api/content/xaasBundleType/{id}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/content/xaasBundleType/{id}"
      }
    },
    "/identity/api/tenants/{tenantId}/subtenants/{id}/principals/{principalId}/roles": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/{id}/principals/{principalId}/roles"
      }
    },
    "/composition-service/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values"
      }
    },
    "/composition-service/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values"
      }
    },
    "/component-registry/services/types/{serviceTypeId}/endpoints": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "serviceTypeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/services/types/{serviceTypeId}/endpoints"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/categories/{categoryId}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "categoryId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/categories/{categoryId}"
      }
    },
    "/network-service/api/composition/componentvalidator": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/composition/componentvalidator"
      }
    },
    "/workitem-service/api/workitems/{id}/children": {
      "get": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/workitems/{id}/children"
      }
    },
    "/approval-service/api/cafe-forms/forms/{formId}/{instanceId}": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "instanceId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }],
        "operationId": "/api/cafe-forms/forms/{formId}/{instanceId}"
      }
    },
    "/catalog-service/api/catalogItems/{catalogItemId}/entitlements": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "serviceId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "catalogItemId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "serviceId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/catalogItems/{catalogItemId}/entitlements"
      }
    },
    "/approval-service/api/info/approvals/{approvalId}/form/source/{elementId}/values": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "approvalId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/info/approvals/{approvalId}/form/source/{elementId}/values"
      }
    },
    "/approval-service/api/policytypes/{policyTypeId}/schema": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "policyTypeId",
          "in": "path"
        }],
        "operationId": "/api/policytypes/{policyTypeId}/schema"
      }
    },
    "/workitem-service/api/workitems/notifications": {
      "post": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workitems/notifications"
      }
    },
    "/software-service/api/agentcertificate/requestkey": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/agentcertificate/requestkey"
      }
    },
    "/management-service/api/work-item/callbacks": {
      "post": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/work-item/callbacks"
      }
    },
    "/network-service/api/security-policies/{id}": {
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/security-policies/{id}"
      }
    },
    "/network-service/api/load-balancers": {
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/load-balancers"
      }
    },
    "/network-service/api/data-service/schema/{classId}/instances/{id}/update{arg0}{arg1}": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/update"
      }
    },
    "/composition-service/api/requests/catalog/{cafeRequestId}/hierarchy": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "cafeRequestId",
          "in": "path"
        }],
        "operationId": "/api/requests/catalog/{cafeRequestId}/hierarchy"
      }
    },
    "/plugin-service/api/plugins": {
      "post": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/plugins"
      },
      "get": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/plugins"
      }
    },
    "/approval-service/api/data-service/schema/{classId}/instances/{id}/update": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/update"
      }
    },
    "/software-service/api/data-service/schema/{classId}/default/{fieldId}/values": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/{fieldId}/values"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/authorities/extended": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "type",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "type",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/authorities/extended"
      }
    },
    "/catalog-service/api/consumer/entitledCatalogItems/{id}/requests": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "businessGroupId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "requestedFor",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "businessGroupId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "requestedFor",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/entitledCatalogItems/{id}/requests"
      }
    },
    "/approval-service/api/info/approvals/{approvalId}/form/source/update": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "approvalId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/info/approvals/{approvalId}/form/source/update"
      }
    },
    "/advanced-designer-service/api/forms/{formId}/{bindingId}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }],
        "operationId": "/api/forms/{formId}/{bindingId}"
      }
    },
    "/composition-service/api/requests/catalog/{cafeRequestId}/hierarchy/typeSchema": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "cafeRequestId",
          "in": "path"
        }],
        "operationId": "/api/requests/catalog/{cafeRequestId}/hierarchy/typeSchema"
      }
    },
    "/approval-service/api/info/approvalrequests/{requestId}/form/source/{elementId}/values": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/info/approvalrequests/{requestId}/form/source/{elementId}/values"
      }
    },
    "/catalog-service/api/consumer/requests/{id}/forms/submission/update": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/requests/{id}/forms/submission/update"
      }
    },
    "/software-service/api/data-service/schema/{classId}/instances/{id}": {
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}"
      }
    },
    "/approval-service/api/policytypes/{id}": {
      "put": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/policytypes/{id}"
      },
      "delete": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/policytypes/{id}"
      },
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/policytypes/{id}"
      }
    },
    "/reservation-service/api/reservations/subtenants": {
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/reservations/subtenants"
      }
    },
    "/notification-service/api/notifications/tenants/{tenantId}/scenarioConfiguration": {
      "put": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/notifications/tenants/{tenantId}/scenarioConfiguration"
      },
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }],
        "operationId": "/api/notifications/tenants/{tenantId}/scenarioConfiguration"
      }
    },
    "/component-registry/services": {
      "post": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/services"
      },
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/services"
      }
    },
    "/software-service/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values"
      }
    },
    "/advanced-designer-service/api/schema-service/{classId}/{typeFilter}/schema/update": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/schema-service/{classId}/{typeFilter}/schema/update"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/configurations/status": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/configurations/status"
      }
    },
    "/properties-service/api/propertygroups": {
      "post": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/propertygroups"
      },
      "get": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/propertygroups"
      }
    },
    "/network-service/api/forms/{formId}/{bindingId}": {
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }],
        "operationId": "/api/forms/{formId}/{bindingId}"
      }
    },
    "/catalog-service/api/data-service/schema/{classId}/default/update": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/update"
      }
    },
    "/identity/api/authorization/roles": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/roles"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/roles"
      }
    },
    "/workitem-service/api/workitems/{id}/form/update": {
      "post": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workitems/{id}/form/update"
      }
    },
    "/reservation-service/api/reservations/types/categories/{id}": {
      "put": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/types/categories/{id}"
      },
      "delete": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/reservations/types/categories/{id}"
      },
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/reservations/types/categories/{id}"
      }
    },
    "/network-service/api/load-balancers/types": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/load-balancers/types"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/load-balancers/types"
      }
    },
    "/content-management-service/api/packages/{id}/validate": {
      "get": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/packages/{id}/validate"
      }
    },
    "/composition-service/api/requests/{requestId}/schema": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }],
        "operationId": "/api/requests/{requestId}/schema"
      }
    },
    "/network-service/api/networks/{id}": {
      "delete": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/networks/{id}"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/networks/{id}"
      }
    },
    "/content-management-service/api/provider/contents/{contentTypeId}/{id}": {
      "delete": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "contentTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/provider/contents/{contentTypeId}/{id}"
      },
      "get": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "contentTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/provider/contents/{contentTypeId}/{id}"
      }
    },
    "/component-registry/services/types/{serviceTypeId}/endpoints/{endpointTypeId}": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "serviceTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "endpointTypeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/services/types/{serviceTypeId}/endpoints/{endpointTypeId}"
      }
    },
    "/content-management-service/api/contents/{contentTypeId}/{contentId}/data": {
      "post": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "contentTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "contentId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/contents/{contentTypeId}/{contentId}/data"
      }
    },
    "/composition-service/api/blueprints/{id}/costs/upfront": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/blueprints/{id}/costs/upfront"
      }
    },
    "/reservation-service/api/data-service/list/{classId}/default": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/default"
      }
    },
    "/composition-service/api/requests/hierarchy/{blueprintId}/{fieldPath}/form/{formType}": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldPath",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "formType",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }],
        "operationId": "/api/requests/hierarchy/{blueprintId}/{fieldPath}/form/{formType}"
      }
    },
    "/composition-service/api/requests/catalog/{cafeRequestId}/hierarchy/{compPath}/schema": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "cafeRequestId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "compPath",
          "in": "path"
        }],
        "operationId": "/api/requests/catalog/{cafeRequestId}/hierarchy/{compPath}/schema"
      }
    },
    "/reservation-service/api/reservations/forms/types/{reservationTypeId}": {
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "reservationTypeId",
          "in": "path"
        }],
        "operationId": "/api/reservations/forms/types/{reservationTypeId}"
      }
    },
    "/catalog-service/api/consumer/services/{id}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/services/{id}"
      }
    },
    "/notification-service/api/notifications/{id}/deliverystatus": {
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/notifications/{id}/deliverystatus"
      }
    },
    "/event-broker-service/api/subscriptions": {
      "put": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/subscriptions"
      },
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/subscriptions"
      },
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/subscriptions"
      }
    },
    "/approval-service/api/info/approvalrequests/{requestId}/form/source/update": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/info/approvalrequests/{requestId}/form/source/update"
      }
    },
    "/network-service/api/security-tags/types": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/security-tags/types"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/security-tags/types"
      }
    },
    "/software-service/api/composition/requests": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/composition/requests"
      }
    },
    "/event-broker-service/api/events": {
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/events"
      },
      "delete": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [],
        "operationId": "/api/events"
      },
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/events"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/principals/{principalId}/roles": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/roles"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/roles"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "type",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "scopeType",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "scopeId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "type",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "scopeType",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "scopeId",
          "in": "query"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/roles"
      }
    },
    "/event-broker-service/api/topics/{id}": {
      "put": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/topics/{id}"
      },
      "delete": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/topics/{id}"
      },
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/topics/{id}"
      }
    },
    "/advanced-designer-service/api/requests/{requestId}/rollback": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/{requestId}/rollback"
      }
    },
    "/reservation-service/api/data-service/schema/{classId}/types/{typeFilter}/update": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/update"
      }
    },
    "/event-broker-service/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values{arg0}{arg1}{arg2}": {
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg2",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values"
      }
    },
    "/reservation-service/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values"
      }
    },
    "/composition-service/api/composition/requests": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/composition/requests"
      }
    },
    "/advanced-designer-service/api/endpoints/types/{operationType}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "operationType",
          "in": "path"
        }],
        "operationId": "/api/endpoints/types/{operationType}"
      }
    },
    "/identity/api/tenants/{tenantId}/subtenants/{id}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/{id}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/{id}"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/{id}"
      }
    },
    "/composition-service/api/requests/{requestId}/{compPath}/schema": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "compPath",
          "in": "path"
        }],
        "operationId": "/api/requests/{requestId}/{compPath}/schema"
      }
    },
    "/composition-service/api/requests/catalog/{cafeRequestId}/hierarchy/{fieldPath}/form/{formType}/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "cafeRequestId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldPath",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "formType",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/catalog/{cafeRequestId}/hierarchy/{fieldPath}/form/{formType}/update"
      }
    },
    "/identity/api/tenants/{tenantId}/relyingparty": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/relyingparty"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/types": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/types"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "external",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "external",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/types"
      }
    },
    "/catalog-service/api/cafe-forms/forms/{formId}/{instanceId}/{elementId}/values": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "instanceId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/cafe-forms/forms/{formId}/{instanceId}/{elementId}/values"
      }
    },
    "/component-registry/services/types/{serviceTypeId}/default": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "serviceTypeId",
          "in": "path"
        }],
        "operationId": "/services/types/{serviceTypeId}/default"
      }
    },
    "/identity/api/data-service/data/{classId}/{id}": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/data/{classId}/{id}"
      }
    },
    "/composition-service/api/content/{classId}/{id}": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "secureValueFormat",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "secureValueFormat",
          "in": "query"
        }],
        "operationId": "/api/content/{classId}/{id}"
      }
    },
    "/advanced-designer-service/api/endpoints/update/{endpointId}/update": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "endpointId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/endpoints/update/{endpointId}/update"
      }
    },
    "/advanced-designer-service/api/categories/{categoryId}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "categoryId",
          "in": "path"
        }],
        "operationId": "/api/categories/{categoryId}"
      }
    },
    "/composition-service/api/requests/hierarchy/{blueprintId}/schema": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }],
        "operationId": "/api/requests/hierarchy/{blueprintId}/schema"
      }
    },
    "/identity/api/tenants/solutions": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/solutions"
      }
    },
    "/component-registry/services/types/{serviceTypeId}": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "serviceTypeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/services/types/{serviceTypeId}"
      }
    },
    "/identity/api/tenants/{tenantId}/groups/{groupId}/parents": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "groupType",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "groupId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "groupType",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/groups/{groupId}/parents"
      }
    },
    "/catalog-service/api/services/{id}": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/services/{id}"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/services/{id}"
      }
    },
    "/network-service/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values{arg0}{arg1}{arg2}": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg2",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values"
      }
    },
    "/composition-service/api/requests/request_initializer": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/request_initializer"
      }
    },
    "/workitem-service/api/icons": {
      "post": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/icons"
      },
      "get": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/icons"
      }
    },
    "/catalog-service/api/consumer/resourceOperations/{id}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/resourceOperations/{id}"
      }
    },
    "/network-service/api/security-tags/types/{id}": {
      "put": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/security-tags/types/{id}"
      },
      "delete": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/security-tags/types/{id}"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/security-tags/types/{id}"
      }
    },
    "/software-service/api/content/{classId}/{id}": {
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "secureValueFormat",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "secureValueFormat",
          "in": "query"
        }],
        "operationId": "/api/content/{classId}/{id}"
      }
    },
    "/portal-service/api/portals": {
      "post": {
        "tags": [
          "portal-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/portals"
      },
      "get": {
        "tags": [
          "portal-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/portals"
      }
    },
    "/approval-service/api/policytypes/{policyTypeId}/schema/{fieldId}/values": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "policyTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/policytypes/{policyTypeId}/schema/{fieldId}/values"
      }
    },
    "/notification-service/api/notifications/tenants/{tenantId}/providers": {
      "post": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/notifications/tenants/{tenantId}/providers"
      },
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/notifications/tenants/{tenantId}/providers"
      }
    },
    "/software-service/api/data-service/list/{classId}/types/{typeFilter}": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/types/{typeFilter}"
      }
    },
    "/reservation-service/api/data-service/schema/{classId}/default/{fieldId}/values": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/{fieldId}/values"
      }
    },
    "/component-registry/endpoints/types/extensions": {
      "post": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/endpoints/types/extensions"
      },
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/endpoints/types/extensions"
      }
    },
    "/component-registry/endpoints/types/specs/{id}": {
      "put": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/endpoints/types/specs/{id}"
      },
      "delete": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/endpoints/types/specs/{id}"
      },
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/endpoints/types/specs/{id}"
      }
    },
    "/network-service/api/security-policies/types": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/security-policies/types"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/security-policies/types"
      }
    },
    "/catalog-service/api/consumer/resourceTypes/{id}/descendants": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/resourceTypes/{id}/descendants"
      }
    },
    "/advanced-designer-service/api/content/bundles": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefix",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefixOnlyConflicting",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefix",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefixOnlyConflicting",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/content/bundles"
      },
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefix",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefixOnlyConflicting",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefix",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefixOnlyConflicting",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/content/bundles"
      }
    },
    "/event-broker-service/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values{arg0}{arg1}{arg2}": {
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg2",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values"
      }
    },
    "/catalog-service/api/consumer/requests/{id}/forms/details/{elementId}/values": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/requests/{id}/forms/details/{elementId}/values"
      }
    },
    "/network-service/api/security-groups/types": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/security-groups/types"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/security-groups/types"
      }
    },
    "/component-registry/endpoints/types/{endpointTypeId}/default": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "endpointTypeId",
          "in": "path"
        }],
        "operationId": "/endpoints/types/{endpointTypeId}/default"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/principals": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "containsRole",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "hasRole",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "containsRole",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "hasRole",
          "in": "query"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals"
      }
    },
    "/catalog-service/api/consumer/services": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "onBehalfOf",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "onBehalfOf",
          "in": "query"
        }],
        "operationId": "/api/consumer/services"
      }
    },
    "/identity/api/tenants/{tenantId}/subtenants/{id}/roles/{scopeRoleRef}": {
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeRoleRef",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/{id}/roles/{scopeRoleRef}"
      }
    },
    "/approval-service/api/data-service/schema/{classId}/default/{fieldId}/values": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/{fieldId}/values"
      }
    },
    "/component-registry/services/{id}/endpoints/{endpointTypeId}": {
      "post": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "endpointTypeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/services/{id}/endpoints/{endpointTypeId}"
      },
      "delete": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "endpointTypeId",
          "in": "path"
        }],
        "operationId": "/services/{id}/endpoints/{endpointTypeId}"
      },
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "endpointTypeId",
          "in": "path"
        }],
        "operationId": "/services/{id}/endpoints/{endpointTypeId}"
      }
    },
    "/network-service/api/security-groups/{id}/security-policies": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/security-groups/{id}/security-policies"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/types/all": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/types/all"
      }
    },
    "/event-broker-service/api/data-service/schema/{classId}/default{arg0}": {
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/default"
      }
    },
    "/composition-service/api/data-service/schema/{classId}/default": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/default"
      }
    },
    "/network-service/api/data-service/schema/{classId}/default/update{arg0}": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/update"
      }
    },
    "/catalog-service/api/data-service/list/{classId}/default": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/default"
      }
    },
    "/advanced-designer-service/api/data-service/schema/{classId}/types/{typeFilter}{arg0}{arg1}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}"
      }
    },
    "/catalog-service/api/provider/resourceTypes/{typeId}/operations": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "typeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/provider/resourceTypes/{typeId}/operations"
      }
    },
    "/advanced-designer-service/api/scriptActions/{categoryName}/{name}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "categoryName",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "name",
          "in": "path"
        }],
        "operationId": "/api/scriptActions/{categoryName}/{name}"
      }
    },
    "/network-service/api/data-service/list/{classId}/default{arg0}": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/default"
      }
    },
    "/component-registry/services/types": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/services/types"
      }
    },
    "/advanced-designer-service/api/content/bundles/filters": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/content/bundles/filters"
      },
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "filter",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/content/bundles/filters"
      }
    },
    "/advanced-designer-service/api/scriptActions/support": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [],
        "operationId": "/api/scriptActions/support"
      }
    },
    "/identity/api/tenants/{tenantId}/principals/{userId}/groups": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "groupType",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "userId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "groupType",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/principals/{userId}/groups"
      }
    },
    "/management-service/api/management/endpoint/{tenantId}": {
      "put": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/management/endpoint/{tenantId}"
      },
      "post": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/management/endpoint/{tenantId}"
      },
      "delete": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/management/endpoint/{tenantId}"
      },
      "get": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }],
        "operationId": "/api/management/endpoint/{tenantId}"
      }
    },
    "/reservation-service/api/reservations/forms/types/{reservationTypeId}/update": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "reservationTypeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/forms/types/{reservationTypeId}/update"
      }
    },
    "/licensing-service/api/licenses": {
      "post": {
        "tags": [
          "licensing-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/licenses"
      },
      "get": {
        "tags": [
          "licensing-service"
        ],
        "parameters": [],
        "operationId": "/api/licenses"
      }
    },
    "/event-broker-service/api/data-service/list/{classId}/default{arg0}": {
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/default"
      }
    },
    "/composition-service/api/requests/hierarchy/{blueprintId}/{fieldPath}/form/{formType}/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldPath",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "formType",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/hierarchy/{blueprintId}/{fieldPath}/form/{formType}/update"
      }
    },
    "/reservation-service/api/reservations/types/{id}": {
      "put": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/types/{id}"
      },
      "delete": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/reservations/types/{id}"
      },
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/reservations/types/{id}"
      }
    },
    "/catalog-service/api/consumer/requests/{id}": {
      "delete": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/requests/{id}"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/requests/{id}"
      }
    },
    "/catalog-service/api/provider/resourceTypes/{typeId}": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "typeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/provider/resourceTypes/{typeId}"
      },
      "delete": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "typeId",
          "in": "path"
        }],
        "operationId": "/api/provider/resourceTypes/{typeId}"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "typeId",
          "in": "path"
        }],
        "operationId": "/api/provider/resourceTypes/{typeId}"
      }
    },
    "/composition-service/api/requests/{requestId}/components/{componentPath}/data": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "componentPath",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/{requestId}/components/{componentPath}/data"
      }
    },
    "/event-broker-service/api/subscriptions/{id}": {
      "delete": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/subscriptions/{id}"
      },
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/subscriptions/{id}"
      }
    },
    "/plugin-service/api/plugins/extensions/{extensionId}": {
      "get": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "extensionId",
          "in": "path"
        }],
        "operationId": "/api/plugins/extensions/{extensionId}"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/authorities/roles": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "type",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "type",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/authorities/roles"
      }
    },
    "/advanced-designer-service/api/schema-service/{classId}/schema/update": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/schema-service/{classId}/schema/update"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/types/detailsForm": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/types/detailsForm"
      }
    },
    "/catalog-service/api/consumer/services/{id}/icon": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/services/{id}/icon"
      }
    },
    "/composition-service/api/requests/external/{catalogRequestId}/info": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "catalogRequestId",
          "in": "path"
        }],
        "operationId": "/api/requests/external/{catalogRequestId}/info"
      }
    },
    "/network-service/api/security-tags/{id}": {
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/security-tags/{id}"
      }
    },
    "/identity/api/data-service/schema/{classId}/default": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/default"
      }
    },
    "/composition-service/api/requests/{requestId}/schema/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/{requestId}/schema/update"
      }
    },
    "/software-service/api/data-service/schema/{classId}/default/update": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/update"
      }
    },
    "/catalog-service/api/consumer/catalogItems/{id}/forms/request/{elementId}/values": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/catalogItems/{id}/forms/request/{elementId}/values"
      }
    },
    "/advanced-designer-service/api/data-service/schema/{classId}/instances/{id}/update{arg0}{arg1}": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/update"
      }
    },
    "/workitem-service/api/assignees/user/delegates": {
      "put": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/assignees/user/delegates"
      },
      "post": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/assignees/user/delegates"
      },
      "get": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [],
        "operationId": "/api/assignees/user/delegates"
      }
    },
    "/fabric-service/api/keyPairs": {
      "post": {
        "tags": [
          "fabric-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/keyPairs"
      },
      "get": {
        "tags": [
          "fabric-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/keyPairs"
      }
    },
    "/catalog-service/api/icons/{id}/download": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/icons/{id}/download"
      }
    },
    "/approval-service/api/policies/{id}": {
      "put": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/policies/{id}"
      },
      "delete": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/policies/{id}"
      },
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/policies/{id}"
      }
    },
    "/composition-service/api/blueprintdocuments/{id}": {
      "put": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/blueprintdocuments/{id}"
      },
      "delete": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/blueprintdocuments/{id}"
      },
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/blueprintdocuments/{id}"
      }
    },
    "/software-service/api/tenants/{tenantId}/nodes/{nodeId}": {
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "nodeId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/nodes/{nodeId}"
      }
    },
    "/identity/api/authorization/roles/{roleId}/permissions/assigned": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "roleId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/roles/{roleId}/permissions/assigned"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "roleId",
          "in": "path"
        }],
        "operationId": "/api/authorization/roles/{roleId}/permissions/assigned"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "roleId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/roles/{roleId}/permissions/assigned"
      }
    },
    "/composition-service/api/data-service/schema/{classId}/default/{fieldId}/values": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/{fieldId}/values"
      }
    },
    "/portal-service/api/portals/{id}": {
      "put": {
        "tags": [
          "portal-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/portals/{id}"
      },
      "delete": {
        "tags": [
          "portal-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/portals/{id}"
      },
      "get": {
        "tags": [
          "portal-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/portals/{id}"
      }
    },
    "/catalog-service/api/consumer/resources/{resourceId}/actions/{resourceActionId}/forms/request": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceActionId",
          "in": "path"
        }],
        "operationId": "/api/consumer/resources/{resourceId}/actions/{resourceActionId}/forms/request"
      }
    },
    "/component-registry/endpoints/types/sso": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [],
        "operationId": "/endpoints/types/sso"
      }
    },
    "/catalog-service/api/consumer/resources/types/{resourceTypeId}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "returnChildResources",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "managedOnly",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceTypeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "returnChildResources",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "managedOnly",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/consumer/resources/types/{resourceTypeId}"
      }
    },
    "/advanced-designer-service/api/resourceOperations/{resourceOperationId}": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceOperationId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/resourceOperations/{resourceOperationId}"
      },
      "delete": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceOperationId",
          "in": "path"
        }],
        "operationId": "/api/resourceOperations/{resourceOperationId}"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceOperationId",
          "in": "path"
        }],
        "operationId": "/api/resourceOperations/{resourceOperationId}"
      }
    },
    "/identity/api/authorization/roles/extensions": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/roles/extensions"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/roles/extensions"
      }
    },
    "/advanced-designer-service/api/forms/{genericFormId}": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "genericFormId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/forms/{genericFormId}"
      },
      "delete": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "genericFormId",
          "in": "path"
        }],
        "operationId": "/api/forms/{genericFormId}"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "genericFormId",
          "in": "path"
        }],
        "operationId": "/api/forms/{genericFormId}"
      }
    },
    "/advanced-designer-service/api/workflows/{workflowId}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "workflowId",
          "in": "path"
        }],
        "operationId": "/api/workflows/{workflowId}"
      }
    },
    "/fabric-service/api/network/profiles": {
      "post": {
        "tags": [
          "fabric-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/network/profiles"
      },
      "get": {
        "tags": [
          "fabric-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/network/profiles"
      }
    },
    "/advanced-designer-service/api/inventory/plugins": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [],
        "operationId": "/api/inventory/plugins"
      }
    },
    "/approval-service/api/info/approvalrequests/{requestId}": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }],
        "operationId": "/api/info/approvalrequests/{requestId}"
      }
    },
    "/content-management-service/api/provider/contenttypes": {
      "post": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/provider/contenttypes"
      },
      "get": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/provider/contenttypes"
      }
    },
    "/catalog-service/api/consumer/resources/{id}/form": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/resources/{id}/form"
      }
    },
    "/advanced-designer-service/api/schema-service/{classId}/{typeFilter}/schema/values": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "asTree",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "asTree",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/schema-service/{classId}/{typeFilter}/schema/values"
      }
    },
    "/management-service/api/management/endpoint/{tenantId}/certificate": {
      "put": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/management/endpoint/{tenantId}/certificate"
      }
    },
    "/composition-service/api/requests/hierarchy/{blueprintId}/{fieldPath}/schema": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldPath",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }],
        "operationId": "/api/requests/hierarchy/{blueprintId}/{fieldPath}/schema"
      }
    },
    "/identity/api/tokens/suiteToken": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tokens/suiteToken"
      }
    },
    "/approval-service/api/data-service/data/{classId}/{id}": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/data/{classId}/{id}"
      }
    },
    "/composition-service/api/requests": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests"
      }
    },
    "/catalog-service/api/data-service/schema/{classId}/instances/{id}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}"
      }
    },
    "/composition-service/api/componentresources/providers/{providerId}/bindings/{bindingId}/schema": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }],
        "operationId": "/api/componentresources/providers/{providerId}/bindings/{bindingId}/schema"
      }
    },
    "/network-service/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values{arg0}{arg1}{arg2}": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg2",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values"
      }
    },
    "/approval-service/api/data-service/list/{classId}/default": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/default"
      }
    },
    "/notification-service/api/notifications/global/providers/{id}": {
      "put": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/notifications/global/providers/{id}"
      },
      "delete": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/notifications/global/providers/{id}"
      },
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/notifications/global/providers/{id}"
      }
    },
    "/composition-service/api/blueprints/{id}/components/{componentId}/properties": {
      "patch": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "componentId",
          "in": "path"
        }],
        "operationId": "/api/blueprints/{id}/components/{componentId}/properties"
      }
    },
    "/advanced-designer-service/api/schema-service/{classId}/schema/values": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "asTree",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "asTree",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/schema-service/{classId}/schema/values"
      }
    },
    "/catalog-service/api/provider/providers/{providerId}/catalogItems/{bindingId}": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/provider/providers/{providerId}/catalogItems/{bindingId}"
      },
      "delete": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }],
        "operationId": "/api/provider/providers/{providerId}/catalogItems/{bindingId}"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }],
        "operationId": "/api/provider/providers/{providerId}/catalogItems/{bindingId}"
      }
    },
    "/identity/api/tenants/{tenantId}/subtenants/{id}/principals": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "criteria",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "role",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "criteria",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "role",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/{id}/principals"
      }
    },
    "/content-management-service/api/provider/contents": {
      "post": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/provider/contents"
      }
    },
    "/catalog-service/api/consumer/resources/{id}/form/update": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/resources/{id}/form/update"
      }
    },
    "/software-service/api/resourcerequests/{id}/status": {
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/resourcerequests/{id}/status"
      }
    },
    "/advanced-designer-service/api/schema-service/extendedSchema": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/schema-service/extendedSchema"
      }
    },
    "/reservation-service/api/data-service/data/{classId}/{id}": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/data/{classId}/{id}"
      }
    },
    "/composition-service/api/providers/{providerId}/requests/{bindingId}/complete": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/providers/{providerId}/requests/{bindingId}/complete"
      }
    },
    "/software-service/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values"
      }
    },
    "/composition-service/api/requests/catalog/{cafeRequestId}/hierarchy/{fieldPath}/typeSchema/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "cafeRequestId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldPath",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/catalog/{cafeRequestId}/hierarchy/{fieldPath}/typeSchema/update"
      }
    },
    "/identity/api/tokens/{tokenId}/securityContext": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tokenId",
          "in": "path"
        }],
        "operationId": "/api/tokens/{tokenId}/securityContext"
      }
    },
    "/event-broker-service/api/data-service/schema/{classId}/instances/{id}/update{arg0}{arg1}": {
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/update"
      }
    },
    "/advanced-designer-service/api/schema-service/{classId}/schema/{fieldId}/values": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "asTree",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "asTree",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/schema-service/{classId}/schema/{fieldId}/values"
      }
    },
    "/event-broker-service/api/events/types/{eventTypeName}": {
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "eventTypeName",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/events/types/{eventTypeName}"
      }
    },
    "/branding-service/api/brandings/default": {
      "get": {
        "tags": [
          "branding-service"
        ],
        "parameters": [],
        "operationId": "/api/brandings/default"
      }
    },
    "/advanced-designer-service/api/data-service/data/{classId}/{id}{arg0}{arg1}": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/data/{classId}/{id}"
      }
    },
    "/approval-service/api/policytypes/{policyTypeId}/schema/update": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "policyTypeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/policytypes/{policyTypeId}/schema/update"
      }
    },
    "/composition-service/api/forms/{formId}/{instanceId}/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "instanceId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/forms/{formId}/{instanceId}/update"
      }
    },
    "/composition-service/api/requests/external/{catalogRequestId}/status": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "catalogRequestId",
          "in": "path"
        }],
        "operationId": "/api/requests/external/{catalogRequestId}/status"
      }
    },
    "/composition-service/api/componenttypes/{id}/forms/author": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/componenttypes/{id}/forms/author"
      }
    },
    "/catalog-service/api/consumer/resourceTypes": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "parentResourceId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "parentResourceId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/consumer/resourceTypes"
      }
    },
    "/catalog-service/api/provider/providers/{providerId}/resources": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/provider/providers/{providerId}/resources"
      }
    },
    "/composition-service/api/data-service/schema/{classId}/types/{typeFilter}": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}"
      }
    },
    "/approval-service/api/cafe-forms/forms/{formId}/{instanceId}/{elementId}/values": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "instanceId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/cafe-forms/forms/{formId}/{instanceId}/{elementId}/values"
      }
    },
    "/network-service/api/data-service/data/{classId}/{id}{arg0}{arg1}": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/data/{classId}/{id}"
      }
    },
    "/catalog-service/api/data-service/data/{classId}/{id}": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/data/{classId}/{id}"
      }
    },
    "/approval-service/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/blueprints/{blueprintId}/clone": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/blueprints/{blueprintId}/clone"
      }
    },
    "/identity/api/authorization/roles/extensions/{id}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/roles/extensions/{id}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/authorization/roles/extensions/{id}"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/authorization/roles/extensions/{id}"
      }
    },
    "/notification-service/api/notifications/tenants/{tenantId}/providers/{id}": {
      "put": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/notifications/tenants/{tenantId}/providers/{id}"
      },
      "delete": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/notifications/tenants/{tenantId}/providers/{id}"
      },
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/notifications/tenants/{tenantId}/providers/{id}"
      }
    },
    "/identity/api/authorization/resource-types/{id}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/resource-types/{id}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/authorization/resource-types/{id}"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/authorization/resource-types/{id}"
      }
    },
    "/catalog-service/api/catalogItems/available": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/catalogItems/available"
      }
    },
    "/plugin-service/api/plugins/extensions": {
      "get": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "pointId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "pointId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/plugins/extensions"
      }
    },
    "/advanced-designer-service/api/categories": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [],
        "operationId": "/api/categories"
      }
    },
    "/advanced-designer-service/api/event-broker/subscriptions/{subscriptionId}": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "subscriptionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/event-broker/subscriptions/{subscriptionId}"
      },
      "delete": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "subscriptionId",
          "in": "path"
        }],
        "operationId": "/api/event-broker/subscriptions/{subscriptionId}"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "subscriptionId",
          "in": "path"
        }],
        "operationId": "/api/event-broker/subscriptions/{subscriptionId}"
      }
    },
    "/workitem-service/api/workitems/{id}/form": {
      "get": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/workitems/{id}/form"
      }
    },
    "/identity/api/data-service/schema/{classId}/types/{typeFilter}/update": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/update"
      }
    },
    "/advanced-designer-service/api/data-service/schema/{classId}/instances/{id}{arg0}{arg1}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}"
      }
    },
    "/advanced-designer-service/api/data-service/schema/{classId}/default{arg0}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/default"
      }
    },
    "/identity/api/tenants/{tenantId}/directories/{id}/status": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/directories/{id}/status"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/scopes": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/scopes"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/scopes"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/scopes"
      }
    },
    "/approval-service/api/info/approvalrequests/{requestId}/form/source": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }],
        "operationId": "/api/info/approvalrequests/{requestId}/form/source"
      }
    },
    "/workitem-service/api/workitems/{workItemId}/actions/cancel": {
      "post": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "workItemId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workitems/{workItemId}/actions/cancel"
      }
    },
    "/composition-service/api/blueprintdocuments": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/blueprintdocuments"
      }
    },
    "/branding-service/api/brandings/{id}": {
      "put": {
        "tags": [
          "branding-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/brandings/{id}"
      },
      "delete": {
        "tags": [
          "branding-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/brandings/{id}"
      },
      "get": {
        "tags": [
          "branding-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/brandings/{id}"
      }
    },
    "/approval-service/api/policies/upgrade/{id}": {
      "put": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/policies/upgrade/{id}"
      }
    },
    "/network-service/api/load-balancers/{id}": {
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/load-balancers/{id}"
      }
    },
    "/advanced-designer-service/api/vco/import": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "fileupload",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "fileupload",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/vco/import"
      }
    },
    "/network-service/api/load-balancers/types/{id}": {
      "put": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/load-balancers/types/{id}"
      },
      "delete": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/load-balancers/types/{id}"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/load-balancers/types/{id}"
      }
    },
    "/reservation-service/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values"
      }
    },
    "/composition-service/api/requests/hierarchy/{blueprintId}/typeSchema": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }],
        "operationId": "/api/requests/hierarchy/{blueprintId}/typeSchema"
      }
    },
    "/licensing-service/api/dlfs": {
      "post": {
        "tags": [
          "licensing-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/dlfs"
      },
      "get": {
        "tags": [
          "licensing-service"
        ],
        "parameters": [],
        "operationId": "/api/dlfs"
      }
    },
    "/component-registry/services/registration": {
      "post": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/services/registration"
      }
    },
    "/advanced-designer-service/api/forms/scenarios": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "typeClass",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "typeClass",
          "in": "query"
        }],
        "operationId": "/api/forms/scenarios"
      }
    },
    "/software-service/api/data-service/schema/{classId}/instances/{id}/update": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/update"
      }
    },
    "/notification-service/api/notifications/userPreference/locales": {
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/notifications/userPreference/locales"
      }
    },
    "/advanced-designer-service/api/data-service/schema/{classId}/types/{typeFilter}/update{arg0}{arg1}": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/update"
      }
    },
    "/advanced-designer-service/api/content": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "consumes": [
          "application/xml",
          "application/json",
          "application/yaml"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/content"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [],
        "operationId": "/api/content"
      }
    },
    "/catalog-service/api/data-service/list/{classId}/types/{typeFilter}": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/types/{typeFilter}"
      }
    },
    "/properties-service/api/content/{classId}/{id}": {
      "get": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "secureValueFormat",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "secureValueFormat",
          "in": "query"
        }],
        "operationId": "/api/content/{classId}/{id}"
      }
    },
    "/identity/api/authorization/roles/{roleId}/permissions/assigned/{permissionId}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "roleId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "permissionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/roles/{roleId}/permissions/assigned/{permissionId}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "roleId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "permissionId",
          "in": "path"
        }],
        "operationId": "/api/authorization/roles/{roleId}/permissions/assigned/{permissionId}"
      }
    },
    "/catalog-service/api/identity/subtenants/execute": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/identity/subtenants/execute"
      }
    },
    "/catalog-service/api/resourceTypes": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/resourceTypes"
      }
    },
    "/identity/api/tenants/{tenantId}/subtenants": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants"
      },
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/types/external": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "typeName",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "typeName",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/types/external"
      }
    },
    "/plugin-service/api/plugins/{id}/extensions": {
      "get": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/plugins/{id}/extensions"
      }
    },
    "/plugin-service/api/wizardstates/{id}": {
      "put": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/wizardstates/{id}"
      },
      "delete": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/wizardstates/{id}"
      },
      "get": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/wizardstates/{id}"
      }
    },
    "/software-service/api/data-service/schema/{classId}/types/{typeFilter}": {
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}"
      }
    },
    "/network-service/api/composition/requests": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/composition/requests"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/types/fields": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/types/fields"
      }
    },
    "/composition-service/api/componenttypes/{objectId}/schema": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "objectId",
          "in": "path"
        }],
        "operationId": "/api/componenttypes/{objectId}/schema"
      }
    },
    "/composition-service/api/blueprints/{id}/properties": {
      "patch": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/blueprints/{id}/properties"
      }
    },
    "/advanced-designer-service/api/workflows/{workflowId}/fields": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "usageClass",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "workflowId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "usageClass",
          "in": "query"
        }],
        "operationId": "/api/workflows/{workflowId}/fields"
      }
    },
    "/catalog-service/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values"
      }
    },
    "/component-registry/services/status": {
      "put": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/services/status"
      },
      "post": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/services/status"
      },
      "delete": {
        "tags": [
          "component-registry"
        ],
        "parameters": [],
        "operationId": "/services/status"
      },
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/services/status"
      }
    },
    "/reservation-service/api/reservations/types/categories": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/types/categories"
      },
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "eligibleReservationTypeCategory",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "eligibleReservationTypeCategory",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/reservations/types/categories"
      }
    },
    "/composition-service/api/requests/catalog/{cafeRequestId}/hierarchy/{fieldPath}/form/{formType}/{formElementId}/values": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "cafeRequestId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldPath",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "formType",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "formElementId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/catalog/{cafeRequestId}/hierarchy/{fieldPath}/form/{formType}/{formElementId}/values"
      }
    },
    "/catalog-service/api/entitlements": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/entitlements"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "userId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "userId",
          "in": "query"
        }],
        "operationId": "/api/entitlements"
      }
    },
    "/catalog-service/api/cafe-forms/forms/{formId}/{instanceId}/update": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "instanceId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/cafe-forms/forms/{formId}/{instanceId}/update"
      }
    },
    "/software-service/api/softwarecomponenttypes": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/softwarecomponenttypes"
      },
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/softwarecomponenttypes"
      }
    },
    "/identity/api/tokens/{tokenId}": {
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tokenId",
          "in": "path"
        }],
        "operationId": "/api/tokens/{tokenId}"
      }
    },
    "/catalog-service/api/services": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/services"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/services"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/scopes/{scopeId}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/scopes/{scopeId}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/scopes/{scopeId}"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/scopes/{scopeId}"
      }
    },
    "/composition-service/api/data-service/list/{classId}/types/{typeFilter}": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/types/{typeFilter}"
      }
    },
    "/software-service/api/tenants/{tenantId}/softwarecomponenttypes/{softwareComponentTypeId}/resources": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "softwareComponentTypeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/softwarecomponenttypes/{softwareComponentTypeId}/resources"
      }
    },
    "/catalog-service/api/provider/providers/{providerId}/catalogItems/{bindingId}/icon": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }],
        "operationId": "/api/provider/providers/{providerId}/catalogItems/{bindingId}/icon"
      }
    },
    "/composition-service/api/requests/hierarchy/{blueprintId}/{fieldPath}/schema/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldPath",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/hierarchy/{blueprintId}/{fieldPath}/schema/update"
      }
    },
    "/catalog-service/api/consumer/resourceOperations/{id}/icon": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/resourceOperations/{id}/icon"
      }
    },
    "/software-service/api/data-service/schema/{classId}/types/{typeFilter}/update": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/update"
      }
    },
    "/software-service/api/requests": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests"
      }
    },
    "/approval-service/api/data-service/schema/{classId}/types/{typeFilter}/update": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/update"
      }
    },
    "/approval-service/api/data-service/list/{classId}/types/{typeFilter}": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/types/{typeFilter}"
      }
    },
    "/advanced-designer-service/api/workflows/{workflowId}/outputs": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "usageClass",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "workflowId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "usageClass",
          "in": "query"
        }],
        "operationId": "/api/workflows/{workflowId}/outputs"
      }
    },
    "/advanced-designer-service/api/workitem/callbacks": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workitem/callbacks"
      }
    },
    "/advanced-designer-service/api/endpoints": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/endpoints"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/endpoints"
      }
    },
    "/network-service/api/security-groups": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/security-groups"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/security-groups"
      }
    },
    "/catalog-service/api/provider/providers/{providerId}/requests/{bindingId}/complete": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/provider/providers/{providerId}/requests/{bindingId}/complete"
      }
    },
    "/event-broker-service/api/data-service/list/{classId}/types/{typeFilter}{arg0}{arg1}": {
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/types/{typeFilter}"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/blueprints": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/blueprints"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/blueprints"
      }
    },
    "/reservation-service/api/reservations/tenants": {
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/reservations/tenants"
      }
    },
    "/plugin-service/api/plugins/{id}": {
      "put": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/plugins/{id}"
      },
      "delete": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/plugins/{id}"
      },
      "get": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/plugins/{id}"
      }
    },
    "/identity/api/migration/tenants/{tenantId}/directory": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/migration/tenants/{tenantId}/directory"
      }
    },
    "/approval-service/api/policytypes/{policyTypeId}/schema/types/{typeFilter}": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "policyTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }],
        "operationId": "/api/policytypes/{policyTypeId}/schema/types/{typeFilter}"
      }
    },
    "/catalog-service/api/cafe-forms/forms/{formId}/{instanceId}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "instanceId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }],
        "operationId": "/api/cafe-forms/forms/{formId}/{instanceId}"
      }
    },
    "/advanced-designer-service/api/valueDefinitions/{id}": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/valueDefinitions/{id}"
      },
      "delete": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/valueDefinitions/{id}"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/valueDefinitions/{id}"
      }
    },
    "/identity/api/tenants/{tenantId}/principals/{userId}": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "userId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/principals/{userId}"
      }
    },
    "/catalog-service/api/resourceOperations/{id}/icon": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/resourceOperations/{id}/icon"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/event-broker/subscriptions/{subscriptionId}/clone": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "subscriptionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/event-broker/subscriptions/{subscriptionId}/clone"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/types/{resourceTypeId}/resourceCount": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceTypeId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/types/{resourceTypeId}/resourceCount"
      }
    },
    "/composition-service/api/requests/hierarchy/{blueprintId}/{fieldPath}/typeSchema/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldPath",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/hierarchy/{blueprintId}/{fieldPath}/typeSchema/update"
      }
    },
    "/catalog-service/api/entitlements/{entitlementId}": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "entitlementId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/entitlements/{entitlementId}"
      }
    },
    "/catalog-service/api/catalogItems/{id}": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/catalogItems/{id}"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/catalogItems/{id}"
      }
    },
    "/catalog-service/api/consumer/resources/{resourceId}/actions/{resourceActionId}/requests/schema": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceActionId",
          "in": "path"
        }],
        "operationId": "/api/consumer/resources/{resourceId}/actions/{resourceActionId}/requests/schema"
      }
    },
    "/advanced-designer-service/api/valueDefinitions/key/{valueDefinitionKey}/schema": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "valueDefinitionKey",
          "in": "path"
        }],
        "operationId": "/api/valueDefinitions/key/{valueDefinitionKey}/schema"
      }
    },
    "/advanced-designer-service/api/schema-service/{classId}/{typeFilter}/schema": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }],
        "operationId": "/api/schema-service/{classId}/{typeFilter}/schema"
      }
    },
    "/licensing-service/api/dlfs/{id}": {
      "delete": {
        "tags": [
          "licensing-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/dlfs/{id}"
      },
      "get": {
        "tags": [
          "licensing-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/dlfs/{id}"
      }
    },
    "/component-registry/services/status/current": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/services/status/current"
      }
    },
    "/reservation-service/api/reservations/forms/{reservationId}/update": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "reservationId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/forms/{reservationId}/update"
      }
    },
    "/advanced-designer-service/api/endpoints/create/{namespace}/{elementId}/values": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "namespace",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/endpoints/create/{namespace}/{elementId}/values"
      }
    },
    "/management-service/api/work-items/forms/{formId}/{instanceId}/update": {
      "post": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "instanceId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/work-items/forms/{formId}/{instanceId}/update"
      }
    },
    "/portal-service/api/portletconfigurations": {
      "post": {
        "tags": [
          "portal-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/portletconfigurations"
      },
      "get": {
        "tags": [
          "portal-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/portletconfigurations"
      }
    },
    "/workitem-service/api/assignees/{principalId}/delegates": {
      "put": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/assignees/{principalId}/delegates"
      },
      "post": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/assignees/{principalId}/delegates"
      },
      "get": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }],
        "operationId": "/api/assignees/{principalId}/delegates"
      }
    },
    "/reservation-service/api/data-service/list/{classId}/types/{typeFilter}": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/types/{typeFilter}"
      }
    },
    "/composition-service/api/componenttypes": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/componenttypes"
      },
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "blueprintId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "fetchSchema",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "blueprintId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "fetchSchema",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/componenttypes"
      }
    },
    "/identity/api/tokens/principals/{principal}": {
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "principal",
          "in": "path"
        }],
        "operationId": "/api/tokens/principals/{principal}"
      }
    },
    "/identity/api/tenants/{tenantId}/subtenants/{id}/roles": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/{id}/roles"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/{id}/roles"
      }
    },
    "/management-service/api/management/requests/cancel": {
      "post": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/management/requests/cancel"
      }
    },
    "/catalog-service/api/consumer/catalogItems/{id}/forms/request": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }],
        "operationId": "/api/consumer/catalogItems/{id}/forms/request"
      }
    },
    "/workitem-service/api/workitems": {
      "put": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workitems"
      },
      "post": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workitems"
      },
      "get": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "userItemsOnly",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "userItemsOnly",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/workitems"
      }
    },
    "/identity/api/authorization/roles/{id}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/roles/{id}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/authorization/roles/{id}"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/authorization/roles/{id}"
      }
    },
    "/management-service/api/work-items/forms/{formId}/{instanceId}/{elementId}/values": {
      "post": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "instanceId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/work-items/forms/{formId}/{instanceId}/{elementId}/values"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/configurations/default": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/configurations/default"
      }
    },
    "/identity/api/data-service/schema/{classId}/instances/{id}/update": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/update"
      }
    },
    "/advanced-designer-service/api/schema-service/{classId}/schema/{fieldId}/schema": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }],
        "operationId": "/api/schema-service/{classId}/schema/{fieldId}/schema"
      }
    },
    "/approval-service/api/evaluations/{id}": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/evaluations/{id}"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/principals/{principalId}/scopes/{scopeId}/roles/{scopeRoleId}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeRoleId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/scopes/{scopeId}/roles/{scopeRoleId}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeRoleId",
          "in": "path"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/scopes/{scopeId}/roles/{scopeRoleId}"
      }
    },
    "/identity/api/authorization/roles/assignable": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/roles/assignable"
      }
    },
    "/catalog-service/api/consumer/requests/{id}/forms/details": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/requests/{id}/forms/details"
      }
    },
    "/advanced-designer-service/api/requests/{requestId}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }],
        "operationId": "/api/requests/{requestId}"
      }
    },
    "/identity/api/authorization/permissions": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/permissions"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/permissions"
      }
    },
    "/event-broker-service/api/data-service/data/{classId}/{id}{arg0}{arg1}": {
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/data/{classId}/{id}"
      }
    },
    "/component-registry/services/{id}": {
      "put": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/services/{id}"
      },
      "post": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/services/{id}"
      },
      "delete": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/services/{id}"
      },
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/services/{id}"
      }
    },
    "/properties-service/api/propertygroups/{objectId}": {
      "put": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "objectId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/propertygroups/{objectId}"
      },
      "delete": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "objectId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }],
        "operationId": "/api/propertygroups/{objectId}"
      }
    },
    "/catalog-service/api/consumer/catalogItems/{id}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/catalogItems/{id}"
      }
    },
    "/advanced-designer-service/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values{arg0}{arg1}{arg2}": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg2",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values"
      }
    },
    "/network-service/api/data-service/schema/{classId}/types/{typeFilter}/update{arg0}{arg1}": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/update"
      }
    },
    "/composition-service/api/componenttypes/{id}/forms/author/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/componenttypes/{id}/forms/author/update"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/scopes/{scopeId}/resources": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/scopes/{scopeId}/resources"
      },
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/scopes/{scopeId}/resources"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/scopes/{scopeId}/resources"
      }
    },
    "/advanced-designer-service/api/workflows/{workflowId}/resourceOperation": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "workflowId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workflows/{workflowId}/resourceOperation"
      }
    },
    "/software-service/api/scripttypes": {
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/scripttypes"
      }
    },
    "/identity/api/tenants/{tenantId}/customGroups": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/customGroups"
      }
    },
    "/reservation-service/api/reservations/{id}": {
      "put": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/{id}"
      },
      "delete": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/reservations/{id}"
      },
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/reservations/{id}"
      }
    },
    "/advanced-designer-service/api/forms/{formId}/{bindingId}/update": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/forms/{formId}/{bindingId}/update"
      }
    },
    "/advanced-designer-service/api/orchestration/certificate": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/orchestration/certificate"
      }
    },
    "/software-service/api/admin/taskdescriptors": {
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/admin/taskdescriptors"
      }
    },
    "/catalog-service/api/consumer/requests/{id}/forms/submission": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/requests/{id}/forms/submission"
      }
    },
    "/identity/api/data-service/schema/{classId}/types/{typeFilter}": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}"
      }
    },
    "/reservation-service/api/data-service/schema/{classId}/instances/{id}": {
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}"
      }
    },
    "/event-broker-service/api/data-service/schema/{classId}/types/{typeFilter}/update{arg0}{arg1}": {
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/update"
      }
    },
    "/advanced-designer-service/api/scriptActions/{categoryName}/{name}/schema": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "categoryName",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "name",
          "in": "path"
        }],
        "operationId": "/api/scriptActions/{categoryName}/{name}/schema"
      }
    },
    "/reservation-service/api/data-service/schema/{classId}/types/{typeFilter}": {
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}"
      }
    },
    "/identity/api/tenants/{tenantId}/subtenants/principals": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "criteria",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "role",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "criteria",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "role",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/principals"
      }
    },
    "/identity/api/tenants/{tenantId}/externalIdP": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/externalIdP"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/externalIdP"
      }
    },
    "/software-service/api/tenants/{tenantId}/nodes/{nodeId}/unregister": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "nodeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/nodes/{nodeId}/unregister"
      }
    },
    "/notification-service/api/notifications/userPreference/mechanisms": {
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/notifications/userPreference/mechanisms"
      }
    },
    "/advanced-designer-service/api/schema-service/{classId}/{typeFilter}/schema/{fieldId}/values": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "asTree",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "asTree",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/schema-service/{classId}/{typeFilter}/schema/{fieldId}/values"
      }
    },
    "/identity/api/tokens": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tokens"
      }
    },
    "/catalog-service/api/resourceOperations/{id}/entitlements": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/resourceOperations/{id}/entitlements"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/event-broker/subscriptions/{subscriptionId}/status": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "subscriptionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/event-broker/subscriptions/{subscriptionId}/status"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/blueprints/{blueprintId}": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/blueprints/{blueprintId}"
      },
      "delete": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/blueprints/{blueprintId}"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/blueprints/{blueprintId}"
      }
    },
    "/identity/api/authorization/scopes/types/{typeId}/permissions/admin": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "typeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/scopes/types/{typeId}/permissions/admin"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "typeId",
          "in": "path"
        }],
        "operationId": "/api/authorization/scopes/types/{typeId}/permissions/admin"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "typeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/scopes/types/{typeId}/permissions/admin"
      }
    },
    "/workitem-service/api/icons/{id}": {
      "put": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/icons/{id}"
      },
      "delete": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/icons/{id}"
      },
      "get": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/icons/{id}"
      }
    },
    "/identity/api/tenants/{tenantId}/directories/connectivity": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/directories/connectivity"
      }
    },
    "/catalog-service/api/consumer/entitledCatalogItemViews": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "serviceId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "onBehalfOf",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "serviceId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "onBehalfOf",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }],
        "operationId": "/api/consumer/entitledCatalogItemViews"
      }
    },
    "/composition-service/api/requests/{requestId}/{compPath}/schema/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "compPath",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/{requestId}/{compPath}/schema/update"
      }
    },
    "/properties-service/api/propertydefinitions": {
      "post": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/propertydefinitions"
      },
      "get": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/propertydefinitions"
      }
    },
    "/composition-service/api/requests/catalog/{cafeRequestId}/hierarchy/schema": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "cafeRequestId",
          "in": "path"
        }],
        "operationId": "/api/requests/catalog/{cafeRequestId}/hierarchy/schema"
      }
    },
    "/identity/api/tenants/{tenantId}/subtenants/{id}/roles/{scopeRoleRef}/principals": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeRoleRef",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/{id}/roles/{scopeRoleRef}/principals"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeRoleRef",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/{id}/roles/{scopeRoleRef}/principals"
      }
    },
    "/approval-service/api/cafe-forms/forms/{formId}/{instanceId}/update": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "instanceId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/cafe-forms/forms/{formId}/{instanceId}/update"
      }
    },
    "/catalog-service/api/consumer/catalogItems/{id}/icon": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/catalogItems/{id}/icon"
      }
    },
    "/catalog-service/api/icons": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/icons"
      }
    },
    "/composition-service/api/blueprints/{id}": {
      "put": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "forceSave",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "forceSave",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/blueprints/{id}"
      },
      "delete": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/blueprints/{id}"
      },
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/blueprints/{id}"
      }
    },
    "/catalog-service/api/catalogItems/upgrade/{id}": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/catalogItems/upgrade/{id}"
      }
    },
    "/identity/api/data-service/schema/{classId}/instances/{id}": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}"
      }
    },
    "/advanced-designer-service/api/inventory/plugins/{pluginName}/{pluginType}/schema": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "pluginName",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "pluginType",
          "in": "path"
        }],
        "operationId": "/api/inventory/plugins/{pluginName}/{pluginType}/schema"
      }
    },
    "/event-broker-service/api/data-service/schema/{classId}/instances/{id}{arg0}{arg1}": {
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}"
      }
    },
    "/catalog-service/api/entitlements/order": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/entitlements/order"
      }
    },
    "/notification-service/api/notifications/userPreference/mechanisms/defaults": {
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/notifications/userPreference/mechanisms/defaults"
      }
    },
    "/event-broker-service/api/topics/replyable": {
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/topics/replyable"
      }
    },
    "/network-service/api/forms/{formId}/{bindingId}/{elementId}/values": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/forms/{formId}/{bindingId}/{elementId}/values"
      }
    },
    "/advanced-designer-service/api/workflows": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [],
        "operationId": "/api/workflows"
      }
    },
    "/notification-service/api/notifications/global/providers": {
      "post": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/notifications/global/providers"
      },
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/notifications/global/providers"
      }
    },
    "/advanced-designer-service/api/data-service/list/{classId}/default{arg0}": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/default"
      }
    },
    "/advanced-designer-service/api/endpoints/create/{namespace}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "namespace",
          "in": "path"
        }],
        "operationId": "/api/endpoints/create/{namespace}"
      }
    },
    "/event-broker-service/api/events/{originEventId}/reply": {
      "put": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "originEventId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/events/{originEventId}/reply"
      }
    },
    "/network-service/api/networks": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/networks"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/networks"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/configurations": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/configurations"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/configurations"
      }
    },
    "/composition-service/api/componenttypes/{objectId}": {
      "put": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "objectId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/componenttypes/{objectId}"
      },
      "delete": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "objectId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }],
        "operationId": "/api/componenttypes/{objectId}"
      },
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "objectId",
          "in": "path"
        }],
        "operationId": "/api/componenttypes/{objectId}"
      }
    },
    "/component-registry/endpoints/forms/{endpointId}": {
      "put": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "endpointId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/endpoints/forms/{endpointId}"
      },
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "endpointId",
          "in": "path"
        }],
        "operationId": "/endpoints/forms/{endpointId}"
      }
    },
    "/approval-service/api/data-service/schema/{classId}/instances/{id}": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}"
      }
    },
    "/identity/api/tenants/{tenantId}/groups/{parentGroupId}/users": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "criteria",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "expandGroups",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "parentGroupId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "criteria",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "expandGroups",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/groups/{parentGroupId}/users"
      }
    },
    "/catalog-service/api/catalogItems": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/catalogItems"
      }
    },
    "/catalog-service/api/consumer/catalogItems/{id}/forms/details/{elementId}/values": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/catalogItems/{id}/forms/details/{elementId}/values"
      }
    },
    "/composition-service/api/requests/catalog/{cafeRequestId}/hierarchy/{compPath}/schema/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "cafeRequestId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "compPath",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/catalog/{cafeRequestId}/hierarchy/{compPath}/schema/update"
      }
    },
    "/composition-service/api/requests/catalog/{cafeRequestId}/hierarchy/typeSchema/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "cafeRequestId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/catalog/{cafeRequestId}/hierarchy/typeSchema/update"
      }
    },
    "/properties-service/api/propertydefinitions/{id}": {
      "get": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/propertydefinitions/{id}"
      }
    },
    "/advanced-designer-service/api/workflows/{workflowId}/form": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "typeName",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "excludedField",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "workflowId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "typeName",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "excludedField",
          "in": "query"
        }],
        "operationId": "/api/workflows/{workflowId}/form"
      }
    },
    "/properties-service/api/propertydefinitions/ids": {
      "post": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/propertydefinitions/ids"
      }
    },
    "/catalog-service/api/services/{id}/catalogItems": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/services/{id}/catalogItems"
      }
    },
    "/composition-service/api/data-service/schema/{classId}/instances/{id}/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/update"
      }
    },
    "/identity/api/authorization/scopes/types": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/scopes/types"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/scopes/types"
      }
    },
    "/identity/api/authorization/roles/extensions/{extensionId}/permissions/assigned": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "extensionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/roles/extensions/{extensionId}/permissions/assigned"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "extensionId",
          "in": "path"
        }],
        "operationId": "/api/authorization/roles/extensions/{extensionId}/permissions/assigned"
      }
    },
    "/component-registry/endpoints/types/extensions/{id}": {
      "put": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/endpoints/types/extensions/{id}"
      },
      "delete": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/endpoints/types/extensions/{id}"
      },
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/endpoints/types/extensions/{id}"
      }
    },
    "/network-service/api/data-service/schema/{classId}/instances/{id}{arg0}{arg1}": {
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}"
      }
    },
    "/branding-service/api/brandings": {
      "post": {
        "tags": [
          "branding-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/brandings"
      },
      "get": {
        "tags": [
          "branding-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/brandings"
      }
    },
    "/catalog-service/api/consumer/catalogItems/{id}/forms/request/update": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/catalogItems/{id}/forms/request/update"
      }
    },
    "/catalog-service/api/consumer/resources/{resourceId}/actions/{resourceActionId}/requests": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceActionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/resources/{resourceId}/actions/{resourceActionId}/requests"
      }
    },
    "/approval-service/api/policytypes/{policyTypeId}/schema/{fieldId}/schema": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "policyTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }],
        "operationId": "/api/policytypes/{policyTypeId}/schema/{fieldId}/schema"
      }
    },
    "/workitem-service/api/icons/images/{id}": {
      "get": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/icons/images/{id}"
      }
    },
    "/content-management-service/api/packages/{id}": {
      "put": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/packages/{id}"
      },
      "delete": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/packages/{id}"
      },
      "get": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "secureValueFormat",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "secureValueFormat",
          "in": "query"
        }],
        "operationId": "/api/packages/{id}"
      }
    },
    "/identity/api/tenants/{tenantId}/principals/{userId}/subtenants": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "role",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "expandGroups",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "userId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "role",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "expandGroups",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/principals/{userId}/subtenants"
      }
    },
    "/composition-service/api/providers/{providerId}/requests/{bindingId}/complete/allocation": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/providers/{providerId}/requests/{bindingId}/complete/allocation"
      }
    },
    "/catalog-service/api/provider/providers/{providerId}/resources/{bindingId}": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/provider/providers/{providerId}/resources/{bindingId}"
      },
      "delete": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }],
        "operationId": "/api/provider/providers/{providerId}/resources/{bindingId}"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "bindingId",
          "in": "path"
        }],
        "operationId": "/api/provider/providers/{providerId}/resources/{bindingId}"
      }
    },
    "/composition-service/api/requests/catalog/{cafeRequestId}/hierarchy/{fieldPath}/typeSchema": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "cafeRequestId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldPath",
          "in": "path"
        }],
        "operationId": "/api/requests/catalog/{cafeRequestId}/hierarchy/{fieldPath}/typeSchema"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/authorities/permissions": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "type",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "type",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/authorities/permissions"
      }
    },
    "/content-management-service/api/contents": {
      "get": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/contents"
      }
    },
    "/catalog-service/api/consumer/requests/{requestId}": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/requests/{requestId}"
      }
    },
    "/composition-service/api/data-service/schema/{classId}/default/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/update"
      }
    },
    "/identity/api/tenants/{tenantId}/principals/{principalId}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/principals/{principalId}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/principals/{principalId}"
      }
    },
    "/network-service/api/data-service/schema/{classId}/types/{typeFilter}{arg0}{arg1}": {
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}"
      }
    },
    "/network-service/api/security-groups/{id}/machines": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/security-groups/{id}/machines"
      }
    },
    "/network-service/api/data-service/schema/{classId}/default{arg0}": {
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/default"
      }
    },
    "/reservation-service/api/reservations/policies/sync/{providerServiceTypeId}/{reservationPolicyId}": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerServiceTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "reservationPolicyId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/policies/sync/{providerServiceTypeId}/{reservationPolicyId}"
      }
    },
    "/advanced-designer-service/api/scriptActions/categories": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [],
        "operationId": "/api/scriptActions/categories"
      }
    },
    "/catalog-service/api/consumer/requests/{id}/forms/details/update": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/requests/{id}/forms/details/update"
      }
    },
    "/composition-service/api/requests/hierarchy/{blueprintId}": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }],
        "operationId": "/api/requests/hierarchy/{blueprintId}"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/types/parameters": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "provisioning",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "provisioning",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/types/parameters"
      }
    },
    "/event-broker-service/api/topics/{eventTopicId}/principals/{principalId}": {
      "put": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "eventTopicId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/topics/{eventTopicId}/principals/{principalId}"
      },
      "delete": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "eventTopicId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }],
        "operationId": "/api/topics/{eventTopicId}/principals/{principalId}"
      },
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "eventTopicId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }],
        "operationId": "/api/topics/{eventTopicId}/principals/{principalId}"
      }
    },
    "/identity/api/data-service/list/{classId}/types/{typeFilter}": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/types/{typeFilter}"
      }
    },
    "/advanced-designer-service/api/resources/types/{resourceTypeId}/{resourceId}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }],
        "operationId": "/api/resources/types/{resourceTypeId}/{resourceId}"
      }
    },
    "/catalog-service/api/consumer/resources/{id}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/resources/{id}"
      }
    },
    "/component-registry/endpoints/types/{endpointTypeId}": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "endpointTypeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/endpoints/types/{endpointTypeId}"
      }
    },
    "/component-registry/endpoints/{id}": {
      "put": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/endpoints/{id}"
      },
      "delete": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/endpoints/{id}"
      },
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/endpoints/{id}"
      }
    },
    "/identity/api/data-service/schema/{classId}/default/{fieldId}/values": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/{fieldId}/values"
      }
    },
    "/advanced-designer-service/api/content/validation/bundles": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefix",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefixOnlyConflicting",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefix",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefixOnlyConflicting",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/content/validation/bundles"
      },
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefix",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefixOnlyConflicting",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefix",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "prefixOnlyConflicting",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/content/validation/bundles"
      }
    },
    "/software-service/api/composition/requests/{requestId}/statusdetails": {
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }],
        "operationId": "/api/composition/requests/{requestId}/statusdetails"
      }
    },
    "/notification-service/api/notifications/scenarios/{id}": {
      "put": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/notifications/scenarios/{id}"
      },
      "delete": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/notifications/scenarios/{id}"
      },
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/notifications/scenarios/{id}"
      }
    },
    "/catalog-service/api/catalogItemTypes": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/catalogItemTypes"
      }
    },
    "/approval-service/api/info/approvals/{approvalId}/form/source": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "approvalId",
          "in": "path"
        }],
        "operationId": "/api/info/approvals/{approvalId}/form/source"
      }
    },
    "/network-service/api/security-groups/{id}": {
      "put": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/security-groups/{id}"
      },
      "delete": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/security-groups/{id}"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/security-groups/{id}"
      }
    },
    "/properties-service/api/propertygroups/ids": {
      "post": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/propertygroups/ids"
      }
    },
    "/plugin-service/api/wizardstates": {
      "post": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/wizardstates"
      },
      "get": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/wizardstates"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/blueprints/{blueprintId}/status": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/blueprints/{blueprintId}/status"
      }
    },
    "/component-registry/api/tenants/{tenantId}/links": {
      "post": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/links"
      }
    },
    "/advanced-designer-service/api/endpoints/update/{endpointId}/{elementId}/values": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "endpointId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/endpoints/update/{endpointId}/{elementId}/values"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/authorities/extended/roles": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "type",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "type",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/authorities/extended/roles"
      }
    },
    "/software-service/api/softwarecomponenttypes/{id}/status": {
      "put": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/softwarecomponenttypes/{id}/status"
      }
    },
    "/content-management-service/api/contents/{id}/data": {
      "get": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "secureValueFormat",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "secureValueFormat",
          "in": "query"
        }],
        "operationId": "/api/contents/{id}/data"
      }
    },
    "/advanced-designer-service/api/requestValidations": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requestValidations"
      }
    },
    "/catalog-service/api/consumer/resourceTypes/{id}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/resourceTypes/{id}"
      }
    },
    "/advanced-designer-service/api/orchestration/roots/{tenantId}": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/orchestration/roots/{tenantId}"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/scopes-principals": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "roleId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "permissionId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "roleId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "permissionId",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/scopes-principals"
      }
    },
    "/reservation-service/api/data-service/schema/{classId}/instances/{id}/update": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/update"
      }
    },
    "/reservation-service/api/reservations/policies/sync/{providerServiceTypeId}": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "providerServiceTypeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/policies/sync/{providerServiceTypeId}"
      }
    },
    "/catalog-service/api/provider/catalogItemTypes/{id}": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/provider/catalogItemTypes/{id}"
      },
      "delete": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/provider/catalogItemTypes/{id}"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/provider/catalogItemTypes/{id}"
      }
    },
    "/software-service/api/scripttypes/fileextension/{fileExtension}": {
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "fileExtension",
          "in": "path"
        }],
        "operationId": "/api/scripttypes/fileextension/{fileExtension}"
      }
    },
    "/properties-service/api/propertygroups/{id}": {
      "get": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/propertygroups/{id}"
      }
    },
    "/identity/api/tenants/{tenantId}/directories": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/directories"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/directories"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/categories": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/categories"
      }
    },
    "/catalog-service/api/consumer/resources": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "managedOnly",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "managedOnly",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/consumer/resources"
      }
    },
    "/catalog-service/api/consumer/resourceViews/{id}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/resourceViews/{id}"
      }
    },
    "/catalog-service/api/data-service/schema/{classId}/types/{typeFilter}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}"
      }
    },
    "/fabric-service/api/network/profiles/{id}": {
      "put": {
        "tags": [
          "fabric-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/network/profiles/{id}"
      },
      "delete": {
        "tags": [
          "fabric-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/network/profiles/{id}"
      },
      "get": {
        "tags": [
          "fabric-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/network/profiles/{id}"
      }
    },
    "/network-service/api/networks/types/{id}": {
      "put": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/networks/types/{id}"
      },
      "delete": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/networks/types/{id}"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/networks/types/{id}"
      }
    },
    "/identity/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values"
      }
    },
    "/composition-service/api/requests/{blueprintRequestId}/status": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "blueprintRequestId",
          "in": "path"
        }],
        "operationId": "/api/requests/{blueprintRequestId}/status"
      }
    },
    "/workitem-service/api/workitems/{workItemId}/actions/{actionId}": {
      "post": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "workItemId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "actionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workitems/{workItemId}/actions/{actionId}"
      }
    },
    "/identity/api/sso/branding/default": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/sso/branding/default"
      }
    },
    "/identity/api/authorization/permissions/{permissionId}/permissions/admin": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "permissionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/permissions/{permissionId}/permissions/admin"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "permissionId",
          "in": "path"
        }],
        "operationId": "/api/authorization/permissions/{permissionId}/permissions/admin"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "permissionId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/permissions/{permissionId}/permissions/admin"
      }
    },
    "/catalog-service/api/data-service/schema/{classId}/default/{fieldId}/values": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/{fieldId}/values"
      }
    },
    "/catalog-service/api/resourceOperations": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/resourceOperations"
      }
    },
    "/component-registry/services/status/current/{serviceId}": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "serviceId",
          "in": "path"
        }],
        "operationId": "/services/status/current/{serviceId}"
      }
    },
    "/catalog-service/api/consumer/entitledCatalogItemViews/{id}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/entitledCatalogItemViews/{id}"
      }
    },
    "/network-service/api/security-policies": {
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/security-policies"
      }
    },
    "/advanced-designer-service/api/resourceOperations/{resourceOperationId}/status": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceOperationId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/resourceOperations/{resourceOperationId}/status"
      }
    },
    "/advanced-designer-service/api/tenants/{tenantId}/event-broker/subscriptions": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/event-broker/subscriptions"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/event-broker/subscriptions"
      }
    },
    "/identity/api/tenants/{tenantId}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}"
      }
    },
    "/event-broker-service/api/data-service/schema/{classId}/default/update{arg0}": {
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/update"
      }
    },
    "/composition-service/api/data-service/schema/{classId}/instances/{id}": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}"
      }
    },
    "/content-management-service/api/contents/{id}": {
      "get": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/contents/{id}"
      }
    },
    "/event-broker-service/api/subscriptions/active": {
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [],
        "operationId": "/api/subscriptions/active"
      }
    },
    "/composition-service/api/content": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/content"
      }
    },
    "/identity/api/tenants/{tenantId}/principals": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/principals"
      },
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/principals"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "criteria",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "domain",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "parentGroup",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "permissionFiltered",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "role",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "expandGroups",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "localUsersOnly",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "criteria",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "domain",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "parentGroup",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "permissionFiltered",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "role",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "expandGroups",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "localUsersOnly",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/principals"
      }
    },
    "/catalog-service/api/consumer/entitledCatalogItems/{id}/requests/schema": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/consumer/entitledCatalogItems/{id}/requests/schema"
      }
    },
    "/identity/api/tenants/{tenantId}/groups/{parentGroupId}/users/{userId}": {
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "parentGroupId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "userId",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/groups/{parentGroupId}/users/{userId}"
      }
    },
    "/component-registry/services/logging/{serviceTypeId}": {
      "put": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/services/logging/{serviceTypeId}"
      },
      "post": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/services/logging/{serviceTypeId}"
      },
      "delete": {
        "tags": [
          "component-registry"
        ],
        "parameters": [],
        "operationId": "/services/logging/{serviceTypeId}"
      }
    },
    "/composition-service/api/requestValidations": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requestValidations"
      }
    },
    "/reservation-service/api/reservations/sync/{providerServiceTypeId}/{reservationId}": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "providerServiceTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "reservationId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/sync/{providerServiceTypeId}/{reservationId}"
      }
    },
    "/advanced-designer-service/api/endpoints/create/{namespace}/update": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "namespace",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/endpoints/create/{namespace}/update"
      }
    },
    "/approval-service/api/data-service/schema/{classId}/default": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/default"
      }
    },
    "/software-service/api/content": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/content"
      }
    },
    "/composition-service/api/data-service/list/{classId}/default": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/default"
      }
    },
    "/reservation-service/api/reservations/forms/{reservationId}": {
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "reservationId",
          "in": "path"
        }],
        "operationId": "/api/reservations/forms/{reservationId}"
      }
    },
    "/advanced-designer-service/api/workflows/{workflowId}/blueprint": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "workflowId",
          "in": "path"
        }],
        "operationId": "/api/workflows/{workflowId}/blueprint"
      }
    },
    "/approval-service/api/policies": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/policies"
      },
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/policies"
      }
    },
    "/reservation-service/api/reservations/sync/{providerServiceTypeId}": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "providerServiceTypeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/sync/{providerServiceTypeId}"
      }
    },
    "/content-management-service/api/packages": {
      "post": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "resolutionMode",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "file",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "resolutionMode",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/packages"
      },
      "get": {
        "tags": [
          "content-management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/packages"
      }
    },
    "/identity/api/authorization/permissions/{permissionId}/permissions/admin/{adminPermissionId}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "permissionId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "adminPermissionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/permissions/{permissionId}/permissions/admin/{adminPermissionId}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "permissionId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "adminPermissionId",
          "in": "path"
        }],
        "operationId": "/api/authorization/permissions/{permissionId}/permissions/admin/{adminPermissionId}"
      }
    },
    "/component-registry/services/types/{serviceTypeId}/endpoints/types": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "serviceTypeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/services/types/{serviceTypeId}/endpoints/types"
      }
    },
    "/event-broker-service/api/topics/{id}/replyable/subscription": {
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/topics/{id}/replyable/subscription"
      }
    },
    "/advanced-designer-service/api/scriptActions": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "name",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "categoryName",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "description",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "name",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "categoryName",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "description",
          "in": "query"
        }],
        "operationId": "/api/scriptActions"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/principals/{principalId}/scopes": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/scopes"
      }
    },
    "/identity/api/tenants/{tenantId}/subtenants/roles/{scopeRoleRef}/principals": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "resolvePrincipals",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeRoleRef",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "resolvePrincipals",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/subtenants/roles/{scopeRoleRef}/principals"
      }
    },
    "/identity/api/tenants/{tenantId}/displayContext": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "principalId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "principalId",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/displayContext"
      }
    },
    "/advanced-designer-service/api/scriptActions/categories/{categoryName}/scriptActions": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "categoryName",
          "in": "path"
        }],
        "operationId": "/api/scriptActions/categories/{categoryName}/scriptActions"
      }
    },
    "/composition-service/api/blueprints": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "forceSave",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "forceSave",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/blueprints"
      },
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "includeContent",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "includeContent",
          "in": "query"
        }],
        "operationId": "/api/blueprints"
      }
    },
    "/catalog-service/api/provider/icons/{id}": {
      "put": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "tenant",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenant",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "tenant",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenant",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/provider/icons/{id}"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/provider/icons/{id}"
      }
    },
    "/properties-service/api/content": {
      "post": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/content"
      }
    },
    "/approval-service/api/data-service/schema/{classId}/types/{typeFilter}": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "typeFilter",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}"
      }
    },
    "/catalog-service/api/consumer/entitledCatalogItems": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "serviceId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "onBehalfOf",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "serviceId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "onBehalfOf",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "subtenantId",
          "in": "query"
        }],
        "operationId": "/api/consumer/entitledCatalogItems"
      }
    },
    "/advanced-designer-service/api/valueDefinitions/key/{key}/values": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "key",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/valueDefinitions/key/{key}/values"
      }
    },
    "/identity/api/tenants/{tenantId}/groups/{groupId}/subtenants": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "role",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "groupId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "role",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/groups/{groupId}/subtenants"
      }
    },
    "/component-registry/endpoints/types/identity/token": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [],
        "operationId": "/endpoints/types/identity/token"
      }
    },
    "/identity/api/authorization/resource-types": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/resource-types"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/resource-types"
      }
    },
    "/plugin-service/api/wizardstates/current": {
      "get": {
        "tags": [
          "plugin-service"
        ],
        "parameters": [],
        "operationId": "/api/wizardstates/current"
      }
    },
    "/advanced-designer-service/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values{arg0}{arg1}{arg2}": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "arg0",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg1",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "arg2",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/types/{typeFilter}/{fieldId}/values"
      }
    },
    "/component-registry/endpoints": {
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/endpoints"
      }
    },
    "/catalog-service/api/provider/resources/{resourceId}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }],
        "operationId": "/api/provider/resources/{resourceId}"
      }
    },
    "/advanced-designer-service/api/endpoints/{endpointId}": {
      "put": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "endpointId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/endpoints/{endpointId}"
      },
      "delete": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "endpointId",
          "in": "path"
        }],
        "operationId": "/api/endpoints/{endpointId}"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "endpointId",
          "in": "path"
        }],
        "operationId": "/api/endpoints/{endpointId}"
      }
    },
    "/identity/api/tenants/{tenantId}/securityContext": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "includeSsoGroups",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "includePermissions",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "includeRoles",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "includeSsoGroups",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "includePermissions",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "includeRoles",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/securityContext"
      }
    },
    "/software-service/api/resourcerequests/{id}": {
      "get": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/resourcerequests/{id}"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/principals/{principalId}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}"
      }
    },
    "/catalog-service/api/entitlements/{id}": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/entitlements/{id}"
      }
    },
    "/identity/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "fieldId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/instances/{id}/{fieldId}/values"
      }
    },
    "/event-broker-service/api/events/{id}": {
      "put": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/events/{id}"
      },
      "delete": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/events/{id}"
      },
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/events/{id}"
      }
    },
    "/identity/api/tenants/{tenantId}/directories/{id}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/directories/{id}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/directories/{id}"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/tenants/{tenantId}/directories/{id}"
      }
    },
    "/identity/api/tenants/{tenantId}/membership": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "includeSsoGroups",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "includeSsoGroups",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/tenants/{tenantId}/membership"
      }
    },
    "/reservation-service/api/reservations/policies/types/{id}": {
      "put": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/policies/types/{id}"
      },
      "delete": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/reservations/policies/types/{id}"
      },
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/reservations/policies/types/{id}"
      }
    },
    "/catalog-service/api/consumer/requests/{id}/resources": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/consumer/requests/{id}/resources"
      }
    },
    "/advanced-designer-service/api/event-broker/subscriptions": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/event-broker/subscriptions"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/event-broker/subscriptions"
      }
    },
    "/advanced-designer-service/api/endpoints/update/{endpointId}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "endpointId",
          "in": "path"
        }],
        "operationId": "/api/endpoints/update/{endpointId}"
      }
    },
    "/management-service/api/management/requests": {
      "get": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/management/requests"
      }
    },
    "/notification-service/api/notifications/tenants/{tenantId}/scenarioConfiguration/settings": {
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/notifications/tenants/{tenantId}/scenarioConfiguration/settings"
      }
    },
    "/approval-service/api/evaluations/workitems": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/evaluations/workitems"
      }
    },
    "/advanced-designer-service/api/valueDefinitions/key/{key}/value": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "key",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/valueDefinitions/key/{key}/value"
      }
    },
    "/notification-service/api/notifications/tenants/{tenantName}/notifications/{id}": {
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantName",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/notifications/tenants/{tenantName}/notifications/{id}"
      }
    },
    "/composition-service/api/forms/{formId}/{instanceId}/{elementId}/values": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "formId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "instanceId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "elementId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "*",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/forms/{formId}/{instanceId}/{elementId}/values"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/resources": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/resources"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/resources"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/resources"
      }
    },
    "/catalog-service/api/consumer/resources/{resourceId}/actions": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }],
        "operationId": "/api/consumer/resources/{resourceId}/actions"
      }
    },
    "/catalog-service/api/consumer/resources/{resourceId}/actions/{resourceActionId}/forms/request/update": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceActionId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/resources/{resourceId}/actions/{resourceActionId}/forms/request/update"
      }
    },
    "/properties-service/api/propertydefinitions/{objectId}/values": {
      "post": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "objectId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/propertydefinitions/{objectId}/values"
      }
    },
    "/event-broker-service/api/topics": {
      "post": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/topics"
      },
      "get": {
        "tags": [
          "event-broker-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/topics"
      }
    },
    "/component-registry/endpoints/forms/types/{endpointTypeId}": {
      "post": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "endpointTypeId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/endpoints/forms/types/{endpointTypeId}"
      },
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "endpointTypeId",
          "in": "path"
        }],
        "operationId": "/endpoints/forms/types/{endpointTypeId}"
      }
    },
    "/workitem-service/api/workitems/types/{id}": {
      "put": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/workitems/types/{id}"
      },
      "delete": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/workitems/types/{id}"
      },
      "get": {
        "tags": [
          "workitem-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/workitems/types/{id}"
      }
    },
    "/fabric-service/api/keyPairs/{id}": {
      "put": {
        "tags": [
          "fabric-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/keyPairs/{id}"
      },
      "delete": {
        "tags": [
          "fabric-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/keyPairs/{id}"
      },
      "get": {
        "tags": [
          "fabric-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/keyPairs/{id}"
      }
    },
    "/properties-service/api/propertydefinitions/{objectId}": {
      "put": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "objectId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/propertydefinitions/{objectId}"
      },
      "delete": {
        "tags": [
          "properties-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "objectId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "tenantId",
          "in": "query"
        }],
        "operationId": "/api/propertydefinitions/{objectId}"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/resources/{resourceId}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/resources/{resourceId}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/resources/{resourceId}"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/resources/{resourceId}"
      }
    },
    "/portal-service/api/portletconfigurations/{id}": {
      "put": {
        "tags": [
          "portal-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/portletconfigurations/{id}"
      },
      "delete": {
        "tags": [
          "portal-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/portletconfigurations/{id}"
      },
      "get": {
        "tags": [
          "portal-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/portletconfigurations/{id}"
      }
    },
    "/catalog-service/api/consumer/catalogItems": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "serviceId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "onBehalfOf",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "serviceId",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "onBehalfOf",
          "in": "query"
        }],
        "operationId": "/api/consumer/catalogItems"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/scopes/{scopeId}/resources/{resourceId}": {
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "scopeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceId",
          "in": "path"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/scopes/{scopeId}/resources/{resourceId}"
      }
    },
    "/approval-service/api/info/approvals/{approvalId}": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "approvalId",
          "in": "path"
        }],
        "operationId": "/api/info/approvals/{approvalId}"
      }
    },
    "/approval-service/api/evaluations": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/evaluations"
      },
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/evaluations"
      }
    },
    "/catalog-service/api/consumer/requests": {
      "post": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/consumer/requests"
      },
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "managedOnly",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "managedOnly",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/consumer/requests"
      }
    },
    "/approval-service/api/data-service/schema/{classId}/default/update": {
      "post": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/schema/{classId}/default/update"
      }
    },
    "/identity/api/migration/tenants/{tenantId}/status": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "status",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "status",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/migration/tenants/{tenantId}/status"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }],
        "operationId": "/api/migration/tenants/{tenantId}/status"
      }
    },
    "/branding-service/api/brandings/config": {
      "post": {
        "tags": [
          "branding-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/brandings/config"
      },
      "get": {
        "tags": [
          "branding-service"
        ],
        "parameters": [],
        "operationId": "/api/brandings/config"
      }
    },
    "/advanced-designer-service/api/resources/types/{resourceTypeId}": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "resourceTypeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/resources/types/{resourceTypeId}"
      }
    },
    "/network-service/api/composition/componentdeallocator": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/composition/componentdeallocator"
      }
    },
    "/advanced-designer-service/api/valueDefinitions": {
      "post": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/valueDefinitions"
      },
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/valueDefinitions"
      }
    },
    "/identity/api/tenants/{tenantId}/groups/assigned": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "criteria",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "criteria",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/tenants/{tenantId}/groups/assigned"
      }
    },
    "/reservation-service/api/reservations/policies": {
      "post": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/reservations/policies"
      },
      "get": {
        "tags": [
          "reservation-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/reservations/policies"
      }
    },
    "/component-registry/endpoints/types/specs": {
      "post": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/endpoints/types/specs"
      },
      "get": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/endpoints/types/specs"
      }
    },
    "/identity/api/services/{serviceSolutionUserName}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "serviceSolutionUserName",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/services/{serviceSolutionUserName}"
      }
    },
    "/notification-service/api/notifications/tenants/{tenantId}/providers/creationinfo": {
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/notifications/tenants/{tenantId}/providers/creationinfo"
      }
    },
    "/notification-service/api/notifications/{id}/responses": {
      "get": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/notifications/{id}/responses"
      }
    },
    "/identity/api/authorization/roles/{roleId}/extensions": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "roleId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/authorization/roles/{roleId}/extensions"
      }
    },
    "/management-service/api/management/endpoint/{tenantId}/isvropsconfigured": {
      "get": {
        "tags": [
          "management-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }],
        "operationId": "/api/management/endpoint/{tenantId}/isvropsconfigured"
      }
    },
    "/identity/api/authorization/permissions/{id}": {
      "put": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/authorization/permissions/{id}"
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/authorization/permissions/{id}"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "id",
          "in": "path"
        }],
        "operationId": "/api/authorization/permissions/{id}"
      }
    },
    "/identity/api/migration/status": {
      "post": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "status",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "status",
          "in": "query"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/migration/status"
      },
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [],
        "operationId": "/api/migration/status"
      }
    },
    "/composition-service/api/requests/{requestId}/data": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "requestId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/{requestId}/data"
      }
    },
    "/catalog-service/api/data-service/schema/{classId}/default": {
      "get": {
        "tags": [
          "catalog-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }],
        "operationId": "/api/data-service/schema/{classId}/default"
      }
    },
    "/software-service/api/data-service/list/{classId}/default": {
      "post": {
        "tags": [
          "software-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "classId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/data-service/list/{classId}/default"
      }
    },
    "/composition-service/api/componenttypecounts": {
      "get": {
        "tags": [
          "composition-service"
        ],
        "parameters": [],
        "operationId": "/api/componenttypecounts"
      }
    },
    "/network-service/api/security-tags": {
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/security-tags"
      }
    },
    "/identity/api/authorization/tenants/{tenantId}/principals/{principalId}/permissions": {
      "get": {
        "tags": [
          "identity"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "roleType",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "scopeType",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "scopeId",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "tenantId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "principalId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "roleType",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "scopeType",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "scopeId",
          "in": "query"
        }],
        "operationId": "/api/authorization/tenants/{tenantId}/principals/{principalId}/permissions"
      }
    },
    "/component-registry/services/logging/{serviceTypeId}/{category}/level": {
      "put": {
        "tags": [
          "component-registry"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "serviceTypeId",
          "in": "path"
        }, {
          "required": true,
          "type": "string",
          "name": "category",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/services/logging/{serviceTypeId}/{category}/level"
      }
    },
    "/portal-service/api/portals/name/{name}": {
      "get": {
        "tags": [
          "portal-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "name",
          "in": "path"
        }],
        "operationId": "/api/portals/name/{name}"
      }
    },
    "/approval-service/api/services/{serviceTypeId}/approvable-items": {
      "get": {
        "tags": [
          "approval-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": true,
          "type": "string",
          "name": "serviceTypeId",
          "in": "path"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/services/{serviceTypeId}/approvable-items"
      }
    },
    "/notification-service/api/notifications/tenants/{tenantName}/notifications": {
      "post": {
        "tags": [
          "notification-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "tenantName",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/notifications/tenants/{tenantName}/notifications"
      }
    },
    "/advanced-designer-service/api/options": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [],
        "operationId": "/api/options"
      }
    },
    "/advanced-designer-service/api/orchestration/roots": {
      "get": {
        "tags": [
          "advanced-designer-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/orchestration/roots"
      }
    },
    "/composition-service/api/requests/hierarchy/{blueprintId}/typeSchema/update": {
      "post": {
        "tags": [
          "composition-service"
        ],
        "parameters": [{
          "required": true,
          "type": "string",
          "name": "blueprintId",
          "in": "path"
        }, {
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/requests/hierarchy/{blueprintId}/typeSchema/update"
      }
    },
    "/network-service/api/networks/types": {
      "post": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "description": "Request body",
          "required": true,
          "name": "body",
          "in": "body"
        }],
        "operationId": "/api/networks/types"
      },
      "get": {
        "tags": [
          "network-service"
        ],
        "parameters": [{
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "page",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "limit",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$orderby",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$top",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$skip",
          "in": "query"
        }, {
          "required": false,
          "type": "string",
          "name": "$filter",
          "in": "query"
        }],
        "operationId": "/api/networks/types"
      }
    }
  }
}